[{
    "id": "3",
    "question": "Which party has come in power in Mumbai North?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Mumbai_North_(Lok_Sabha_constituency)> . ?x <http://dbpedia.org/ontology/party> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/constituency",
    "predicate1_mention": "in power",
    "predicate2_uri": "http://dbpedia.org/ontology/party",
    "predicate2_mention": "party",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mumbai_North_(Lok_Sabha_constituency)",
    "entity1_mention": "mumbai north",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4",
    "question": "Name the municipality of Roberto Clemente Bridge ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Roberto_Clemente_Bridge> <http://dbpedia.org/ontology/municipality> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/municipality",
    "predicate1_mention": "municipality",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Roberto_Clemente_Bridge",
    "entity1_mention": "Roberto Clemente Bridge",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "5",
    "question": "Which royalty was married to ptolemy XIII Theos Philopator and had mother named Cleopatra V ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Cleopatra_V_of_Egypt> . ?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ptolemy_XIII_Theos_Philopator>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/mother",
    "predicate1_mention": "mother",
    "predicate2_uri": "http://dbpedia.org/property/spouse",
    "predicate2_mention": "married to",
    "type_uri": "http://dbpedia.org/ontology/Royalty",
    "type_mention": "royalty",
    "entity1_uri": "http://dbpedia.org/resource/Cleopatra_V_of_Egypt",
    "entity1_mention": "Cleopatra V",
    "entity2_uri": "http://dbpedia.org/resource/Ptolemy_XIII_Theos_Philopator",
    "entity2_mention": "ptolemy XIII Theos Philopator"
},
{
    "id": "9",
    "question": "Which person designed the cars which has been designed by ASC Creative Services?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/designCompany> <http://dbpedia.org/resource/ASC_Creative_Services> . ?x <http://dbpedia.org/property/designer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/designCompany",
    "predicate1_mention": "designed by",
    "predicate2_uri": "http://dbpedia.org/property/designer",
    "predicate2_mention": "designed",
    "type_uri": "http://dbpedia.org/ontology/Automobile",
    "type_mention": "cars",
    "entity1_uri": "http://dbpedia.org/resource/ASC_Creative_Services",
    "entity1_mention": "ASC Creative Services",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "16",
    "question": "Is Nikolai Morozov the former coach of Stanislav Morozov?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Stanislav_Morozov> <http://dbpedia.org/ontology/formerCoach> <http://dbpedia.org/resource/Nikolai_Morozov_(figure_skater)> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/formerCoach",
    "predicate1_mention": "former coach",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Stanislav_Morozov",
    "entity1_mention": "Stanislav Morozov",
    "entity2_uri": "http://dbpedia.org/resource/Nikolai_Morozov_(figure_skater)",
    "entity2_mention": "Nikolai Morozov"
},
{
    "id": "24",
    "question": "Did Timm Gunn guest in Sunrise (HIMYM)?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Sunrise_(How_I_Met_Your_Mother)> <http://dbpedia.org/property/guests> <http://dbpedia.org/resource/Tim_Gunn> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/guests",
    "predicate1_mention": "guest in",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sunrise_(How_I_Met_Your_Mother)",
    "entity1_mention": "Sunrise (HIMYM)",
    "entity2_uri": "http://dbpedia.org/resource/Tim_Gunn",
    "entity2_mention": "Timm Gunn"
},
{
    "id": "34",
    "question": "Which kind of conventions are held in Rosemont, Illinois?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Rosemont,_Illinois> . ?x <http://dbpedia.org/property/genre> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Convention>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/location",
    "predicate1_mention": "held in",
    "predicate2_uri": "http://dbpedia.org/property/genre",
    "predicate2_mention": "kind of",
    "type_uri": "http://dbpedia.org/ontology/Convention",
    "type_mention": "conventions",
    "entity1_uri": "http://dbpedia.org/resource/Rosemont,_Illinois",
    "entity1_mention": "rosemont, illinois",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "55",
    "question": "Who started at the pole position in both 1997 canadian grand prix and the 94 spanish one?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1997_Canadian_Grand_Prix> <http://dbpedia.org/property/poleDriver> ?uri. <http://dbpedia.org/resource/1994_Spanish_Grand_Prix> <http://dbpedia.org/property/poleDriver> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/poleDriver",
    "predicate1_mention": "pole position",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/1997_Canadian_Grand_Prix",
    "entity1_mention": "1997 canadian grand prix",
    "entity2_uri": "http://dbpedia.org/resource/1994_Spanish_Grand_Prix",
    "entity2_mention": "94 spanish one"
},
{
    "id": "62",
    "question": "Is Ombla originate in Croatia?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ombla> <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Croatia> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/sourceMountain",
    "predicate1_mention": "originate in",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ombla",
    "entity1_mention": "ombla",
    "entity2_uri": "http://dbpedia.org/resource/Croatia",
    "entity2_mention": "croatia"
},
{
    "id": "64",
    "question": "In which team did Dave Bing and Ron Reed started their basketball career?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dave_Bing> <http://dbpedia.org/property/draftTeam> ?uri. <http://dbpedia.org/resource/Ron_Reed> <http://dbpedia.org/property/draftTeam> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/draftTeam",
    "predicate1_mention": "team",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Dave_Bing",
    "entity1_mention": "dave bing",
    "entity2_uri": "http://dbpedia.org/resource/Ron_Reed",
    "entity2_mention": "ron reed"
},
{
    "id": "66",
    "question": "List some musicians associated with famous guitar players?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Guitar> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/notableInstruments",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
    "predicate2_mention": "musicians associated",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Guitar",
    "entity1_mention": "guitar",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "77",
    "question": "Who is the person that first ascented the Cathedral Peak and Mount Hoffmann?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cathedral_Peak_(California)> <http://dbpedia.org/ontology/firstAscentPerson> ?uri. <http://dbpedia.org/resource/Mount_Hoffmann> <http://dbpedia.org/ontology/firstAscentPerson> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/firstAscentPerson",
    "predicate1_mention": "person that first ascented",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "", 
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Cathedral_Peak_(California)",
    "entity1_mention": "cathedral peak",
    "entity2_uri": "http://dbpedia.org/resource/Mount_Hoffmann",
    "entity2_mention": "mount hoffmann"
},
{
    "id": "94",
    "question": "Which american football team  has stadium as O.co Coliseum?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/O.co_Coliseum>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballTeam>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/locationCity",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/AmericanFootballTeam",
    "predicate2_mention": "american football team",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/O.co_Coliseum",
    "entity1_mention": "o.co coliseum",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "98",
    "question": "What are some artists on the show whose opening theme is Send It On?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Send_It_On_(Disney's_Friends_for_Change_song)> . ?x <http://dbpedia.org/property/artist> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/openingTheme",
    "predicate1_mention": "opening theme",
    "predicate2_uri": "http://dbpedia.org/property/artist",
    "predicate2_mention": "artists",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "show",
    "entity1_uri": "http://dbpedia.org/resource/Send_It_On_(Disney's_Friends_for_Change_song)",
    "entity1_mention": "Send It On",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "114",
    "question": "Give me the total number of employer of the engineers whose one of the employer is McDonnell Aircraft ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/McDonnell_Aircraft> . ?x <http://dbpedia.org/ontology/employer> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/employer",
    "predicate1_mention": "employer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/McDonnell_Aircraft",
    "entity1_mention": "mcdonnell aircraft",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "116",
    "question": "Where was Live in Detroit, MI recorded ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Live_in_Detroit,_MI> <http://dbpedia.org/ontology/recordedIn> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/recordedIn",
    "predicate1_mention": "recorded",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Live_in_Detroit,_MI",
    "entity1_mention": "Live in Detroit, MI",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "117",
    "question": "who all have been a manager of english under twenty one football team?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/managerclubs> <http://dbpedia.org/resource/England_national_under-21_football_team> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/managerclubs",
    "predicate1_mention": "manager",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/England_national_under-21_football_team",
    "entity1_mention": "english under twenty one football team",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "119",
    "question": "What awards have been won by the executive producer of Timmy Time ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Timmy_Time> <http://dbpedia.org/ontology/executiveProducer> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/executiveProducer",
    "predicate1_mention": "executive producer",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Timmy_Time",
    "entity1_mention": "timmy time",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "125",
    "question": "Count all the different purposes followed by the different NGOs.",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/type> <http://dbpedia.org/resource/Non-governmental_organization> . ?x <http://dbpedia.org/property/purpose> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/type",
    "predicate1_mention": "Count",
    "predicate2_uri": "http://dbpedia.org/property/purpose",
    "predicate2_mention": "purposes",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Non-governmental_organization",
    "entity1_mention": "NGOs",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "126",
    "question": "Which television show's developer is Brian Graden and voices to the character is by Isaac Hayes?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/developer> <http://dbpedia.org/resource/Brian_Graden> . ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Isaac_Hayes>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/developer",
    "predicate1_mention": "developer",
    "predicate2_uri": "http://dbpedia.org/property/voices",
    "predicate2_mention": "voices",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television show's",
    "entity1_uri": "http://dbpedia.org/resource/Brian_Graden",
    "entity1_mention": "brian graden",
    "entity2_uri": "http://dbpedia.org/resource/Isaac_Hayes",
    "entity2_mention": "isaac hayes"
},
{
    "id": "127",
    "question": "How many things are crossed over by bridges which can carry cars?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/carries> <http://dbpedia.org/resource/Motor_vehicle> . ?x <http://dbpedia.org/property/crosses> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/carries",
    "predicate1_mention": "carry",
    "predicate2_uri": "http://dbpedia.org/property/crosses",
    "predicate2_mention": "crossed",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Motor_vehicle",
    "entity1_mention": "cars",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "130",
    "question": "Which arena of WPC Dynamo Moscow is death location of Tigran Petrosian",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WPC_Dynamo_Moscow> <http://dbpedia.org/property/arena> ?uri. <http://dbpedia.org/resource/Tigran_Petrosian> <http://dbpedia.org/ontology/deathPlace> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/arena",
    "predicate1_mention": "arena",
    "predicate2_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate2_mention": "death location",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/WPC_Dynamo_Moscow",
    "entity1_mention": "WPC Dynamo Moscow",
    "entity2_uri": "http://dbpedia.org/resource/Tigran_Petrosian",
    "entity2_mention": "tigran petrosian"
},
{
    "id": "133",
    "question": "In which time zone is Pong Pha?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pong_Pha> <http://dbpedia.org/ontology/timeZone> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/timeZone",
    "predicate1_mention": "time zone",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Pong_Pha",
    "entity1_mention": "pong pha",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "137",
    "question": "How many rivers start in an English speaking country?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/English_language> . ?uri <http://dbpedia.org/ontology/sourceCountry> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/officialLanguage",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/sourceCountry",
    "predicate2_mention": "country",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "rivers",
    "entity1_uri": "http://dbpedia.org/resource/English_language",
    "entity1_mention": "english",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "143",
    "question": "Was Tim Gunn a guest on The Broken Code?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Broken_Code> <http://dbpedia.org/property/guests> <http://dbpedia.org/resource/Tim_Gunn> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/guests",
    "predicate1_mention": "guest",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Broken_Code",
    "entity1_mention": "the broken code",
    "entity2_uri": "http://dbpedia.org/resource/Tim_Gunn",
    "entity2_mention": "tim gunn"
},
{
    "id": "146",
    "question": "What system is both a platform where Nord runs and also distributed The beauty inside?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Nord_(video_game)> <http://dbpedia.org/ontology/computingPlatform> ?uri. <http://dbpedia.org/resource/The_Beauty_Inside> <http://dbpedia.org/ontology/distributor> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/computingPlatform",
    "predicate1_mention": "platform",
    "predicate2_uri": "http://dbpedia.org/ontology/distributor",
    "predicate2_mention": "distributed",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Nord_(video_game)",
    "entity1_mention": "nord",
    "entity2_uri": "http://dbpedia.org/resource/The_Beauty_Inside",
    "entity2_mention": "The beauty inside"
},
{
    "id": "147",
    "question": "Is Tirana the largest city of Albania?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Albania> <http://dbpedia.org/property/largestCity> <http://dbpedia.org/resource/Tirana> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/largestCity",
    "predicate1_mention": "largest city",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Albania",
    "entity1_mention": "albania",
    "entity2_uri": "http://dbpedia.org/resource/Tirana",
    "entity2_mention": "tirana"
},
{
    "id": "154",
    "question": "Raymond Johansen is the mayor of what city?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/leaderName> <http://dbpedia.org/resource/Raymond_Johansen>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/leaderName",
    "predicate1_mention": "mayor",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Raymond_Johansen",
    "entity1_mention": "raymond johansen",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "160",
    "question": "What was the language of the single which came before To Know Him Is to Love Him?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/To_Know_Him_Is_to_Love_Him> <http://dbpedia.org/ontology/previousWork> ?x . ?x <http://dbpedia.org/property/language> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/previousWork",
    "predicate1_mention": "came before",
    "predicate2_uri": "http://dbpedia.org/property/language",
    "predicate2_mention": "language",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/To_Know_Him_Is_to_Love_Him",
    "entity1_mention": "To Know Him Is to Love Him",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "161",
    "question": "Where was the narrator of Spain on the Road Again born?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Spain..._on_the_Road_Again> <http://dbpedia.org/ontology/narrator> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/narrator",
    "predicate1_mention": "narrator",
    "predicate2_uri": "http://dbpedia.org/property/birthPlace",
    "predicate2_mention": "born",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Spain..._on_the_Road_Again",
    "entity1_mention": "spain on the road again",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "189",
    "question": "Name a  river with source country as Zambia and source location as Ikelenge  District?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceCountry> <http://dbpedia.org/resource/Zambia> . ?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Ikelenge_District>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/sourceCountry",
    "predicate1_mention": "source country",
    "predicate2_uri": "http://dbpedia.org/property/sourceLocation",
    "predicate2_mention": "source location",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "river",
    "entity1_uri": "http://dbpedia.org/resource/Zambia",
    "entity1_mention": "zambia",
    "entity2_uri": "http://dbpedia.org/resource/Ikelenge_District",
    "entity2_mention": "ikelenge district"
},
{
    "id": "190",
    "question": "Which researchers received fellowship from Royal Society?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Royal_Society>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/award",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/Scientist",
    "predicate2_mention": "researchers",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Royal_Society",
    "entity1_mention": "royal society",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "193",
    "question": "Who is the office holder with deputies as Neil Brown and Andrew Peacock?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Neil_Brown_(Australian_politician)> . ?uri <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Andrew_Peacock> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/deputy",
    "predicate1_mention": "deputies",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "office holder",
    "entity1_uri": "http://dbpedia.org/resource/Neil_Brown_(Australian_politician)",
    "entity1_mention": "neil brown",
    "entity2_uri": "http://dbpedia.org/resource/Andrew_Peacock",
    "entity2_mention": "andrew peacock"
},
{
    "id": "197",
    "question": "To whom was Tessa Dahl born to?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tessa_Dahl> <http://dbpedia.org/ontology/parent> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/parent",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tessa_Dahl",
    "entity1_mention": "tessa dahl",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "200",
    "question": "Count the number of religions followed by the alumini of Ananda College.",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ananda_College> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religions",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ananda_College",
    "entity1_mention": "Ananda College",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "201",
    "question": "Which city located on Mediterranean Sea is also the stadium of Panionios G.S.S. season ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2014\u201315_Panionios_G.S.S._season> <http://dbpedia.org/property/stadium> ?uri. <http://dbpedia.org/resource/Mediterranean_Sea> <http://dbpedia.org/property/cities> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/stadium",
    "predicate1_mention": "stadium",
    "predicate2_uri": "http://dbpedia.org/property/cities",
    "predicate2_mention": "city",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/2014\u201315_Panionios_G.S.S._season",
    "entity1_mention": "panionios g.s.s. season",
    "entity2_uri": "http://dbpedia.org/resource/Mediterranean_Sea",
    "entity2_mention": "mediterranean"
},
{
    "id": "202",
    "question": "What is the river whose source is Cowombat  Flat and has it's mouth located in Murray Mouth?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Cowombat_Flat> . ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Murray_Mouth>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/source",
    "predicate1_mention": "source",
    "predicate2_uri": "http://dbpedia.org/ontology/riverMouth",
    "predicate2_mention": "it's mouth",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "river",
    "entity1_uri": "http://dbpedia.org/resource/Cowombat_Flat",
    "entity1_mention": "cowombat flat",
    "entity2_uri": "http://dbpedia.org/resource/Murray_Mouth",
    "entity2_mention": "murray mouth"
},
{
    "id": "206",
    "question": "God Defend New Zealand is the national anthem of which country?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/nationalAnthem> <http://dbpedia.org/resource/God_Defend_New_Zealand> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/nationalAnthem",
    "predicate1_mention": "national anthem",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/God_Defend_New_Zealand",
    "entity1_mention": "God Defend New Zealand",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "223",
    "question": "Name the largest city in the county where there is a Cy-Fair High School.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cy-Fair_High_School> <http://dbpedia.org/ontology/county> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/county",
    "predicate1_mention": "county",
    "predicate2_uri": "http://dbpedia.org/ontology/largestCity",
    "predicate2_mention": "largest city",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Cy-Fair_High_School",
    "entity1_mention": "cy-fair",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "224",
    "question": "What are the academic interests of the past members of Senser?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Senser> <http://dbpedia.org/property/pastMembers> ?x . ?x <http://dbpedia.org/property/mainInterests> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/pastMembers",
    "predicate1_mention": "past members",
    "predicate2_uri": "http://dbpedia.org/property/mainInterests",
    "predicate2_mention": "academic interests",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Senser",
    "entity1_mention": "senser",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "225",
    "question": "Name the common associate band of Blayse and Teddy Riley ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Blayse> <http://dbpedia.org/ontology/associatedBand> ?uri. <http://dbpedia.org/resource/Teddy_Riley> <http://dbpedia.org/ontology/associatedBand> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedBand",
    "predicate1_mention": "associate band",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Blayse",
    "entity1_mention": "blayse",
    "entity2_uri": "http://dbpedia.org/resource/Teddy_Riley",
    "entity2_mention": "teddy riley"
},
{
    "id": "232",
    "question": "What is the alma mater of the actors of The God Who Wasn't There ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_God_Who_Wasn't_There> <http://dbpedia.org/property/starring> ?x . ?x <http://dbpedia.org/property/almaMater> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/starring",
    "predicate1_mention": "actors",
    "predicate2_uri": "http://dbpedia.org/property/almaMater",
    "predicate2_mention": "alma mater",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_God_Who_Wasn't_There",
    "entity1_mention": "The God Who wasn't there",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "235",
    "question": "What is the leader name of the settlements whose governing body is Municipal council?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/governingBody> <http://dbpedia.org/resource/Municipal_council> . ?x <http://dbpedia.org/ontology/leaderName> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/governingBody",
    "predicate1_mention": "governing body",
    "predicate2_uri": "http://dbpedia.org/ontology/leaderName",
    "predicate2_mention": "leader name",
    "type_uri": "http://dbpedia.org/ontology/Settlement",
    "type_mention": "settlements",
    "entity1_uri": "http://dbpedia.org/resource/Municipal_council",
    "entity1_mention": "municipal council",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "241",
    "question": "Which predecessor of Alexander Downer was deputy to Neil Brown ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Alexander_Downer> . ?uri <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Neil_Brown_(Australian_politician)>  . }",
    "sparql_id": "8",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/predecessor",
    "predicate1_mention": "predecessor",
    "predicate2_uri": "http://dbpedia.org/property/deputy",
    "predicate2_mention": "deputy",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Alexander_Downer",
    "entity1_mention": "alexander downer",
    "entity2_uri": "http://dbpedia.org/resource/Neil_Brown_(Australian_politician)",
    "entity2_mention": "neil brown"
},
{
    "id": "242",
    "question": "Who built the stadium which was rented by Costa Rica national football team?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/tenants> <http://dbpedia.org/resource/Costa_Rica_national_football_team> . ?x <http://dbpedia.org/ontology/builder> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/tenants",
    "predicate1_mention": "team",
    "predicate2_uri": "http://dbpedia.org/ontology/builder",
    "predicate2_mention": "built",
    "type_uri": "http://dbpedia.org/ontology/Stadium",
    "type_mention": "stadium",
    "entity1_uri": "http://dbpedia.org/resource/Costa_Rica_national_football_team",
    "entity1_mention": "national football team",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "249",
    "question": "How many genres of games can I find on the commodore CDTV?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Commodore_CDTV> . ?x <http://dbpedia.org/ontology/genre> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/computingPlatform",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/genre",
    "predicate2_mention": "genres",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Commodore_CDTV",
    "entity1_mention": "commodore cdtv",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "253",
    "question": "What is the craft of the Ralph Flanders which is also the profession of  Claiborne Pell ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ralph_Flanders> <http://dbpedia.org/property/occupation> ?uri. <http://dbpedia.org/resource/Claiborne_Pell> <http://dbpedia.org/ontology/profession> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/occupation",
    "predicate1_mention": "craft",
    "predicate2_uri": "http://dbpedia.org/ontology/profession",
    "predicate2_mention": "profession",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ralph_Flanders",
    "entity1_mention": "ralph flanders",
    "entity2_uri": "http://dbpedia.org/resource/Claiborne_Pell",
    "entity2_mention": "claiborne pell"
},
{
    "id": "255",
    "question": "Does the US route 281 have a junction at San Antonio?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/U.S._Route_281> <http://dbpedia.org/property/junction> <http://dbpedia.org/resource/San_Antonio> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/junction",
    "predicate1_mention": "junction",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/U.S._Route_281",
    "entity1_mention": "route 281",
    "entity2_uri": "http://dbpedia.org/resource/San_Antonio",
    "entity2_mention": "san antonio"
},
{
    "id": "260",
    "question": "Give me a count of royalties buried in Rome ?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Rome>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/placeOfBurial",
    "predicate1_mention": "buried in",
    "predicate2_uri": "http://dbpedia.org/ontology/Royalty",
    "predicate2_mention": "royalties",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Rome",
    "entity1_mention": "rome",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "262",
    "question": "Which executive producer of the ultimate merger is also an important person at Trump Productions?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Ultimate_Merger> <http://dbpedia.org/ontology/executiveProducer> ?uri. <http://dbpedia.org/resource/Trump_Productions> <http://dbpedia.org/ontology/keyPerson> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/executiveProducer",
    "predicate1_mention": "executive producer",
    "predicate2_uri": "http://dbpedia.org/ontology/keyPerson",
    "predicate2_mention": "person",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Ultimate_Merger",
    "entity1_mention": "the ultimate merger",
    "entity2_uri": "http://dbpedia.org/resource/Trump_Productions",
    "entity2_mention": "Trump productions"
},
{
    "id": "280",
    "question": "What are some relatives of armymen who died in Germany?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Germany> . ?x <http://dbpedia.org/ontology/relation> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/placeOfDeath",
    "predicate1_mention": "died in",
    "predicate2_uri": "http://dbpedia.org/ontology/relation",
    "predicate2_mention": "relatives",
    "type_uri": "http://dbpedia.org/ontology/MilitaryPerson",
    "type_mention": "armymen",
    "entity1_uri": "http://dbpedia.org/resource/Germany",
    "entity1_mention": "germany",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "284",
    "question": "Greater Napanee is the home town of what people?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Greater_Napanee>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/hometown",
    "predicate1_mention": "home town",
    "predicate2_uri": "http://dbpedia.org/ontology/Person",
    "predicate2_mention": "people",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Greater_Napanee",
    "entity1_mention": "greater napanee",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "285",
    "question": "In which state is the Channel district?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Channel_District> <http://dbpedia.org/ontology/state> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/state",
    "predicate1_mention": "state",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Channel_District",
    "entity1_mention": "channel district",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "301",
    "question": "What is Jon Speelman famous for?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jon_Speelman> <http://dbpedia.org/ontology/field> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/field",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jon_Speelman",
    "entity1_mention": "jon speelman",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "302",
    "question": "What is the name of the artist which worked on the subsequent work of Ella Loves Cole ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ella_Loves_Cole> <http://dbpedia.org/ontology/subsequentWork> ?x . ?x <http://dbpedia.org/property/artist> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/subsequentWork",
    "predicate1_mention": "subsequent work",
    "predicate2_uri": "http://dbpedia.org/property/artist",
    "predicate2_mention": "artist",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ella_Loves_Cole",
    "entity1_mention": "Ella Loves Cole",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "320",
    "question": "What are some companies which are founded in Dallas Jurisdiction?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/Dallas> . ?uri <http://dbpedia.org/ontology/foundationPlace> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/governingBody",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/foundationPlace",
    "predicate2_mention": "founded in",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "companies",
    "entity1_uri": "http://dbpedia.org/resource/Dallas",
    "entity1_mention": "dallas",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "326",
    "question": "Name the movies distributed by RKO Pictures and has music composer as Bernard Herrmann?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/RKO_Pictures> . ?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Bernard_Herrmann>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/distributor",
    "predicate1_mention": "distributed",
    "predicate2_uri": "http://dbpedia.org/ontology/musicComposer",
    "predicate2_mention": "music composer",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/RKO_Pictures",
    "entity1_mention": "rko pictures",
    "entity2_uri": "http://dbpedia.org/resource/Bernard_Herrmann",
    "entity2_mention": "bernard herrmann"
},
{
    "id": "335",
    "question": "Who is the artist of Sings Kristofferson and also performed Milk Cow Blues atleast once?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sings_Kristofferson> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/Milk_Cow_Blues> <http://dbpedia.org/ontology/artist> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/artist",
    "predicate1_mention": "artist",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sings_Kristofferson",
    "entity1_mention": "sings kristofferson",
    "entity2_uri": "http://dbpedia.org/resource/Milk_Cow_Blues",
    "entity2_mention": "milk cow blues"
},
{
    "id": "337",
    "question": "What is the life stance of the ethnic groups related to Micronesia ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/Micronesia> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/related",
    "predicate1_mention": "related to",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/EthnicGroup",
    "type_mention": "ethnic groups",
    "entity1_uri": "http://dbpedia.org/resource/Micronesia",
    "entity1_mention": "micronesia",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "341",
    "question": "What is the magazine which have been  founded by Ralph J. Gleason?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/founder> <http://dbpedia.org/resource/Ralph_J._Gleason>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/founder",
    "predicate1_mention": "founded by",
    "predicate2_uri": "http://dbpedia.org/ontology/Magazine",
    "predicate2_mention": "magazine",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ralph_J._Gleason",
    "entity1_mention": "Ralph J. Gleason",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "345",
    "question": "Count the number of sports team members  which have player named Matt Williams ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/name> <http://dbpedia.org/resource/Matt_Williams_(New_Zealand_footballer)> . ?x <http://dbpedia.org/property/name> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/name",
    "predicate1_mention": "named",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Matt_Williams_(New_Zealand_footballer)",
    "entity1_mention": "matt williams",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "357",
    "question": "Which sports are played in schools affiliated with the Harvest Christian Center?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/religiousAffiliation> <http://dbpedia.org/resource/Harvest_Christian_Center> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/religiousAffiliation",
    "predicate1_mention": "affiliated",
    "predicate2_uri": "http://dbpedia.org/ontology/sport",
    "predicate2_mention": "sports",
    "type_uri": "http://dbpedia.org/ontology/School",
    "type_mention": "schools",
    "entity1_uri": "http://dbpedia.org/resource/Harvest_Christian_Center",
    "entity1_mention": "Harvest Christian Center",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "362",
    "question": "Name the river with source as Shannon Pot and its mouth is located in Limerick?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Shannon_Pot> . ?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Limerick>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/source",
    "predicate1_mention": "source",
    "predicate2_uri": "http://dbpedia.org/property/mouthLocation",
    "predicate2_mention": "mouth",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "river",
    "entity1_uri": "http://dbpedia.org/resource/Shannon_Pot",
    "entity1_mention": "shannon pot",
    "entity2_uri": "http://dbpedia.org/resource/Limerick",
    "entity2_mention": "limerick"
},
{
    "id": "364",
    "question": "List the people who were born in Gelnhausen and graduated from Pepperdine University?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Gelnhausen> . ?uri <http://dbpedia.org/property/education> <http://dbpedia.org/resource/Pepperdine_University>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate1_mention": "born in",
    "predicate2_uri": "http://dbpedia.org/property/education",
    "predicate2_mention": "graduated",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Gelnhausen",
    "entity1_mention": "gelnhausen",
    "entity2_uri": "http://dbpedia.org/resource/Pepperdine_University",
    "entity2_mention": "pepperdine university"
},
{
    "id": "375",
    "question": "Count all the ethinic group who speaks language which belongs to Anglo-Frisian language family ?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/languageFamily> <http://dbpedia.org/resource/Anglo-Frisian_languages> . ?uri <http://dbpedia.org/property/languages> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/languageFamily",
    "predicate1_mention": "language",
    "predicate2_uri": "http://dbpedia.org/property/languages",
    "predicate2_mention": "language",
    "type_uri": "http://dbpedia.org/ontology/EthnicGroup",
    "type_mention": "ethinic group",
    "entity1_uri": "http://dbpedia.org/resource/Anglo-Frisian_languages",
    "entity1_mention": "anglo-frisian language",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "379",
    "question": "Whos a famous relative of anne spielberg?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Anne_Spielberg>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/relation",
    "predicate1_mention": "relative",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Anne_Spielberg",
    "entity1_mention": "anne spielberg" ,
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "384",
    "question": "List the director of The Adventures of mimi ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Adventures_of_Mimi_(video)> <http://dbpedia.org/property/director> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/director",
    "predicate1_mention": "director",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Adventures_of_Mimi_(video)",
    "entity1_mention": "The Adventures of mimi",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "385",
    "question": "Count the units garrisoned at Arlington County, Virginia.",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/garrison> <http://dbpedia.org/resource/Arlington_County,_Virginia>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/garrison",
    "predicate1_mention": "garrisoned",
    "predicate2_uri": "http://dbpedia.org/ontology/MilitaryUnit",
    "predicate2_mention": "units",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Arlington_County,_Virginia",
    "entity1_mention": "Arlington County, Virginia",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "388",
    "question": "Who designed the bridge in Oddamavadi?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Oddamavadi> . ?x <http://dbpedia.org/property/designer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/locatedInArea",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/designer",
    "predicate2_mention": "designed",
    "type_uri": "http://dbpedia.org/ontology/Bridge",
    "type_mention": "bridge",
    "entity1_uri": "http://dbpedia.org/resource/Oddamavadi",
    "entity1_mention": "oddamavadi",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "391",
    "question": "how many companies are located in a spanish speaking region?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/language> <http://dbpedia.org/resource/Spanish_language> . ?uri <http://dbpedia.org/ontology/location> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/language",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/location",
    "predicate2_mention": "located",
    "type_uri": "http://dbpedia.org/ontology/Organisation",
    "type_mention": "companies",
    "entity1_uri": "http://dbpedia.org/resource/Spanish_language",
    "entity1_mention": "spanish",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "395",
    "question": "How many golf players are there in Arizona State Sun Devils ?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/college> <http://dbpedia.org/resource/Arizona_State_Sun_Devils>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/college",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/GolfPlayer",
    "predicate2_mention": "golf players",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Arizona_State_Sun_Devils",
    "entity1_mention": "arizona state sun devils",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "404",
    "question": "Which tenant of New Sanno Hotel is the military branch of the Gary Holder-Winfield ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/New_Sanno_Hotel> <http://dbpedia.org/ontology/tenant> ?uri. <http://dbpedia.org/resource/Gary_Holder-Winfield> <http://dbpedia.org/ontology/militaryBranch> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/tenant",
    "predicate1_mention": "tenant",
    "predicate2_uri": "http://dbpedia.org/ontology/militaryBranch",
    "predicate2_mention": "military branch",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/New_Sanno_Hotel",
    "entity1_mention": "new Sanno Hotel",
    "entity2_uri": "http://dbpedia.org/resource/Gary_Holder-Winfield",
    "entity2_mention": "gary holder-winfield"
},
{
    "id": "412",
    "question": "List the newspapers whose offices are situated in 1211 Avenue of the Americas?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/1211_Avenue_of_the_Americas>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/headquarter",
    "predicate1_mention": "offices",
    "predicate2_uri": "http://dbpedia.org/ontology/Newspaper",
    "predicate2_mention": "newspapers",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/1211_Avenue_of_the_Americas",
    "entity1_mention": "1211 Avenue of the Americas",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "417",
    "question": "How many developers have games where I can hear Lightning McQueen?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Lightning_McQueen> <http://dbpedia.org/ontology/voice> ?x . ?x <http://dbpedia.org/ontology/developer> ?uri  . }",
    "sparql_id": "103",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/voice",
    "predicate1_mention": "hear",
    "predicate2_uri": "http://dbpedia.org/ontology/developer",
    "predicate2_mention": "developers",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lightning_McQueen",
    "entity1_mention": "lightning mcqueen",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "419",
    "question": "List the ingredient of Blodpalt ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Blodpalt> <http://dbpedia.org/ontology/ingredient> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/ingredient",
    "predicate1_mention": "ingredient",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Blodpalt",
    "entity1_mention": "blodpalt",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "428",
    "question": "What is the total number of other tenant of the stadia whose one of the tenant is Raptors 905?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Raptors_905> . ?x <http://dbpedia.org/ontology/tenant> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/tenant",
    "predicate1_mention": "tenant",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Raptors_905",
    "entity1_mention": "raptors 905",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "455",
    "question": "List the battles fought by  Ali Habib Mahmud ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ali_Habib_Mahmud> <http://dbpedia.org/property/battles> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/battles",
    "predicate1_mention": "battles",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ali_Habib_Mahmud",
    "entity1_mention": "Ali Habib Mahmud",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "466",
    "question": "Count the number teams which have  former ice hockey players which also included American Hockey League ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/American_Hockey_League> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/formerTeam",
    "predicate1_mention": "former",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/American_Hockey_League",
    "entity1_mention": "american hockey league",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "467",
    "question": "What is the largest city of the country which hosted the 1951 Asian Games?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1951_Asian_Games> <http://dbpedia.org/property/hostCity> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/hostCity",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/largestCity",
    "predicate2_mention": "largest city",
    "type_uri": "http://dbpedia.org/ontology/Country",
    "type_mention": "country",
    "entity1_uri": "http://dbpedia.org/resource/1951_Asian_Games",
    "entity1_mention": "1951 Asian Games",
     "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "470",
    "question": "Members of how many political parties have died in Delhi?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Delhi> . ?x <http://dbpedia.org/property/party> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/placeOfDeath",
    "predicate1_mention": "died in",
    "predicate2_uri": "http://dbpedia.org/property/party",
    "predicate2_mention": "political parties",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Delhi",
    "entity1_mention": "delhi",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "474",
    "question": "Where do current famous NatGeo photographers live?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/National_Geographic_(magazine)> . ?x <http://dbpedia.org/ontology/residence> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Photographer>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate1_mention": "famous",
    "predicate2_uri": "http://dbpedia.org/ontology/residence",
    "predicate2_mention": "live",
    "type_uri": "http://dbpedia.org/ontology/Photographer",
    "type_mention": "photographers",
    "entity1_uri": "http://dbpedia.org/resource/National_Geographic_(magazine)",
    "entity1_mention": "NatGeo",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "477",
    "question": "Is Hyundai Lavita assembled in Malaysia?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hyundai_Lavita> <http://dbpedia.org/ontology/assembly> <http://dbpedia.org/resource/Malaysia> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/assembly",
    "predicate1_mention": "assembled",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hyundai_Lavita",
    "entity1_mention": "hyundai lavita",
    "entity2_uri": "http://dbpedia.org/resource/Malaysia",
    "entity2_mention": "malaysia"
},
{
    "id": "488",
    "question": "Name the common university of the Cardinal and Jim Wylie?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Stanford_Cardinal> <http://dbpedia.org/ontology/university> ?uri. <http://dbpedia.org/resource/Jim_Wylie> <http://dbpedia.org/ontology/university> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/university",
    "predicate1_mention": "university",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Stanford_Cardinal",
    "entity1_mention": "cardinal",
    "entity2_uri": "http://dbpedia.org/resource/Jim_Wylie",
    "entity2_mention": "jim wylie"
},
{
    "id": "492",
    "question": "From how many different institutes have the members of Judge Advocate General's Corps graduated?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/Judge_Advocate_General's_Corps,_United_States_Army> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/militaryRank",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate2_mention": "graduated",
    "type_uri": "http://dbpedia.org/ontology/EducationalInstitution",
    "type_mention": "institutes",
    "entity1_uri": "http://dbpedia.org/resource/Judge_Advocate_General's_Corps,_United_States_Army",
    "entity1_mention": "Judge Advocate General's Corps",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "499",
    "question": "Is Mike Babcock the head coach of Toronto Maple Leafs?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Toronto_Maple_Leafs> <http://dbpedia.org/property/headCoach> <http://dbpedia.org/resource/Mike_Babcock> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/headCoach",
    "predicate1_mention": "head coach",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Toronto_Maple_Leafs",
    "entity1_mention": "toronto maple leafs",
    "entity2_uri": "http://dbpedia.org/resource/Mike_Babcock",
    "entity2_mention": "mike babcock"
},
{
    "id": "502",
    "question": "Where is the king buried whose predecessor was Iyasu II?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Iyasu_II> . ?x <http://dbpedia.org/property/placeOfBurial> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Monarch>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/predecessor",
    "predicate1_mention": "predecessor",
    "predicate2_uri": "http://dbpedia.org/property/placeOfBurial",
    "predicate2_mention": "buried",
    "type_uri": "http://dbpedia.org/ontology/Monarch",
    "type_mention": "king",
    "entity1_uri": "http://dbpedia.org/resource/Iyasu_II",
    "entity1_mention": "Iyasu II",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "504",
    "question": "What honours did Reigh Count receive?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Reigh_Count> <http://dbpedia.org/ontology/honours> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/honours",
    "predicate1_mention": "honours",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Reigh_Count",
    "entity1_mention": "Reigh Count",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "510",
    "question": "Does the St lawrence river start in Kingston, Ontario?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Saint_Lawrence_River> <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Kingston,_Ontario> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/sourceMountain",
    "predicate1_mention": "ontario",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Saint_Lawrence_River",
    "entity1_mention": "st lawrence river",
    "entity2_uri": "http://dbpedia.org/resource/Kingston,_Ontario",
    "entity2_mention": "kingston, ontario"
},
{
    "id": "512",
    "question": "Who is the fictional character whose relative is Vestigial Peter?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Vestigial_Peter>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/relative",
    "predicate1_mention": "relative",
    "predicate2_uri": "http://dbpedia.org/ontology/FictionalCharacter",
    "predicate2_mention": "fictional character",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Vestigial_Peter",
    "entity1_mention": "vestigial peter",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "523",
    "question": "What is the company to which Fusajiro Yamauchi proprietor to ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Fusajiro_Yamauchi>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/foundedBy",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/Company",
    "predicate2_mention": "company",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Fusajiro_Yamauchi",
    "entity1_mention": "Fusajiro Yamauchi",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "524",
    "question": "Who is the performer of the album whose subsequent work is Willie Nelson and Family ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Willie_Nelson_and_Family> . ?x <http://dbpedia.org/ontology/artist> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/subsequentWork",
    "predicate1_mention": "subsequent work",
    "predicate2_uri": "http://dbpedia.org/ontology/artist",
    "predicate2_mention": "performer",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Willie_Nelson_and_Family",
    "entity1_mention": "willie nelson and family",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "525",
    "question": "Name the debut team of Dan Otero ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dan_Otero> <http://dbpedia.org/ontology/debutTeam> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/debutTeam",
    "predicate1_mention": "debut team",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Dan_Otero",
    "entity1_mention": "Dan Otero",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "536",
    "question": "Which serving railway line of the Daund Junction railway station was also the place where 99 (2009 film) was recorded ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Daund_Junction_railway_station> <http://dbpedia.org/ontology/servingRailwayLine> ?uri. <http://dbpedia.org/resource/99_(2009_film)> <http://dbpedia.org/property/recorded> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/servingRailwayLine",
    "predicate1_mention": "serving railway line",
    "predicate2_uri": "http://dbpedia.org/property/recorded",
    "predicate2_mention": "recorded",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Daund_Junction_railway_station",
    "entity1_mention": "daund junction railway station",
    "entity2_uri": "http://dbpedia.org/resource/99_(2009_film)",
    "entity2_mention": "99 (2009 film)"
},
{
    "id": "537",
    "question": "Which parties have their members live in the PM House, Colombo?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Prime_Minister's_House_(Colombo)> . ?uri <http://dbpedia.org/ontology/leader> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/residence",
    "predicate1_mention": "live in",
    "predicate2_uri": "http://dbpedia.org/ontology/leader",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/PoliticalParty",
    "type_mention": "parties",
    "entity1_uri": "http://dbpedia.org/resource/Prime_Minister's_House_(Colombo)",
    "entity1_mention": "PM House, Colombo",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "539",
    "question": "Name the movie written by Monty Python and distributed by Cinema International Corporation ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Cinema_International_Corporation> . ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Monty_Python>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/distributor",
    "predicate1_mention": "distributed",
    "predicate2_uri": "http://dbpedia.org/property/writer",
    "predicate2_mention": "written",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "cinema",
    "entity1_uri": "http://dbpedia.org/resource/Cinema_International_Corporation",
    "entity1_mention": "cinema international corporation",
    "entity2_uri": "http://dbpedia.org/resource/Monty_Python",
    "entity2_mention": "monty python"
},
{
    "id": "559",
    "question": "Who is the owner of Saumarez ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Saumarez_(horse)> <http://dbpedia.org/ontology/owner> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/owner",
    "predicate1_mention": "owner",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Saumarez_(horse)",
    "entity1_mention": "saumarez",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "562",
    "question": "What automobile engine's successor is BMW M40",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/BMW_M40>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AutomobileEngine>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "http://dbpedia.org/ontology/AutomobileEngine",
    "predicate2_mention": "automobile engine's",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/BMW_M40",
    "entity1_mention": "bmw m40",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "563",
    "question": "Which shareholder of Naval Air facility Adak is also the operator of New Sanno Hotel ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/New_Sanno_Hotel> <http://dbpedia.org/property/operator> ?uri. <http://dbpedia.org/resource/Naval_Air_Facility_Adak> <http://dbpedia.org/property/owner> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/operator",
    "predicate1_mention": "operator",
    "predicate2_uri": "http://dbpedia.org/property/owner",
    "predicate2_mention": "shareholder",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/New_Sanno_Hotel",
    "entity1_mention": "new sanno hotel",
    "entity2_uri": "http://dbpedia.org/resource/Naval_Air_Facility_Adak",
    "entity2_mention": "Naval Air facility Adak"
},
{
    "id": "569",
    "question": "Which key person of Clinton Foundation is also the president of Jim Sasser ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Clinton_Foundation> <http://dbpedia.org/property/keyPeople> ?uri. <http://dbpedia.org/resource/Jim_Sasser> <http://dbpedia.org/ontology/president> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/keyPeople",
    "predicate1_mention": "key person",
    "predicate2_uri": "http://dbpedia.org/ontology/president",
    "predicate2_mention": "president",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Clinton_Foundation",
    "entity1_mention": "clinton foundation",
    "entity2_uri": "http://dbpedia.org/resource/Jim_Sasser",
    "entity2_mention": "jim sasser"
},
{
    "id": "574",
    "question": "How many cities are around the sea into which the aegean sea flows?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Aegean_Sea> <http://dbpedia.org/ontology/outflow> ?x . ?x <http://dbpedia.org/property/cities> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
    "sparql_id": "403",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/outflow",
    "predicate1_mention": "flows",
    "predicate2_uri": "http://dbpedia.org/property/cities",
    "predicate2_mention": "cities",
    "type_uri": "http://dbpedia.org/ontology/Sea",
    "type_mention": "sea",
    "entity1_uri": "http://dbpedia.org/resource/Aegean_Sea",
    "entity1_mention": "aegean sea",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "580",
    "question": "List the successor of successor of Hayden, Stone & Co.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hayden,_Stone_&_Co.> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/ontology/successor> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hayden,_Stone_&_Co.",
    "entity1_mention": "hayden, stone & co",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "595",
    "question": "What is the branch of the politicians whose governor is Bill Clements?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/governor> <http://dbpedia.org/resource/Bill_Clements> . ?x <http://dbpedia.org/property/branch> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/governor",
    "predicate1_mention": "governor",
    "predicate2_uri": "http://dbpedia.org/property/branch",
    "predicate2_mention": "branch",
    "type_uri": "http://dbpedia.org/ontology/Politician",
    "type_mention": "politicians",
    "entity1_uri": "http://dbpedia.org/resource/Bill_Clements",
    "entity1_mention": "bill clements",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "600",
    "question": "What is the series of the book which is a subsequent work of Blade Runner 2: The Edge of Human ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Blade_Runner_2:_The_Edge_of_Human> <http://dbpedia.org/ontology/subsequentWork> ?x . ?x <http://dbpedia.org/ontology/series> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/subsequentWork",
    "predicate1_mention": "subsequent work",
    "predicate2_uri": "http://dbpedia.org/ontology/series",
    "predicate2_mention": "series",
    "type_uri": "http://dbpedia.org/ontology/Book",
    "type_mention": "book",
    "entity1_uri": "http://dbpedia.org/resource/Blade_Runner_2:_The_Edge_of_Human",
    "entity1_mention": "Blade Runner 2: The Edge of Human",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "603",
    "question": "Give me all commanders which had an important role in both, the Battle of Fort Stephenson and Battle of the Thames?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Battle_of_Fort_Stephenson> <http://dbpedia.org/ontology/commander> ?uri. <http://dbpedia.org/resource/Battle_of_the_Thames> <http://dbpedia.org/ontology/commander> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/commander",
    "predicate1_mention": "commanders",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Battle_of_Fort_Stephenson",
    "entity1_mention": "the Battle of Fort Stephenson",
    "entity2_uri": "http://dbpedia.org/resource/Battle_of_the_Thames",
    "entity2_mention": "Battle of the Thames"
},
{
    "id": "606",
    "question": "What is the commander of Battle of Brownstown ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Battle_of_Brownstown> <http://dbpedia.org/ontology/commander> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/commander",
    "predicate1_mention": "commander",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Battle_of_Brownstown",
    "entity1_mention": "battle of brownstown",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "608",
    "question": "How many religions are practiced by diplomats?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Diplomacy> . ?x <http://dbpedia.org/property/religion> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/profession",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/religion",
    "predicate2_mention": "religions",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Diplomacy",
    "entity1_mention": "diplomats",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "616",
    "question": "list some companies founded by Jim Harris.",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Jim_Harris_(entrepreneur)> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/foundedBy",
    "predicate1_mention": "founded by",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jim_Harris_(entrepreneur)",
    "entity1_mention": "Jim Harris",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "623",
    "question": "Name the airlines which have a hub in airport in SF?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/cityServed> <http://dbpedia.org/resource/San_Francisco> . ?uri <http://dbpedia.org/property/hubs> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/cityServed",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/hubs",
    "predicate2_mention": "hub",
    "type_uri": "http://dbpedia.org/ontology/Airline",
    "type_mention": "airlines",
    "entity1_uri": "http://dbpedia.org/resource/San_Francisco",
    "entity1_mention": "SF",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "635",
    "question": "Who is the prime minister of Michael Jeffery who is also the minister of William Deane ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Jeffery> <http://dbpedia.org/property/primeminister> ?uri. <http://dbpedia.org/resource/William_Deane> <http://dbpedia.org/ontology/primeMinister> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/primeminister",
    "predicate1_mention": "prime minister",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Michael_Jeffery",
    "entity1_mention": "michael jeffery",
    "entity2_uri": "http://dbpedia.org/resource/William_Deane",
    "entity2_mention": "William Deane"
},
{
    "id": "638",
    "question": "Who founded the Not on our Watch NGO?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Not_on_Our_Watch_(organization)> <http://dbpedia.org/ontology/foundedBy> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/foundedBy",
    "predicate1_mention": "founded",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Not_on_Our_Watch_(organization)",
    "entity1_mention": "the Not on our Watch NGO",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "645",
    "question": "What is the military conflict whose commanders are John McEwen and Phm Vn ng?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/John_McEwen> . ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ph\u1ea1m_V\u0103n_\u0110\u1ed3ng> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/commander",
    "predicate1_mention": "commanders",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/MilitaryConflict",
    "type_mention": "military conflict",
    "entity1_uri": "http://dbpedia.org/resource/John_McEwen",
    "entity1_mention": "john mcewen",
    "entity2_uri": "http://dbpedia.org/resource/Ph\u1ea1m_V\u0103n_\u0110\u1ed3ng",
    "entity2_mention": "Phm Vn ng"
},
{
    "id": "646",
    "question": "In which countries have models hanged themselves?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/deathCause> <http://dbpedia.org/resource/Suicide_by_hanging> . ?x <http://dbpedia.org/property/citizenship> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/deathCause",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/citizenship",
    "predicate2_mention": "countries",
    "type_uri": "http://dbpedia.org/ontology/Model",
    "type_mention": "models",
    "entity1_uri": "http://dbpedia.org/resource/Suicide_by_hanging",
    "entity1_mention": "hanged",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "659",
    "question": "Which TV show is related to The Sarah Jane Adventures and theme music is composed by  Ron Grainer?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/The_Sarah_Jane_Adventures> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Ron_Grainer>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/related",
    "predicate1_mention": "related",
    "predicate2_uri": "http://dbpedia.org/property/themeMusicComposer",
    "predicate2_mention": "theme music is composed by",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "tv show",
    "entity1_uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures",
    "entity1_mention": "The Sarah Jane Adventures",
    "entity2_uri": "http://dbpedia.org/resource/Ron_Grainer",
    "entity2_mention": "ron grainer"
},
{
    "id": "661",
    "question": "Who was in military unit which played the role of Air interdiction?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/role> <http://dbpedia.org/resource/Air_interdiction> . ?uri <http://dbpedia.org/ontology/militaryUnit> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/role",
    "predicate1_mention": "role",
    "predicate2_uri": "http://dbpedia.org/ontology/militaryUnit",
    "predicate2_mention": "military unit",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Air_interdiction",
    "entity1_mention": "Air interdiction",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "663",
    "question": "Tirana is the largest city of which country?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Tirana>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/largestCity",
    "predicate1_mention": "largest city",
    "predicate2_uri": "http://dbpedia.org/ontology/Country",
    "predicate2_mention": "country",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tirana",
    "entity1_mention": "tirana",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "666",
    "question": "Marika Gombitov makes songs in which languages?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Marika_Gombitov\u00e1> . ?x <http://dbpedia.org/property/language> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/artist",
    "predicate1_mention": "marika",
    "predicate2_uri": "http://dbpedia.org/property/language",
    "predicate2_mention": "languages",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Marika_Gombitov\u00e1",
    "entity1_mention": "marika gombitov",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "667",
    "question": "What is the area of the broadcast network which has the affiliation with 9TV?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/9TV> <http://dbpedia.org/property/affiliation> ?x . ?x <http://dbpedia.org/property/area> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BroadcastNetwork>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/affiliation",
    "predicate1_mention": "affiliation",
    "predicate2_uri": "http://dbpedia.org/property/area",
    "predicate2_mention": "area",
    "type_uri": "http://dbpedia.org/ontology/BroadcastNetwork",
    "type_mention": "broadcast network",
    "entity1_uri": "http://dbpedia.org/resource/9TV",
    "entity1_mention": "9tv",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "671",
    "question": "What is the mascot of the handball teams in the Turkish Handball Super League?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/Turkish_Handball_Super_League> . ?x <http://dbpedia.org/property/mascot> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HandballTeam>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/league",
    "predicate1_mention": "league",
    "predicate2_uri": "http://dbpedia.org/property/mascot",
    "predicate2_mention": "mascot",
    "type_uri": "http://dbpedia.org/ontology/HandballTeam",
    "type_mention": "handball teams",
    "entity1_uri": "http://dbpedia.org/resource/Turkish_Handball_Super_League",
    "entity1_mention": "Turkish Handball Super League",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "673",
    "question": "How many relatives are there of people fought in the Battle of the Bulge?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Battle_of_the_Bulge> . ?x <http://dbpedia.org/ontology/relation> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/battles",
    "predicate1_mention": "battle",
    "predicate2_uri": "http://dbpedia.org/ontology/relation",
    "predicate2_mention": "relatives",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Battle_of_the_Bulge",
    "entity1_mention": "Battle of the Bulge",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "675",
    "question": "What band made The trial and One of these days song?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Trial_(song)> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/One_of_These_Days_(instrumental)> <http://dbpedia.org/ontology/musicalArtist> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/artist",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/musicalArtist",
    "predicate2_mention": "band",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Trial_(song)",
    "entity1_mention": "The trial",
    "entity2_uri": "http://dbpedia.org/resource/One_of_These_Days_(instrumental)",
    "entity2_mention": "One of these days"
},
{
    "id": "688",
    "question": "In which cities can the beverage related to Barq's be found?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Barq's> <http://dbpedia.org/ontology/related> ?x . ?x <http://dbpedia.org/property/locationCity> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/related",
    "predicate1_mention": "related",
    "predicate2_uri": "http://dbpedia.org/property/locationCity",
    "predicate2_mention": "cities",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Barq's",
    "entity1_mention": "barq's",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "698",
    "question": "How many fictional characters were humans?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/Human>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/species",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/FictionalCharacter",
    "predicate2_mention": "fictional characters",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Human",
    "entity1_mention": "humans",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "699",
    "question": "Where was James H. Fields buried ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/James_H._Fields> <http://dbpedia.org/property/placeofburial> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/placeofburial",
    "predicate1_mention": "buried",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/James_H._Fields",
    "entity1_mention": "James H. Fields",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "709",
    "question": "Who has been married to both Penny Lancaster and Alana Stewart?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Penny_Lancaster> <http://dbpedia.org/ontology/spouse> ?uri. <http://dbpedia.org/resource/Alana_Stewart> <http://dbpedia.org/ontology/spouse> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/spouse",
    "predicate1_mention": "married to",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Penny_Lancaster",
    "entity1_mention": "penny lancaster",
    "entity2_uri": "http://dbpedia.org/resource/Alana_Stewart",
    "entity2_mention": "Alana Stewart"
},
{
    "id": "713",
    "question": "Name a show hosted by Brian Dunkleman and judged by Harry Connick, Jr.?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Brian_Dunkleman> . ?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Harry_Connick,_Jr.>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/presenter",
    "predicate1_mention": "hosted by",
    "predicate2_uri": "http://dbpedia.org/property/judges",
    "predicate2_mention": "judged",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "show",
    "entity1_uri": "http://dbpedia.org/resource/Brian_Dunkleman",
    "entity1_mention": "brian dunkleman",
    "entity2_uri": "http://dbpedia.org/resource/Harry_Connick,_Jr.",
    "entity2_mention": "Harry Connick, Jr."
},
{
    "id": "716",
    "question": "Does Cascade Airways have a hub in Seattle?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Cascade_Airways> <http://dbpedia.org/ontology/hubAirport> <http://dbpedia.org/resource/Seattle> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/hubAirport",
    "predicate1_mention": "hub",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Cascade_Airways",
    "entity1_mention": "cascade airways",
    "entity2_uri": "http://dbpedia.org/resource/Seattle",
    "entity2_mention": "seattle"
},
{
    "id": "717",
    "question": "Who did their highschool from a school whose mascot was a fighting tiger?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/mascot> <http://dbpedia.org/resource/Fighting_Tiger> . ?uri <http://dbpedia.org/ontology/highschool> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/mascot",
    "predicate1_mention": "mascot",
    "predicate2_uri": "http://dbpedia.org/ontology/highschool",
    "predicate2_mention": "highschool",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Fighting_Tiger",
    "entity1_mention": "fighting tiger",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "722",
    "question": "Where did the Vitis Vinifera grapes originate?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/Vitis_vinifera> . ?x <http://dbpedia.org/ontology/origin> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Grape>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/species",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/origin",
    "predicate2_mention": "originate",
    "type_uri": "http://dbpedia.org/ontology/Grape",
    "type_mention": "grapes",
    "entity1_uri": "http://dbpedia.org/resource/Vitis_vinifera",
    "entity1_mention": "vitis vinifera",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "723",
    "question": "Who is the leader of Hackweiser ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hackweiser> <http://dbpedia.org/property/leaderName> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/leaderName",
    "predicate1_mention": "leader",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hackweiser",
    "entity1_mention": "hackweiser",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "728",
    "question": "Name the university located in Indiana and has affiliations with Kaplan, Inc.?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Indiana> . ?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Kaplan,_Inc.>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/campus",
    "predicate1_mention": "university",
    "predicate2_uri": "http://dbpedia.org/property/affiliations",
    "predicate2_mention": "affiliations",
    "type_uri": "http://dbpedia.org/ontology/University",
    "type_mention": "university",
    "entity1_uri": "http://dbpedia.org/resource/Indiana",
    "entity1_mention": "indiana",
    "entity2_uri": "http://dbpedia.org/resource/Kaplan,_Inc.",
    "entity2_mention": "kaplan, inc."
},
{
    "id": "732",
    "question": "Which technological products were manufactured by Foxconn?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Foxconn>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate1_mention": "manufactured by",
    "predicate2_uri": "http://dbpedia.org/ontology/InformationAppliance",
    "predicate2_mention": "technological products",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Foxconn",
    "entity1_mention": "foxconn",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "740",
    "question": "Name all the bands which have members of QDT in them.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/QDT> <http://dbpedia.org/ontology/bandMember> ?x . ?x <http://dbpedia.org/ontology/associatedBand> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/bandMember",
    "predicate1_mention": "members",
    "predicate2_uri": "http://dbpedia.org/ontology/associatedBand",
    "predicate2_mention": "bands",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/QDT",
    "entity1_mention": "qdt",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "753",
    "question": "Name the river whose source mountain is Baikal Mountains and mouth location is Arctic Ocean?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Baikal_Mountains> . ?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Arctic_Ocean>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/sourceMountain",
    "predicate1_mention": "source mountain",
    "predicate2_uri": "http://dbpedia.org/property/mouthLocation",
    "predicate2_mention": "mouth location",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "river",
    "entity1_uri": "http://dbpedia.org/resource/Baikal_Mountains",
    "entity1_mention": "baikal mountains",
    "entity2_uri": "http://dbpedia.org/resource/Arctic_Ocean",
    "entity2_mention": "arctic ocean"
},
{
    "id": "760",
    "question": "What is the total number of awards whose presenter's headquarters is Beverly Hills, California?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Beverly_Hills,_California> . ?uri <http://dbpedia.org/ontology/presenter> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/headquarters",
    "predicate1_mention": "headquarters",
    "predicate2_uri": "http://dbpedia.org/ontology/presenter",
    "predicate2_mention": "presenter's",
    "type_uri": "http://dbpedia.org/ontology/Award",
    "type_mention": "awards",
    "entity1_uri": "http://dbpedia.org/resource/Beverly_Hills,_California",
    "entity1_mention": "Beverly Hills, California",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "762",
    "question": "What cities are nearer to Fountain Lake Farm?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fountain_Lake_Farm> <http://dbpedia.org/property/nearestCity> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/nearestCity",
    "predicate1_mention": "nearer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Fountain_Lake_Farm",
    "entity1_mention": "Fountain Lake Farm",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "766",
    "question": "Was Cliff Burton in Metallica?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Metallica> <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Cliff_Burton> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/pastMembers",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Metallica",
    "entity1_mention": "metallica",
    "entity2_uri": "http://dbpedia.org/resource/Cliff_Burton",
    "entity2_mention": "cliff burton"
},
{
    "id": "768",
    "question": "Tell me the name of the Prime Time Entertainment Network's TV show whose Artist is Christopher Franke ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Christopher_Franke> . ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/Prime_Time_Entertainment_Network>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/artist",
    "predicate1_mention": "artist",
    "predicate2_uri": "http://dbpedia.org/ontology/network",
    "predicate2_mention": "network's",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "tv show",
    "entity1_uri": "http://dbpedia.org/resource/Christopher_Franke",
    "entity1_mention": "christopher franke",
    "entity2_uri": "http://dbpedia.org/resource/Prime_Time_Entertainment_Network",
    "entity2_mention": "Prime Time Entertainment Network's"
},
{
    "id": "769",
    "question": "Which TV show had a judge named Harry Connick, Jr. and was presented by Ryan Seacrest?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Harry_Connick,_Jr.> . ?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Ryan_Seacrest>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/judges",
    "predicate1_mention": "judge",
    "predicate2_uri": "http://dbpedia.org/ontology/presenter",
    "predicate2_mention": "presented by",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "tv show",
    "entity1_uri": "http://dbpedia.org/resource/Harry_Connick,_Jr.",
    "entity1_mention": "Harry Connick, Jr.",
    "entity2_uri": "http://dbpedia.org/resource/Ryan_Seacrest",
    "entity2_mention": "ryan seacrest"
},
{
    "id": "770",
    "question": "How many kinds of games can be played on the Amiga?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Amiga> . ?x <http://dbpedia.org/property/genre> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/computingPlatform",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/genre",
    "predicate2_mention": "kinds of",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Amiga",
    "entity1_mention": "amiga",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "775",
    "question": "Which governer of Winston Bryant is the president of Joseph Stiglitz ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Winston_Bryant> <http://dbpedia.org/property/governor> ?uri. <http://dbpedia.org/resource/Joseph_Stiglitz> <http://dbpedia.org/property/president> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/governor",
    "predicate1_mention": "governer",
    "predicate2_uri": "http://dbpedia.org/property/president",
    "predicate2_mention": "president",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Winston_Bryant",
    "entity1_mention": "winston bryant",
    "entity2_uri": "http://dbpedia.org/resource/Joseph_Stiglitz",
    "entity2_mention": "joseph stiglitz"
},
{
    "id": "784",
    "question": "Cable stayed bridges have been used to cross over how many things?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/design> <http://dbpedia.org/resource/Cable-stayed_bridge> . ?x <http://dbpedia.org/property/crosses> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/design",
    "predicate1_mention": "bridges",
    "predicate2_uri": "http://dbpedia.org/property/crosses",
    "predicate2_mention": "cross",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Cable-stayed_bridge",
    "entity1_mention": "Cable stayed bridges",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "793",
    "question": "What sports can be played in Kharghar's schools",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Kharghar> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/city",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/sport",
    "predicate2_mention": "sports",
    "type_uri": "http://dbpedia.org/ontology/School",
    "type_mention": "schools",
    "entity1_uri": "http://dbpedia.org/resource/Kharghar",
    "entity1_mention": "Kharghar's",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "797",
    "question": "What are the current music bands of Chester Bennington?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Chester_Bennington> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/currentMembers",
    "predicate1_mention": "current music bands",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Chester_Bennington",
    "entity1_mention": "chester bennington",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "804",
    "question": "On what subjects was Broca 's Brain written?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Broca's_Brain> <http://dbpedia.org/property/subject> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/subject",
    "predicate1_mention": "subjects",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Broca's_Brain",
    "entity1_mention": "broca 's brain",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "814",
    "question": "How many different people own the Timeform award winners?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Timeform> . ?x <http://dbpedia.org/ontology/owner> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/awards",
    "predicate1_mention": "award",
    "predicate2_uri": "http://dbpedia.org/ontology/owner",
    "predicate2_mention": "own",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Timeform",
    "entity1_mention": "timeform",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "815",
    "question": "List presidents of the school whose one of the president is Charles. Prince of Wales ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/president> <http://dbpedia.org/resource/Charles,_Prince_of_Wales> . ?x <http://dbpedia.org/property/president> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/president",
    "predicate1_mention": "president",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/School",
    "type_mention": "school",
    "entity1_uri": "http://dbpedia.org/resource/Charles,_Prince_of_Wales",
    "entity1_mention": "Charles. Prince of Wales",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "823",
    "question": "Which political party of Chandra Shekhar is also the political party of Datla Satyanarayana Raju ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chandra_Shekhar> <http://dbpedia.org/ontology/otherParty> ?uri. <http://dbpedia.org/resource/Datla_Satyanarayana_Raju> <http://dbpedia.org/ontology/party> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/otherParty",
    "predicate1_mention": "party",
    "predicate2_uri": "http://dbpedia.org/ontology/party",
    "predicate2_mention": "party",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Chandra_Shekhar",
    "entity1_mention": "chandra Shekhar",
    "entity2_uri": "http://dbpedia.org/resource/Datla_Satyanarayana_Raju",
    "entity2_mention": "Datla Satyanarayana Raju"
},
{
    "id": "825",
    "question": "What river originates in Kingston Ontario?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Kingston,_Ontario>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/sourceLocation",
    "predicate1_mention": "originates in",
    "predicate2_uri": "http://dbpedia.org/ontology/River",
    "predicate2_mention": "river",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kingston,_Ontario",
    "entity1_mention": "kingston ontario",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "827",
    "question": "What is the television show whose executive producer is Douglas Netter?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Douglas_Netter>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/executiveProducer",
    "predicate1_mention": "executive producer",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "television show",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Douglas_Netter",
    "entity1_mention": "douglas netter",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "830",
    "question": "Which successor of Philippine Ports Authority is the state of origin of Ruben J. Villote ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Philippine_Ports_Authority> <http://dbpedia.org/ontology/successor> ?uri. <http://dbpedia.org/resource/Ruben_J._Villote> <http://dbpedia.org/ontology/stateOfOrigin> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "http://dbpedia.org/ontology/stateOfOrigin",
    "predicate2_mention": "state of origin",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Philippine_Ports_Authority",
    "entity1_mention": "Philippine Ports Authority",
    "entity2_uri": "http://dbpedia.org/resource/Ruben_J._Villote",
    "entity2_mention": "Ruben J. Villote"
},
{
    "id": "846",
    "question": "What is the common battle fought by Stephen Urban and Ali Habib Mahmud ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Stephen_Urban> <http://dbpedia.org/ontology/battle> ?uri. <http://dbpedia.org/resource/Ali_Habib_Mahmud> <http://dbpedia.org/property/battles> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/battle",
    "predicate1_mention": "battle",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Stephen_Urban",
    "entity1_mention": "stephen urban",
    "entity2_uri": "http://dbpedia.org/resource/Ali_Habib_Mahmud",
    "entity2_mention": "Ali Habib Mahmud"
},
{
    "id": "848",
    "question": "Where did Whitney Wistert debut?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Whitey_Wistert> <http://dbpedia.org/property/debutteam> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/debutteam",
    "predicate1_mention": "debut",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Whitey_Wistert",
    "entity1_mention": "Whitney Wistert",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "851",
    "question": "What novels are belong to the genre of Utopian and dystopian fiction?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Utopian_and_dystopian_fiction> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/literaryGenre",
    "predicate1_mention": "genre",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Utopian_and_dystopian_fiction",
    "entity1_mention": "Utopian and dystopian fiction",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "853",
    "question": "What is the programme format of WWTR ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WWTR> <http://dbpedia.org/ontology/programmeFormat> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/programmeFormat",
    "predicate1_mention": "programme format",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/WWTR",
    "entity1_mention": "wwtr",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "854",
    "question": "What is the home ground of the clubs managed by Ciao Zanardi?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Caio_Zanardi> . ?x <http://dbpedia.org/ontology/ground> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/manager",
    "predicate1_mention": "managed by",
    "predicate2_uri": "http://dbpedia.org/ontology/ground",
    "predicate2_mention": "ground",
    "type_uri": "http://dbpedia.org/ontology/SoccerClubSeason",
    "type_mention": "clubs",
    "entity1_uri": "http://dbpedia.org/resource/Caio_Zanardi",
    "entity1_mention": "ciao zanardi",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "860",
    "question": "Name the office of Richard Coke ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Richard_Coke> <http://dbpedia.org/property/office> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/office",
    "predicate1_mention": "office",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Richard_Coke",
    "entity1_mention": "richard coke",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "863",
    "question": "Which allegiance of the John Kotelawala is also the  sovereign state of the Sanath Weerakoon ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Kotelawala> <http://dbpedia.org/property/allegiance> ?uri. <http://dbpedia.org/resource/Sanath_Weerakoon> <http://dbpedia.org/ontology/country> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/allegiance",
    "predicate1_mention": "allegiance",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "sovereign state",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/John_Kotelawala",
    "entity1_mention":  "john kotelawala",
    "entity2_uri": "http://dbpedia.org/resource/Sanath_Weerakoon",
    "entity2_mention": "sanath weerakoon"
},
{
    "id": "870",
    "question": "Which political party of kumta had affiliation with Indian general election, 2004 (Andhra Pradesh) ",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kumta> <http://dbpedia.org/property/governmentType> ?uri. <http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)> <http://dbpedia.org/ontology/affiliation> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/governmentType",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/affiliation",
    "predicate2_mention": "affiliation",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kumta",
    "entity1_mention": "kumta",
    "entity2_uri": "http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)",
    "entity2_mention": "Indian general election, 2004 (Andhra Pradesh)"
},
{
    "id": "872",
    "question": "Which composer of Motorpsycho Nitemare has also composed The time are A-Changing ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Motorpsycho_Nitemare> <http://dbpedia.org/property/composer> ?uri. <http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)> <http://dbpedia.org/ontology/musicBy> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/composer",
    "predicate1_mention": "composer",
    "predicate2_uri": "http://dbpedia.org/ontology/musicBy",
    "predicate2_mention": "composer",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Motorpsycho_Nitemare",
    "entity1_mention": "motorpsycho nitemare",
    "entity2_uri": "http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)",
    "entity2_mention": "The time are A-Changing"
},
{
    "id": "875",
    "question": "Who are the characters of Batman Live?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Batman_Live> <http://dbpedia.org/property/characters> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/characters",
    "predicate1_mention": "characters",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Batman_Live",
    "entity1_mention": "batman live",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "876",
    "question": "Who is buried at the place governed by National Park Service?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/National_Park_Service> . ?uri <http://dbpedia.org/property/restingplace> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/governingBody",
    "predicate1_mention": "governed",
    "predicate2_uri": "http://dbpedia.org/property/restingplace",
    "predicate2_mention": "buried at",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/National_Park_Service",
    "entity1_mention": "national park service",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "878",
    "question": "What show  has theme music composer as Ron Grainer and at the same time  related to Class (2016 TV series)?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Ron_Grainer> . ?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/Class_(2016_TV_series)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/themeMusicComposer",
    "predicate1_mention": "theme music composer",
    "predicate2_uri": "http://dbpedia.org/ontology/related",
    "predicate2_mention": "related",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "show",
    "entity1_uri": "http://dbpedia.org/resource/Ron_Grainer",
    "entity1_mention": "ron grainer",
    "entity2_uri": "http://dbpedia.org/resource/Class_(2016_TV_series)",
    "entity2_mention": "Class (2016 TV series)"
},
{
    "id": "894",
    "question": "Which nearest city of Jurgens Site is the death place of Jimmie Heuga ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jurgens_Site> <http://dbpedia.org/property/nearestCity> ?uri. <http://dbpedia.org/resource/Jimmie_Heuga> <http://dbpedia.org/property/deathPlace> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/nearestCity",
    "predicate1_mention": "nearest city",
    "predicate2_uri": "http://dbpedia.org/property/deathPlace",
    "predicate2_mention": "death place",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jurgens_Site",
    "entity1_mention": "jurgens site",
    "entity2_uri": "http://dbpedia.org/resource/Jimmie_Heuga",
    "entity2_mention": "jimmie heuga"
},
{
    "id": "895",
    "question": "On which river are there things belonging to zambezi river authority?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Zambezi_River_Authority> . ?x <http://dbpedia.org/ontology/river> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/owner",
    "predicate1_mention": "belonging",
    "predicate2_uri": "http://dbpedia.org/ontology/river",
    "predicate2_mention": "river",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Zambezi_River_Authority",
    "entity1_mention": "zambezi river authority",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "899",
    "question": "To which political party does Virendra Kataria belongs ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Virendra_Kataria> <http://dbpedia.org/property/party> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/party",
    "predicate1_mention": "party",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Virendra_Kataria",
    "entity1_mention": "virendra kataria",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "901",
    "question": "Which are the countires where Pioneer Corporation has flourished?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pioneer_Corporation> <http://dbpedia.org/property/country> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/country",
    "predicate1_mention": "countires",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Pioneer_Corporation",
    "entity1_mention": "pioneer corporation",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "918",
    "question": "What is the number of occupation of the people who died in tampa bay, florida?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Tampa,_Florida> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate1_mention": "died in",
    "predicate2_uri": "http://dbpedia.org/ontology/occupation",
    "predicate2_mention": "occupation",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tampa,_Florida",
    "entity1_mention": "tampa bay, florida",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "919",
    "question": "Whose theme music was composed by a band which collaborated with Phish?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Phish> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedBand",
    "predicate1_mention": "band",
    "predicate2_uri": "http://dbpedia.org/property/themeMusicComposer",
    "predicate2_mention": "composed by",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Phish",
    "entity1_mention": "phish",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "922",
    "question": "List the developers who has contributed to both GNOWSYS and GNU TeXmacs ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/GNOWSYS> <http://dbpedia.org/ontology/developer> ?uri. <http://dbpedia.org/resource/GNU_TeXmacs> <http://dbpedia.org/ontology/developer> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/developer",
    "predicate1_mention": "developers",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/GNOWSYS",
    "entity1_mention": "gnowsys",
    "entity2_uri": "http://dbpedia.org/resource/GNU_TeXmacs",
    "entity2_mention": "gnu texmacs"
},
{
    "id": "924",
    "question": "Who all are known to play the Gibson Guitar Corporation?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Gibson_Guitar_Corporation> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/notableInstruments",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Gibson_Guitar_Corporation",
    "entity1_mention": "Gibson Guitar Corporation",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "928",
    "question": "How many fictional characters are there in a series in which Craig Robinson acted?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Craig_Robinson_(actor)> . ?uri <http://dbpedia.org/ontology/series> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/starring",
    "predicate1_mention": "acted",
    "predicate2_uri": "http://dbpedia.org/ontology/series",
    "predicate2_mention": "series",
    "type_uri": "http://dbpedia.org/ontology/FictionalCharacter",
    "type_mention": "fictional characters",
    "entity1_uri": "http://dbpedia.org/resource/Craig_Robinson_(actor)",
    "entity1_mention": "Craig Robinson",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "936",
    "question": "What is the university whose campus is Mount Moosilauke?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Mount_Moosilauke>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/campus",
    "predicate1_mention": "campus",
    "predicate2_uri": "http://dbpedia.org/ontology/University",
    "predicate2_mention": "university",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mount_Moosilauke",
    "entity1_mention": "mount moosilauke",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "938",
    "question": "What is the owning organisation of the Ford Kansas City Assembly Plant and also the builder of the Ford Y-block engine?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant> <http://dbpedia.org/ontology/owningOrganisation> ?uri. <http://dbpedia.org/resource/Ford_Y-block_engine> <http://dbpedia.org/ontology/manufacturer> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/owningOrganisation",
    "predicate1_mention": "owning organisation",
    "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate2_mention": "builder",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant",
    "entity1_mention": "Ford Kansas City Assembly Plant",
    "entity2_uri": "http://dbpedia.org/resource/Ford_Y-block_engine",
    "entity2_mention": "Ford Y-block engine"
},
{
    "id": "950",
    "question": "Which are the predecessors of the cars which are similar to the Oldsmobile 88?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Oldsmobile_88> <http://dbpedia.org/property/related> ?x . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/related",
    "predicate1_mention": "similar to",
    "predicate2_uri": "http://dbpedia.org/ontology/predecessor",
    "predicate2_mention": "predecessors",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Oldsmobile_88",
    "entity1_mention": "oldsmobile 88",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "951",
    "question": "How many people are there whose children died in Indiana?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Indiana> . ?uri <http://dbpedia.org/ontology/child> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate1_mention": "died in",
    "predicate2_uri": "http://dbpedia.org/ontology/child",
    "predicate2_mention": "children",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Indiana",
    "entity1_mention": "indiana",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "953",
    "question": "What is the appliance which uses the cpu manufactured by Marvell Technology Group?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/cpu> <http://dbpedia.org/resource/Marvell_Technology_Group>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/cpu",
    "predicate1_mention": "cpu",
    "predicate2_uri": "http://dbpedia.org/ontology/InformationAppliance",
    "predicate2_mention": "appliance",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Marvell_Technology_Group",
    "entity1_mention": "Marvell Technology Group",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "954",
    "question": "In which team was the person drafted who has studied at the Worcester college, Oxford?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Worcester_College,_Oxford> . ?x <http://dbpedia.org/property/draftTeam> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate1_mention": "studied at",
    "predicate2_uri": "http://dbpedia.org/property/draftTeam",
    "predicate2_mention": "drafted",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "person",
    "entity1_uri": "http://dbpedia.org/resource/Worcester_College,_Oxford",
    "entity1_mention": "worcester college, oxford",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "956",
    "question": "How many people used to play in the youthclub of FC Barcelona?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/youthclubs> <http://dbpedia.org/resource/FC_Barcelona>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/youthclubs",
    "predicate1_mention": "youthclub",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/FC_Barcelona",
    "entity1_mention": "fc barcelona",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "959",
    "question": "What are some movies whose distributors are led by Kevin Tsujihara?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Kevin_Tsujihara> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/keyPerson",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/distributor",
    "predicate2_mention": "distributors",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Kevin_Tsujihara",
    "entity1_mention": "kevin tsujihara",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "966",
    "question": "What is the major shrine of the monarchs whose successor is Dragimir of Travunia and Zachlumia?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Dragimir_of_Travunia_and_Zachlumia> . ?x <http://dbpedia.org/property/majorShrine> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Monarch>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "http://dbpedia.org/property/majorShrine",
    "predicate2_mention": "major shrine",
    "type_uri": "http://dbpedia.org/ontology/Monarch",
    "type_mention": "monarchs",
    "entity1_uri": "http://dbpedia.org/resource/Dragimir_of_Travunia_and_Zachlumia",
    "entity1_mention": "Dragimir of Travunia and Zachlumia",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "971",
    "question": "Name the people whose academic advisor has also mentored the thesis of Alexius Meinong?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Alexius_Meinong> . ?uri <http://dbpedia.org/ontology/academicAdvisor> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/doctoralStudents",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/academicAdvisor",
    "predicate2_mention": "academic advisor",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Alexius_Meinong",
    "entity1_mention": "alexius meinong",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "975",
    "question": "Which fields of the Paul Demiville is also the faith of Koay Teng Hai ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Paul_Demi\u00e9ville> <http://dbpedia.org/property/fields> ?uri. <http://dbpedia.org/resource/Koay_Teng_Hai> <http://dbpedia.org/ontology/religion> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/fields",
    "predicate1_mention": "fields",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "faith",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Paul_Demi\u00e9ville",
    "entity1_mention": "Paul Demiville",
    "entity2_uri": "http://dbpedia.org/resource/Koay_Teng_Hai",
    "entity2_mention": "Koay Teng Hai"
},
{
    "id": "980",
    "question": "Which leader of United States House of Representatives was the appinter of ohn Drayton ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789> <http://dbpedia.org/property/leader> ?uri. <http://dbpedia.org/resource/John_Drayton> <http://dbpedia.org/property/appointer> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/leader",
    "predicate1_mention": "leader",
    "predicate2_uri": "http://dbpedia.org/property/appointer",
    "predicate2_mention": "appinter",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789",
    "entity1_mention": "United States House of Representatives",
    "entity2_uri": "http://dbpedia.org/resource/John_Drayton",
    "entity2_mention": " ohn drayton"
},
{
    "id": "984",
    "question": "List all the doctoral student of the scientist who has advised john Bowlby ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/John_Bowlby> . ?x <http://dbpedia.org/property/doctoralStudents> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/doctoralStudents",
    "predicate1_mention": "doctoral student",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Scientist",
    "type_mention": "scientist",
    "entity1_uri": "http://dbpedia.org/resource/John_Bowlby",
    "entity1_mention": "john bowlby",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "987",
    "question": "Is Peter Piper Pizza in the pizza industry?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Peter_Piper_Pizza> <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Pizza> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/industry",
    "predicate1_mention": "industry",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Peter_Piper_Pizza",
    "entity1_mention": "Peter Piper Pizza",
    "entity2_uri": "http://dbpedia.org/resource/Pizza",
    "entity2_mention": "pizza"
},
{
    "id": "989",
    "question": "What is the religion of the person who founded the Emel magazine?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Emel_(magazine)> <http://dbpedia.org/property/founder> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/founder",
    "predicate1_mention": "founded",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religion",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "person",
    "entity1_uri": "http://dbpedia.org/resource/Emel_(magazine)",
    "entity1_mention": "emel magazine",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "991",
    "question": "What are some apes?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Ape>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/family",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ape",
    "entity1_mention": "apes",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "992",
    "question": "What is the alma mater of the scientist who is known for Rational analysis ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Rational_analysis> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate1_mention": "known for",
    "predicate2_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate2_mention": "alma mater",
    "type_uri": "http://dbpedia.org/ontology/Scientist",
    "type_mention": "scientist",
    "entity1_uri": "http://dbpedia.org/resource/Rational_analysis",
    "entity1_mention": "rational analysis",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "995",
    "question": "Where is the headquarters of Metro Transit ( Minnesota ) ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Metro_Transit_(Minnesota)> <http://dbpedia.org/property/headquarters> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/headquarters",
    "predicate1_mention": "headquarters",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Metro_Transit_(Minnesota)",
    "entity1_mention": "Metro Transit ( Minnesota )",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1002",
    "question": "Who are the current members of Insects vs Robots?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Insects_vs_Robots> <http://dbpedia.org/property/currentMembers> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/currentMembers",
    "predicate1_mention": "current members",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Insects_vs_Robots",
    "entity1_mention": "insects vs robots",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1012",
    "question": "What magazine companies are of form Limited liability company?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Limited_liability_company>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/company",
    "predicate1_mention": "company",
    "predicate2_uri": "http://dbpedia.org/ontology/Magazine",
    "predicate2_mention": "magazine",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Limited_liability_company",
    "entity1_mention": "limited liability company",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1015",
    "question": "Which owner of the national Herald india is the leader of Kumta ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_National_Herald_(India)> <http://dbpedia.org/ontology/owner> ?uri. <http://dbpedia.org/resource/Kumta> <http://dbpedia.org/property/governmentType> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/owner",
    "predicate1_mention": "owner",
    "predicate2_uri": "http://dbpedia.org/property/governmentType",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_National_Herald_(India)",
    "entity1_mention": "national herald india",
    "entity2_uri": "http://dbpedia.org/resource/Kumta",
    "entity2_mention": "kumta"
},
{
    "id": "1016",
    "question": "Name the river whose mouth mountain is Southend-on-Sea and mouth place is Essex?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Southend-on-Sea> . ?uri <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/Essex>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/mouthMountain",
    "predicate1_mention": "mouth mountain",
    "predicate2_uri": "http://dbpedia.org/ontology/mouthPlace",
    "predicate2_mention": "mouth place",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "river",
    "entity1_uri": "http://dbpedia.org/resource/Southend-on-Sea",
    "entity1_mention": "southend-on-sea",
    "entity2_uri": "http://dbpedia.org/resource/Essex",
    "entity2_mention": "essex"
},
{
    "id": "1021",
    "question": "What rivers originate from Australian Alps?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Australian_Alps>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/sourcePlace",
    "predicate1_mention": "originate from",
    "predicate2_uri": "http://dbpedia.org/ontology/River",
    "predicate2_mention": "rivers",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Australian_Alps",
    "entity1_mention": "australian alps",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1028",
    "question": "In how many different places have people beatified by Pope Pius X died?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/beatifiedBy> <http://dbpedia.org/resource/Pope_Pius_X> . ?x <http://dbpedia.org/property/deathPlace> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/beatifiedBy",
    "predicate1_mention": "beatified by",
    "predicate2_uri": "http://dbpedia.org/property/deathPlace",
    "predicate2_mention": "died",
    "type_uri": "http://dbpedia.org/ontology/Place",
    "type_mention": "places",
    "entity1_uri": "http://dbpedia.org/resource/Pope_Pius_X",
    "entity1_mention": "pope pius",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1045",
    "question": "Who develops the computation platform of Microsoft Expression Encoder ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Microsoft_Expression_Encoder> <http://dbpedia.org/ontology/computingPlatform> ?x . ?x <http://dbpedia.org/ontology/developer> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/computingPlatform",
    "predicate1_mention": "computation platform",
    "predicate2_uri": "http://dbpedia.org/ontology/developer",
    "predicate2_mention": "develops",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Microsoft_Expression_Encoder",
    "entity1_mention": "Microsoft Expression Encoder",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1059",
    "question": "What are the track and field events of Jamiatu Muslim Mindanao?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao> <http://dbpedia.org/property/athletics> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/athletics",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao",
    "entity1_mention": "Jamiatu Muslim Mindanao",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1060",
    "question": "How many different songwriters have had their songs recorded in London?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/recordedIn> <http://dbpedia.org/resource/London> . ?x <http://dbpedia.org/ontology/writer> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/recordedIn",
    "predicate1_mention": "recorded in",
    "predicate2_uri": "http://dbpedia.org/ontology/writer",
    "predicate2_mention": "songwriters",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/London",
    "entity1_mention": "london",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1062",
    "question": "What are the common houses of US Congress and the Kansas Legislature?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_States_Congress> <http://dbpedia.org/property/houses> ?uri. <http://dbpedia.org/resource/Kansas_Legislature> <http://dbpedia.org/ontology/house> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/houses",
    "predicate1_mention": "houses",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_States_Congress",
    "entity1_mention": "congress",
    "entity2_uri": "http://dbpedia.org/resource/Kansas_Legislature",
    "entity2_mention": "kansas legislature"
},
{
    "id": "1063",
    "question": "Which administrative headquarters of the Pulau Ubin is also the resting place of the Nicole Lai",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pulau_Ubin> <http://dbpedia.org/ontology/capital> ?uri. <http://dbpedia.org/resource/Nicole_Lai> <http://dbpedia.org/ontology/restingPlace> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/capital",
    "predicate1_mention": "administrative",
    "predicate2_uri": "http://dbpedia.org/ontology/restingPlace",
    "predicate2_mention": "resting place",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Pulau_Ubin",
    "entity1_mention": "pulau ubin",
    "entity2_uri": "http://dbpedia.org/resource/Nicole_Lai",
    "entity2_mention": "nicole lai"
},
{
    "id": "1065",
    "question": "Which is the university of Vanderbilt Commodores ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vanderbilt_Commodores> <http://dbpedia.org/ontology/university> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/university",
    "predicate1_mention": "university",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Vanderbilt_Commodores",
    "entity1_mention": "vanderbilt commodores",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1066",
    "question": "Which athlete was the flag bearer for Switzerland in 2004 and 2008 summer Olympics ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Switzerland_at_the_2004_Summer_Olympics> <http://dbpedia.org/property/flagbearer> ?uri. <http://dbpedia.org/resource/Switzerland_at_the_2008_Summer_Olympics> <http://dbpedia.org/property/flagbearer> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/flagbearer",
    "predicate1_mention": "flag bearer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Switzerland_at_the_2004_Summer_Olympics",
    "entity1_mention": "Switzerland in 2004",
    "entity2_uri": "http://dbpedia.org/resource/Switzerland_at_the_2008_Summer_Olympics",
    "entity2_mention": "2008 summer Olympics"
},
{
    "id": "1069",
    "question": "List some pupils of National Science Medal winning scientists?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/National_Medal_of_Science> . ?x <http://dbpedia.org/property/doctoralStudents> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/prizes",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/doctoralStudents",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Scientist",
    "type_mention": "scientists",
    "entity1_uri": "http://dbpedia.org/resource/National_Medal_of_Science",
    "entity1_mention": "national science medal",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1076",
    "question": "What is the order of the Henry Clay and profession of the William Luther Hill?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Henry_Clay> <http://dbpedia.org/property/order> ?uri. <http://dbpedia.org/resource/William_Luther_Hill> <http://dbpedia.org/ontology/profession> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/order",
    "predicate1_mention": "order",
    "predicate2_uri": "http://dbpedia.org/ontology/profession",
    "predicate2_mention": "profession",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Henry_Clay",
    "entity1_mention": "henry clay",
    "entity2_uri": "http://dbpedia.org/resource/William_Luther_Hill",
    "entity2_mention": "william luther hill"
},
{
    "id": "1077",
    "question": "Name the co-founder of the record labels which have one of the founder as Chris DuBois ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Chris_DuBois> . ?x <http://dbpedia.org/property/founder> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RecordLabel>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/founder",
    "predicate1_mention": "founder",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/RecordLabel",
    "type_mention": "record labels",
    "entity1_uri": "http://dbpedia.org/resource/Chris_DuBois",
    "entity1_mention": "chris dubois",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1081",
    "question": "How many home stadium are there, of the soccer club seasons whose chairman is Merritt Paulson?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/chairman> <http://dbpedia.org/resource/Merritt_Paulson> . ?x <http://dbpedia.org/ontology/homeStadium> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/chairman",
    "predicate1_mention": "chairman",
    "predicate2_uri": "http://dbpedia.org/ontology/homeStadium",
    "predicate2_mention": "home stadium",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Merritt_Paulson",
    "entity1_mention": "merritt paulson",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1082",
    "question": "Name the scientist whose academic advisor is Karl Ewald Hasse and supervisor is Georg Meissner?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/Karl_Ewald_Hasse> . ?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Georg_Meissner>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/academicAdvisor",
    "predicate1_mention": "academic advisor",
    "predicate2_uri": "http://dbpedia.org/property/doctoralAdvisor",
    "predicate2_mention": "advisor",
    "type_uri": "http://dbpedia.org/ontology/Scientist",
    "type_mention": "scientist",
    "entity1_uri": "http://dbpedia.org/resource/Karl_Ewald_Hasse",
    "entity1_mention": "Karl Ewald Hasse",
    "entity2_uri": "http://dbpedia.org/resource/Georg_Meissner",
    "entity2_mention": "georg meissner"
},
{
    "id": "1086",
    "question": "Who owns the newspaper which was founded by Nehru?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Jawaharlal_Nehru> . ?x <http://dbpedia.org/ontology/owner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/founder",
    "predicate1_mention": "founded",
    "predicate2_uri": "http://dbpedia.org/ontology/owner",
    "predicate2_mention": "owns",
    "type_uri": "http://dbpedia.org/ontology/Newspaper",
    "type_mention": "newspaper",
    "entity1_uri": "http://dbpedia.org/resource/Jawaharlal_Nehru",
    "entity1_mention": "nehru",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1107",
    "question": "Count everyone who studied at an institute which are in Suburbs?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Suburb> . ?uri <http://dbpedia.org/property/education> ?x  . }",
    "sparql_id": "106",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/campus",
    "predicate1_mention": "institute",
    "predicate2_uri": "http://dbpedia.org/property/education",
    "predicate2_mention": "studied at",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Suburb",
    "entity1_mention": "Suburbs",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1118",
    "question": "Give me the total number of membership of the organisations which have memebers as  Azerbaijan?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/membership> <http://dbpedia.org/resource/Azerbaijan> . ?x <http://dbpedia.org/property/membership> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/membership",
    "predicate1_mention": "membership",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Azerbaijan",
    "entity1_mention": "azerbaijan",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1120",
    "question": "Which show's theme music was composed by Primus and voiced by Isaac Hayes?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Primus_(band)> . ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Isaac_Hayes>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/themeMusicComposer",
    "predicate1_mention": "theme music was composed by",
    "predicate2_uri": "http://dbpedia.org/property/voices",
    "predicate2_mention": "voiced",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "show's",
    "entity1_uri": "http://dbpedia.org/resource/Primus_(band)",
    "entity1_mention": "primus",
    "entity2_uri": "http://dbpedia.org/resource/Isaac_Hayes",
    "entity2_mention": "isaac hayes"
},
{
    "id": "1122",
    "question": "What are the reason served by Toll Global Express which is also the country of LPGA ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Toll_Global_Express> <http://dbpedia.org/ontology/regionServed> ?uri. <http://dbpedia.org/resource/LPGA> <http://dbpedia.org/ontology/country> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/regionServed",
    "predicate1_mention": "served",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "country",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Toll_Global_Express",
    "entity1_mention": "Toll Global Express",
    "entity2_uri": "http://dbpedia.org/resource/LPGA",
    "entity2_mention": "lpga"
},
{
    "id": "1136",
    "question": "For which games are Sam Loyd and Eric Schiller both famous?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sam_Loyd> <http://dbpedia.org/ontology/knownFor> ?uri. <http://dbpedia.org/resource/Eric_Schiller> <http://dbpedia.org/ontology/knownFor> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate1_mention": "famous",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sam_Loyd",
    "entity1_mention": "sam loyd",
    "entity2_uri": "http://dbpedia.org/resource/Eric_Schiller",
    "entity2_mention": "eric schiller"
},
{
    "id": "1139",
    "question": "Which president of United States had vice president as John Adams?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/vicePresident> <http://dbpedia.org/resource/John_Adams>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/vicePresident",
    "predicate1_mention": "vice president",
    "predicate2_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "predicate2_mention": "president",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/John_Adams",
    "entity1_mention": "john adams",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1141",
    "question": "Where was the successor of Hank Brown born?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hank_Brown> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate2_mention": "born",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hank_Brown",
    "entity1_mention": "hank brown",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1145",
    "question": "Name the partners of Kelly Brook?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kelly_Brook> <http://dbpedia.org/ontology/partner> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/partner",
    "predicate1_mention": "partners",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kelly_Brook",
    "entity1_mention": "kelly brook",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1147",
    "question": "Count everyone who lives in a place where Indian English is an official language ?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/Indian_English> . ?uri <http://dbpedia.org/ontology/residence> ?x  . }",
    "sparql_id": "106",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/officialLanguage",
    "predicate1_mention": "official language",
    "predicate2_uri": "http://dbpedia.org/ontology/residence",
    "predicate2_mention": "lives",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Indian_English",
    "entity1_mention": "indian english",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1148",
    "question": "Count the  total number of mammals whose phylum is Chordate and order (taxonomy) is Diprotodontia?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/phylum> <http://dbpedia.org/resource/Chordate> . ?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Diprotodontia> } ",
    "sparql_id": "108",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/phylum",
    "predicate1_mention": "phylum",
    "predicate2_uri": "http://dbpedia.org/ontology/order",
    "predicate2_mention": "order",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Chordate",
    "entity1_mention": "chordate",
    "entity2_uri": "http://dbpedia.org/resource/Diprotodontia",
    "entity2_mention": "diprotodontia"
},
{
    "id": "1150",
    "question": "Where does John A Danaher III work?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_A._Danaher_III> <http://dbpedia.org/property/office> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/office",
    "predicate1_mention": "work",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/John_A._Danaher_III",
    "entity1_mention": "John A Danaher III",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1154",
    "question": "Who is the person whose home town is Fairmount, Indiana?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Fairmount,_Indiana>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/hometown",
    "predicate1_mention": "home town",
    "predicate2_uri": "http://dbpedia.org/ontology/Person",
    "predicate2_mention": "person",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Fairmount,_Indiana",
    "entity1_mention": "fairmount, indiana",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1155",
    "question": "What disease led to the demise of Letitia MacTavish Hargrave and Martino Martini ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Letitia_MacTavish_Hargrave> <http://dbpedia.org/ontology/deathCause> ?uri. <http://dbpedia.org/resource/Martino_Martini> <http://dbpedia.org/ontology/deathCause> ?uri . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>}",
    "sparql_id": "315",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/deathCause",
    "predicate1_mention": "demise",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Disease",
    "type_mention": "disease",
    "entity1_uri": "http://dbpedia.org/resource/Letitia_MacTavish_Hargrave",
    "entity1_mention": "Letitia MacTavish Hargrave",
    "entity2_uri": "http://dbpedia.org/resource/Martino_Martini",
    "entity2_mention": "martino martini"
},
{
    "id": "1156",
    "question": "Is George Lucas the cinematographer of 6-18-67?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/6-18-67> <http://dbpedia.org/property/cinematography> <http://dbpedia.org/resource/George_Lucas> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/cinematography",
    "predicate1_mention": "cinematographer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/6-18-67",
    "entity1_mention": "6-18-67",
    "entity2_uri": "http://dbpedia.org/resource/George_Lucas",
    "entity2_mention": "george lucas"
},
{
    "id": "1160",
    "question": "In which country does the Auckland rugby union team play  ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Auckland_rugby_union_team> <http://dbpedia.org/ontology/league> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/league",
    "predicate1_mention": "team",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "country",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Auckland_rugby_union_team",
    "entity1_mention": "auckland rugby union team",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1166",
    "question": "What is the total number of participant in conflict of SFOR?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/SFOR> . ?x <http://dbpedia.org/ontology/battle> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/battles",
    "predicate1_mention": "conflict",
    "predicate2_uri": "http://dbpedia.org/ontology/battle",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/SFOR",
    "entity1_mention": "sfor",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1167",
    "question": "From how many different places have people gone to the Harward Medical School?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/Harvard_Medical_School> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/institution",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate2_mention": "places",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Harvard_Medical_School",
    "entity1_mention": "Harward Medical School",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1169",
    "question": "How many movies music composers are associated with Demis Roussos ?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Demis_Roussos> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/associatedActs",
    "predicate1_mention": "associated",
    "predicate2_uri": "http://dbpedia.org/ontology/musicComposer",
    "predicate2_mention": "music composers",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Demis_Roussos",
    "entity1_mention": "demis roussos",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1184",
    "question": "Who owns the schools which have a penguin as its mascot?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/mascot> <http://dbpedia.org/resource/Penguin> . ?x <http://dbpedia.org/ontology/authority> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/mascot",
    "predicate1_mention": "mascot",
    "predicate2_uri": "http://dbpedia.org/ontology/authority",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/School",
    "type_mention": "schools",
    "entity1_uri": "http://dbpedia.org/resource/Penguin",
    "entity1_mention": "penguin",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1191",
    "question": "In which of the parties that have governed over Rishikesh, does Govinda belong too?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Govinda_(actor)> <http://dbpedia.org/ontology/party> ?uri. <http://dbpedia.org/resource/Rishikesh> <http://dbpedia.org/ontology/leaderName> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/party",
    "predicate1_mention": "parties",
    "predicate2_uri": "http://dbpedia.org/ontology/leaderName",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Govinda_(actor)",
    "entity1_mention": "govinda",
    "entity2_uri": "http://dbpedia.org/resource/Rishikesh",
    "entity2_mention": "Rishikesh"
},
{
    "id": "1202",
    "question": "How many things are made by companies who produce mass media articles?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Mass_media> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }",
    "sparql_id": "106",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/products",
    "predicate1_mention": "produce",
    "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate2_mention": "made by",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mass_media",
    "entity1_mention": "mass media articles",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1203",
    "question": "Name the rivers who originate from Essex?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/Essex>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/mouthPlace",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/River",
    "predicate2_mention": "rivers",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Essex",
    "entity1_mention": "essex",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1205",
    "question": "Name the fictional character whose voice's animator is Hardie Gramatky?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/animator> <http://dbpedia.org/resource/Hardie_Gramatky> . ?uri <http://dbpedia.org/ontology/voice> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/animator",
    "predicate1_mention": "animator",
    "predicate2_uri": "http://dbpedia.org/ontology/voice",
    "predicate2_mention": "voice's",
    "type_uri": "http://dbpedia.org/ontology/FictionalCharacter",
    "type_mention": "fictional character",
    "entity1_uri": "http://dbpedia.org/resource/Hardie_Gramatky",
    "entity1_mention": "Hardie Gramatky",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1214",
    "question": "Which bacteria's taxonomic class is Bacilli?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/class> <http://dbpedia.org/resource/Bacilli>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bacteria>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/class",
    "predicate1_mention": "class",
    "predicate2_uri": "http://dbpedia.org/ontology/Bacteria",
    "predicate2_mention": "bacteria's",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bacilli",
    "entity1_mention": "bacilli",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1217",
    "question": "Name the fictional character whose relative are Duck family and Clan McDuck?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Duck_family_(Disney)> . ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Clan_McDuck>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/relative",
    "predicate1_mention": "relative",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/FictionalCharacter",
    "type_mention": "fictional character",
    "entity1_uri": "http://dbpedia.org/resource/Duck_family_(Disney)",
    "entity1_mention": "duck family",
    "entity2_uri": "http://dbpedia.org/resource/Clan_McDuck",
    "entity2_mention": "clan mcduck"
},
{
    "id": "1218",
    "question": "List the movies whose cast member were born in Scotland.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Scotland> . ?uri <http://dbpedia.org/ontology/starring> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate1_mention": "born in",
    "predicate2_uri": "http://dbpedia.org/ontology/starring",
    "predicate2_mention": "cast member",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Scotland",
    "entity1_mention": "Scotland",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1243",
    "question": "Where did the 2015 MLS All-Star Game take place?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2015_MLS_All-Star_Game> <http://dbpedia.org/property/city> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/city",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/2015_MLS_All-Star_Game",
    "entity1_mention": "2015 MLS All-Star Game",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1248",
    "question": "Name the directors of Lennon Legend: The Very Best of John Lennon ( DVD ) ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lennon_Legend:_The_Very_Best_of_John_Lennon_(DVD)> <http://dbpedia.org/ontology/director> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/director",
    "predicate1_mention": "directors",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lennon_Legend:_The_Very_Best_of_John_Lennon_(DVD)",
    "entity1_mention": "Lennon Legend: The Very Best of John Lennon ( DVD )",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1250",
    "question": "For how many other teams have the members of Atlant Moscow Oblast played?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/playedFor> <http://dbpedia.org/resource/Atlant_Moscow_Oblast> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/playedFor",
    "predicate1_mention": "played",
    "predicate2_uri": "http://dbpedia.org/ontology/formerTeam",
    "predicate2_mention": "teams",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Atlant_Moscow_Oblast",
    "entity1_mention": "Atlant Moscow Oblast",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1252",
    "question": "Janaka Thissakuttiarachchi follows what religion, which once employed Atisa Srijnana too?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Janaka_Thissakuttiarachchi> <http://dbpedia.org/property/religion> ?uri. <http://dbpedia.org/resource/Ati\u015ba> <http://dbpedia.org/ontology/occupation> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/religion",
    "predicate1_mention": "religion,",
    "predicate2_uri": "http://dbpedia.org/ontology/occupation",
    "predicate2_mention": "employed",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Janaka_Thissakuttiarachchi",
    "entity1_mention": "Janaka Thissakuttiarachchi",
    "entity2_uri": "http://dbpedia.org/resource/Ati\u015ba",
    "entity2_mention": "Atisa Srijnana"
},
{
    "id": "1254",
    "question": "List the served region of the organisations of Trade association.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Trade_association> . ?x <http://dbpedia.org/ontology/regionServed> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/type",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/regionServed",
    "predicate2_mention": "served region",
    "type_uri": "http://dbpedia.org/ontology/Organisation",
    "type_mention": "organisations",
    "entity1_uri": "http://dbpedia.org/resource/Trade_association",
    "entity1_mention": "Trade association",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1256",
    "question": "Who is the owner of the South end ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_South_End> <http://dbpedia.org/property/owners> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/owners",
    "predicate1_mention": "owner",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_South_End",
    "entity1_mention": "the South end",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1267",
    "question": "What currencies have been prevalent in the country whose national anthem is La Marseillaise?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/anthem> <http://dbpedia.org/resource/La_Marseillaise> . ?x <http://dbpedia.org/ontology/currency> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/anthem",
    "predicate1_mention": "anthem",
    "predicate2_uri": "http://dbpedia.org/ontology/currency",
    "predicate2_mention": "currencies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/La_Marseillaise",
    "entity1_mention": "la marseillaise",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1275",
    "question": "Which venue of indy PopCon is also the death place of Louis Le Cocqq ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Indy_PopCon> <http://dbpedia.org/property/venue> ?uri. <http://dbpedia.org/resource/Louis_LeCocq> <http://dbpedia.org/property/placeOfDeath> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/venue",
    "predicate1_mention": "venue",
    "predicate2_uri": "http://dbpedia.org/property/placeOfDeath",
    "predicate2_mention": "death place",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Indy_PopCon",
    "entity1_mention": "indy popcon",
    "entity2_uri": "http://dbpedia.org/resource/Louis_LeCocq",
    "entity2_mention": "Louis Le Cocqq"
},
{
    "id": "1276",
    "question": "What state was Cyrus Mann born in, and has the famous Downriver ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Downriver> <http://dbpedia.org/ontology/state> ?uri. <http://dbpedia.org/resource/Cyrus_Mann> <http://dbpedia.org/property/birthPlace> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/state",
    "predicate1_mention": "state",
    "predicate2_uri": "http://dbpedia.org/property/birthPlace",
    "predicate2_mention": "born in",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Downriver",
    "entity1_mention": "downriver",
    "entity2_uri": "http://dbpedia.org/resource/Cyrus_Mann",
    "entity2_mention": "cyrus mann"
},
{
    "id": "1282",
    "question": "Count the affiliations of International Union of Anarchists?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/International_Union_of_Anarchists> <http://dbpedia.org/property/affiliation> ?uri  . }",
    "sparql_id": "102",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/affiliation",
    "predicate1_mention": "affiliations",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/International_Union_of_Anarchists",
    "entity1_mention": "International Union of Anarchists",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1291",
    "question": "What territory of Sino French War was the battle of Raoul Magrin-Vernerey fought ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sino-French_War> <http://dbpedia.org/ontology/territory> ?uri. <http://dbpedia.org/resource/Raoul_Magrin-Vernerey> <http://dbpedia.org/property/battles> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/territory",
    "predicate1_mention": "territory",
    "predicate2_uri": "http://dbpedia.org/property/battles",
    "predicate2_mention": "battle",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sino-French_War",
    "entity1_mention": "Sino French War",
    "entity2_uri": "http://dbpedia.org/resource/Raoul_Magrin-Vernerey",
    "entity2_mention": "Raoul Magrin-Vernerey"
},
{
    "id": "1296",
    "question": "The players born in Bellaire, Ohio have played for which team?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bellaire,_Ohio> . ?x <http://dbpedia.org/ontology/team> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate1_mention": "born in",
    "predicate2_uri": "http://dbpedia.org/ontology/team",
    "predicate2_mention": "team",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bellaire,_Ohio",
    "entity1_mention": "bellaire, ohio",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1300",
    "question": "Where did the graduates of Memphis, Tenessee continue their education?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/highschool> <http://dbpedia.org/resource/Memphis,_Tennessee> . ?x <http://dbpedia.org/ontology/school> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/highschool",
    "predicate1_mention": "graduates",
    "predicate2_uri": "http://dbpedia.org/ontology/school",
    "predicate2_mention": "education",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Memphis,_Tennessee",
    "entity1_mention": "Memphis, Tenessee",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1306",
    "question": "What is the Location of the Peetz Table Wind Energy Center which is also the state of Ben Nighthorse Campbell ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Peetz_Table_Wind_Energy_Center> <http://dbpedia.org/property/location> ?uri. <http://dbpedia.org/resource/Ben_Nighthorse_Campbell> <http://dbpedia.org/property/state> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/location",
    "predicate1_mention": "location",
    "predicate2_uri": "http://dbpedia.org/property/state",
    "predicate2_mention": "state",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Peetz_Table_Wind_Energy_Center",
    "entity1_mention": "Peetz Table Wind Energy Center",
    "entity2_uri": "http://dbpedia.org/resource/Ben_Nighthorse_Campbell",
    "entity2_mention": "Ben Nighthorse Campbell"
},
{
    "id": "1312",
    "question": "What are some cities which have a Ferris wheel?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/buildingType> <http://dbpedia.org/resource/Ferris_wheel> . ?x <http://dbpedia.org/property/locationTown> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/buildingType",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/locationTown",
    "predicate2_mention": "cities",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ferris_wheel",
    "entity1_mention": "ferris wheel",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1314",
    "question": "How many other home stadium are there of the soccer club whose home stadium is Luzhniki Stadium ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/homeStadium> <http://dbpedia.org/resource/Luzhniki_Stadium> . ?x <http://dbpedia.org/ontology/homeStadium> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/homeStadium",
    "predicate1_mention": "home stadium",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Luzhniki_Stadium",
    "entity1_mention": "luzhniki stadium",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1318",
    "question": "In all the places with a stagecoach, where is a Peetz Table Wind Energy Center located too?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Stagecoach,_Colorado> <http://dbpedia.org/property/location> ?uri. <http://dbpedia.org/resource/Peetz_Table_Wind_Energy_Center> <http://dbpedia.org/property/location> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/location",
    "predicate1_mention": "located",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Stagecoach,_Colorado",
    "entity1_mention": "stagecoach,",
    "entity2_uri": "http://dbpedia.org/resource/Peetz_Table_Wind_Energy_Center",
    "entity2_mention": "Peetz Table Wind Energy Center"
},
{
    "id": "1324",
    "question": "What are some software which are written in languages that are run on Unix like OS?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/operatingSystem> <http://dbpedia.org/resource/Unix-like> . ?uri <http://dbpedia.org/property/programmingLanguage> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/operatingSystem",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/programmingLanguage",
    "predicate2_mention": "languages",
    "type_uri": "http://dbpedia.org/ontology/Software",
    "type_mention": "software",
    "entity1_uri": "http://dbpedia.org/resource/Unix-like",
    "entity1_mention": "unix like os",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1329",
    "question": "List the agencies located someplace lead by Alex Chalk.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/leaderName> <http://dbpedia.org/resource/Alex_Chalk> . ?uri <http://dbpedia.org/ontology/location> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/leaderName",
    "predicate1_mention": "lead by",
    "predicate2_uri": "http://dbpedia.org/ontology/location",
    "predicate2_mention": "located",
    "type_uri": "http://dbpedia.org/ontology/GovernmentAgency",
    "type_mention": "agencies",
    "entity1_uri": "http://dbpedia.org/resource/Alex_Chalk",
    "entity1_mention": "Alex Chalk",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1331",
    "question": "Alexander Magleby, a rugby player is alma mater to which university?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alexander_Magleby> <http://dbpedia.org/property/university> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/university",
    "predicate1_mention": "university",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Alexander_Magleby",
    "entity1_mention": "Alexander Magleby",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1332",
    "question": "Through which cities do the rivers starting at the Montauk State Park flow?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Montauk_State_Park> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/sourcePlace",
    "predicate1_mention": "state",
    "predicate2_uri": "http://dbpedia.org/ontology/city",
    "predicate2_mention": "cities",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "rivers",
    "entity1_uri": "http://dbpedia.org/resource/Montauk_State_Park",
    "entity1_mention": "montauk state park",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1342",
    "question": "Name the common alma mater of the Henry Morton Dexter and Jack McGregor",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Henry_Morton_Dexter> <http://dbpedia.org/ontology/education> ?uri. <http://dbpedia.org/resource/Jack_McGregor> <http://dbpedia.org/ontology/education> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/education",
    "predicate1_mention": "alma mater",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Henry_Morton_Dexter",
    "entity1_mention": "henry morton dexter",
    "entity2_uri": "http://dbpedia.org/resource/Jack_McGregor",
    "entity2_mention": "jack mcgregor"
},
{
    "id": "1348",
    "question": "Name some basketball players who  have played for chicago bulls?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Chicago_Bulls>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/team",
    "predicate1_mention": "played for",
    "predicate2_uri": "http://dbpedia.org/ontology/BasketballPlayer",
    "predicate2_mention": "basketball players",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Chicago_Bulls",
    "entity1_mention": "chicago bulls",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1353",
    "question": "Name the river with source country in Zambia and source region as North-Western Province, Zambia?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceCountry> <http://dbpedia.org/resource/Zambia> . ?uri <http://dbpedia.org/ontology/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/sourceCountry",
    "predicate1_mention": "source country",
    "predicate2_uri": "http://dbpedia.org/ontology/sourceRegion",
    "predicate2_mention": "source region",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "river",
    "entity1_uri": "http://dbpedia.org/resource/Zambia",
    "entity1_mention": "zambia",
    "entity2_uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia",
    "entity2_mention": "north-western province, zambia"
},
{
    "id": "1358",
    "question": "List the products of the company which published Tweenies: Game Time.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tweenies:_Game_Time> <http://dbpedia.org/property/publisher> ?x . ?x <http://dbpedia.org/property/products> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/publisher",
    "predicate1_mention": "published",
    "predicate2_uri": "http://dbpedia.org/property/products",
    "predicate2_mention": "products",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tweenies:_Game_Time",
    "entity1_mention": "tweenies: game time",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1363",
    "question": "Under which president did the predecessor of Simon Ferro work?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Simon_Ferro> . ?x <http://dbpedia.org/ontology/president> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/successor",
    "predicate1_mention": "predecessor",
    "predicate2_uri": "http://dbpedia.org/ontology/president",
    "predicate2_mention": "president",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Simon_Ferro",
    "entity1_mention": "simon ferro",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1365",
    "question": "What are some team members of the team based in Camp Nou?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/homeStadium> <http://dbpedia.org/resource/Camp_Nou> . ?x <http://dbpedia.org/property/name> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/homeStadium",
    "predicate1_mention": "team",
    "predicate2_uri": "http://dbpedia.org/property/name",
    "predicate2_mention": "team members",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Camp_Nou",
    "entity1_mention": "camp nou",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1369",
    "question": "Is Cologny a neighbouring city of Geneva?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Geneva> <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Cologny> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/neighboringMunicipalities",
    "predicate1_mention": "neighbouring city",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Geneva",
    "entity1_mention": "geneva",
    "entity2_uri": "http://dbpedia.org/resource/Cologny",
    "entity2_mention": "cologny"
},
{
    "id": "1383",
    "question": "How many pole drivers have been there in grand prixes where first driver was Damon Hill?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/firstDriver> <http://dbpedia.org/resource/Damon_Hill> . ?x <http://dbpedia.org/ontology/poleDriver> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FormulaOneRacer>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/firstDriver",
    "predicate1_mention": "first driver",
    "predicate2_uri": "http://dbpedia.org/ontology/poleDriver",
    "predicate2_mention": "pole drivers",
    "type_uri": "http://dbpedia.org/ontology/FormulaOneRacer",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Damon_Hill",
    "entity1_mention": "damon hill",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1384",
    "question": "In which city was The Triple Door ( The Courage album ) performed live?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Live_at_The_Triple_Door_(The_Courage_album)> <http://dbpedia.org/property/recorded> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/recorded",
    "predicate1_mention": "performed",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Live_at_The_Triple_Door_(The_Courage_album)",
    "entity1_mention": "The Triple Door ( The Courage album )",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1388",
    "question": "What is manufactured by a company headed by Kazuo Hirai?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Kazuo_Hirai> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/keyPeople",
    "predicate1_mention": "headed by",
    "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate2_mention": "manufactured",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kazuo_Hirai",
    "entity1_mention": "kazuo hirai",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1394",
    "question": "Who created the Women in the Garden and also the L'Enfant a la tasse ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Women_in_the_Garden> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/L'Enfant_a_la_tasse> <http://dbpedia.org/property/artist> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/artist",
    "predicate1_mention": "created",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Women_in_the_Garden",
    "entity1_mention": "Women in the Garden",
    "entity2_uri": "http://dbpedia.org/resource/L'Enfant_a_la_tasse",
    "entity2_mention": "L'Enfant a la tasse"
},
{
    "id": "1396",
    "question": "Who is the maker of the engine of Ford F-Series first generation ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_F-Series_first_generation> <http://dbpedia.org/property/engine> ?x . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/engine",
    "predicate1_mention": "engine",
    "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate2_mention": "maker",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ford_F-Series_first_generation",
    "entity1_mention": "Ford F-Series first generation",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1409",
    "question": "What are the television shows whose starting music is composed by Ron Grainer?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Ron_Grainer>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/themeMusicComposer",
    "predicate1_mention": "composed by",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "television shows",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ron_Grainer",
    "entity1_mention": "ron grainer",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1445",
    "question": "Which team has had both Martin prochzka and garry unger as its players ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Martin_Proch\u00e1zka> <http://dbpedia.org/ontology/formerTeam> ?uri. <http://dbpedia.org/resource/Garry_Unger> <http://dbpedia.org/ontology/formerTeam> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/formerTeam",
    "predicate1_mention": "team",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Martin_Proch\u00e1zka",
    "entity1_mention": "Martin prochzka",
    "entity2_uri": "http://dbpedia.org/resource/Garry_Unger",
    "entity2_mention": "garry unger"
},
{
    "id": "1460",
    "question": "Who all have developed softwares for Unix Like OSes?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/operatingSystem> <http://dbpedia.org/resource/Unix-like> . ?x <http://dbpedia.org/ontology/developer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/operatingSystem",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/developer",
    "predicate2_mention": "developed",
    "type_uri": "http://dbpedia.org/ontology/Software",
    "type_mention": "softwares",
    "entity1_uri": "http://dbpedia.org/resource/Unix-like",
    "entity1_mention": "Unix Like OSes",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1470",
    "question": "Count the number of battles fought by the military person involved in Morocco ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Morocco> . ?x <http://dbpedia.org/property/battles> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/battles",
    "predicate1_mention": "battles",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Morocco",
    "entity1_mention": "morocco",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1478",
    "question": "Where did the plays written by Robert Schenkkan take place?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Robert_Schenkkan> . ?x <http://dbpedia.org/property/place> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Play>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/writer",
    "predicate1_mention": "written by",
    "predicate2_uri": "http://dbpedia.org/property/place",
    "predicate2_mention": "take place",
    "type_uri": "http://dbpedia.org/ontology/Play",
    "type_mention": "plays",
    "entity1_uri": "http://dbpedia.org/resource/Robert_Schenkkan",
    "entity1_mention": "robert schenkkan",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1484",
    "question": "List the television shows whose network's sister names is N-tv.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/sisterNames> <http://dbpedia.org/resource/N-tv> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/sisterNames",
    "predicate1_mention": "sister names",
    "predicate2_uri": "http://dbpedia.org/property/network",
    "predicate2_mention": "network's",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television shows",
    "entity1_uri": "http://dbpedia.org/resource/N-tv",
    "entity1_mention": "N-tv",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1492",
    "question": "What is the river whose mouth locations are Arctic Ocean and Laptev Sea?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Arctic_Ocean> . ?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Laptev_Sea> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/mouthLocation",
    "predicate1_mention": "mouth locations",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "river",
    "entity1_uri": "http://dbpedia.org/resource/Arctic_Ocean",
    "entity1_mention": "arctic ocean",
    "entity2_uri": "http://dbpedia.org/resource/Laptev_Sea",
    "entity2_mention": "laptev sea"
},
{
    "id": "1493",
    "question": "Was Lucrezia Tornabuoni the mother of Lorenzo de' Medici?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Lorenzo_de'_Medici> <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Lucrezia_Tornabuoni> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/mother",
    "predicate1_mention": "mother",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lorenzo_de'_Medici",
    "entity1_mention": "Lorenzo de' Medici",
    "entity2_uri": "http://dbpedia.org/resource/Lucrezia_Tornabuoni",
    "entity2_mention": "Lucrezia Tornabuoni"
},
{
    "id": "1495",
    "question": "What is the combatant of the Northwest Indian War and also the ethnic group of the Linda Hogan ",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Northwest_Indian_War> <http://dbpedia.org/property/combatant> ?uri. <http://dbpedia.org/resource/Linda_Hogan> <http://dbpedia.org/property/ethnicity> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/combatant",
    "predicate1_mention": "combatant",
    "predicate2_uri": "http://dbpedia.org/property/ethnicity",
    "predicate2_mention": "ethnic",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Northwest_Indian_War",
    "entity1_mention": "northwest indian war",
    "entity2_uri": "http://dbpedia.org/resource/Linda_Hogan",
    "entity2_mention": "linda hogan"
},
{
    "id": "1500",
    "question": "Name the movie with narrator as Trevor Peacock and music composer  as Christophe Beck?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/narrator> <http://dbpedia.org/resource/Trevor_Peacock> . ?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Christophe_Beck>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/narrator",
    "predicate1_mention": "narrator",
    "predicate2_uri": "http://dbpedia.org/property/music",
    "predicate2_mention": "music",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movie",
    "entity1_uri": "http://dbpedia.org/resource/Trevor_Peacock",
    "entity1_mention": "trevor peacock",
    "entity2_uri": "http://dbpedia.org/resource/Christophe_Beck",
    "entity2_mention": "christophe beck"
},
{
    "id": "1516",
    "question": "Did Phillippe Cabot go to Columbia for studying?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Phillippe_Cabot> <http://dbpedia.org/ontology/university> <http://dbpedia.org/resource/Columbia_University> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/university",
    "predicate1_mention": "studying",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Phillippe_Cabot",
    "entity1_mention": "phillippe cabot",
    "entity2_uri": "http://dbpedia.org/resource/Columbia_University",
    "entity2_mention": "columbia"
},
{
    "id": "1527",
    "question": "List the other nicknames of city which has one of the nickname as City of Angels ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/City_of_Angels> . ?x <http://dbpedia.org/property/nickname> ?uri  . }",
    "sparql_id": "11",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/nickname",
    "predicate1_mention": "nicknames",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/City_of_Angels",
    "entity1_mention": "City of Angels",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1528",
    "question": "Which models were featured in Playboy Playmates 1954?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/succeeded> <http://dbpedia.org/resource/List_of_Playboy_Playmates_of_1954>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PlayboyPlaymate>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/succeeded",
    "predicate1_mention": "featured in",
    "predicate2_uri": "http://dbpedia.org/ontology/PlayboyPlaymate",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/List_of_Playboy_Playmates_of_1954",
    "entity1_mention": "Playboy Playmates 1954",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1529",
    "question": "Where is the sister station of Al Arabiya 99 located?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/sisterStations> <http://dbpedia.org/resource/Al_Arabiya_99> . ?x <http://dbpedia.org/property/location> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/sisterStations",
    "predicate1_mention": "sister station",
    "predicate2_uri": "http://dbpedia.org/property/location",
    "predicate2_mention": "located",
    "type_uri": "http://dbpedia.org/ontology/RadioStation",
    "type_mention": "station",
    "entity1_uri": "http://dbpedia.org/resource/Al_Arabiya_99",
    "entity1_mention": "Al Arabiya 99",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1531",
    "question": "What is the baseball team whose manager is Chip Hale?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/manager> <http://dbpedia.org/resource/Chip_Hale>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballTeam>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/manager",
    "predicate1_mention": "manager",
    "predicate2_uri": "http://dbpedia.org/ontology/BaseballTeam",
    "predicate2_mention": "baseball team",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Chip_Hale",
    "entity1_mention": "chip hale",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1540",
    "question": "Name the movie which has music composed by Elliot Goldenthal and screenplay by Akiva Goldsman ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Elliot_Goldenthal> . ?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Akiva_Goldsman>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/music",
    "predicate1_mention": "music",
    "predicate2_uri": "http://dbpedia.org/property/screenplay",
    "predicate2_mention": "screenplay",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movie",
    "entity1_uri": "http://dbpedia.org/resource/Elliot_Goldenthal",
    "entity1_mention": "Elliot Goldenthal",
    "entity2_uri": "http://dbpedia.org/resource/Akiva_Goldsman",
    "entity2_mention": "Akiva Goldsman"
},
{
    "id": "1542",
    "question": "What awards are won by the screenwriter of Lucky You?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lucky_You_(film)> <http://dbpedia.org/property/screenplay> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/screenplay",
    "predicate1_mention": "screenwriter",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lucky_You_(film)",
    "entity1_mention": "lucky you",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1568",
    "question": "Which birthplace of Liliya Lobanova is also the location of the Snake Island ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Liliya_Lobanova> <http://dbpedia.org/property/birthplace> ?uri. <http://dbpedia.org/resource/Snake_Island_(Black_Sea)> <http://dbpedia.org/property/locationCountry> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/birthplace",
    "predicate1_mention": "birthplace",
    "predicate2_uri": "http://dbpedia.org/property/locationCountry",
    "predicate2_mention": "location",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Liliya_Lobanova",
    "entity1_mention": "liliya lobanova",
    "entity2_uri": "http://dbpedia.org/resource/Snake_Island_(Black_Sea)",
    "entity2_mention": "snake island"
},
{
    "id": "1570",
    "question": "What is the nationality of Aishath Saffa ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Aishath_Saffa> <http://dbpedia.org/property/nationality> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/nationality",
    "predicate1_mention": "nationality",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Aishath_Saffa",
    "entity1_mention": "aishath saffa",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1571",
    "question": "Who were involved in the wars where Jonathan Haskell battled?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jonathan_Haskell> <http://dbpedia.org/property/battles> ?x . ?x <http://dbpedia.org/property/combatant> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/battles",
    "predicate1_mention": "battled",
    "predicate2_uri": "http://dbpedia.org/property/combatant",
    "predicate2_mention": "wars",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jonathan_Haskell",
    "entity1_mention": "jonathan haskell",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1573",
    "question": "What is the currency of Kerguelen Islands ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kerguelen_Islands> <http://dbpedia.org/ontology/currency> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/currency",
    "predicate1_mention": "currency",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kerguelen_Islands",
    "entity1_mention": "kerguelen islands",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1574",
    "question": "Does Jevan Snead play as Quarterback?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jevan_Snead> <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Quarterback> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/position",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jevan_Snead",
    "entity1_mention": "jevan snead",
    "entity2_uri": "http://dbpedia.org/resource/Quarterback",
    "entity2_mention": "quarterback"
},
{
    "id": "1581",
    "question": "Was Queen Latifah in the U.N.I.T.Y. group?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/U.N.I.T.Y.> <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Queen_Latifah> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/musicalArtist",
    "predicate1_mention": "latifah",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/U.N.I.T.Y.",
    "entity1_mention": "u.n.i.t.y.",
    "entity2_uri": "http://dbpedia.org/resource/Queen_Latifah",
    "entity2_mention": "queen latifah"
},
{
    "id": "1585",
    "question": "Which office holder owes its allegiance to a state whose capital town is Jamestown, Virginia?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Jamestown,_Virginia> . ?uri <http://dbpedia.org/property/allegiance> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/capital",
    "predicate1_mention": "capital",
    "predicate2_uri": "http://dbpedia.org/property/allegiance",
    "predicate2_mention": "allegiance",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "office holder",
    "entity1_uri": "http://dbpedia.org/resource/Jamestown,_Virginia",
    "entity1_mention": "jamestown, virginia",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1597",
    "question": "Whose leaders are Willem-Alexander and Fredis Refunjol?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Willem-Alexander_of_the_Netherlands> . ?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Fredis_Refunjol> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/leader",
    "predicate1_mention": "leaders",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Willem-Alexander_of_the_Netherlands",
    "entity1_mention": "willem-alexander",
    "entity2_uri": "http://dbpedia.org/resource/Fredis_Refunjol",
    "entity2_mention": "fredis refunjol"
},
{
    "id": "1603",
    "question": "What are the airlines whose hub airport is operated by the Los Angeles World Airports?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/Los_Angeles_World_Airports> . ?uri <http://dbpedia.org/ontology/hubAirport> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/operator",
    "predicate1_mention": "operated",
    "predicate2_uri": "http://dbpedia.org/ontology/hubAirport",
    "predicate2_mention": "hub airport",
    "type_uri": "http://dbpedia.org/ontology/Airline",
    "type_mention": "airlines",
    "entity1_uri": "http://dbpedia.org/resource/Los_Angeles_World_Airports",
    "entity1_mention": "Los Angeles World Airports",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1604",
    "question": "What is used as money for French Southern and Antarctic Lands is also the  product of the Karafarin Bank ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/French_Southern_and_Antarctic_Lands> <http://dbpedia.org/ontology/currency> ?uri. <http://dbpedia.org/resource/Karafarin_Bank> <http://dbpedia.org/ontology/product> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/currency",
    "predicate1_mention": "money",
    "predicate2_uri": "http://dbpedia.org/ontology/product",
    "predicate2_mention": "product",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/French_Southern_and_Antarctic_Lands",
    "entity1_mention": "French Southern and Antarctic Lands",
    "entity2_uri": "http://dbpedia.org/resource/Karafarin_Bank",
    "entity2_mention": "karafarin bank"
},
{
    "id": "1605",
    "question": "Which office holder's resting place is in  Palo Alto, California and was succeeded by Adrian A. Basora ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Palo_Alto,_California> . ?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Adrian_A._Basora>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/restingPlace",
    "predicate1_mention": "resting place",
    "predicate2_uri": "http://dbpedia.org/property/successor",
    "predicate2_mention": "succeeded",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "office holder's",
    "entity1_uri": "http://dbpedia.org/resource/Palo_Alto,_California",
    "entity1_mention": "Palo Alto, California",
    "entity2_uri": "http://dbpedia.org/resource/Adrian_A._Basora",
    "entity2_mention": "Adrian A. Basora"
},
{
    "id": "1619",
    "question": "How many bands collaborated with artists who signed up with EMI?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/EMI> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/recordLabel",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
    "predicate2_mention": "artists",
    "type_uri": "http://dbpedia.org/ontology/Band",
    "type_mention": "bands",
    "entity1_uri": "http://dbpedia.org/resource/EMI",
    "entity1_mention": "emi",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1625",
    "question": "How many record labels publish works of Jazz fusion?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Jazz_fusion> . ?x <http://dbpedia.org/ontology/recordLabel> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/genre",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/recordLabel",
    "predicate2_mention": "record labels",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jazz_fusion",
    "entity1_mention": "Jazz fusion",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1631",
    "question": "What is the largest city of Pulau Ubin ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pulau_Ubin> <http://dbpedia.org/ontology/largestCity> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/largestCity",
    "predicate1_mention": "largest city",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Pulau_Ubin",
    "entity1_mention": "pulau ubin",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1633",
    "question": "Which key person of the Elders is also the president of united World College ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Elders_(organization)> <http://dbpedia.org/property/keyPeople> ?uri. <http://dbpedia.org/resource/United_World_Colleges> <http://dbpedia.org/ontology/president> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/keyPeople",
    "predicate1_mention": "key person",
    "predicate2_uri": "http://dbpedia.org/ontology/president",
    "predicate2_mention": "president",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Elders_(organization)",
    "entity1_mention": "elders",
    "entity2_uri": "http://dbpedia.org/resource/United_World_Colleges",
    "entity2_mention": "united World College"
},
{
    "id": "1635",
    "question": "Name the television show directed by Simon Fuller and judged by Jennifier Lopez ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller> . ?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Jennifer_Lopez>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/creator",
    "predicate1_mention": "directed",
    "predicate2_uri": "http://dbpedia.org/property/judges",
    "predicate2_mention": "judged",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television show",
    "entity1_uri": "http://dbpedia.org/resource/Simon_Fuller",
    "entity1_mention": "simon fuller",
    "entity2_uri": "http://dbpedia.org/resource/Jennifer_Lopez",
    "entity2_mention": "Jennifier Lopez"
},
{
    "id": "1636",
    "question": "Give me some shows owned by BBC one and BBC hd?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_One> . ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_HD> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/network",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/network",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "shows",
    "entity1_uri": "http://dbpedia.org/resource/BBC_One",
    "entity1_mention": "bbc one",
    "entity2_uri": "http://dbpedia.org/resource/BBC_HD",
    "entity2_mention": "bbc hd"
},
{
    "id": "1639",
    "question": "List out the people who are related to the relatives of Jared Kushner ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jared_Kushner> <http://dbpedia.org/ontology/relation> ?x . ?x <http://dbpedia.org/ontology/relation> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/relation",
    "predicate1_mention": "relatives",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jared_Kushner",
    "entity1_mention": "jared kushner",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1645",
    "question": "Which license provider of MSX basic is also the designer of Language Integrated Query ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Language_Integrated_Query> <http://dbpedia.org/ontology/designer> ?uri. <http://dbpedia.org/resource/MSX_BASIC> <http://dbpedia.org/property/license> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/designer",
    "predicate1_mention": "designer",
    "predicate2_uri": "http://dbpedia.org/property/license",
    "predicate2_mention": "license",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Language_Integrated_Query",
    "entity1_mention": "Language Integrated Query",
    "entity2_uri": "http://dbpedia.org/resource/MSX_BASIC",
    "entity2_mention": "msx basic"
},
{
    "id": "1646",
    "question": "Who was the United States president who also served as a governor of Indiana Territory?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Indiana_Territory> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/branch",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Indiana_Territory",
    "entity1_mention": "indiana territory",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1648",
    "question": "What are the awards received by spouse of Ellen Lundstrom?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ellen_Lundstr\u00f6m> . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/spouse",
    "predicate1_mention": "spouse",
    "predicate2_uri": "http://dbpedia.org/property/awards",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ellen_Lundstr\u00f6m",
    "entity1_mention": "Ellen Lundstrom",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1663",
    "question": "Which common prime minister did Graham Richardson and Bon McMullan serve ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Graham_Richardson> <http://dbpedia.org/ontology/primeMinister> ?uri. <http://dbpedia.org/resource/Bob_McMullan> <http://dbpedia.org/ontology/primeMinister> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/primeMinister",
    "predicate1_mention": "prime minister",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Graham_Richardson",
    "entity1_mention": "graham richardson",
    "entity2_uri": "http://dbpedia.org/resource/Bob_McMullan",
    "entity2_mention": "Bon mcmullan"
},
{
    "id": "1664",
    "question": "Name the alma mater of Ernest de Saisset ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ernest_de_Saisset> <http://dbpedia.org/ontology/almaMater> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate1_mention": "alma mater",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ernest_de_Saisset",
    "entity1_mention": "Ernest de Saisset",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1668",
    "question": "What are some party leaders of the parties which have had a seat in Berlin?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Berlin> . ?x <http://dbpedia.org/ontology/leader> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/headquarter",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/leader",
    "predicate2_mention": "leaders",
    "type_uri": "http://dbpedia.org/ontology/PoliticalParty",
    "type_mention": "party",
    "entity1_uri": "http://dbpedia.org/resource/Berlin",
    "entity1_mention": "berlin",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1673",
    "question": "What is the city of the Maine School of Science and Mathematics is also the resting place of Charles A. Boutelle ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maine_School_of_Science_and_Mathematics> <http://dbpedia.org/ontology/authority> ?uri. <http://dbpedia.org/resource/Charles_A._Boutelle> <http://dbpedia.org/property/restingplace> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/authority",
    "predicate1_mention": "city",
    "predicate2_uri": "http://dbpedia.org/property/restingplace",
    "predicate2_mention": "resting place",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Maine_School_of_Science_and_Mathematics",
    "entity1_mention": "Maine School of Science and Mathematics",
    "entity2_uri": "http://dbpedia.org/resource/Charles_A._Boutelle",
    "entity2_mention": "Charles A. Boutelle"
},
{
    "id": "1678",
    "question": "What is the baseball team whose club manager's debut team is Houston Astros?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/debutTeam> <http://dbpedia.org/resource/Houston_Astros> . ?uri <http://dbpedia.org/ontology/manager> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballTeam>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/debutTeam",
    "predicate1_mention": "debut team",
    "predicate2_uri": "http://dbpedia.org/ontology/manager",
    "predicate2_mention": "manager's",
    "type_uri": "http://dbpedia.org/ontology/BaseballTeam",
    "type_mention": "baseball team",
    "entity1_uri": "http://dbpedia.org/resource/Houston_Astros",
    "entity1_mention": "houston astros",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1679",
    "question": "List the producer of the television shows distributed by FremantleMedia.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/FremantleMedia> . ?x <http://dbpedia.org/ontology/producer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/distributor",
    "predicate1_mention": "distributed by",
    "predicate2_uri": "http://dbpedia.org/ontology/producer",
    "predicate2_mention": "producer",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television shows",
    "entity1_uri": "http://dbpedia.org/resource/FremantleMedia",
    "entity1_mention": "FremantleMedia",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1680",
    "question": "What stadium's operator is Stan Kroenke",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/Stan_Kroenke>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/operator",
    "predicate1_mention": "operator",
    "predicate2_uri": "http://dbpedia.org/ontology/Stadium",
    "predicate2_mention": "stadium's",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Stan_Kroenke",
    "entity1_mention": "stan kroenke",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1682",
    "question": "List all binomial authority of the insects whose one of the  binomial authority is douard Mntries?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/binomialAuthority> <http://dbpedia.org/resource/\u00c9douard_M\u00e9n\u00e9tries> . ?x <http://dbpedia.org/ontology/binomialAuthority> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/binomialAuthority",
    "predicate1_mention": "binomial authority",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/\u00c9douard_M\u00e9n\u00e9tries",
    "entity1_mention": "douard Mntries",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1685",
    "question": "Name the resting place of Fazlur Rahman Khan ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fazlur_Rahman_Khan> <http://dbpedia.org/ontology/restingPlace> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/restingPlace",
    "predicate1_mention": "resting place",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Fazlur_Rahman_Khan",
    "entity1_mention": "Fazlur Rahman Khan",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1686",
    "question": "List some teams for which someone who has played as a defender, now plays?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Defenceman> . ?x <http://dbpedia.org/ontology/team> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/position",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/team",
    "predicate2_mention": "teams",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Defenceman",
    "entity1_mention": "defender",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1687",
    "question": "In which place is the company which is known for Barbara bestor located ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Barbara_Bestor> <http://dbpedia.org/property/knownFor> ?x . ?x <http://dbpedia.org/ontology/location> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/knownFor",
    "predicate1_mention": "known for",
    "predicate2_uri": "http://dbpedia.org/ontology/location",
    "predicate2_mention": "located",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "company",
    "entity1_uri": "http://dbpedia.org/resource/Barbara_Bestor",
    "entity1_mention": "barbara bestor",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1693",
    "question": "What is the district of Methodist Central Hall Westminster ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Methodist_Central_Hall_Westminster> <http://dbpedia.org/ontology/district> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/district",
    "predicate1_mention": "district",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Methodist_Central_Hall_Westminster",
    "entity1_mention": "Methodist Central Hall Westminster",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1696",
    "question": "How many religions are followed amongst the people who've worked in the Korean army?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Republic_of_Korea_Army> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/militaryBranch",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religions",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Republic_of_Korea_Army",
    "entity1_mention": "Korean army",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1701",
    "question": "Which architect of Marine Corps Air Station Kaneohe Bay was also tenant of New Sanno hotel /'",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marine_Corps_Air_Station_Kaneohe_Bay> <http://dbpedia.org/property/architect> ?uri. <http://dbpedia.org/resource/New_Sanno_Hotel> <http://dbpedia.org/ontology/tenant> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/architect",
    "predicate1_mention": "architect",
    "predicate2_uri": "http://dbpedia.org/ontology/tenant",
    "predicate2_mention": "tenant",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Marine_Corps_Air_Station_Kaneohe_Bay",
    "entity1_mention": "Marine Corps Air Station Kaneohe Bay",
    "entity2_uri": "http://dbpedia.org/resource/New_Sanno_Hotel",
    "entity2_mention": "New Sanno hotel"
},
{
    "id": "1707",
    "question": "What is the television show whose channel's parent organisation is Fox Sports?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/parentOrganisation> <http://dbpedia.org/resource/Fox_Sports_(United_States)> . ?uri <http://dbpedia.org/ontology/channel> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/parentOrganisation",
    "predicate1_mention": "parent organisation",
    "predicate2_uri": "http://dbpedia.org/ontology/channel",
    "predicate2_mention": "channel's",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television show",
    "entity1_uri": "http://dbpedia.org/resource/Fox_Sports_(United_States)",
    "entity1_mention": "fox sports",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1715",
    "question": "What are the players whose former teams are Carolina Panthers and Indianapolis Colts?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Carolina_Panthers> . ?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Indianapolis_Colts> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/formerTeam",
    "predicate1_mention": "former teams",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Carolina_Panthers",
    "entity1_mention": "carolina panthers",
    "entity2_uri": "http://dbpedia.org/resource/Indianapolis_Colts",
    "entity2_mention": "indianapolis colts"
},
{
    "id": "1719",
    "question": "Deion sanders and Hinkey haines debuted their career with which common team?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hinkey_Haines> <http://dbpedia.org/property/debutteam> ?uri. <http://dbpedia.org/resource/Deion_Sanders> <http://dbpedia.org/property/debutteam> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/debutteam",
    "predicate1_mention": "debuted",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hinkey_Haines",
    "entity1_mention": "hinkey haines",
    "entity2_uri": "http://dbpedia.org/resource/Deion_Sanders",
    "entity2_mention": "deion sanders"
},
{
    "id": "1722",
    "question": "What ethinicity of Linda Hogan is also the state of origin of Holmes Colbert ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Linda_Hogan> <http://dbpedia.org/ontology/ethnicity> ?uri. <http://dbpedia.org/resource/Holmes_Colbert> <http://dbpedia.org/ontology/stateOfOrigin> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/ethnicity",
    "predicate1_mention": "ethinicity",
    "predicate2_uri": "http://dbpedia.org/ontology/stateOfOrigin",
    "predicate2_mention": "state of origin",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Linda_Hogan",
    "entity1_mention": "linda hogan",
    "entity2_uri": "http://dbpedia.org/resource/Holmes_Colbert",
    "entity2_mention": "holmes colbert"
},
{
    "id": "1724",
    "question": "Where are jockeys in Dubai World Cup from?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/race> <http://dbpedia.org/resource/Dubai_World_Cup> . ?x <http://dbpedia.org/property/birthPlace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Jockey>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/race",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/birthPlace",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Jockey",
    "type_mention": "jockeys",
    "entity1_uri": "http://dbpedia.org/resource/Dubai_World_Cup",
    "entity1_mention": "Dubai World Cup",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1733",
    "question": "What is the government type of Ancient Rome ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ancient_Rome> <http://dbpedia.org/ontology/governmentType> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/governmentType",
    "predicate1_mention": "government type",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ancient_Rome",
    "entity1_mention": "ancient rome",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1734",
    "question": "Who are the animator of The Skeleton Dance?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Skeleton_Dance> <http://dbpedia.org/ontology/animator> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/animator",
    "predicate1_mention": "animator",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Skeleton_Dance",
    "entity1_mention": "The Skeleton Dance",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1753",
    "question": "What are the movies whose screenplay is done by Eric Roth?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Eric_Roth>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/screenplay",
    "predicate1_mention": "screenplay",
    "predicate2_uri": "http://dbpedia.org/ontology/Film",
    "predicate2_mention": "movies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Eric_Roth",
    "entity1_mention": "eric roth",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1757",
    "question": "What cities are near to Nihoa which is also known as Bird Island ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Nihoa> <http://dbpedia.org/property/nearestCity> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/nearestCity",
    "predicate1_mention": "near",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Nihoa",
    "entity1_mention": "nihoa",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1759",
    "question": "How many cities are around the sea in which the the fig tree bay meets?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Fig_Tree_Bay> <http://dbpedia.org/ontology/inflow> ?x . ?x <http://dbpedia.org/property/cities> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
    "sparql_id": "403",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/inflow",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/cities",
    "predicate2_mention": "cities",
    "type_uri": "http://dbpedia.org/ontology/Sea",
    "type_mention": "sea",
    "entity1_uri": "http://dbpedia.org/resource/Fig_Tree_Bay",
    "entity1_mention": "fig tree bay",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1761",
    "question": "Count the number of families of the Animal kingdom.",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/kingdom> <http://dbpedia.org/resource/Animal> . ?x <http://dbpedia.org/ontology/family> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/kingdom",
    "predicate1_mention": "kingdom.",
    "predicate2_uri": "http://dbpedia.org/ontology/family",
    "predicate2_mention": "families",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Animal",
    "entity1_mention": "animal",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1792",
    "question": "Who is the partner of Rob Patterson?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/partner> <http://dbpedia.org/resource/Rob_Patterson>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/partner",
    "predicate1_mention": "partner",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Rob_Patterson",
    "entity1_mention": "patterson",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1794",
    "question": "Name the parent company of  Ford Air Transport Service ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Air_Transport_Service> <http://dbpedia.org/ontology/parentCompany> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/parentCompany",
    "predicate1_mention": "parent company",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ford_Air_Transport_Service",
    "entity1_mention": "Ford Air Transport Service",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1802",
    "question": "who developed google videos?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Google_Videos> <http://dbpedia.org/property/developer> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/developer",
    "predicate1_mention": "developed",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Google_Videos",
    "entity1_mention": "google videos",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1806",
    "question": "Does Ford own the Ford Kansas Assembly plant?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant> <http://dbpedia.org/ontology/owningOrganisation> <http://dbpedia.org/resource/Ford_Motor_Company> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/owningOrganisation",
    "predicate1_mention": "kansas",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant",
    "entity1_mention": "Ford Kansas Assembly plant",
    "entity2_uri": "http://dbpedia.org/resource/Ford_Motor_Company",
    "entity2_mention": "ford"
},
{
    "id": "1810",
    "question": "Which political party of Yashpal Kapur is also the owner of National Herald ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_National_Herald_(India)> <http://dbpedia.org/ontology/owner> ?uri. <http://dbpedia.org/resource/Yashpal_Kapur> <http://dbpedia.org/ontology/party> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/owner",
    "predicate1_mention": "owner",
    "predicate2_uri": "http://dbpedia.org/ontology/party",
    "predicate2_mention": "party",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_National_Herald_(India)",
    "entity1_mention": "national herald",
    "entity2_uri": "http://dbpedia.org/resource/Yashpal_Kapur",
    "entity2_mention": "yashpal kapur"
},
{
    "id": "1816",
    "question": "Where did the athlete start his career, who did his highschool in Red Lion Area School District?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/highschool> <http://dbpedia.org/resource/Red_Lion_Area_School_District> . ?x <http://dbpedia.org/property/debutteam> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/highschool",
    "predicate1_mention": "highschool",
    "predicate2_uri": "http://dbpedia.org/property/debutteam",
    "predicate2_mention": "start his career",
    "type_uri": "http://dbpedia.org/ontology/Athlete",
    "type_mention": "athlete",
    "entity1_uri": "http://dbpedia.org/resource/Red_Lion_Area_School_District",
    "entity1_mention": "Red Lion Area School District",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1819",
    "question": "Which destination of Emerald Air is also the city served by houston Fort Bend Airport ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Emerald_Air_(United_States)> <http://dbpedia.org/ontology/destination> ?uri. <http://dbpedia.org/resource/Houston_Fort_Bend_Airport> <http://dbpedia.org/property/cityServed> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/destination",
    "predicate1_mention": "destination",
    "predicate2_uri": "http://dbpedia.org/property/cityServed",
    "predicate2_mention": "city served",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Emerald_Air_(United_States)",
    "entity1_mention": "emerald air",
    "entity2_uri": "http://dbpedia.org/resource/Houston_Fort_Bend_Airport",
    "entity2_mention": "houston Fort Bend Airport"
},
{
    "id": "1823",
    "question": "List the debut team of the baseball player who born in Houston.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Houston> . ?x <http://dbpedia.org/ontology/debutTeam> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballPlayer>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/birthPlace",
    "predicate1_mention": "born in",
    "predicate2_uri": "http://dbpedia.org/ontology/debutTeam",
    "predicate2_mention": "debut team",
    "type_uri": "http://dbpedia.org/ontology/BaseballPlayer",
    "type_mention": "baseball player",
    "entity1_uri": "http://dbpedia.org/resource/Houston",
    "entity1_mention": "Houston",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1824",
    "question": "Is jim harbaugh currently in the Michigan Wolverines?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jim_Harbaugh> <http://dbpedia.org/property/currentteam> <http://dbpedia.org/resource/Michigan_Wolverines> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/currentteam",
    "predicate1_mention": "currently",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jim_Harbaugh",
    "entity1_mention": "jim harbaugh",
    "entity2_uri": "http://dbpedia.org/resource/Michigan_Wolverines",
    "entity2_mention": "michigan wolverines"
},
{
    "id": "1827",
    "question": "List the people with final resting place as Plymouth, Vermont and has Samuel W. McCall as predecessor?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Plymouth,_Vermont> . ?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Samuel_W._McCall>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/restingPlace",
    "predicate1_mention": "resting place",
    "predicate2_uri": "http://dbpedia.org/property/predecessor",
    "predicate2_mention": "predecessor",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Plymouth,_Vermont",
    "entity1_mention": "plymouth, vermont",
    "entity2_uri": "http://dbpedia.org/resource/Samuel_W._McCall",
    "entity2_mention": "Samuel W. McCall"
},
{
    "id": "1828",
    "question": "Was christina crawford trained by Booker T?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Christina_Crawford_(wrestler)> <http://dbpedia.org/property/trainer> <http://dbpedia.org/resource/Booker_T_(wrestler)> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/trainer",
    "predicate1_mention": "trained",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Christina_Crawford_(wrestler)",
    "entity1_mention": "christina crawford",
    "entity2_uri": "http://dbpedia.org/resource/Booker_T_(wrestler)",
    "entity2_mention": "booker T"
},
{
    "id": "1834",
    "question": "Which education center Sidney Catlin Partrodge attended which was also the alma mater of Lisa Brummel ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sidney_Catlin_Partridge> <http://dbpedia.org/property/education> ?uri. <http://dbpedia.org/resource/Lisa_Brummel> <http://dbpedia.org/ontology/almaMater> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/education",
    "predicate1_mention": "education",
    "predicate2_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate2_mention": "alma mater",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sidney_Catlin_Partridge",
    "entity1_mention": "Sidney Catlin Partrodge",
    "entity2_uri": "http://dbpedia.org/resource/Lisa_Brummel",
    "entity2_mention": "lisa brummel"
},
{
    "id": "1838",
    "question": "Which driver had the pole position in 1994 Spanish Grand Prix ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1994_Spanish_Grand_Prix> <http://dbpedia.org/ontology/poleDriver> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/poleDriver",
    "predicate1_mention": "pole",
    "predicate2_uri": "",
    "predicate2_mention": "", 
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/1994_Spanish_Grand_Prix",
    "entity1_mention": "1994 Spanish Grand Prix",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1841",
    "question": "Who is the producer of album, which has the song Eclipse ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eclipse_(song)> <http://dbpedia.org/ontology/album> ?x . ?x <http://dbpedia.org/property/producer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/album",
    "predicate1_mention": "album,",
    "predicate2_uri": "http://dbpedia.org/property/producer",
    "predicate2_mention": "producer",
    "type_uri": "http://dbpedia.org/ontology/Album",
    "type_mention": "album",
    "entity1_uri": "http://dbpedia.org/resource/Eclipse_(song)",
    "entity1_mention": "song eclipse",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1843",
    "question": "What is the automobile platform of Chiva bus ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chiva_bus> <http://dbpedia.org/ontology/automobilePlatform> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/automobilePlatform",
    "predicate1_mention": "automobile platform",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Chiva_bus",
    "entity1_mention": "chiva bus",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1848",
    "question": "What teams did the ex teamplayers of lighthouse boy club start their career with?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/youthclubs> <http://dbpedia.org/resource/Lighthouse_Boys_Club> . ?x <http://dbpedia.org/property/debutteam> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/youthclubs",
    "predicate1_mention": "club",
    "predicate2_uri": "http://dbpedia.org/property/debutteam",
    "predicate2_mention": "teams",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lighthouse_Boys_Club",
    "entity1_mention": "lighthouse boy club",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1852",
    "question": "Which producer of Purvis Eureka engine is also the owner of Ford Theatre ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Purvis_Eureka> <http://dbpedia.org/property/engine> ?uri. <http://dbpedia.org/resource/Ford_Theatre> <http://dbpedia.org/property/company> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/engine",
    "predicate1_mention": "engine",
    "predicate2_uri": "http://dbpedia.org/property/company",
    "predicate2_mention": "owner",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Purvis_Eureka",
    "entity1_mention": "purvis eureka",
    "entity2_uri": "http://dbpedia.org/resource/Ford_Theatre",
    "entity2_mention": "ford theatre"
},
{
    "id": "1853",
    "question": "Did John Byrne create Emma Frost?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Emma_Frost> <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/John_Byrne_(comics)> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/creators",
    "predicate1_mention": "create",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Emma_Frost",
    "entity1_mention": "emma frost",
    "entity2_uri": "http://dbpedia.org/resource/John_Byrne_(comics)",
    "entity2_mention": "john byrne"
},
{
    "id": "1854",
    "question": "Among the companies who has product named Chinook who has a key person as Dennis Muilenburg ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Dennis_Muilenburg> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Boeing_CH-47_Chinook>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/keyPeople",
    "predicate1_mention": "key person",
    "predicate2_uri": "http://dbpedia.org/property/products",
    "predicate2_mention": "product",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "companies",
    "entity1_uri": "http://dbpedia.org/resource/Dennis_Muilenburg",
    "entity1_mention": "dennis muilenburg",
    "entity2_uri": "http://dbpedia.org/resource/Boeing_CH-47_Chinook",
    "entity2_mention": "chinook"
},
{
    "id": "1856",
    "question": "Who gave guest appearances on the show which is the next episode after the Bombshell one?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/Bombshell_(Smash)> . ?x <http://dbpedia.org/property/guests> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionEpisode>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/previousWork",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/guests",
    "predicate2_mention": "guest",
    "type_uri": "http://dbpedia.org/ontology/TelevisionEpisode",
    "type_mention": "episode",
    "entity1_uri": "http://dbpedia.org/resource/Bombshell_(Smash)",
    "entity1_mention": "bombshell",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1857",
    "question": "Miluk and Cayuse are still spoken in which part of the world?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Miluk_language> <http://dbpedia.org/property/region> ?uri. <http://dbpedia.org/resource/Cayuse_language> <http://dbpedia.org/property/region> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/region",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/region",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Miluk_language",
    "entity1_mention": "miluk",
    "entity2_uri": "http://dbpedia.org/resource/Cayuse_language",
    "entity2_mention": "cayuse"
},
{
    "id": "1863",
    "question": "Name the fictional character whose relatives are Huey, Dewey, and Louie and is of species American Pekin duck?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Huey,_Dewey,_and_Louie> . ?uri <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/American_Pekin_duck>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/relatives",
    "predicate1_mention": "relatives",
    "predicate2_uri": "http://dbpedia.org/ontology/species",
    "predicate2_mention": "species",
    "type_uri": "http://dbpedia.org/ontology/FictionalCharacter",
    "type_mention": "fictional character",
    "entity1_uri": "http://dbpedia.org/resource/Huey,_Dewey,_and_Louie",
    "entity1_mention": "Huey, Dewey, and Louie",
    "entity2_uri": "http://dbpedia.org/resource/American_Pekin_duck",
    "entity2_mention": "american pekin duck"
},
{
    "id": "1865",
    "question": "Who was the coach of marquette Golden Eagles men's basketball team-2012,13 season ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2012\u201313_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/ontology/coach> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/coach",
    "predicate1_mention": "coach",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/2012\u201313_Marquette_Golden_Eagles_men's_basketball_team",
    "entity1_mention": "marquette golden eagles men's basketball team-2012,13 season",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1879",
    "question": "Which designer of RENFE also owns Renaissance Center ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/RENFE_Class_333> <http://dbpedia.org/ontology/designer> ?uri. <http://dbpedia.org/resource/Renaissance_Center> <http://dbpedia.org/property/owner> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/designer",
    "predicate1_mention": "designer",
    "predicate2_uri": "http://dbpedia.org/property/owner",
    "predicate2_mention": "owns",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/RENFE_Class_333",
    "entity1_mention": "renfe",
    "entity2_uri": "http://dbpedia.org/resource/Renaissance_Center",
    "entity2_mention": "renaissance center"
},
{
    "id": "1887",
    "question": "Name the river which flows through the closest city of Mount Raimer ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mount_Raimer> <http://dbpedia.org/property/nearestCity> ?x . ?x <http://dbpedia.org/ontology/river> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/nearestCity",
    "predicate1_mention": "closest city",
    "predicate2_uri": "http://dbpedia.org/ontology/river",
    "predicate2_mention": "river",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mount_Raimer",
    "entity1_mention": "mount raimer",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1895",
    "question": "In which region is the rival school of Somerset, Massachusetts located?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/rival> <http://dbpedia.org/resource/Somerset,_Massachusetts> . ?x <http://dbpedia.org/ontology/region> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/rival",
    "predicate1_mention": "rival",
    "predicate2_uri": "http://dbpedia.org/ontology/region",
    "predicate2_mention": "region",
    "type_uri": "http://dbpedia.org/ontology/School",
    "type_mention": "school",
    "entity1_uri": "http://dbpedia.org/resource/Somerset,_Massachusetts",
    "entity1_mention": "Somerset, Massachusetts",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1899",
    "question": "Who is the relative of Jim Farley (businessman) ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jim_Farley_(businessman)> <http://dbpedia.org/property/relatives> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/relatives",
    "predicate1_mention": "relative",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jim_Farley_(businessman)",
    "entity1_mention": "Jim Farley (businessman)",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1906",
    "question": "Who is the narrator of The Price of Beauty ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Price_of_Beauty> <http://dbpedia.org/ontology/narrator> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/narrator",
    "predicate1_mention": "narrator",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Price_of_Beauty",
    "entity1_mention": "The Price of Beauty",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1908",
    "question": "What is the area of the Tar Heel Sports Network which is  official residence of the Michael Nichols (photographer) ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tar_Heel_Sports_Network> <http://dbpedia.org/property/area> ?uri. <http://dbpedia.org/resource/Michael_Nichols_(photographer)> <http://dbpedia.org/ontology/residence> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/area",
    "predicate1_mention": "area",
    "predicate2_uri": "http://dbpedia.org/ontology/residence",
    "predicate2_mention": "residence",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tar_Heel_Sports_Network",
    "entity1_mention": "Tar Heel Sports Network",
    "entity2_uri": "http://dbpedia.org/resource/Michael_Nichols_(photographer)",
    "entity2_mention": "Michael Nichols (photographer)"
},
{
    "id": "1917",
    "question": "List few Swedish language movies ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/language> <http://dbpedia.org/resource/Swedish_language>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/language",
    "predicate1_mention": "language",
    "predicate2_uri": "http://dbpedia.org/ontology/Film",
    "predicate2_mention": "movies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Swedish_language",
    "entity1_mention": "Swedish language",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1930",
    "question": "Which publisher of Lucifer's hammer is also known for Jo Garcia ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lucifer's_Hammer> <http://dbpedia.org/ontology/publisher> ?uri. <http://dbpedia.org/resource/Jo_Garcia> <http://dbpedia.org/ontology/knownFor> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/publisher",
    "predicate1_mention": "publisher",
    "predicate2_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate2_mention": "known for",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lucifer's_Hammer",
    "entity1_mention": "lucifer's hammer",
    "entity2_uri": "http://dbpedia.org/resource/Jo_Garcia",
    "entity2_mention": "jo garcia"
},
{
    "id": "1931",
    "question": "List the driver of SA MArino Grand Prix is also the Pole driver of Canadian Grand Prix ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1999_San_Marino_Grand_Prix> <http://dbpedia.org/property/firstDriver> ?uri. <http://dbpedia.org/resource/1997_Canadian_Grand_Prix> <http://dbpedia.org/property/poleDriver> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/firstDriver",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/poleDriver",
    "predicate2_mention": "pole driver",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/1999_San_Marino_Grand_Prix",
    "entity1_mention": "SA MArino Grand Prix",
    "entity2_uri": "http://dbpedia.org/resource/1997_Canadian_Grand_Prix",
    "entity2_mention": "Canadian Grand Prix"
},
{
    "id": "1944",
    "question": "What are some orthonychidae birds?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Orthonychidae>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bird>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/family",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/Bird",
    "predicate2_mention": "birds",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Orthonychidae",
    "entity1_mention": "orthonychidae",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1955",
    "question": "Which professional fighter, who is also a politician and was elected to House of Representatives of the Philippines?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/House_of_Representatives_of_the_Philippines> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/occupation",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/House_of_Representatives_of_the_Philippines",
    "entity1_mention": " house of representatives of the philippines",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1958",
    "question": "What is the television show whose related with  Doctor Who Confidential?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/Doctor_Who_Confidential>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/related",
    "predicate1_mention": "related",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "television show",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Doctor_Who_Confidential",
    "entity1_mention": "Doctor Who Confidential",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1959",
    "question": "Name all those buried in a place governed by a city council.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/City_council> . ?uri <http://dbpedia.org/property/restingPlace> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/governingBody",
    "predicate1_mention": "governed by",
    "predicate2_uri": "http://dbpedia.org/property/restingPlace",
    "predicate2_mention": "place",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/City_council",
    "entity1_mention": "city council",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1968",
    "question": "What is the total number of writers whose singles are recorded in Miami?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/recordedIn> <http://dbpedia.org/resource/Miami> . ?x <http://dbpedia.org/property/writer> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/recordedIn",
    "predicate1_mention": "recorded in",
    "predicate2_uri": "http://dbpedia.org/property/writer",
    "predicate2_mention": "writers",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Miami",
    "entity1_mention": "miami",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1969",
    "question": "Daniel L D Granger and Job Durfee have based their political career in which US state?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Daniel_L._D._Granger> <http://dbpedia.org/property/state> ?uri. <http://dbpedia.org/resource/Job_Durfee> <http://dbpedia.org/property/state> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/state",
    "predicate1_mention": "state",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Daniel_L._D._Granger",
    "entity1_mention": "Daniel L D Granger",
    "entity2_uri": "http://dbpedia.org/resource/Job_Durfee",
    "entity2_mention": "Job Durfee"
},
{
    "id": "1970",
    "question": "What is the common nationality of Viveka Babajee anad Ronny Vencatachellum ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Viveka_Babajee> <http://dbpedia.org/property/citizenship> ?uri. <http://dbpedia.org/resource/Ronny_Vencatachellum> <http://dbpedia.org/ontology/nationality> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/citizenship",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/nationality",
    "predicate2_mention": "nationality",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Viveka_Babajee",
    "entity1_mention": "Viveka Babajee",
    "entity2_uri": "http://dbpedia.org/resource/Ronny_Vencatachellum",
    "entity2_mention": "Ronny Vencatachellum"
},
{
    "id": "1975",
    "question": "Name the office holder whose constituency is Haight Ashbury?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Haight-Ashbury>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/constituency",
    "predicate1_mention": "constituency",
    "predicate2_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "predicate2_mention": "office holder",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Haight-Ashbury",
    "entity1_mention": "haight ashbury",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1976",
    "question": "What is the common ideology followed by Katyayana and Palang Dharma Party ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Katyayana_(Buddhist)> <http://dbpedia.org/property/religion> ?uri. <http://dbpedia.org/resource/Palang_Dharma_Party> <http://dbpedia.org/ontology/ideology> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/religion",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/ideology",
    "predicate2_mention": "ideology",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Katyayana_(Buddhist)",
    "entity1_mention": "katyayana",
    "entity2_uri": "http://dbpedia.org/resource/Palang_Dharma_Party",
    "entity2_mention": "palang dharma party"
},
{
    "id": "1981",
    "question": "Give me the count of all the names of characters created by Frank Miller",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Frank_Miller_(comics)> . ?x <http://dbpedia.org/property/characterName> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/creators",
    "predicate1_mention": "created",
    "predicate2_uri": "http://dbpedia.org/property/characterName",
    "predicate2_mention": "names of characters",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Frank_Miller_(comics)",
    "entity1_mention": "Frank Miller",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1982",
    "question": "list the founders of Bream Bay ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bream_Bay> <http://dbpedia.org/property/founder> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/founder",
    "predicate1_mention": "founders",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bream_Bay",
    "entity1_mention": "bream bay",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1984",
    "question": "List the companies operating in Australia?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/regionServed> <http://dbpedia.org/resource/Australia> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/regionServed",
    "predicate1_mention": "operating",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Australia",
    "entity1_mention": "australia",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1986",
    "question": "Name the country whose leader's deputy is Piotr Glinski?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Piotr_Gli\u0144ski> . ?uri <http://dbpedia.org/property/leaderName> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/deputy",
    "predicate1_mention": "deputy",
    "predicate2_uri": "http://dbpedia.org/property/leaderName",
    "predicate2_mention": "leader's",
    "type_uri": "http://dbpedia.org/ontology/Country",
    "type_mention": "country",
    "entity1_uri": "http://dbpedia.org/resource/Piotr_Gli\u0144ski",
    "entity1_mention": "Piotr Glinski",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1990",
    "question": "Companies founded in Taiwan have typically which divisions?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Taiwan> . ?x <http://dbpedia.org/ontology/division> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/foundationPlace",
    "predicate1_mention": "founded in",
    "predicate2_uri": "http://dbpedia.org/ontology/division",
    "predicate2_mention": "divisions",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "companies",
    "entity1_uri": "http://dbpedia.org/resource/Taiwan",
    "entity1_mention": "taiwan",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1994",
    "question": "Where was the predecessor of Sevan Ross born?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Sevan_Ross> . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/successor",
    "predicate1_mention": "predecessor",
    "predicate2_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate2_mention": "born",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sevan_Ross",
    "entity1_mention": "sevan ross",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1996",
    "question": "Who built the stadiums where 2014 FIFA under 17 woman's world cup took place?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/2014_FIFA_U-17_Women's_World_Cup> . ?x <http://dbpedia.org/ontology/builder> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/tenant",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/builder",
    "predicate2_mention": "built",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/2014_FIFA_U-17_Women's_World_Cup",
    "entity1_mention": "2014 FIFA under 17 woman's world cup",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1997",
    "question": "Name the source of Raa ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ra\u0161a_(river)> <http://dbpedia.org/ontology/source> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/source",
    "predicate1_mention": "source",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ra\u0161a_(river)",
    "entity1_mention": "Raa",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1998",
    "question": "In which countries does the sea lie on whose shore is the city of Cumana?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Cuman\u00e1> . ?x <http://dbpedia.org/ontology/country> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/cities",
    "predicate1_mention": "city",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "countries",
    "type_uri": "http://dbpedia.org/ontology/Sea",
    "type_mention": "sea",
    "entity1_uri": "http://dbpedia.org/resource/Cuman\u00e1",
    "entity1_mention": "Cumana",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2000",
    "question": "Was Nick Jonas a member of the Jonas Brothers?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jonas_Brothers> <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Nick_Jonas> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/pastMembers",
    "predicate1_mention": "member",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jonas_Brothers",
    "entity1_mention": "Jonas Brothers",
    "entity2_uri": "http://dbpedia.org/resource/Nick_Jonas",
    "entity2_mention": "nick jonas"
},
{
    "id": "2017",
    "question": "Is Amharic the official language of Ethiopia?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ethiopia> <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/Amharic> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/officialLanguage",
    "predicate1_mention": "official language",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ethiopia",
    "entity1_mention": "ethiopia",
    "entity2_uri": "http://dbpedia.org/resource/Amharic",
    "entity2_mention": "amharic"
},
{
    "id": "2026",
    "question": "Is God Save the Queen the national anthem of United Kingdom?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/United_Kingdom> <http://dbpedia.org/property/nationalAnthem> <http://dbpedia.org/resource/God_Save_the_Queen> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/nationalAnthem",
    "predicate1_mention": "national anthem",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_Kingdom",
    "entity1_mention": "united kingdom",
    "entity2_uri": "http://dbpedia.org/resource/God_Save_the_Queen",
    "entity2_mention": "God Save the Queen"
},
{
    "id": "2027",
    "question": "GetTV is owned by which organisation?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/GetTV> <http://dbpedia.org/ontology/parentOrganisation> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/parentOrganisation",
    "predicate1_mention": "organisation",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/GetTV",
    "entity1_mention": "gettv",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2035",
    "question": "Who composed the music for Tonight's the Night ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tonight's_the_Night_(2003_musical)> <http://dbpedia.org/property/music> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/music",
    "predicate1_mention": "music",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tonight's_the_Night_(2003_musical)",
    "entity1_mention": "Tonight's the Night",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2038",
    "question": "Bantam Spectra is the publisher of which series?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/publisher> <http://dbpedia.org/resource/Bantam_Spectra> . ?x <http://dbpedia.org/ontology/series> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/publisher",
    "predicate1_mention": "publisher",
    "predicate2_uri": "http://dbpedia.org/ontology/series",
    "predicate2_mention": "series",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bantam_Spectra",
    "entity1_mention": "bantam spectra",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2039",
    "question": "List the soccer players whose current team has the ground Stoke-on-Trent.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/ground> <http://dbpedia.org/resource/Stoke-on-Trent> . ?uri <http://dbpedia.org/property/currentclub> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/ground",
    "predicate1_mention": "ground",
    "predicate2_uri": "http://dbpedia.org/property/currentclub",
    "predicate2_mention": "current team",
    "type_uri": "http://dbpedia.org/ontology/SoccerPlayer",
    "type_mention": "soccer players",
    "entity1_uri": "http://dbpedia.org/resource/Stoke-on-Trent",
    "entity1_mention": "Stoke-on-Trent",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2041",
    "question": "Which operator of New Sanno Hotel is also the  governing body of the Oahu Railway and Land Company ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/New_Sanno_Hotel> <http://dbpedia.org/property/operator> ?uri. <http://dbpedia.org/resource/Oahu_Railway_and_Land_Company> <http://dbpedia.org/property/governingBody> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/operator",
    "predicate1_mention": "operator",
    "predicate2_uri": "http://dbpedia.org/property/governingBody",
    "predicate2_mention": "governing body",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/New_Sanno_Hotel",
    "entity1_mention": "New Sanno Hotel",
    "entity2_uri": "http://dbpedia.org/resource/Oahu_Railway_and_Land_Company",
    "entity2_mention": "Oahu Railway and Land Company"
},
{
    "id": "2047",
    "question": "What movies have been written by authors of Monty Python ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Monty_Python>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/writer",
    "predicate1_mention": "written by",
    "predicate2_uri": "http://dbpedia.org/ontology/Film",
    "predicate2_mention": "movies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Monty_Python",
    "entity1_mention": "monty python",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2048",
    "question": "List the things for which the relatives of Mrunalini Kunte are known?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mrunalini_Kunte> <http://dbpedia.org/ontology/relative> ?x . ?x <http://dbpedia.org/property/knownFor> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/relative",
    "predicate1_mention": "relatives",
    "predicate2_uri": "http://dbpedia.org/property/knownFor",
    "predicate2_mention": "known",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mrunalini_Kunte",
    "entity1_mention": "mrunalini kunte",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2049",
    "question": "Did Bob Dylan write the lyrics of the times they are a changin'?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)> <http://dbpedia.org/property/lyrics> <http://dbpedia.org/resource/Bob_Dylan> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/lyrics",
    "predicate1_mention": "lyrics",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)",
    "entity1_mention": "the times they are a changin'",
    "entity2_uri": "http://dbpedia.org/resource/Bob_Dylan",
    "entity2_mention": "bob Dylan"
},
{
    "id": "2055",
    "question": "Who is a religious figure titled superior general?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Superior_general>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Religious>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/title",
    "predicate1_mention": "titled",
    "predicate2_uri": "http://dbpedia.org/ontology/Religious",
    "predicate2_mention": "religious",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Superior_general",
    "entity1_mention": "superior general",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2056",
    "question": "What is the military unit whose command structures are United States Department of the Navy and United States Department of Defense?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_the_Navy> . ?uri <http://dbpedia.org/ontology/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_Defense> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/commandStructure",
    "predicate1_mention": "command structures",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/MilitaryUnit",
    "type_mention": "military unit",
    "entity1_uri": "http://dbpedia.org/resource/United_States_Department_of_the_Navy",
    "entity1_mention": "United States Department of the Navy",
    "entity2_uri": "http://dbpedia.org/resource/United_States_Department_of_Defense",
    "entity2_mention": "United States Department of Defense"
},
{
    "id": "2060",
    "question": "How many TV shows are of the company which are of company which is a subsidiary of Big  Ticket Entertainment ?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Big_Ticket_Entertainment> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/subsidiary",
    "predicate1_mention": "subsidiary",
    "predicate2_uri": "http://dbpedia.org/property/company",
    "predicate2_mention": "company",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "tv shows",
    "entity1_uri": "http://dbpedia.org/resource/Big_Ticket_Entertainment",
    "entity1_mention": "Big  Ticket Entertainment",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2061",
    "question": "Which are the predecessor of Chevrolet Caprice?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chevrolet_Caprice> <http://dbpedia.org/ontology/predecessor> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/predecessor",
    "predicate1_mention": "predecessor",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Chevrolet_Caprice",
    "entity1_mention": "chevrolet caprice",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2062",
    "question": "What was recorded by Live in Detroit, MI and also place of birth of the Bodhin Kjolhede?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Live_in_Detroit,_MI> <http://dbpedia.org/ontology/recordedIn> ?uri. <http://dbpedia.org/resource/Bodhin_Kjolhede> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/recordedIn",
    "predicate1_mention": "recorded by",
    "predicate2_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate2_mention": "place of birth",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Live_in_Detroit,_MI",
    "entity1_mention": "Detroit, MI",
    "entity2_uri": "http://dbpedia.org/resource/Bodhin_Kjolhede",
    "entity2_mention": "bodhin kjolhede"
},
{
    "id": "2065",
    "question": "Name a person who works in Open Society Foundation and has wife named Susan Weber Soros ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/Open_Society_Foundations> . ?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Susan_Weber_Soros>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/employer",
    "predicate1_mention": "works in",
    "predicate2_uri": "http://dbpedia.org/property/spouse",
    "predicate2_mention": "wife",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "person",
    "entity1_uri": "http://dbpedia.org/resource/Open_Society_Foundations",
    "entity1_mention": "Open Society Foundation",
    "entity2_uri": "http://dbpedia.org/resource/Susan_Weber_Soros",
    "entity2_mention": "Susan Weber Soros"
},
{
    "id": "2070",
    "question": "What is a common nickname given to both Lyons Township high school and the wheaton college in massachusetts?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lyons_Township_High_School> <http://dbpedia.org/property/nickname> ?uri. <http://dbpedia.org/resource/Wheaton_College_(Massachusetts)> <http://dbpedia.org/property/nickname> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/nickname",
    "predicate1_mention": "nickname",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lyons_Township_High_School",
    "entity1_mention": "Lyons Township high school",
    "entity2_uri": "http://dbpedia.org/resource/Wheaton_College_(Massachusetts)",
    "entity2_mention": "wheaton college in massachusetts"
},
{
    "id": "2075",
    "question": "Count the number of religions followed by BJP members.",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/party> <http://dbpedia.org/resource/Bharatiya_Janata_Party> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/party",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religions",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bharatiya_Janata_Party",
    "entity1_mention": "BJP",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2079",
    "question": "What is the almamater of the president whose vice president was Enrique Jos Varona?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/vicePresident> <http://dbpedia.org/resource/Enrique_Jos\u00e9_Varona> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/vicePresident",
    "predicate1_mention": "vice president",
    "predicate2_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate2_mention": "almamater",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Enrique_Jos\u00e9_Varona",
    "entity1_mention": "enrique jos varona",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2081",
    "question": "Directors of which movies are buried in Ronda?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Ronda> . ?uri <http://dbpedia.org/property/director> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/restingPlace",
    "predicate1_mention": "buried in",
    "predicate2_uri": "http://dbpedia.org/property/director",
    "predicate2_mention": "directors",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ronda",
    "entity1_mention": "ronda",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2082",
    "question": "In which states does the river flow whose left tributary is Toms Creek?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Toms_Creek_(Monocacy_River)> <http://dbpedia.org/ontology/leftTributary> ?x . ?x <http://dbpedia.org/ontology/state> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/leftTributary",
    "predicate1_mention": "left tributary",
    "predicate2_uri": "http://dbpedia.org/ontology/state",
    "predicate2_mention": "states",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Toms_Creek_(Monocacy_River)",
    "entity1_mention": "Toms Creek",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2105",
    "question": "Which music band made Take Me There, and to which Tedd Riley was associated?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Teddy_Riley> <http://dbpedia.org/ontology/associatedBand> ?uri. <http://dbpedia.org/resource/Take_Me_There_(Blackstreet_&_M\u00fda_song)> <http://dbpedia.org/ontology/musicalBand> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedBand",
    "predicate1_mention": "associated",
    "predicate2_uri": "http://dbpedia.org/ontology/musicalBand",
    "predicate2_mention": "music band",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Teddy_Riley",
    "entity1_mention": "tedd riley",
    "entity2_uri": "http://dbpedia.org/resource/Take_Me_There_(Blackstreet_&_M\u00fda_song)",
    "entity2_mention": "Take Me There"
},
{
    "id": "2116",
    "question": "Name the team which is owned by Dafenham wind turbines and stood first in 1967 mexican Grand Prix ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1967_Mexican_Grand_Prix> <http://dbpedia.org/property/firstTeam> ?uri. <http://dbpedia.org/resource/Dagenham_wind_turbines> <http://dbpedia.org/property/owner> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/firstTeam",
    "predicate1_mention": "team",
    "predicate2_uri": "http://dbpedia.org/property/owner",
    "predicate2_mention": "owned",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/1967_Mexican_Grand_Prix",
    "entity1_mention": "1967 mexican grand prix",
    "entity2_uri": "http://dbpedia.org/resource/Dagenham_wind_turbines",
    "entity2_mention": "Dafenham wind turbines"
},
{
    "id": "2122",
    "question": "What are the movies whose music composer uses a Hammond organ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Hammond_organ> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/instrument",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/musicComposer",
    "predicate2_mention": "music composer",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Hammond_organ",
    "entity1_mention": "hammond organ",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2125",
    "question": "What religion do the Wickramabahu Centeral College and Neungin High School both follow?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)> <http://dbpedia.org/property/religiousAffiliation> ?uri. <http://dbpedia.org/resource/Neungin_High_School> <http://dbpedia.org/property/religiousAffiliation> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/religiousAffiliation",
    "predicate1_mention": "religion",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)",
    "entity1_mention": "Wickramabahu Centeral College",
    "entity2_uri": "http://dbpedia.org/resource/Neungin_High_School",
    "entity2_mention": "Neungin High School"
},
{
    "id": "2128",
    "question": "Where Everybody knows you is the theme album of which show ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name> <http://dbpedia.org/ontology/album> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/album",
    "predicate1_mention": "album",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name",
    "entity1_mention": "Where Everybody knows you",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2136",
    "question": "What is on the border of the places which fall under crook county municipality, oregon?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/municipality> <http://dbpedia.org/resource/Crook_County,_Oregon> . ?x <http://dbpedia.org/ontology/border> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/municipality",
    "predicate1_mention": "municipality,",
    "predicate2_uri": "http://dbpedia.org/ontology/border",
    "predicate2_mention": "border",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Crook_County,_Oregon",
    "entity1_mention": "crook county municipality, oregon",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2141",
    "question": "Name the company founded in New Mexico and provides Outlook.com as services ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/New_Mexico> . ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Outlook.com>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/foundation",
    "predicate1_mention": "founded in",
    "predicate2_uri": "http://dbpedia.org/property/services",
    "predicate2_mention": "services",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "company",
    "entity1_uri": "http://dbpedia.org/resource/New_Mexico",
    "entity1_mention": "new mexico",
    "entity2_uri": "http://dbpedia.org/resource/Outlook.com",
    "entity2_mention": "outlook.com"
},
{
    "id": "2143",
    "question": "Who edited Easy street ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Easy_Street_(film)> <http://dbpedia.org/ontology/editing> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/editing",
    "predicate1_mention": "edited",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Easy_Street_(film)",
    "entity1_mention": "easy street",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2150",
    "question": "What religion are the characters of Absolutely Fabulous from?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/series> <http://dbpedia.org/resource/Absolutely_Fabulous> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/series",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religion",
    "type_uri": "http://dbpedia.org/ontology/FictionalCharacter",
    "type_mention": "characters",
    "entity1_uri": "http://dbpedia.org/resource/Absolutely_Fabulous",
    "entity1_mention": "absolutely fabulous",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2151",
    "question": "Where does the river begin whose left tributary is Krapanski Potok?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/leftTributary> <http://dbpedia.org/resource/Krapanski_Potok> . ?x <http://dbpedia.org/ontology/source> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/leftTributary",
    "predicate1_mention": "left tributary",
    "predicate2_uri": "http://dbpedia.org/ontology/source",
    "predicate2_mention": "begin",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Krapanski_Potok",
    "entity1_mention": "krapanski potok",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2152",
    "question": "Name all the soccer players who played in a under 18 club for La Liga?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/La_Liga> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/league",
    "predicate1_mention": "played",
    "predicate2_uri": "http://dbpedia.org/property/youthclubs",
    "predicate2_mention": "under 18 club",
    "type_uri": "http://dbpedia.org/ontology/SoccerPlayer",
    "type_mention": "soccer players",
    "entity1_uri": "http://dbpedia.org/resource/La_Liga",
    "entity1_mention": "la liga",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2156",
    "question": "Count the number of region of AN/FSQ-7 Combat Direction Central?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/AN/FSQ-7_Combat_Direction_Central> <http://dbpedia.org/ontology/region> ?uri  . }",
    "sparql_id": "102",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/region",
    "predicate1_mention": "region",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/AN/FSQ-7_Combat_Direction_Central",
    "entity1_mention": "AN/FSQ-7 Combat Direction Central",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2158",
    "question": "Where was Special 26 recorded ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Special_26> <http://dbpedia.org/property/recorded> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/recorded",
    "predicate1_mention": "recorded",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Special_26",
    "entity1_mention": "special 26",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2160",
    "question": "List the people with Scientology as their religious belief?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Scientology>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/religion",
    "predicate1_mention": "religious",
    "predicate2_uri": "http://dbpedia.org/ontology/Person",
    "predicate2_mention": "people",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Scientology",
    "entity1_mention": "scientology",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2161",
    "question": "List common systems are developed by of the Google Videos and written by of the Google Web Toolkit ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Google_Videos> <http://dbpedia.org/property/developer> ?uri. <http://dbpedia.org/resource/Google_Web_Toolkit> <http://dbpedia.org/ontology/author> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/developer",
    "predicate1_mention": "developed",
    "predicate2_uri": "http://dbpedia.org/ontology/author",
    "predicate2_mention": "written by",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Google_Videos",
    "entity1_mention": "google videos",
    "entity2_uri": "http://dbpedia.org/resource/Google_Web_Toolkit",
    "entity2_mention": "Google Web Toolkit"
},
{
    "id": "2165",
    "question": "Is the book The Buddha and his Dhamma a book about Buddhism?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Buddha_and_His_Dhamma> <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Buddhism> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/literaryGenre",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Buddha_and_His_Dhamma",
    "entity1_mention": "The Buddha and his Dhamma",
    "entity2_uri": "http://dbpedia.org/resource/Buddhism",
    "entity2_mention": "buddhism"
},
{
    "id": "2180",
    "question": "For a position in which institution were both Jack Ryan and Robert sarvis both appointed?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jack_Ryan_(politician)> <http://dbpedia.org/ontology/nominee> ?uri. <http://dbpedia.org/resource/Robert_Sarvis> <http://dbpedia.org/ontology/nominee> ?uri . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "sparql_id": "315",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/nominee",
    "predicate1_mention": "appointed",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Organisation",
    "type_mention": "institution",
    "entity1_uri": "http://dbpedia.org/resource/Jack_Ryan_(politician)",
    "entity1_mention": "Jack Ryan",
    "entity2_uri": "http://dbpedia.org/resource/Robert_Sarvis",
    "entity2_mention": "robert sarvis"
},
{
    "id": "2188",
    "question": "Where was Sino-French War fought ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sino-French_War> <http://dbpedia.org/ontology/territory> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/territory",
    "predicate1_mention": "sino-french",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sino-French_War",
    "entity1_mention": "sino-french war",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2190",
    "question": "Who is the owner of  Chelsea F.C. ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chelsea_F.C.> <http://dbpedia.org/property/owner> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/owner",
    "predicate1_mention": "owner",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Chelsea_F.C.",
    "entity1_mention": "chelsea f.c.",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2192",
    "question": "What is the political party of Arun Chandra Guha and Indira Gandhi?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arun_Chandra_Guha> <http://dbpedia.org/ontology/party> ?uri. <http://dbpedia.org/resource/Indira_Gandhi> <http://dbpedia.org/ontology/party> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/party",
    "predicate1_mention": "party",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Arun_Chandra_Guha",
    "entity1_mention": "Arun Chandra Guha",
    "entity2_uri": "http://dbpedia.org/resource/Indira_Gandhi",
    "entity2_mention": "indira gandhi"
},
{
    "id": "2193",
    "question": "How many bacterias are there whose division is Firmicutes?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/division> <http://dbpedia.org/resource/Firmicutes>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bacteria>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/division",
    "predicate1_mention": "division",
    "predicate2_uri": "http://dbpedia.org/ontology/Bacteria",
    "predicate2_mention": "bacterias",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Firmicutes",
    "entity1_mention": "firmicutes",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2200",
    "question": "What famous politician died in the Petersen House?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Petersen_House>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/deathPlace",
    "predicate1_mention": "died in",
    "predicate2_uri": "http://dbpedia.org/ontology/Person",
    "predicate2_mention": "petersen",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Petersen_House",
    "entity1_mention": "petersen house",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2203",
    "question": "Where was the person born who died in Bryn Mawr Hospital?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Bryn_Mawr_Hospital> . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/placeOfDeath",
    "predicate1_mention": "died in",
    "predicate2_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate2_mention": "born",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bryn_Mawr_Hospital",
    "entity1_mention": "Bryn Mawr Hospital",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2204",
    "question": "Name the mountain whose parent peak is located in Mexico.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/State_of_Mexico> . ?uri <http://dbpedia.org/ontology/parentMountainPeak> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/locatedInArea",
    "predicate1_mention": "located",
    "predicate2_uri": "http://dbpedia.org/ontology/parentMountainPeak",
    "predicate2_mention": "parent peak",
    "type_uri": "http://dbpedia.org/ontology/Mountain",
    "type_mention": "mountain",
    "entity1_uri": "http://dbpedia.org/resource/State_of_Mexico",
    "entity1_mention": "Mexico",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2205",
    "question": "Where was Ne daj se Nina first aired ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ne_daj_se,_Nina> <http://dbpedia.org/property/firstAired> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/firstAired",
    "predicate1_mention": "first aired",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ne_daj_se,_Nina",
    "entity1_mention": "Ne daj se Nina",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2214",
    "question": "In which country's cuisine, ham is an important part?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/mainIngredient> <http://dbpedia.org/resource/Ham> . ?x <http://dbpedia.org/property/country> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/mainIngredient",
    "predicate1_mention": "important part",
    "predicate2_uri": "http://dbpedia.org/property/country",
    "predicate2_mention": "country's",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ham",
    "entity1_mention": "ham",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2219",
    "question": "Who operates twin Cities 400 ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Twin_Cities_400> <http://dbpedia.org/ontology/operatedBy> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/operatedBy",
    "predicate1_mention": "operates",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Twin_Cities_400",
    "entity1_mention": "twin cities 400",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2224",
    "question": "What place did Edwin Adams die at, which gave birth to William A Purtell?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Edwin_Adams_(politician)> <http://dbpedia.org/property/placeOfDeath> ?uri. <http://dbpedia.org/resource/William_A._Purtell> <http://dbpedia.org/ontology/birthPlace> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/placeOfDeath",
    "predicate1_mention": "die at",
    "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate2_mention": "gave birth to",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Edwin_Adams_(politician)",
    "entity1_mention": "edwin adams",
    "entity2_uri": "http://dbpedia.org/resource/William_A._Purtell",
    "entity2_mention": "william A purtell"
},
{
    "id": "2237",
    "question": "Count the water bodies that flow into the North Sea?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/North_Sea> <http://dbpedia.org/property/inflow> ?uri  . }",
    "sparql_id": "102",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/inflow",
    "predicate1_mention": "flow into",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/North_Sea",
    "entity1_mention": "the North Sea",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2243",
    "question": "List the sports of PATTS College of Aeronautics which are of interest of Jon Speelman ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/PATTS_College_of_Aeronautics> <http://dbpedia.org/property/athletics> ?uri. <http://dbpedia.org/resource/Jon_Speelman> <http://dbpedia.org/ontology/field> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/athletics",
    "predicate1_mention": "sports",
    "predicate2_uri": "http://dbpedia.org/ontology/field",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/PATTS_College_of_Aeronautics",
    "entity1_mention": "PATTS College of Aeronautics",
    "entity2_uri": "http://dbpedia.org/resource/Jon_Speelman",
    "entity2_mention": "jon speelman"
},
{
    "id": "2255",
    "question": "Name the movies directed by Stanley Kubrick and edited by Anthony Harvey?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Stanley_Kubrick> . ?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Anthony_Harvey>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/director",
    "predicate1_mention": "directed",
    "predicate2_uri": "http://dbpedia.org/property/editing",
    "predicate2_mention": "edited",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Stanley_Kubrick",
    "entity1_mention": "stanley kubrick",
    "entity2_uri": "http://dbpedia.org/resource/Anthony_Harvey",
    "entity2_mention": "anthony harvey"
},
{
    "id": "2261",
    "question": "Did Umkhonto we Sizwe had Nelson Mandela as a commander?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Umkhonto_we_Sizwe> <http://dbpedia.org/property/notableCommanders> <http://dbpedia.org/resource/Nelson_Mandela> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/notableCommanders",
    "predicate1_mention": "commander",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Umkhonto_we_Sizwe",
    "entity1_mention": "umkhonto we sizwe",
    "entity2_uri": "http://dbpedia.org/resource/Nelson_Mandela",
    "entity2_mention": "nelson mandela"
},
{
    "id": "2262",
    "question": "Which location city of the Denver Broncos is the place of birth of Steven Clark Cunningham ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Denver_Broncos> <http://dbpedia.org/ontology/locationCity> ?uri. <http://dbpedia.org/resource/Steven_Clark_Cunningham> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/locationCity",
    "predicate1_mention": "location city",
    "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate2_mention": "place of birth",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Denver_Broncos",
    "entity1_mention": "denver broncos",
    "entity2_uri": "http://dbpedia.org/resource/Steven_Clark_Cunningham",
    "entity2_mention": "steven clark cunningham"
},
{
    "id": "2265",
    "question": "in which movies have momoki kochi acted",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Momoko_K\u014dchi> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/starring",
    "predicate1_mention": "acted",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Momoko_K\u014dchi",
    "entity1_mention": "momoki kochi",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2278",
    "question": "What are the television shows whose network's stockholder is Warner Bros. Television?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Warner_Bros._Television> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/owner",
    "predicate1_mention": "stockholder",
    "predicate2_uri": "http://dbpedia.org/ontology/network",
    "predicate2_mention": "network's",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television shows",
    "entity1_uri": "http://dbpedia.org/resource/Warner_Bros._Television",
    "entity1_mention": "Warner Bros. Television",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2286",
    "question": "Which owner of Chelsea F.C also owns Evraz ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Evraz> <http://dbpedia.org/ontology/owningCompany> ?uri. <http://dbpedia.org/resource/Chelsea_F.C.> <http://dbpedia.org/property/owner> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/owningCompany",
    "predicate1_mention": "owns",
    "predicate2_uri": "http://dbpedia.org/property/owner",
    "predicate2_mention": "owner",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Evraz",
    "entity1_mention": "evraz",
    "entity2_uri": "http://dbpedia.org/resource/Chelsea_F.C.",
    "entity2_mention": "chelsea f.c"
},
{
    "id": "2291",
    "question": "List the ethnicity of Riley Reid?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Riley_Reid> <http://dbpedia.org/property/ethnicity> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/ethnicity",
    "predicate1_mention": "ethnicity",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Riley_Reid",
    "entity1_mention": "riley reid",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2294",
    "question": "Who won the silver medal when the bronze was won by Yang Yilin?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/bronzeMedalist> <http://dbpedia.org/resource/Yang_Yilin> . ?x <http://dbpedia.org/ontology/silverMedalist> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/bronzeMedalist",
    "predicate1_mention": "bronze",
    "predicate2_uri": "http://dbpedia.org/ontology/silverMedalist",
    "predicate2_mention": "silver medal",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Yang_Yilin",
    "entity1_mention": "yang yilin",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2296",
    "question": "Name the office holder with associate as Marcus Calpurnius Bibulus and has a kid named Augustus?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/associate> <http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus> . ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Augustus>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/associate",
    "predicate1_mention": "associate",
    "predicate2_uri": "http://dbpedia.org/ontology/child",
    "predicate2_mention": "kid",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "office holder",
    "entity1_uri": "http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus",
    "entity1_mention": "Marcus Calpurnius Bibulus",
    "entity2_uri": "http://dbpedia.org/resource/Augustus",
    "entity2_mention": "augustus"
},
{
    "id": "2300",
    "question": "Is fox belong to the phylum of Chordate?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Fox> <http://dbpedia.org/ontology/phylum> <http://dbpedia.org/resource/Chordate> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/phylum",
    "predicate1_mention": "phylum",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Fox",
    "entity1_mention": "fox",
    "entity2_uri": "http://dbpedia.org/resource/Chordate",
    "entity2_mention": "chordate"
},
{
    "id": "2324",
    "question": "What is the total number of other destinations of the airlines whose one of the destinations is Mediterranean Sea?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/destinations> <http://dbpedia.org/resource/Mediterranean_Sea> . ?x <http://dbpedia.org/property/destinations> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/destinations",
    "predicate1_mention": "destinations",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mediterranean_Sea",
    "entity1_mention": "mediterranean sea",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2326",
    "question": "List the software developed by Shawn Fanning ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Shawn_Fanning>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/developer",
    "predicate1_mention": "developed by",
    "predicate2_uri": "http://dbpedia.org/ontology/Software",
    "predicate2_mention": "software",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Shawn_Fanning",
    "entity1_mention": "shawn fanning",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2327",
    "question": "Count the number of things people who know linguistics are known for ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Linguistics> . ?x <http://dbpedia.org/ontology/knownFor> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate1_mention": "known for",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Linguistics",
    "entity1_mention": "linguistics",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2332",
    "question": "Who is the stockholder of the road tunnels operated by the Massachusetts Department of Transportation?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/operator> <http://dbpedia.org/resource/Massachusetts_Department_of_Transportation> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoadTunnel>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/operator",
    "predicate1_mention": "operated by",
    "predicate2_uri": "http://dbpedia.org/property/owner",
    "predicate2_mention": "stockholder",
    "type_uri": "http://dbpedia.org/ontology/RoadTunnel",
    "type_mention": "road tunnels",
    "entity1_uri": "http://dbpedia.org/resource/Massachusetts_Department_of_Transportation",
    "entity1_mention": "Massachusetts Department of Transportation",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2336",
    "question": "What is the home stadium of the club coached by Justine Omojong?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Justine_Omojong> . ?x <http://dbpedia.org/property/homeStadium> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/coach",
    "predicate1_mention": "coached by",
    "predicate2_uri": "http://dbpedia.org/property/homeStadium",
    "predicate2_mention": "home stadium",
    "type_uri": "http://dbpedia.org/ontology/SoccerClub",
    "type_mention": "club",
    "entity1_uri": "http://dbpedia.org/resource/Justine_Omojong",
    "entity1_mention": "justine omojong",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2343",
    "question": "Who is the owner of the website which has the label Seed Eight ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Seed_Eight> <http://dbpedia.org/property/label> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Website>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/label",
    "predicate1_mention": "label",
    "predicate2_uri": "http://dbpedia.org/property/owner",
    "predicate2_mention": "owner",
    "type_uri": "http://dbpedia.org/ontology/Website",
    "type_mention": "website",
    "entity1_uri": "http://dbpedia.org/resource/Seed_Eight",
    "entity1_mention": "seed eight",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2349",
    "question": "What is the organisation whose purposes are Environmentalism and Peace?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/purpose> <http://dbpedia.org/resource/Environmentalism> . ?uri <http://dbpedia.org/property/purpose> <http://dbpedia.org/resource/Peace> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/purpose",
    "predicate1_mention": "purposes",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Organisation",
    "type_mention": "organisation",
    "entity1_uri": "http://dbpedia.org/resource/Environmentalism",
    "entity1_mention": "environmentalism",
    "entity2_uri": "http://dbpedia.org/resource/Peace",
    "entity2_mention": "peace"
},
{
    "id": "2360",
    "question": "Name the garrison of the Western Naval Command and line of the Vadodara Junction railway station ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Western_Naval_Command> <http://dbpedia.org/property/garrison> ?uri. <http://dbpedia.org/resource/Vadodara_Junction_railway_station> <http://dbpedia.org/property/line> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/garrison",
    "predicate1_mention": "garrison",
    "predicate2_uri": "http://dbpedia.org/property/line",
    "predicate2_mention": "line",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Western_Naval_Command",
    "entity1_mention": "Western Naval Command",
    "entity2_uri": "http://dbpedia.org/resource/Vadodara_Junction_railway_station",
    "entity2_mention": "vadodara junction railway station"
},
{
    "id": "2362",
    "question": "Which cloud platform of Google cloud connect also provides services to 21Vianet ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/21Vianet> <http://dbpedia.org/property/services> ?uri. <http://dbpedia.org/resource/Google_Cloud_Connect> <http://dbpedia.org/ontology/computingPlatform> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/services",
    "predicate1_mention": "services",
    "predicate2_uri": "http://dbpedia.org/ontology/computingPlatform",
    "predicate2_mention": "cloud platform",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/21Vianet",
    "entity1_mention": "21vianet",
    "entity2_uri": "http://dbpedia.org/resource/Google_Cloud_Connect",
    "entity2_mention": "Google cloud connect"
},
{
    "id": "2363",
    "question": "Who wrote the album coming right before Dead Man's Chest's OST?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/nextAlbum> <http://dbpedia.org/resource/Pirates_of_the_Caribbean:_Dead_Man's_Chest_(soundtrack)> . ?x <http://dbpedia.org/property/writer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/nextAlbum",
    "predicate1_mention": "album coming right",
    "predicate2_uri": "http://dbpedia.org/property/writer",
    "predicate2_mention": "wrote",
    "type_uri": "http://dbpedia.org/ontology/Album",
    "type_mention": "album",
    "entity1_uri": "http://dbpedia.org/resource/Pirates_of_the_Caribbean:_Dead_Man's_Chest_(soundtrack)",
    "entity1_mention": "Dead Man's Chest's OST",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2368",
    "question": "What is the university to which Erica Frank went, and where Ivan Toplak was a club manager?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Erica_Frank> <http://dbpedia.org/ontology/institution> ?uri. <http://dbpedia.org/resource/Ivan_Toplak> <http://dbpedia.org/ontology/managerClub> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/institution",
    "predicate1_mention": "university",
    "predicate2_uri": "http://dbpedia.org/ontology/managerClub",
    "predicate2_mention": "club manager",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Erica_Frank",
    "entity1_mention": "erica frank",
    "entity2_uri": "http://dbpedia.org/resource/Ivan_Toplak",
    "entity2_mention": "ivan toplak"
},
{
    "id": "2371",
    "question": "What is the hometown of the residents of Martha's vineyards?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Martha's_Vineyard> . ?x <http://dbpedia.org/ontology/hometown> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/residence",
    "predicate1_mention": "residents",
    "predicate2_uri": "http://dbpedia.org/ontology/hometown",
    "predicate2_mention": "hometown",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Martha's_Vineyard",
    "entity1_mention": "martha's vineyards",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2376",
    "question": "How many soccer manager have been in the Spain nation football team?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Spain_national_football_team>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/nationalteam",
    "predicate1_mention": "nation football team",
    "predicate2_uri": "http://dbpedia.org/ontology/SoccerManager",
    "predicate2_mention": "soccer manager",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Spain_national_football_team",
    "entity1_mention": "Spain nation football team",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2385",
    "question": "Who is the owner of  Latvian Wikipedia and Wiktionary ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Latvian_Wikipedia> <http://dbpedia.org/ontology/owner> ?uri. <http://dbpedia.org/resource/Wiktionary> <http://dbpedia.org/ontology/owner> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/owner",
    "predicate1_mention": "owner",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Latvian_Wikipedia",
    "entity1_mention": "latvian wikipedia",
    "entity2_uri": "http://dbpedia.org/resource/Wiktionary",
    "entity2_mention": "wiktionary"
},
{
    "id": "2386",
    "question": "Philadelphia City Council is the governing body of which city?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/Philadelphia_City_Council> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/governingBody",
    "predicate1_mention": "governing body",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Philadelphia_City_Council",
    "entity1_mention": "philadelphia city council",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2391",
    "question": "What nation is Hornito located in, where Jamie Bateman Cayn died too?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jaime_Bateman_Cay\u00f3n> <http://dbpedia.org/ontology/deathPlace> ?uri. <http://dbpedia.org/resource/Hornito,_Chiriqu\u00ed> <http://dbpedia.org/ontology/country> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate1_mention": "died",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "nation",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jaime_Bateman_Cay\u00f3n",
    "entity1_mention": "Jamie Bateman Cayn",
    "entity2_uri": "http://dbpedia.org/resource/Hornito,_Chiriqu\u00ed",
    "entity2_mention": "hornito"
},
{
    "id": "2393",
    "question": "List the Sci-fi TV shows with theme music given by Ron Grainer?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/genre> <http://dbpedia.org/resource/Science_fiction> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Ron_Grainer>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/genre",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/themeMusicComposer",
    "predicate2_mention": "theme music given by",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "tv shows",
    "entity1_uri": "http://dbpedia.org/resource/Science_fiction",
    "entity1_mention": "Sci-fi",
    "entity2_uri": "http://dbpedia.org/resource/Ron_Grainer",
    "entity2_mention": "ron grainer"
},
{
    "id": "2394",
    "question": "How many shows belong to the network one of whose sister station is Cartoonite?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/sisterStation> <http://dbpedia.org/resource/Cartoonito> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/sisterStation",
    "predicate1_mention": "sister station",
    "predicate2_uri": "http://dbpedia.org/property/network",
    "predicate2_mention": "network",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "shows",
    "entity1_uri": "http://dbpedia.org/resource/Cartoonito",
    "entity1_mention": "Cartoonite",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2397",
    "question": "Where are all the protected areas near Bend, Oregon?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/nearestCity> <http://dbpedia.org/resource/Bend,_Oregon> . ?x <http://dbpedia.org/ontology/location> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ProtectedArea>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/nearestCity",
    "predicate1_mention": "near",
    "predicate2_uri": "http://dbpedia.org/ontology/location",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/ProtectedArea",
    "type_mention": "protected areas",
    "entity1_uri": "http://dbpedia.org/resource/Bend,_Oregon",
    "entity1_mention": "Bend, Oregon",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2427",
    "question": "Count all the stateless people",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/citizenship> <http://dbpedia.org/resource/Statelessness>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/citizenship",
    "predicate1_mention": "stateless",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Statelessness",
    "entity1_mention": "stateless",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2433",
    "question": "River which flows into the eugene mahoney state park pass through which states?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Eugene_T._Mahoney_State_Park> . ?x <http://dbpedia.org/ontology/state> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/mouthLocation",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/state",
    "predicate2_mention": "state",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Eugene_T._Mahoney_State_Park",
    "entity1_mention": "eugene mahoney state park",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2435",
    "question": "For how many cities's teams did David Bowens play?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/David_Bowens> <http://dbpedia.org/ontology/formerTeam> ?x . ?x <http://dbpedia.org/ontology/locationCity> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
    "sparql_id": "403",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/formerTeam",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/locationCity",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/SportsTeam",
    "type_mention": "teams",
    "entity1_uri": "http://dbpedia.org/resource/David_Bowens",
    "entity1_mention": "david bowens",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2443",
    "question": "What is the political party of the daughter of Jawaharlal Nehru ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jawaharlal_Nehru> <http://dbpedia.org/ontology/child> ?x . ?x <http://dbpedia.org/ontology/party> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/child",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/party",
    "predicate2_mention": "party",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jawaharlal_Nehru",
    "entity1_mention": "jawaharlal nehru",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2444",
    "question": "Where was david Scherman trained ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/David_Scherman> <http://dbpedia.org/property/training> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/training",
    "predicate1_mention": "trained",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/David_Scherman",
    "entity1_mention": "david scherman",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2449",
    "question": "In which country is Sierra del Merendin?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sierra_del_Merend\u00f3n> <http://dbpedia.org/ontology/country> ?uri  . }",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/country",
    "predicate1_mention": "country",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sierra_del_Merend\u00f3n",
    "entity1_mention": "Sierra del Merendin",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2454",
    "question": "Which teams have used the stadium whose architect was Populous ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Populous_(company)> . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/architect",
    "predicate1_mention": "architect",
    "predicate2_uri": "http://dbpedia.org/ontology/tenant",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Stadium",
    "type_mention": "stadium",
    "entity1_uri": "http://dbpedia.org/resource/Populous_(company)",
    "entity1_mention": "populous",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2455",
    "question": "What is the birthplace of Ludovic Boi which is also the residence of Fernando Augustin?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ludovic_Boi> <http://dbpedia.org/ontology/birthPlace> ?uri. <http://dbpedia.org/resource/Fernando_Augustin> <http://dbpedia.org/property/residence> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate1_mention": "birthplace",
    "predicate2_uri": "http://dbpedia.org/property/residence",
    "predicate2_mention": "residence",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ludovic_Boi",
    "entity1_mention": "ludovic boi",
    "entity2_uri": "http://dbpedia.org/resource/Fernando_Augustin",
    "entity2_mention": "fernando augustin"
},
{
    "id": "2472",
    "question": "To which uni. did  sidney c patridge and cyril hume both once went?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sidney_Catlin_Partridge> <http://dbpedia.org/property/education> ?uri. <http://dbpedia.org/resource/Cyril_Hume> <http://dbpedia.org/property/education> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/education",
    "predicate1_mention": "uni",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sidney_Catlin_Partridge",
    "entity1_mention": "sidney c patridge",
    "entity2_uri": "http://dbpedia.org/resource/Cyril_Hume",
    "entity2_mention": "cyril hume"
},
{
    "id": "2479",
    "question": "Name the appointer of William Clark ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Clark> <http://dbpedia.org/property/appointer> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/appointer",
    "predicate1_mention": "appointer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/William_Clark",
    "entity1_mention": "william clark",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2482",
    "question": "What sport played at Islamic azad uni employes Craig Van Tilbury?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Craig_Van_Tilbury> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch> <http://dbpedia.org/ontology/sport> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/occupation",
    "predicate1_mention": "employes",
    "predicate2_uri": "http://dbpedia.org/ontology/sport",
    "predicate2_mention": "sport",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Craig_Van_Tilbury",
    "entity1_mention": "Craig Van Tilbury",
    "entity2_uri": "http://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch",
    "entity2_mention": "islamic azad"
},
{
    "id": "2485",
    "question": "Whose military units are VMF-218 and VMF-155?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/VMF-218> . ?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/VMF-155> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/militaryUnit",
    "predicate1_mention": "military units",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/VMF-218",
    "entity1_mention": "vmf-218",
    "entity2_uri": "http://dbpedia.org/resource/VMF-155",
    "entity2_mention": "vmf-155"
},
{
    "id": "2489",
    "question": "What is the origin of the musical artist of A Todo Romantic Style ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/A_Todo_Romantic_Style> <http://dbpedia.org/property/artist> ?x . ?x <http://dbpedia.org/property/origin> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/artist",
    "predicate1_mention": "artist",
    "predicate2_uri": "http://dbpedia.org/property/origin",
    "predicate2_mention": "origin",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/A_Todo_Romantic_Style",
    "entity1_mention": "A Todo Romantic Style",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2491",
    "question": "Name all the products produced by the producer of United States dollar ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/United_States_dollar> . ?x <http://dbpedia.org/ontology/product> ?uri  . }",
    "sparql_id": "11",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/product",
    "predicate1_mention": "products",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_States_dollar",
    "entity1_mention": "united states dollar",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2502",
    "question": "name the region served by Jerusalem Institue of Justice which was also the conflict region in GazaIsrael ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerusalem_Institute_of_Justice> <http://dbpedia.org/ontology/service> ?uri. <http://dbpedia.org/resource/Gaza\u2013Israel_conflict> <http://dbpedia.org/property/result> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/service",
    "predicate1_mention": "served",
    "predicate2_uri": "http://dbpedia.org/property/result",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jerusalem_Institute_of_Justice",
    "entity1_mention": "Jerusalem Institue of Justice",
    "entity2_uri": "http://dbpedia.org/resource/Gaza\u2013Israel_conflict",
    "entity2_mention": "GazaIsrael"
},
{
    "id": "2504",
    "question": "What are the awards won by the person who wrote the screen play for Lost in Rio ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/OSS_117:_Lost_in_Rio> <http://dbpedia.org/property/screenplay> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/screenplay",
    "predicate1_mention": "screen play",
    "predicate2_uri": "http://dbpedia.org/property/awards",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/OSS_117:_Lost_in_Rio",
    "entity1_mention": "lost in rio",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2508",
    "question": "Did Annie Leibovitz do the cover of The Road Ahead?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Road_Ahead_(Bill_Gates_book)> <http://dbpedia.org/ontology/coverArtist> <http://dbpedia.org/resource/Annie_Leibovitz> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/coverArtist",
    "predicate1_mention": "cover",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Road_Ahead_(Bill_Gates_book)",
    "entity1_mention": "The Road Ahead",
    "entity2_uri": "http://dbpedia.org/resource/Annie_Leibovitz",
    "entity2_mention": "annie leibovitz"
},
{
    "id": "2511",
    "question": "Who  has these major shrines  : Emmitsburg, Maryland and Shrine of St. Elizabeth Ann Bayley Seton?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/majorShrine> <http://dbpedia.org/resource/Emmitsburg,_Maryland> . ?uri <http://dbpedia.org/ontology/majorShrine> <http://dbpedia.org/resource/Shrine_of_St._Elizabeth_Ann_Bayley_Seton> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/majorShrine",
    "predicate1_mention": "major shrines",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Emmitsburg,_Maryland",
    "entity1_mention": "emmitsburg, maryland",
    "entity2_uri": "http://dbpedia.org/resource/Shrine_of_St._Elizabeth_Ann_Bayley_Seton",
    "entity2_mention": "Shrine of St. Elizabeth Ann Bayley Seton"
},
{
    "id": "2523",
    "question": "To which places do the flights go by airlines headquartered in the UK?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/United_Kingdom> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/headquarters",
    "predicate1_mention": "headquartered",
    "predicate2_uri": "http://dbpedia.org/property/destinations",
    "predicate2_mention": "places",
    "type_uri": "http://dbpedia.org/ontology/Airline",
    "type_mention": "airlines",
    "entity1_uri": "http://dbpedia.org/resource/United_Kingdom",
    "entity1_mention": "UK",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2524",
    "question": "Relatives of Moses used to follow which religions?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moses> <http://dbpedia.org/ontology/relative> ?x . ?x <http://dbpedia.org/ontology/veneratedIn> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/relative",
    "predicate1_mention": "relatives",
    "predicate2_uri": "http://dbpedia.org/ontology/veneratedIn",
    "predicate2_mention": "religions",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Moses",
    "entity1_mention": "moses",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2537",
    "question": "Who influenced the author of The Shooting of Dan McGrew ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Shooting_of_Dan_McGrew_(1924_film)> <http://dbpedia.org/ontology/writer> ?x . ?x <http://dbpedia.org/property/influences> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/writer",
    "predicate1_mention": "author",
    "predicate2_uri": "http://dbpedia.org/property/influences",
    "predicate2_mention": "influenced",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Shooting_of_Dan_McGrew_(1924_film)",
    "entity1_mention": "The Shooting of Dan McGrew",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2539",
    "question": "What is the parent company of the airline whose hub is in Detroit?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/hubs> <http://dbpedia.org/resource/Detroit> . ?x <http://dbpedia.org/ontology/parentCompany> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/hubs",
    "predicate1_mention": "hub",
    "predicate2_uri": "http://dbpedia.org/ontology/parentCompany",
    "predicate2_mention": "parent company",
    "type_uri": "http://dbpedia.org/ontology/Airline",
    "type_mention": "airline",
    "entity1_uri": "http://dbpedia.org/resource/Detroit",
    "entity1_mention": "detroit",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2546",
    "question": "Count the PhD students whose thesis are supervised by National Medal of Science winners?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/National_Medal_of_Science> . ?x <http://dbpedia.org/property/doctoralStudents> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/prizes",
    "predicate1_mention": "winners",
    "predicate2_uri": "http://dbpedia.org/property/doctoralStudents",
    "predicate2_mention": "phD students",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/National_Medal_of_Science",
    "entity1_mention": " National Medal of Science",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2549",
    "question": "Name the artist who made Dream Dancing and is often associated with Joe Pass?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Joe_Pass> <http://dbpedia.org/ontology/associatedBand> ?uri. <http://dbpedia.org/resource/Dream_Dancing_(album)> <http://dbpedia.org/property/artist> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedBand",
    "predicate1_mention": "associated",
    "predicate2_uri": "http://dbpedia.org/property/artist",
    "predicate2_mention": "artist",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Joe_Pass",
    "entity1_mention": "joe pass",
    "entity2_uri": "http://dbpedia.org/resource/Dream_Dancing_(album)",
    "entity2_mention": "dream dancing"
},
{
    "id": "2551",
    "question": "What is the relegious affiliations of Katyayana ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Katyayana_(Buddhist)> <http://dbpedia.org/property/religion> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/religion",
    "predicate1_mention": "relegious",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Katyayana_(Buddhist)",
    "entity1_mention": "katyayana",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2556",
    "question": "How many people have led agencies in German occupied Europe?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/jurisdiction> <http://dbpedia.org/resource/German-occupied_Europe> . ?x <http://dbpedia.org/ontology/leader> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/jurisdiction",
    "predicate1_mention": "agencies",
    "predicate2_uri": "http://dbpedia.org/ontology/leader",
    "predicate2_mention": "led",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/German-occupied_Europe",
    "entity1_mention": "German occupied Europe",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2557",
    "question": "What is the citizenship of Saima Chowdhury?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Saima_Chowdhury> <http://dbpedia.org/ontology/citizenship> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/citizenship",
    "predicate1_mention": "citizenship",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Saima_Chowdhury",
    "entity1_mention": "saima chowdhury",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2558",
    "question": "Who was the cover artist of The Adventure of Tom Sawyer also wrote mark Twain Tonight ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer> <http://dbpedia.org/ontology/coverArtist> ?uri. <http://dbpedia.org/resource/Mark_Twain_Tonight> <http://dbpedia.org/property/writer> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/coverArtist",
    "predicate1_mention": "cover artist",
    "predicate2_uri": "http://dbpedia.org/property/writer",
    "predicate2_mention": "wrote",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer",
    "entity1_mention": "The Adventure of Tom Sawyer",
    "entity2_uri": "http://dbpedia.org/resource/Mark_Twain_Tonight",
    "entity2_mention": "mark Twain Tonight"
},
{
    "id": "2560",
    "question": "What religion do the politicians follow, who graduated from the Yokkohama Nationaal University?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Yokohama_National_University> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/almaMater",
    "predicate1_mention": "graduated",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religion",
    "type_uri": "http://dbpedia.org/ontology/Politician",
    "type_mention": "politicians",
    "entity1_uri": "http://dbpedia.org/resource/Yokohama_National_University",
    "entity1_mention": "Yokkohama Nationaal University",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2563",
    "question": "Which battles were fought under the president when Chung Won Shik was the prime minister?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/primeminister> <http://dbpedia.org/resource/Chung_Won-shik> . ?x <http://dbpedia.org/property/battles> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/primeminister",
    "predicate1_mention": "prime minister",
    "predicate2_uri": "http://dbpedia.org/property/battles",
    "predicate2_mention": "battles",
    "type_uri": "http://dbpedia.org/ontology/President",
    "type_mention": "president",
    "entity1_uri": "http://dbpedia.org/resource/Chung_Won-shik",
    "entity1_mention": "Chung Won Shik",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2565",
    "question": "Which are the  automobile platform whose one of the automobile platform is Dodge ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/automobilePlatform> <http://dbpedia.org/resource/Dodge> . ?x <http://dbpedia.org/ontology/automobilePlatform> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/automobilePlatform",
    "predicate1_mention": "automobile platform",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Automobile",
    "type_mention": "automobile",
    "entity1_uri": "http://dbpedia.org/resource/Dodge",
    "entity1_mention": "dodge",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2568",
    "question": "Name the islands that belong to the archipelago whose largest city is Papeete?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Papeete> . ?uri <http://dbpedia.org/property/archipelago> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/largestCity",
    "predicate1_mention": "largest city",
    "predicate2_uri": "http://dbpedia.org/property/archipelago",
    "predicate2_mention": "archipelago",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Papeete",
    "entity1_mention": "papeete",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2590",
    "question": "Where did the beverages sold by Refriango originate?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Refriango> . ?x <http://dbpedia.org/property/origin> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Beverage>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/origin",
    "predicate2_mention": "originate",
    "type_uri": "http://dbpedia.org/ontology/Beverage",
    "type_mention": "beverages",
    "entity1_uri": "http://dbpedia.org/resource/Refriango",
    "entity1_mention": "refriango",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2593",
    "question": "What is the region served by the governor of Stephen L.R. McNichols ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Stephen_L.R._McNichols> <http://dbpedia.org/property/governor> ?x . ?x <http://dbpedia.org/ontology/region> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/governor",
    "predicate1_mention": "governor",
    "predicate2_uri": "http://dbpedia.org/ontology/region",
    "predicate2_mention": "region",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Stephen_L.R._McNichols",
    "entity1_mention": "Stephen L.R. McNichols",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2595",
    "question": "Is morrissey in the smiths?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Morrissey> <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/The_Smiths> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedBand",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Morrissey",
    "entity1_mention": "morrissey",
    "entity2_uri": "http://dbpedia.org/resource/The_Smiths",
    "entity2_mention": "the smiths"
},
{
    "id": "2597",
    "question": "Who is the chancellor of the university whose campus is in Woodlane, New Jersey ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Woodlane,_New_Jersey> . ?x <http://dbpedia.org/property/chancellor> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/campus",
    "predicate1_mention": "campus",
    "predicate2_uri": "http://dbpedia.org/property/chancellor",
    "predicate2_mention": "chancellor",
    "type_uri": "http://dbpedia.org/ontology/University",
    "type_mention": "university",
    "entity1_uri": "http://dbpedia.org/resource/Woodlane,_New_Jersey",
    "entity1_mention": "woodlane, new jersey",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2608",
    "question": "Did the New Way party merge in the One Israel party?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/New_Way_(Israel)> <http://dbpedia.org/ontology/mergedIntoParty> <http://dbpedia.org/resource/One_Israel> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/mergedIntoParty",
    "predicate1_mention": "merge in",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/New_Way_(Israel)",
    "entity1_mention": "New Way party",
    "entity2_uri": "http://dbpedia.org/resource/One_Israel",
    "entity2_mention": "One Israel"
},
{
    "id": "2612",
    "question": "Name some ww1 veterans?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/World_War_I>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/battles",
    "predicate1_mention": "veterans",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/World_War_I",
    "entity1_mention": "ww1",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2613",
    "question": "Where can one find some quick bread in the world?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/type> <http://dbpedia.org/resource/Quick_bread> . ?x <http://dbpedia.org/ontology/region> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/type",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/region",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Quick_bread",
    "entity1_mention": "quick bread",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2616",
    "question": "Was John Muir the first one to ascend one of the peaks in the cathedral peak?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Cathedral_Peak_(California)> <http://dbpedia.org/ontology/firstAscentPerson> <http://dbpedia.org/resource/John_Muir> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/firstAscentPerson",
    "predicate1_mention": "first one to ascend",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Cathedral_Peak_(California)",
    "entity1_mention": "cathedral peak",
    "entity2_uri": "http://dbpedia.org/resource/John_Muir",
    "entity2_mention": "john muir"
},
{
    "id": "2621",
    "question": "What musicians are signed up with colpix records?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Colpix_Records>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/label",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/MusicalArtist",
    "predicate2_mention": "musicians",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Colpix_Records",
    "entity1_mention": "colpix records",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2625",
    "question": "What is the river whose source region is North-Western Province, Zambia and river mouth is Indian Ocean?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia> . ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Indian_Ocean>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/sourceRegion",
    "predicate1_mention": "source region",
    "predicate2_uri": "http://dbpedia.org/ontology/riverMouth",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "river",
    "entity1_uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia",
    "entity1_mention": "north-western province, zambia",
    "entity2_uri": "http://dbpedia.org/resource/Indian_Ocean",
    "entity2_mention": "indian ocean"
},
{
    "id": "2626",
    "question": "What awards have been given to race horses bred by Bert Michell?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/trainer> <http://dbpedia.org/resource/Bert_S._Michell> . ?x <http://dbpedia.org/ontology/honours> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RaceHorse>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/trainer",
    "predicate1_mention": "bred by",
    "predicate2_uri": "http://dbpedia.org/ontology/honours",
    "predicate2_mention": "awards",
    "type_uri": "http://dbpedia.org/ontology/RaceHorse",
    "type_mention": "horses",
    "entity1_uri": "http://dbpedia.org/resource/Bert_S._Michell",
    "entity1_mention": "bert michell",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2635",
    "question": "What sports are played in schools where Swahili is the official language?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/language> <http://dbpedia.org/resource/Swahili_language> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/language",
    "predicate1_mention": "language",
    "predicate2_uri": "http://dbpedia.org/ontology/sport",
    "predicate2_mention": "sports",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Swahili_language",
    "entity1_mention": "swahili",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2637",
    "question": "Which famous horserace has seen both Fergie sutherland and the illustrious War of Attrition?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/War_Of_Attrition_(horse)> <http://dbpedia.org/property/race> ?uri. <http://dbpedia.org/resource/Fergie_Sutherland> <http://dbpedia.org/property/race> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/race",
    "predicate1_mention": "horserace",
    "predicate2_uri": "http://dbpedia.org/property/race",
    "predicate2_mention": "horserace",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/War_Of_Attrition_(horse)",
    "entity1_mention": "illustrious War of Attrition",
    "entity2_uri": "http://dbpedia.org/resource/Fergie_Sutherland",
    "entity2_mention": "fergie sutherland"
},
{
    "id": "2645",
    "question": "Which governer of Winston bryant is also the president of Carl Stokes ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Winston_Bryant> <http://dbpedia.org/property/governor> ?uri. <http://dbpedia.org/resource/Carl_Stokes> <http://dbpedia.org/property/president> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/governor",
    "predicate1_mention": "governer",
    "predicate2_uri": "http://dbpedia.org/property/president",
    "predicate2_mention": "president",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Winston_Bryant",
    "entity1_mention": "winston bryant",
    "entity2_uri": "http://dbpedia.org/resource/Carl_Stokes",
    "entity2_mention": "carl stokes"
},
{
    "id": "2660",
    "question": "Which military unit garrison is Arlington County, Virginia and The Pentagon?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/garrison> <http://dbpedia.org/resource/Arlington_County,_Virginia> . ?uri <http://dbpedia.org/property/garrison> <http://dbpedia.org/resource/The_Pentagon>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/garrison",
    "predicate1_mention": "garrison",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/MilitaryUnit",
    "type_mention": "military unit",
    "entity1_uri": "http://dbpedia.org/resource/Arlington_County,_Virginia",
    "entity1_mention": "Arlington County, Virginia",
    "entity2_uri": "http://dbpedia.org/resource/The_Pentagon",
    "entity2_mention": "the pentagon"
},
{
    "id": "2674",
    "question": "Was John Boehner the winner of the US House of Representatives elections in Ohio in 2010?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/United_States_House_of_Representatives_elections_in_Ohio,_2010> <http://dbpedia.org/property/incumbent> <http://dbpedia.org/resource/John_Boehner> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/incumbent",
    "predicate1_mention": "winner",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections_in_Ohio,_2010",
    "entity1_mention": "the US House of Representatives elections in Ohio in 2010",
    "entity2_uri": "http://dbpedia.org/resource/John_Boehner",
    "entity2_mention": "john boehner"
},
{
    "id": "2675",
    "question": "What is the alma mater of the scientist  whose PhD advisor is Jean-Claude Latombe ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/doctoralAdvisor> <http://dbpedia.org/resource/Jean-Claude_Latombe> . ?x <http://dbpedia.org/property/almaMater> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/doctoralAdvisor",
    "predicate1_mention": "phD advisor",
    "predicate2_uri": "http://dbpedia.org/property/almaMater",
    "predicate2_mention": "alma mater",
    "type_uri": "http://dbpedia.org/ontology/Scientist",
    "type_mention": "scientist",
    "entity1_uri": "http://dbpedia.org/resource/Jean-Claude_Latombe",
    "entity1_mention": "jean-claude latombe",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2681",
    "question": "What is the river whose mouth mountain is St. Louis and right tributary is Madison River?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/St._Louis> . ?uri <http://dbpedia.org/ontology/rightTributary> <http://dbpedia.org/resource/Madison_River>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/river>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/mouthMountain",
    "predicate1_mention": "mouth mountain",
    "predicate2_uri": "http://dbpedia.org/ontology/rightTributary",
    "predicate2_mention": "right tributary",
    "type_uri": "http://dbpedia.org/ontology/river",
    "type_mention": "river",
    "entity1_uri": "http://dbpedia.org/resource/St._Louis",
    "entity1_mention": "St. Louis",
    "entity2_uri": "http://dbpedia.org/resource/Madison_River",
    "entity2_mention": "Madison River"
},
{
    "id": "2687",
    "question": "Name the country with currency as Aureus ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Aureus>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/currency",
    "predicate1_mention": "currency",
    "predicate2_uri": "http://dbpedia.org/ontology/Country",
    "predicate2_mention": "country",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Aureus",
    "entity1_mention": "aureus",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2690",
    "question": "Where is the headquarters of the public transit system which owns Target Field, a Metro Transit Station  ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Target_Field_(Metro_Transit_station)> <http://dbpedia.org/ontology/owningOrganisation> ?x . ?x <http://dbpedia.org/property/headquarters> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/owningOrganisation",
    "predicate1_mention": "station",
    "predicate2_uri": "http://dbpedia.org/property/headquarters",
    "predicate2_mention": "headquarters",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Target_Field_(Metro_Transit_station)",
    "entity1_mention": "Target Field, a Metro Transit Station",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2693",
    "question": "Which party won both the general election and the andhra pradesh election in 2004?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Indian_general_election,_2004_(Delhi)> <http://dbpedia.org/ontology/affiliation> ?uri. <http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)> <http://dbpedia.org/ontology/affiliation> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/affiliation",
    "predicate1_mention": "election",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Indian_general_election,_2004_(Delhi)",
    "entity1_mention": "general election",
    "entity2_uri": "http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)",
    "entity2_mention": "andhra pradesh election in 2004"
},
{
    "id": "2695",
    "question": "Which airlines fly to Gimhae International Airport?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Gimhae_International_Airport> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/targetAirport",
    "predicate1_mention": "airlines",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Gimhae_International_Airport",
    "entity1_mention": "Gimhae International Airport",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2701",
    "question": "Where is Denver Broncos located ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Denver_Broncos> <http://dbpedia.org/ontology/locationCity> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/locationCity",
    "predicate1_mention": "located",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Denver_Broncos",
    "entity1_mention": "denver broncos",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2703",
    "question": "What is the birthplace of Adugna Deyas and the place where Fiq is located?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fiq,_Ethiopia> <http://dbpedia.org/ontology/country> ?uri. <http://dbpedia.org/resource/Adugna_Deyas> <http://dbpedia.org/property/birthPlace> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/country",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/birthPlace",
    "predicate2_mention": "birthplace",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Fiq,_Ethiopia",
    "entity1_mention": "Fiq",
    "entity2_uri": "http://dbpedia.org/resource/Adugna_Deyas",
    "entity2_mention": "adugna deyas"
},
{
    "id": "2708",
    "question": "Name the movies for which music was given by  Geoffrey Burgon and distributed by Cinema International Corporation?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Geoffrey_Burgon> . ?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Cinema_International_Corporation>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/music",
    "predicate1_mention": "music",
    "predicate2_uri": "http://dbpedia.org/property/distributor",
    "predicate2_mention": "distributed",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Geoffrey_Burgon",
    "entity1_mention": "geoffrey burgon",
    "entity2_uri": "http://dbpedia.org/resource/Cinema_International_Corporation",
    "entity2_mention": "Cinema International Corporation"
},
{
    "id": "2709",
    "question": "Count the total number of academic discipline of the journals whose one of the academic discipline is Neuroimaging ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/academicDiscipline> <http://dbpedia.org/resource/Neuroimaging> . ?x <http://dbpedia.org/ontology/academicDiscipline> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/academicDiscipline",
    "predicate1_mention": "academic discipline",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Neuroimaging",
    "entity1_mention": "neuroimaging",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2712",
    "question": "To which country is Svetlana Navasardyan from?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Svetlana_Navasardyan> <http://dbpedia.org/property/origin> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/origin",
    "predicate1_mention": "from",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Svetlana_Navasardyan",
    "entity1_mention": "Svetlana Navasardyan",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2713",
    "question": "What is the faith of the Ajith Perera and religious affiliation of the Neungin High School?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ajith_Perera> <http://dbpedia.org/ontology/religion> ?uri. <http://dbpedia.org/resource/Neungin_High_School> <http://dbpedia.org/property/religiousAffiliation> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/religion",
    "predicate1_mention": "faith",
    "predicate2_uri": "http://dbpedia.org/property/religiousAffiliation",
    "predicate2_mention": "religious affiliation",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ajith_Perera",
    "entity1_mention": "ajith perera",
    "entity2_uri": "http://dbpedia.org/resource/Neungin_High_School",
    "entity2_mention": "neungin high school"
},
{
    "id": "2717",
    "question": "What are the awards won by the film director of Saraband ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Saraband> <http://dbpedia.org/ontology/director> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/director",
    "predicate1_mention": "director",
    "predicate2_uri": "http://dbpedia.org/property/awards",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Saraband",
    "entity1_mention": "saraband",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2724",
    "question": "What are the notableworks of Russell T Davies?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/property/notableworks> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/notableworks",
    "predicate1_mention": "notableworks",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Russell_T_Davies",
    "entity1_mention": "russell T davies",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2729",
    "question": "Horses grandsired by Sundridge  have won which awards?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/grandsire> <http://dbpedia.org/resource/Sundridge_(horse)> . ?x <http://dbpedia.org/ontology/honours> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/grandsire",
    "predicate1_mention": "grandsired",
    "predicate2_uri": "http://dbpedia.org/ontology/honours",
    "predicate2_mention": "awards",
    "type_uri": "http://dbpedia.org/ontology/Horse",
    "type_mention": "horses",
    "entity1_uri": "http://dbpedia.org/resource/Sundridge_(horse)",
    "entity1_mention": "sundridge",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2730",
    "question": "What is the nickname of the home stadium of Angels Toru?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Angels_Toru\u0144> <http://dbpedia.org/ontology/homeStadium> ?x . ?x <http://dbpedia.org/property/nickname> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/homeStadium",
    "predicate1_mention": "home stadium",
    "predicate2_uri": "http://dbpedia.org/property/nickname",
    "predicate2_mention": "nickname",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Angels_Toru\u0144",
    "entity1_mention": "angels toru",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2731",
    "question": "What are the bands associated with the artists of My Favorite Girl  ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/My_Favorite_Girl_(Dave_Hollister_song)> <http://dbpedia.org/property/artist> ?x . ?x <http://dbpedia.org/ontology/associatedBand> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/artist",
    "predicate1_mention": "artists",
    "predicate2_uri": "http://dbpedia.org/ontology/associatedBand",
    "predicate2_mention": "bands associated",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/My_Favorite_Girl_(Dave_Hollister_song)",
    "entity1_mention": "My Favorite Girl",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2733",
    "question": "Which religion do the people follow, whose constituency is Jadavpur?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Jadavpur_(Lok_Sabha_constituency)> . ?x <http://dbpedia.org/property/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/constituency",
    "predicate1_mention": "constituency",
    "predicate2_uri": "http://dbpedia.org/property/religion",
    "predicate2_mention": "religion",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Jadavpur_(Lok_Sabha_constituency)",
    "entity1_mention": "jadavpur",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2734",
    "question": "Name an American football player whose debuted in Chicago Bears and former team is 1998 Baltimore Ravens season?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/debutteam> <http://dbpedia.org/resource/Chicago_Bears> . ?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/1998_Baltimore_Ravens_season>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/debutteam",
    "predicate1_mention": "debuted",
    "predicate2_uri": "http://dbpedia.org/ontology/formerTeam",
    "predicate2_mention": "former team",
    "type_uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
    "type_mention": "american football player",
    "entity1_uri": "http://dbpedia.org/resource/Chicago_Bears",
    "entity1_mention": "chicago bears",
    "entity2_uri": "http://dbpedia.org/resource/1998_Baltimore_Ravens_season",
    "entity2_mention": "1998 Baltimore Ravens season"
},
{
    "id": "2735",
    "question": "What other things are provided by the producer of Office 365?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/service> <http://dbpedia.org/resource/Office_365> . ?x <http://dbpedia.org/property/services> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/service",
    "predicate1_mention": "provided by",
    "predicate2_uri": "http://dbpedia.org/property/services",
    "predicate2_mention": "provided by",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Office_365",
    "entity1_mention": "office 365",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2738",
    "question": "What are the software whose programming language are Multilingual?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/language> <http://dbpedia.org/resource/Multilingualism> . ?uri <http://dbpedia.org/property/programmingLanguage> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/language",
    "predicate1_mention": "language",
    "predicate2_uri": "http://dbpedia.org/property/programmingLanguage",
    "predicate2_mention": "programming language",
    "type_uri": "http://dbpedia.org/ontology/Software",
    "type_mention": "software",
    "entity1_uri": "http://dbpedia.org/resource/Multilingualism",
    "entity1_mention": "multilingual",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2739",
    "question": "What is the political party of the person succeeded by A.K. Singh?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/A._K._Singh> . ?x <http://dbpedia.org/property/party> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/successor",
    "predicate1_mention": "succeeded",
    "predicate2_uri": "http://dbpedia.org/property/party",
    "predicate2_mention": "party",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "person",
    "entity1_uri": "http://dbpedia.org/resource/A._K._Singh",
    "entity1_mention": " A.K. Singh",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2744",
    "question": "What was the career of some people who have committed suicide?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/deathCause> <http://dbpedia.org/resource/Suicide> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/deathCause",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/occupation",
    "predicate2_mention": "career",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Suicide",
    "entity1_mention": "suicide",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2745",
    "question": "Is Pittsburgh Steelers the former team of Marv McFadden?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Marv_McFadden> <http://dbpedia.org/property/pastteams> <http://dbpedia.org/resource/Pittsburgh_Steelers> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/pastteams",
    "predicate1_mention": "former team",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Marv_McFadden",
    "entity1_mention": "marv mcfadden",
    "entity2_uri": "http://dbpedia.org/resource/Pittsburgh_Steelers",
    "entity2_mention": "pittsburgh steelers"
},
{
    "id": "2747",
    "question": "Name the institute of Alton Ochsner ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alton_Ochsner> <http://dbpedia.org/ontology/institution> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/institution",
    "predicate1_mention": "institute",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Alton_Ochsner",
    "entity1_mention": "alton ochsner",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2756",
    "question": "Was James maker in the band Noko?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Noko> <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/James_Maker> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedBand",
    "predicate1_mention": "band",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Noko",
    "entity1_mention": "noko",
    "entity2_uri": "http://dbpedia.org/resource/James_Maker",
    "entity2_mention": "james maker"
},
{
    "id": "2762",
    "question": "Name the constituency of Jonas Gahr where Sverre Krogh was born ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jonas_Gahr_St\u00f8re> <http://dbpedia.org/property/constituency> ?uri. <http://dbpedia.org/resource/Sverre_Krogh_Sundb\u00f8> <http://dbpedia.org/property/birthPlace> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/constituency",
    "predicate1_mention": "constituency",
    "predicate2_uri": "http://dbpedia.org/property/birthPlace",
    "predicate2_mention": "born",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jonas_Gahr_St\u00f8re",
    "entity1_mention": "jonas gahr",
    "entity2_uri": "http://dbpedia.org/resource/Sverre_Krogh_Sundb\u00f8",
    "entity2_mention": "sverre krogh"
},
{
    "id": "2766",
    "question": "Which company owns Sony bank ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sony_Bank> <http://dbpedia.org/ontology/owningCompany> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/owningCompany",
    "predicate1_mention": "company",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sony_Bank",
    "entity1_mention": "sony bank",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2773",
    "question": "who was the president under whom winston bryant served as a lieutenant?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/lieutenant> <http://dbpedia.org/resource/Winston_Bryant> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/lieutenant",
    "predicate1_mention": "lieutenant",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Winston_Bryant",
    "entity1_mention": "winston bryant",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2774",
    "question": "Is Essex the Ceremonial County of West Tilbury?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/West_Tilbury> <http://dbpedia.org/ontology/ceremonialCounty> <http://dbpedia.org/resource/Essex> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/ceremonialCounty",
    "predicate1_mention": "ceremonial county",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/West_Tilbury",
    "entity1_mention": "west tilbury",
    "entity2_uri": "http://dbpedia.org/resource/Essex",
    "entity2_mention": "essex"
},
{
    "id": "2777",
    "question": "Which director of On deadly Ground also released Mojo Priest ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mojo_Priest> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/On_Deadly_Ground> <http://dbpedia.org/property/director> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/artist",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/director",
    "predicate2_mention": "director",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mojo_Priest",
    "entity1_mention": "Mojo Priest",
    "entity2_uri": "http://dbpedia.org/resource/On_Deadly_Ground",
    "entity2_mention": "on deadly ground"
},
{
    "id": "2779",
    "question": "Name the common nationality of Georgina Theodora Wood and akwasi Oppong Fosu ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Georgina_Theodora_Wood> <http://dbpedia.org/ontology/nationality> ?uri. <http://dbpedia.org/resource/Akwasi_Oppong_Fosu> <http://dbpedia.org/ontology/nationality> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/nationality",
    "predicate1_mention": "nationality",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Georgina_Theodora_Wood",
    "entity1_mention": "Georgina Theodora Wood",
    "entity2_uri": "http://dbpedia.org/resource/Akwasi_Oppong_Fosu",
    "entity2_mention": "akwasi oppong fosu"
},
{
    "id": "2782",
    "question": "What is the sovereign state of the Dafydd Benfras where Jasmine Lowson is also citizen of ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dafydd_Benfras> <http://dbpedia.org/ontology/country> ?uri. <http://dbpedia.org/resource/Jasmine_Lowson> <http://dbpedia.org/ontology/citizenship> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/country",
    "predicate1_mention": "sovereign state",
    "predicate2_uri": "http://dbpedia.org/ontology/citizenship",
    "predicate2_mention": "citizen",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Dafydd_Benfras",
    "entity1_mention": "dafydd benfras",
    "entity2_uri": "http://dbpedia.org/resource/Jasmine_Lowson",
    "entity2_mention": "jasmine lowson"
},
{
    "id": "2783",
    "question": "What are the nicknames given to the characters of The Wolves of the Mercy Falls?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/List_of_The_Wolves_of_Mercy_Falls_characters> <http://dbpedia.org/property/nickname> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/nickname",
    "predicate1_mention": "nicknames",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/List_of_The_Wolves_of_Mercy_Falls_characters",
    "entity1_mention": "characters of The Wolves of the Mercy Falls",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2786",
    "question": "List the territory of Tonkin Campaign ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tonkin_Campaign> <http://dbpedia.org/ontology/territory> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/territory",
    "predicate1_mention": "territory",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tonkin_Campaign",
    "entity1_mention": "tonkin campaign",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2790",
    "question": "What other awards have been given to Golden Globe winners?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Golden_Globe_Award> . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/award",
    "predicate1_mention": "awards",
    "predicate2_uri": "http://dbpedia.org/property/awards",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Golden_Globe_Award",
    "entity1_mention": "golden globe",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2797",
    "question": "Name the tenants of MAsterCard center wich is also the draft team of Antoine Bibeau?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/MasterCard_Centre> <http://dbpedia.org/property/tenants> ?uri. <http://dbpedia.org/resource/Antoine_Bibeau> <http://dbpedia.org/property/draftTeam> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/tenants",
    "predicate1_mention": "tenants",
    "predicate2_uri": "http://dbpedia.org/property/draftTeam",
    "predicate2_mention": "draft team",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/MasterCard_Centre",
    "entity1_mention": "mastercard center",
    "entity2_uri": "http://dbpedia.org/resource/Antoine_Bibeau",
    "entity2_mention": "antoine bibeau"
},
{
    "id": "2806",
    "question": "Which awards have been given to scientists that graduated from NKU athens?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_and_Kapodistrian_University_of_Athens> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate1_mention": "graduated",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "awards",
    "type_uri": "http://dbpedia.org/ontology/Scientist",
    "type_mention": "scientists",
    "entity1_uri": "http://dbpedia.org/resource/National_and_Kapodistrian_University_of_Athens",
    "entity1_mention": "nku athens",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2808",
    "question": "Name the club of Julie Hastings ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Julie_Hastings> <http://dbpedia.org/ontology/club> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/club",
    "predicate1_mention": "club",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Julie_Hastings",
    "entity1_mention": "Julie Hastings" ,
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2811",
    "question": "Whose creators are Jerry Seinfeld and Larry David?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Jerry_Seinfeld> . ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Larry_David> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/creator",
    "predicate1_mention": "creators",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jerry_Seinfeld",
    "entity1_mention": "jerry seinfeld",
    "entity2_uri": "http://dbpedia.org/resource/Larry_David",
    "entity2_mention": "larry david"
},
{
    "id": "2814",
    "question": "Which artist married to Lee Krasner?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Lee_Krasner>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/spouse",
    "predicate1_mention": "married to",
    "predicate2_uri": "http://dbpedia.org/ontology/Artist",
    "predicate2_mention": "artist",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lee_Krasner",
    "entity1_mention": "lee krasner",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2816",
    "question": "Was Francisco Pizarro of the monarch of Charles 5, of the roman empire?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Francisco_Pizarro> <http://dbpedia.org/ontology/monarch> <http://dbpedia.org/resource/Charles_V,_Holy_Roman_Emperor> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/monarch",
    "predicate1_mention": "monarch",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Francisco_Pizarro",
    "entity1_mention": "francisco pizarro",
    "entity2_uri": "http://dbpedia.org/resource/Charles_V,_Holy_Roman_Emperor",
    "entity2_mention": "Charles 5, of the roman empire"
},
{
    "id": "2824",
    "question": "Who appointed both John Drayton and William Clark to their respective offices?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Drayton> <http://dbpedia.org/property/appointer> ?uri. <http://dbpedia.org/resource/William_Clark> <http://dbpedia.org/property/appointer> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/appointer",
    "predicate1_mention": "appointed",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/John_Drayton",
    "entity1_mention": " john drayton",
    "entity2_uri": "http://dbpedia.org/resource/William_Clark",
    "entity2_mention": "william clark"
},
{
    "id": "2831",
    "question": "Who debuted their career in a team coached by Chip Kelly?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Chip_Kelly> . ?uri <http://dbpedia.org/ontology/debutTeam> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/coach",
    "predicate1_mention": "coached",
    "predicate2_uri": "http://dbpedia.org/ontology/debutTeam",
    "predicate2_mention": "debuted",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Chip_Kelly",
    "entity1_mention": "chip kelly",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2832",
    "question": "How many albums did the maker of The Band produce?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/The_Band> . ?x <http://dbpedia.org/ontology/subsequentWork> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/artist",
    "predicate1_mention": "maker",
    "predicate2_uri": "http://dbpedia.org/ontology/subsequentWork",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Album",
    "type_mention": "albums",
    "entity1_uri": "http://dbpedia.org/resource/The_Band",
    "entity1_mention": "The Band",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2838",
    "question": "Name few movies directed by Tim Burton ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Tim_Burton>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/director",
    "predicate1_mention": "directed",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Tim_Burton",
    "entity1_mention": "tim burton",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2839",
    "question": "Who has fought in wars under commander Arthur St Clair?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_St._Clair> . ?x <http://dbpedia.org/property/combatant> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/commander",
    "predicate1_mention": "commander",
    "predicate2_uri": "http://dbpedia.org/property/combatant",
    "predicate2_mention": "wars",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Arthur_St._Clair",
    "entity1_mention": "arthur st clair",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2849",
    "question": "What is telecasted on the network where Deborah Turness holds important position?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Deborah_Turness> . ?uri <http://dbpedia.org/ontology/network> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/keyPerson",
    "predicate1_mention": "holds important position",
    "predicate2_uri": "http://dbpedia.org/ontology/network",
    "predicate2_mention": "network",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Deborah_Turness",
    "entity1_mention": "deborah turness",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2853",
    "question": "Who is the owner of the bank which owns Bloomberg Radio?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bloomberg_Radio> <http://dbpedia.org/ontology/owner> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/owner",
    "predicate1_mention": "owner",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Bank",
    "type_mention": "bank",
    "entity1_uri": "http://dbpedia.org/resource/Bloomberg_Radio",
    "entity1_mention": "bloomberg radio",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2861",
    "question": "What is a common ingredient used in boyt Blodpalt and Kaszanka ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Blodpalt> <http://dbpedia.org/ontology/ingredient> ?uri. <http://dbpedia.org/resource/Kaszanka> <http://dbpedia.org/ontology/ingredient> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/ingredient",
    "predicate1_mention": "ingredient",
    "predicate2_uri": "http://dbpedia.org/ontology/ingredient",
    "predicate2_mention": "ingredient",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Blodpalt",
    "entity1_mention": "blodpalt",
    "entity2_uri": "http://dbpedia.org/resource/Kaszanka",
    "entity2_mention": "kaszanka"
},
{
    "id": "2869",
    "question": "what kind of things play on WBIG FM?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WBIG-FM> <http://dbpedia.org/ontology/programmeFormat> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/programmeFormat",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/WBIG-FM",
    "entity1_mention": "wbig fm",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2870",
    "question": "What is the serving railway line of Warwick railway station, Perth ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Warwick_railway_station,_Perth> <http://dbpedia.org/ontology/servingRailwayLine> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/servingRailwayLine",
    "predicate1_mention": "serving railway line",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Warwick_railway_station,_Perth",
    "entity1_mention": "Warwick railway station, Perth",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2871",
    "question": "Who was the prime minister under which the predecessor of Derick Heathcoat Amory served?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Derick_Heathcoat-Amory,_1st_Viscount_Amory> . ?x <http://dbpedia.org/property/primeminister> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/successor",
    "predicate1_mention": "predecessor",
    "predicate2_uri": "http://dbpedia.org/property/primeminister",
    "predicate2_mention": "prime minister",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Derick_Heathcoat-Amory,_1st_Viscount_Amory",
    "entity1_mention": "Derick Heathcoat Amory",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2872",
    "question": "Who wrote the subsequent work of One Day at a Time (Em's Version) ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/One_Day_at_a_Time_(Em's_Version)> <http://dbpedia.org/ontology/subsequentWork> ?x . ?x <http://dbpedia.org/ontology/writer> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/subsequentWork",
    "predicate1_mention": "subsequent work",
    "predicate2_uri": "http://dbpedia.org/ontology/writer",
    "predicate2_mention": "wrote",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/One_Day_at_a_Time_(Em's_Version)",
    "entity1_mention": "One Day at a Time (Em's Version)",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2878",
    "question": "List the movies edited by Julian Doyle in which music was composed by Geoffrey Brugon ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Geoffrey_Burgon> . ?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Julian_Doyle_(filmmaker)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/music",
    "predicate1_mention": "music",
    "predicate2_uri": "http://dbpedia.org/property/editing",
    "predicate2_mention": "edited",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Geoffrey_Burgon",
    "entity1_mention": "Geoffrey Brugon",
    "entity2_uri": "http://dbpedia.org/resource/Julian_Doyle_(filmmaker)",
    "entity2_mention": "julian doyle"
},
{
    "id": "2888",
    "question": "Is Anne Hidalgo the mayor of Paris?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Paris> <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Anne_Hidalgo> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/mayor",
    "predicate1_mention": "mayor",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Paris",
    "entity1_mention": "paris",
    "entity2_uri": "http://dbpedia.org/resource/Anne_Hidalgo",
    "entity2_mention": "anne hidalgo"
},
{
    "id": "2891",
    "question": "In which city of Pittsburg Steelers was the Congress of Inductrial Organization founded ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Congress_of_Industrial_Organizations> <http://dbpedia.org/property/founded> ?uri. <http://dbpedia.org/resource/Pittsburgh_Steelers> <http://dbpedia.org/property/city> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/founded",
    "predicate1_mention": "founded",
    "predicate2_uri": "http://dbpedia.org/property/city",
    "predicate2_mention": "city",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Congress_of_Industrial_Organizations",
    "entity1_mention": "Congress of Inductrial Organization",
    "entity2_uri": "http://dbpedia.org/resource/Pittsburgh_Steelers",
    "entity2_mention": "pittsburg steelers"
},
{
    "id": "2896",
    "question": "What are the settlements whose neighboring municipalities is Lancy?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Lancy>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/neighboringMunicipalities",
    "predicate1_mention": "neighboring municipalities",
    "predicate2_uri": "http://dbpedia.org/ontology/Settlement",
    "predicate2_mention": "settlements",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lancy",
    "entity1_mention": "lancy",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2898",
    "question": "What currencies are used in the country whose capital is Podgorica?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Podgorica> . ?x <http://dbpedia.org/property/currency> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/capital",
    "predicate1_mention": "capital",
    "predicate2_uri": "http://dbpedia.org/property/currency",
    "predicate2_mention": "currencies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Podgorica",
    "entity1_mention": "podgorica",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2901",
    "question": "Which rivers start from the Provinces of Zambia?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/settlementType> <http://dbpedia.org/resource/Provinces_of_Zambia> . ?uri <http://dbpedia.org/ontology/sourceRegion> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/settlementType",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/sourceRegion",
    "predicate2_mention": "start from",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "rivers",
    "entity1_uri": "http://dbpedia.org/resource/Provinces_of_Zambia",
    "entity1_mention": "provinces of zambia",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2904",
    "question": "Georg Meissner was doctoral supervisor of which scientist ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Georg_Meissner>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/doctoralAdvisor",
    "predicate1_mention": "doctoral supervisor",
    "predicate2_uri": "http://dbpedia.org/ontology/Scientist",
    "predicate2_mention": "scientist",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Georg_Meissner",
    "entity1_mention": "georg meissner",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2911",
    "question": "How many movies have a screenplay located in the States?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/screenplay> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate1_mention": "located",
    "predicate2_uri": "http://dbpedia.org/property/screenplay",
    "predicate2_mention": "screenplay",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/United_States",
    "entity1_mention": "states",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2912",
    "question": "Which companies were behind the renovation of McKechnie Field ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/McKechnie_Field> <http://dbpedia.org/property/architect> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/architect",
    "predicate1_mention": "companies",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/McKechnie_Field",
    "entity1_mention": "mckechnie field",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2914",
    "question": "What is the location country of Teperberg 1870 ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Teperberg_1870> <http://dbpedia.org/property/locationCountry> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/locationCountry",
    "predicate1_mention": "location country",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Teperberg_1870",
    "entity1_mention": "teperberg 1870",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2919",
    "question": "what cities are close by LoDaisKa ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/LoDaisKa_Site> <http://dbpedia.org/ontology/nearestCity> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/nearestCity",
    "predicate1_mention": "close by",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/LoDaisKa_Site",
    "entity1_mention": "lodaiska",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2923",
    "question": "List the softwares which runs on Microsoft Windows and has license as Software as a service?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows> . ?uri <http://dbpedia.org/ontology/license> <http://dbpedia.org/resource/Software_as_a_service>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/operatingSystem",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/license",
    "predicate2_mention": "license",
    "type_uri": "http://dbpedia.org/ontology/Software",
    "type_mention": "software",
    "entity1_uri": "http://dbpedia.org/resource/Microsoft_Windows",
    "entity1_mention": "microsoft windows",
    "entity2_uri": "http://dbpedia.org/resource/Software_as_a_service",
    "entity2_mention": "Software as a service"
},
{
    "id": "2928",
    "question": "Where was the engineer born who manufactured EP R.E.P. 1?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Esnault-Pelterie_R.E.P._1> <http://dbpedia.org/property/manufacturer> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/manufacturer",
    "predicate1_mention": "manufactured",
    "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate2_mention": "born",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Esnault-Pelterie_R.E.P._1",
    "entity1_mention": "EP R.E.P. 1",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2931",
    "question": "Which sport at Polytechnic University of the Philippines Taguig is the field of Jon speelman ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jon_Speelman> <http://dbpedia.org/ontology/field> ?uri. <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig> <http://dbpedia.org/ontology/sport> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/field",
    "predicate1_mention": "field",
    "predicate2_uri": "http://dbpedia.org/ontology/sport",
    "predicate2_mention": "sport",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jon_Speelman",
    "entity1_mention": "jon speelman",
    "entity2_uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig",
    "entity2_mention": "Polytechnic University of the Philippines Taguig"
},
{
    "id": "2933",
    "question": "Which senator served in military units VMF-155 and VMF-218?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/VMF-155> . ?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/VMF-218> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Senator>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/militaryUnit",
    "predicate1_mention": "military units",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Senator",
    "type_mention": "senator",
    "entity1_uri": "http://dbpedia.org/resource/VMF-155",
    "entity1_mention": "vmf-155",
    "entity2_uri": "http://dbpedia.org/resource/VMF-218",
    "entity2_mention": "vmf-218"
},
{
    "id": "2935",
    "question": "Does the Ontario International Airport serve the Inland Empire?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ontario_International_Airport> <http://dbpedia.org/property/cityServed> <http://dbpedia.org/resource/Inland_Empire> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/cityServed",
    "predicate1_mention": "serve",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ontario_International_Airport",
    "entity1_mention": "Ontario International Airport",
    "entity2_uri": "http://dbpedia.org/resource/Inland_Empire",
    "entity2_mention": "inland empire"
},
{
    "id": "2938",
    "question": "Give me list of people who were the first to climb a peak in the Yosemite park?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Yosemite_National_Park> . ?x <http://dbpedia.org/ontology/firstAscentPerson> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/locatedInArea",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/firstAscentPerson",
    "predicate2_mention": "first to climb a peak",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Yosemite_National_Park",
    "entity1_mention": "yosemite park",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2947",
    "question": "Which garrison of East Indies Station is also the route end of Mumbai Vadodara Express ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mumbai_Vadodara_Expressway> <http://dbpedia.org/ontology/routeEnd> ?uri. <http://dbpedia.org/resource/East_Indies_Station> <http://dbpedia.org/ontology/garrison> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/routeEnd",
    "predicate1_mention": "route end",
    "predicate2_uri": "http://dbpedia.org/ontology/garrison",
    "predicate2_mention": "garrison",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mumbai_Vadodara_Expressway",
    "entity1_mention": "Mumbai Vadodara Express",
    "entity2_uri": "http://dbpedia.org/resource/East_Indies_Station",
    "entity2_mention": "east indies station"
},
{
    "id": "2950",
    "question": "Does Mauritius follow a parliamentary republic?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mauritius> <http://dbpedia.org/property/governmentType> <http://dbpedia.org/resource/Parliamentary_republic> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/governmentType",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mauritius",
    "entity1_mention": "mauritius",
    "entity2_uri": "http://dbpedia.org/resource/Parliamentary_republic",
    "entity2_mention": "parliamentary republic"
},
{
    "id": "2956",
    "question": "Count the number of important works done by the writers of The Second Coming?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/The_Second_Coming_(TV_serial)> <http://dbpedia.org/ontology/author> ?x . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . }",
    "sparql_id": "103",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/author",
    "predicate1_mention": "writers",
    "predicate2_uri": "http://dbpedia.org/ontology/notableWork",
    "predicate2_mention": "important works",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Second_Coming_(TV_serial)",
    "entity1_mention": "the second coming",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2958",
    "question": "who owns the ship Victoria?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Victoria_(ship)> <http://dbpedia.org/ontology/owner> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/owner",
    "predicate1_mention": "owns",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Victoria_(ship)",
    "entity1_mention": "ship victoria",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2959",
    "question": "What is the base currency of the Benelux and is also used as money in Kerguelen Islands?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Benelux> <http://dbpedia.org/property/currency> ?uri. <http://dbpedia.org/resource/Kerguelen_Islands> <http://dbpedia.org/ontology/currency> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/currency",
    "predicate1_mention": "currency",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Benelux",
    "entity1_mention": "benelux",
    "entity2_uri": "http://dbpedia.org/resource/Kerguelen_Islands",
    "entity2_mention": "kerguelen islands"
},
{
    "id": "2961",
    "question": "List the places where the relatives of Mark Donaldson died ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mark_Donaldson_(rugby_player)> <http://dbpedia.org/property/relatives> ?x . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/relatives",
    "predicate1_mention": "relatives",
    "predicate2_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate2_mention": "died",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mark_Donaldson_(rugby_player)",
    "entity1_mention": "mark donaldson",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2965",
    "question": "Give me everything owned by networks which is lead by Steve Burke?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Steve_Burke_(businessman)> . ?uri <http://dbpedia.org/ontology/network> ?x  . }",
    "sparql_id": "106",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/keyPerson",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/network",
    "predicate2_mention": "networks",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Steve_Burke_(businessman)",
    "entity1_mention": "Steve Burke",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2967",
    "question": "For which teams did Ryan Powell play for?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ryan_Powell_(lacrosse)> <http://dbpedia.org/ontology/team> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/team",
    "predicate1_mention": "teams",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ryan_Powell_(lacrosse)",
    "entity1_mention": "ryan powell",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2975",
    "question": "Who is the founder of the trade union which affiliates Amalgamated Association of Iron and Steel Workers?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Amalgamated_Association_of_Iron_and_Steel_Workers> <http://dbpedia.org/ontology/affiliation> ?x . ?x <http://dbpedia.org/property/founded> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TradeUnion>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/affiliation",
    "predicate1_mention": "affiliates",
    "predicate2_uri": "http://dbpedia.org/property/founded",
    "predicate2_mention": "founder",
    "type_uri": "http://dbpedia.org/ontology/TradeUnion",
    "type_mention": "trade union",
    "entity1_uri": "http://dbpedia.org/resource/Amalgamated_Association_of_Iron_and_Steel_Workers",
    "entity1_mention": "Amalgamated Association of Iron and Steel Workers",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2976",
    "question": "What royalties's sepulchre is Mausoleum of Augustus?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Mausoleum_of_Augustus> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/placeOfBurial",
    "predicate1_mention": "sepulchre",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mausoleum_of_Augustus",
    "entity1_mention": "mausoleum of augustus",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2982",
    "question": "How many cars are similar to the ones assembled in the Jefferson North Assembly?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Jefferson_North_Assembly> . ?x <http://dbpedia.org/property/related> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/assembly",
    "predicate1_mention": "assembly",
    "predicate2_uri": "http://dbpedia.org/property/related",
    "predicate2_mention": "similar to",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jefferson_North_Assembly",
    "entity1_mention": "jefferson north assembly",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2993",
    "question": "Which state does Jerome B. Chaffee belong ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerome_B._Chaffee> <http://dbpedia.org/property/state> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/state",
    "predicate1_mention": "state",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jerome_B._Chaffee",
    "entity1_mention": "Jerome B. Chaffee",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2999",
    "question": "How many TV shows' networks are headquarterd in NY?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/New_York> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/headquarters",
    "predicate1_mention": "headquarterd",
    "predicate2_uri": "http://dbpedia.org/property/network",
    "predicate2_mention": "networks",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "tv shows'",
    "entity1_uri": "http://dbpedia.org/resource/New_York",
    "entity1_mention": "NY",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3005",
    "question": "Where do the politicians, Blanche Bruce and John Franklin Miller work?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Blanche_Bruce> <http://dbpedia.org/property/office> ?uri. <http://dbpedia.org/resource/John_Franklin_Miller_(senator)> <http://dbpedia.org/property/office> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/office",
    "predicate1_mention": "work",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Blanche_Bruce",
    "entity1_mention": "blanche bruce",
    "entity2_uri": "http://dbpedia.org/resource/John_Franklin_Miller_(senator)",
    "entity2_mention": "John Franklin Miller"
},
{
    "id": "3009",
    "question": "What region was Gloria Schaffer born in, which also contains Newington?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gloria_Schaffer> <http://dbpedia.org/property/birthPlace> ?uri. <http://dbpedia.org/resource/Newington,_Connecticut> <http://dbpedia.org/ontology/isPartOf> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/birthPlace",
    "predicate1_mention": "born",
    "predicate2_uri": "http://dbpedia.org/ontology/isPartOf",
    "predicate2_mention": "contains",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Gloria_Schaffer",
    "entity1_mention": "gloria schaffer",
    "entity2_uri": "http://dbpedia.org/resource/Newington,_Connecticut",
    "entity2_mention": "newington"
},
{
    "id": "3016",
    "question": "How many ideologies do the political party of Boonchu Rojanastien hold?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Boonchu_Rojanastien> <http://dbpedia.org/property/party> ?x . ?x <http://dbpedia.org/ontology/ideology> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>}",
    "sparql_id": "403",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/party",
    "predicate1_mention": "party",
    "predicate2_uri": "http://dbpedia.org/ontology/ideology",
    "predicate2_mention": "ideologies",
    "type_uri": "http://dbpedia.org/ontology/PoliticalParty",
    "type_mention": "political party",
    "entity1_uri": "http://dbpedia.org/resource/Boonchu_Rojanastien",
    "entity1_mention": "boonchu rojanastien",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3019",
    "question": "Who is married to Gerard Piqu?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/partner> <http://dbpedia.org/resource/Gerard_Piqu\u00e9>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/partner",
    "predicate1_mention": "married to",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Gerard_Piqu\u00e9",
    "entity1_mention": "gerard piqu",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3030",
    "question": "Name the TV shows with network as NBC and company as Paramount Television ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/NBC> . ?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Paramount_Television>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/network",
    "predicate1_mention": "network",
    "predicate2_uri": "http://dbpedia.org/property/company",
    "predicate2_mention": "company",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "tv shows",
    "entity1_uri": "http://dbpedia.org/resource/NBC",
    "entity1_mention": "nbc",
    "entity2_uri": "http://dbpedia.org/resource/Paramount_Television",
    "entity2_mention": "paramount television"
},
{
    "id": "3031",
    "question": "Who has composed songs produced by Terry Melcher?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Terry_Melcher> . ?x <http://dbpedia.org/ontology/composer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/producer",
    "predicate1_mention": "produced by",
    "predicate2_uri": "http://dbpedia.org/ontology/composer",
    "predicate2_mention": "composed",
    "type_uri": "http://dbpedia.org/ontology/Song",
    "type_mention": "songs",
    "entity1_uri": "http://dbpedia.org/resource/Terry_Melcher",
    "entity1_mention": "terry melcher",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3037",
    "question": "Where was the deadbody discovered of one of the alumni of General Educational Development?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/education> <http://dbpedia.org/resource/General_Educational_Development> . ?x <http://dbpedia.org/property/bodyDiscovered> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/education",
    "predicate1_mention": "educational",
    "predicate2_uri": "http://dbpedia.org/property/bodyDiscovered",
    "predicate2_mention": "discovered",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/General_Educational_Development",
    "entity1_mention": "general educational development",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3051",
    "question": "Which past members of the The Conglomerate (American group) also sang Take Me There (Blackstreet & Ma song)?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Conglomerate_(American_group)> <http://dbpedia.org/property/pastMembers> ?uri. <http://dbpedia.org/resource/Take_Me_There_(Blackstreet_&_M\u00fda_song)> <http://dbpedia.org/ontology/musicalBand> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/pastMembers",
    "predicate1_mention": "past members",
    "predicate2_uri": "http://dbpedia.org/ontology/musicalBand",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Conglomerate_(American_group)",
    "entity1_mention": "The Conglomerate (American group)",
    "entity2_uri": "http://dbpedia.org/resource/Take_Me_There_(Blackstreet_&_M\u00fda_song)",
    "entity2_mention": "Take Me There (Blackstreet & Ma song)"
},
{
    "id": "3054",
    "question": "Who is the producer of  Frampton's Camel ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Frampton's_Camel> <http://dbpedia.org/property/producer> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/producer",
    "predicate1_mention": "producer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Frampton's_Camel",
    "entity1_mention": "frampton's camel",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3056",
    "question": "How many developers were involved in creating games whose score is composed by Gerard Marino?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/Gerard_Marino> . ?x <http://dbpedia.org/ontology/developer> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/composer",
    "predicate1_mention": "composed",
    "predicate2_uri": "http://dbpedia.org/ontology/developer",
    "predicate2_mention": "developers",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Gerard_Marino",
    "entity1_mention": "Gerard Marino",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3057",
    "question": "Where did these popular aeroplanes - Focke Wulf 260 and Start+Flug H 101 originate?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Focke-Wulf_Fw_260> <http://dbpedia.org/property/nationalOrigin> ?uri. <http://dbpedia.org/resource/Start_+_Flug_H-101> <http://dbpedia.org/property/nationalOrigin> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/nationalOrigin",
    "predicate1_mention": "originate",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Focke-Wulf_Fw_260",
    "entity1_mention": "focke wulf 260",
    "entity2_uri": "http://dbpedia.org/resource/Start_+_Flug_H-101",
    "entity2_mention": "Start+Flug H 101"
},
{
    "id": "3059",
    "question": "Count the key people of the Clinton Foundation?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Clinton_Foundation> <http://dbpedia.org/property/keyPeople> ?uri  . }",
    "sparql_id": "102",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/keyPeople",
    "predicate1_mention": "key people",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Clinton_Foundation",
    "entity1_mention": "clinton foundation",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3060",
    "question": "Give me someone on the board of trinity house?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Trinity_House>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/board",
    "predicate1_mention": "board",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Trinity_House",
    "entity1_mention": "trinity house",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3067",
    "question": "Does Timothy Morton study Buddhism?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Timothy_Morton> <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/Buddhism> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/mainInterests",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Timothy_Morton",
    "entity1_mention": "timothy morton",
    "entity2_uri": "http://dbpedia.org/resource/Buddhism",
    "entity2_mention": "buddhism"
},
{
    "id": "3068",
    "question": "Name a queen whose parent is Ptolemy XII Auletes and consort is Ptolemy XIII Theos Philopator?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ptolemy_XII_Auletes> . ?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ptolemy_XIII_Theos_Philopator>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/parent",
    "predicate1_mention": "parent",
    "predicate2_uri": "http://dbpedia.org/property/spouse",
    "predicate2_mention": "consort",
    "type_uri": "http://dbpedia.org/ontology/Royalty",
    "type_mention": "queen",
    "entity1_uri": "http://dbpedia.org/resource/Ptolemy_XII_Auletes",
    "entity1_mention": "ptolemy xii auletes",
    "entity2_uri": "http://dbpedia.org/resource/Ptolemy_XIII_Theos_Philopator",
    "entity2_mention": "Ptolemy XIII Theos Philopator"
},
{
    "id": "3069",
    "question": "Which universit's affiliation is with Kalpan, Inc. and has campus at Iowa ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Kaplan,_Inc.> . ?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Iowa>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/affiliations",
    "predicate1_mention": "affiliation",
    "predicate2_uri": "http://dbpedia.org/ontology/campus",
    "predicate2_mention": "campus",
    "type_uri": "http://dbpedia.org/ontology/University",
    "type_mention": "universit's",
    "entity1_uri": "http://dbpedia.org/resource/Kaplan,_Inc.",
    "entity1_mention": "Kalpan, Inc.",
    "entity2_uri": "http://dbpedia.org/resource/Iowa",
    "entity2_mention": "iowa"
},
{
    "id": "3072",
    "question": "Which area operataed by the South Side Elevated Railroad is also the place of death of the Sakari Suzuki ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Side_Elevated_Railroad> <http://dbpedia.org/ontology/operatedBy> ?uri. <http://dbpedia.org/resource/Sakari_Suzuki> <http://dbpedia.org/property/deathPlace> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/operatedBy",
    "predicate1_mention": "operataed by",
    "predicate2_uri": "http://dbpedia.org/property/deathPlace",
    "predicate2_mention": "place of death",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/South_Side_Elevated_Railroad",
    "entity1_mention": "South Side Elevated Railroad",
    "entity2_uri": "http://dbpedia.org/resource/Sakari_Suzuki",
    "entity2_mention": "sakari suzuki"
},
{
    "id": "3073",
    "question": "Which venues are located at places governed by John Roberts?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/John_Roberts> . ?uri <http://dbpedia.org/property/address> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/leader",
    "predicate1_mention": "governed by",
    "predicate2_uri": "http://dbpedia.org/property/address",
    "predicate2_mention": "located at",
    "type_uri": "http://dbpedia.org/ontology/Venue",
    "type_mention": "venues",
    "entity1_uri": "http://dbpedia.org/resource/John_Roberts",
    "entity1_mention": "john Roberts",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3086",
    "question": "What is the mascot of the rival school of Sullivan Central High?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sullivan_Central_High_School> <http://dbpedia.org/property/rival> ?x . ?x <http://dbpedia.org/property/mascot> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/rival",
    "predicate1_mention": "rival",
    "predicate2_uri": "http://dbpedia.org/property/mascot",
    "predicate2_mention": "mascot",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sullivan_Central_High_School",
    "entity1_mention": "school of sullivan central high",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3087",
    "question": "Which Paramount TV show was produced by Glen and Les Charles ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Glen_and_Les_Charles> . ?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Paramount_Television>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/executiveProducer",
    "predicate1_mention": "produced by",
    "predicate2_uri": "http://dbpedia.org/property/company",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "Paramount TV show",
    "entity1_uri": "http://dbpedia.org/resource/Glen_and_Les_Charles",
    "entity1_mention": "Glen and Les Charles",
    "entity2_uri": "http://dbpedia.org/resource/Paramount_Television",
    "entity2_mention": "paramount tv show"
},
{
    "id": "3090",
    "question": "Whose network's parent organisation is Comcast?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/parentOrganisation> <http://dbpedia.org/resource/Comcast> . ?uri <http://dbpedia.org/ontology/network> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/parentOrganisation",
    "predicate1_mention": "parent organisation",
    "predicate2_uri": "http://dbpedia.org/ontology/network",
    "predicate2_mention": "network's",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Comcast",
    "entity1_mention": "comcast",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3092",
    "question": "Name the common editor of Easy Street (film) and Work (film)?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Easy_Street_(film)> <http://dbpedia.org/ontology/editing> ?uri. <http://dbpedia.org/resource/Work_(film)> <http://dbpedia.org/ontology/editing> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/editing",
    "predicate1_mention": "editor",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Easy_Street_(film)",
    "entity1_mention": "Easy Street (film)",
    "entity2_uri": "http://dbpedia.org/resource/Work_(film)",
    "entity2_mention": "Work (film)"
},
{
    "id": "3099",
    "question": "Which team did Wilfred McDonalds and Cam Plante play for?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wilfred_McDonald> <http://dbpedia.org/property/playedFor> ?uri. <http://dbpedia.org/resource/Cam_Plante> <http://dbpedia.org/property/playedFor> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/playedFor",
    "predicate1_mention": "play for",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Wilfred_McDonald",
    "entity1_mention": "Wilfred McDonalds",
    "entity2_uri": "http://dbpedia.org/resource/Cam_Plante",
    "entity2_mention": "cam plante"
},
{
    "id": "3104",
    "question": "Is Albert P Clark buried in Colorado?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Albert_P._Clark> <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/Colorado> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/placeofburial",
    "predicate1_mention": "buried in",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Albert_P._Clark",
    "entity1_mention": "albert p clark",
    "entity2_uri": "http://dbpedia.org/resource/Colorado",
    "entity2_mention": "colorado"
},
{
    "id": "3108",
    "question": "Where was Al Muzaffar Umar buried ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Al-Muzaffar_Umar> <http://dbpedia.org/property/placeOfBurial> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/placeOfBurial",
    "predicate1_mention": "buried",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Al-Muzaffar_Umar",
    "entity1_mention": "al muzaffar umar",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3110",
    "question": "Is the Hyundai Lavita assembled in Ulsan?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hyundai_Lavita> <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Ulsan> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/assembly",
    "predicate1_mention": "assembled in",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hyundai_Lavita",
    "entity1_mention": "hyundai lavita",
    "entity2_uri": "http://dbpedia.org/resource/Ulsan",
    "entity2_mention": "ulsan"
},
{
    "id": "3117",
    "question": "Who is the producer of album which has the song Money?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Money_(Pink_Floyd_song)> <http://dbpedia.org/property/album> ?x . ?x <http://dbpedia.org/property/producer> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/album",
    "predicate1_mention": "album",
    "predicate2_uri": "http://dbpedia.org/property/producer",
    "predicate2_mention": "producer",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Money_(Pink_Floyd_song)",
    "entity1_mention": "song money",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3118",
    "question": "Which tv show was preceded by The spirit of Christmas and voice to the character was given by Mona Marshall ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/The_Spirit_of_Christmas_(short_film)> . ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Mona_Marshall>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/previousWork",
    "predicate1_mention": "preceded by",
    "predicate2_uri": "http://dbpedia.org/property/voices",
    "predicate2_mention": "voice",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "tv show",
    "entity1_uri": "http://dbpedia.org/resource/The_Spirit_of_Christmas_(short_film)",
    "entity1_mention": "The spirit of Christmas",
    "entity2_uri": "http://dbpedia.org/resource/Mona_Marshall",
    "entity2_mention": "mona marshall"
},
{
    "id": "3120",
    "question": "Did Alexandre Tichonov study at the Moscow university?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Alexandre_Tichonov> <http://dbpedia.org/property/university> <http://dbpedia.org/resource/Moscow> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/university",
    "predicate1_mention": "study at",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Alexandre_Tichonov",
    "entity1_mention": "alexandre tichonov",
    "entity2_uri": "http://dbpedia.org/resource/Moscow",
    "entity2_mention": "moscow"
},
{
    "id": "3122",
    "question": "How many members are there in the European Go Federation?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/European_Go_Federation> <http://dbpedia.org/property/membership> ?uri  . }",
    "sparql_id": "102",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/membership",
    "predicate1_mention": "members",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/European_Go_Federation",
    "entity1_mention": "european go federation",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3124",
    "question": "List all the notable works of  Russell T Davies?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/ontology/notableWork> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/notableWork",
    "predicate1_mention": "notable works",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Russell_T_Davies",
    "entity1_mention": "russell t davies",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3136",
    "question": "To which country does Peter Blay owe his allegiance?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Peter_Blay> <http://dbpedia.org/property/allegiance> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/allegiance",
    "predicate1_mention": "allegiance",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Peter_Blay",
    "entity1_mention": "peter blay",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3140",
    "question": "Who has allegiance is Colony of Virginia and buried in Montpelier?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/allegiance> <http://dbpedia.org/resource/Colony_of_Virginia> . ?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)>  . }",
    "sparql_id": "8",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/allegiance",
    "predicate1_mention": "allegiance",
    "predicate2_uri": "http://dbpedia.org/property/restingplace",
    "predicate2_mention": "buried in",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Colony_of_Virginia",
    "entity1_mention": "colony of virginia",
    "entity2_uri": "http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)",
    "entity2_mention": "montpelier"
},
{
    "id": "3141",
    "question": "Give me the list of cars which are the predecessor of Full Sized Cars?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/class> <http://dbpedia.org/resource/Full-size_car> . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/class",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/predecessor",
    "predicate2_mention": "predecessor",
    "type_uri": "http://dbpedia.org/ontology/Automobile",
    "type_mention": "cars",
    "entity1_uri": "http://dbpedia.org/resource/Full-size_car",
    "entity1_mention": "Full Sized Cars",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3146",
    "question": "Was Morrissey a member of the Smiths?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Smiths> <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Morrissey> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/formerBandMember",
    "predicate1_mention": "member",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Smiths",
    "entity1_mention": "the smiths",
    "entity2_uri": "http://dbpedia.org/resource/Morrissey",
    "entity2_mention": "morrissey"
},
{
    "id": "3147",
    "question": "Who are the producers of Marie Sisters?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marie_Sisters> <http://dbpedia.org/property/producer> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/producer",
    "predicate1_mention": "producers",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Marie_Sisters",
    "entity1_mention": "marie sisters",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3152",
    "question": "List the comic characters created by Joe Shuster ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Joe_Shuster>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/creators",
    "predicate1_mention": "created by",
    "predicate2_uri": "http://dbpedia.org/ontology/ComicsCharacter",
    "predicate2_mention": "characters",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Joe_Shuster",
    "entity1_mention": "joe shuster",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3157",
    "question": "Who was on the first team in the GPs that were held at Watkins Glen, NY?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Watkins_Glen,_New_York> . ?x <http://dbpedia.org/property/firstTeam> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GrandPrix>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/location",
    "predicate1_mention": "held at",
    "predicate2_uri": "http://dbpedia.org/property/firstTeam",
    "predicate2_mention": "first team",
    "type_uri": "http://dbpedia.org/ontology/GrandPrix",
    "type_mention": "gps",
    "entity1_uri": "http://dbpedia.org/resource/Watkins_Glen,_New_York",
    "entity1_mention": "Watkins Glen, NY",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3170",
    "question": "Who is the military general buried in St Marys Church Battersea?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/St_Mary's_Church,_Battersea>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/placeofburial",
    "predicate1_mention": "buried in",
    "predicate2_uri": "http://dbpedia.org/ontology/MilitaryPerson",
    "predicate2_mention": "military general",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/St_Mary's_Church,_Battersea",
    "entity1_mention": "St Marys Church Battersea",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3171",
    "question": "Which wars were fought when the commanders involved served under PM Choi Tu Son?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/primeminister> <http://dbpedia.org/resource/Choi_Tu-son> . ?uri <http://dbpedia.org/ontology/commander> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/primeminister",
    "predicate1_mention": "pm",
    "predicate2_uri": "http://dbpedia.org/ontology/commander",
    "predicate2_mention": "commanders",
    "type_uri": "http://dbpedia.org/ontology/MilitaryConflict",
    "type_mention": "wars",
    "entity1_uri": "http://dbpedia.org/resource/Choi_Tu-son",
    "entity1_mention": "choi tu son",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3175",
    "question": "Did Jerry Rice study in Oktoc Mississippi?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jerry_Rice> <http://dbpedia.org/property/highSchool> <http://dbpedia.org/resource/Oktoc,_Mississippi> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/highSchool",
    "predicate1_mention": "study in",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jerry_Rice",
    "entity1_mention": "jerry rice",
    "entity2_uri": "http://dbpedia.org/resource/Oktoc,_Mississippi",
    "entity2_mention": "oktoc mississippi"
},
{
    "id": "3177",
    "question": "Food in which countries has shallot in it?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Shallot> . ?x <http://dbpedia.org/ontology/country> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Food>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/ingredient",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "countries",
    "type_uri": "http://dbpedia.org/ontology/Food",
    "type_mention": "food",
    "entity1_uri": "http://dbpedia.org/resource/Shallot",
    "entity1_mention": "shallot",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3183",
    "question": "What are the musical performances whose label is Celluloid Records?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Celluloid_Records>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/label",
    "predicate1_mention": "label",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Celluloid_Records",
    "entity1_mention": "celluloid records",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3191",
    "question": "Was andy warhol a part of Pop Art movement?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Andy_Warhol> <http://dbpedia.org/property/movement> <http://dbpedia.org/resource/Pop_art> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/movement",
    "predicate1_mention": "movement",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Andy_Warhol",
    "entity1_mention": "andy warhol",
    "entity2_uri": "http://dbpedia.org/resource/Pop_art",
    "entity2_mention": "Pop Art movement"
},
{
    "id": "3202",
    "question": "Which TV show whose theme is composed by someone signed up with ATO records?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/ATO_Records> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/recordLabel",
    "predicate1_mention": "records",
    "predicate2_uri": "http://dbpedia.org/property/themeMusicComposer",
    "predicate2_mention": "composed by",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "tv show",
    "entity1_uri": "http://dbpedia.org/resource/ATO_Records",
    "entity1_mention": "ato records",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3205",
    "question": "What religions do diplomats typically follow?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Diplomacy> . ?x <http://dbpedia.org/property/religion> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/profession",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/religion",
    "predicate2_mention": "religions",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Diplomacy",
    "entity1_mention": "diplomats",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3208",
    "question": "Was Don't Bring Me Down recorded in West Germany?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Don't_Bring_Me_Down> <http://dbpedia.org/property/recorded> <http://dbpedia.org/resource/West_Germany> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/recorded",
    "predicate1_mention": "recorded in",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Don't_Bring_Me_Down",
    "entity1_mention": "Don't Bring Me Down",
    "entity2_uri": "http://dbpedia.org/resource/West_Germany",
    "entity2_mention": "west germany"
},
{
    "id": "3212",
    "question": "Give the name of the  managers of England national under-20 football team and England national under-21 football team?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/managerclubs> <http://dbpedia.org/resource/England_national_under-20_football_team> . ?uri <http://dbpedia.org/property/managerclubs> <http://dbpedia.org/resource/England_national_under-21_football_team> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/managerclubs",
    "predicate1_mention": "managers",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/England_national_under-20_football_team",
    "entity1_mention": "England national under-20 football team",
    "entity2_uri": "http://dbpedia.org/resource/England_national_under-21_football_team",
    "entity2_mention": "England national under-21 football team"
},
{
    "id": "3215",
    "question": "Which sport of Vishwajyot High School is also the genere of Battle chess ",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Battle_Chess> <http://dbpedia.org/property/genre> ?uri. <http://dbpedia.org/resource/Vishwajyot_High_School> <http://dbpedia.org/ontology/sport> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/genre",
    "predicate1_mention": "genere",
    "predicate2_uri": "http://dbpedia.org/ontology/sport",
    "predicate2_mention": "sport",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Battle_Chess",
    "entity1_mention": "battle chess",
    "entity2_uri": "http://dbpedia.org/resource/Vishwajyot_High_School",
    "entity2_mention": "vishwajyot high school"
},
{
    "id": "3219",
    "question": "Which ceremonial County of the East Tilbury is also the local authority of the Trinity School, Brentwood?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/East_Tilbury> <http://dbpedia.org/ontology/ceremonialCounty> ?uri. <http://dbpedia.org/resource/Trinity_School,_Brentwood> <http://dbpedia.org/ontology/localAuthority> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/ceremonialCounty",
    "predicate1_mention": "ceremonial county",
    "predicate2_uri": "http://dbpedia.org/ontology/localAuthority",
    "predicate2_mention": "local authority",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/East_Tilbury",
    "entity1_mention": "east tilbury",
    "entity2_uri": "http://dbpedia.org/resource/Trinity_School,_Brentwood",
    "entity2_mention": "Trinity School, Brentwood"
},
{
    "id": "3222",
    "question": "Name the television show where Mona Marshall has given voice and is distributed by Comedy Central?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Mona_Marshall> . ?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Comedy_Central>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/voices",
    "predicate1_mention": "voice",
    "predicate2_uri": "http://dbpedia.org/property/distributor",
    "predicate2_mention": "distributed",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television show",
    "entity1_uri": "http://dbpedia.org/resource/Mona_Marshall",
    "entity1_mention": "mona marshall",
    "entity2_uri": "http://dbpedia.org/resource/Comedy_Central",
    "entity2_mention": "comedy central"
},
{
    "id": "3228",
    "question": "What city has the football team in which Lee Robinson debuted?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lee_Robinson_(American_football)> <http://dbpedia.org/ontology/debutTeam> ?x . ?x <http://dbpedia.org/ontology/locationCity> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/debutTeam",
    "predicate1_mention": "debuted",
    "predicate2_uri": "http://dbpedia.org/ontology/locationCity",
    "predicate2_mention": "city",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lee_Robinson_(American_football)",
    "entity1_mention": "Lee Robinson debuted",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3234",
    "question": "Who is the chancellor of Falmouth University ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Falmouth_University> <http://dbpedia.org/property/chancellor> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/chancellor",
    "predicate1_mention": "chancellor",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Falmouth_University",
    "entity1_mention": "falmouth university",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3236",
    "question": "What are the binomial authority of Menetries's warbler?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Menetries's_warbler> <http://dbpedia.org/ontology/binomialAuthority> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/binomialAuthority",
    "predicate1_mention": "binomial authority",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Menetries's_warbler",
    "entity1_mention": "menetries's warbler",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3242",
    "question": "Is greasy pop recording the distributor of festival records?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Greasy_Pop_Records> <http://dbpedia.org/ontology/distributingLabel> <http://dbpedia.org/resource/Festival_Records> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/distributingLabel",
    "predicate1_mention": "distributor",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Greasy_Pop_Records",
    "entity1_mention": "greasy pop recording",
    "entity2_uri": "http://dbpedia.org/resource/Festival_Records",
    "entity2_mention": "festival records"
},
{
    "id": "3246",
    "question": "Which television show 's producer is Stephen E. Ambrose and written by Erik Jendresen?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Stephen_E._Ambrose> . ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Erik_Jendresen>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/producer",
    "predicate1_mention": "producer",
    "predicate2_uri": "http://dbpedia.org/property/writer",
    "predicate2_mention": "written by",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television show",
    "entity1_uri": "http://dbpedia.org/resource/Stephen_E._Ambrose",
    "entity1_mention": "Stephen E. Ambrose",
    "entity2_uri": "http://dbpedia.org/resource/Erik_Jendresen",
    "entity2_mention": "erik jendresen"
},
{
    "id": "3251",
    "question": "What is the alma mater of the scientists  known for  String theory?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/String_theory> . ?x <http://dbpedia.org/property/almaMater> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate1_mention": "known for",
    "predicate2_uri": "http://dbpedia.org/property/almaMater",
    "predicate2_mention": "alma mater",
    "type_uri": "http://dbpedia.org/ontology/Scientist",
    "type_mention": "scientists",
    "entity1_uri": "http://dbpedia.org/resource/String_theory",
    "entity1_mention": "string theory",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3255",
    "question": "Who is the developer of the software which is produced by Claris ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Claris> <http://dbpedia.org/property/products> ?x . ?x <http://dbpedia.org/ontology/developer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/products",
    "predicate1_mention": "produced by",
    "predicate2_uri": "http://dbpedia.org/ontology/developer",
    "predicate2_mention": "developer",
    "type_uri": "http://dbpedia.org/ontology/Software",
    "type_mention": "software",
    "entity1_uri": "http://dbpedia.org/resource/Claris",
    "entity1_mention": "claris",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3261",
    "question": "Who is the music composer of Kenny Dies ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kenny_Dies> <http://dbpedia.org/ontology/musicComposer> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/musicComposer",
    "predicate1_mention": "music composer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kenny_Dies",
    "entity1_mention": "kenny dies",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3266",
    "question": "Name the scientist whose supervisor also supervised Mary Ainsworth?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Mary_Ainsworth> . ?uri <http://dbpedia.org/property/doctoralAdvisor> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/doctoralStudents",
    "predicate1_mention": "supervised",
    "predicate2_uri": "http://dbpedia.org/property/doctoralAdvisor",
    "predicate2_mention": "supervisor",
    "type_uri": "http://dbpedia.org/ontology/Scientist",
    "type_mention": "scientist",
    "entity1_uri": "http://dbpedia.org/resource/Mary_Ainsworth",
    "entity1_mention": "mary ainsworth",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3267",
    "question": "By what style was Providence Chapel, Charlwood made?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Providence_Chapel,_Charlwood> <http://dbpedia.org/property/style> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/style",
    "predicate1_mention": "style",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Providence_Chapel,_Charlwood",
    "entity1_mention": "Providence Chapel, Charlwood",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3272",
    "question": "Did Raymond Picard take birth in Paris?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Raymond_Picard> <http://dbpedia.org/property/birthplace> <http://dbpedia.org/resource/Paris> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/birthplace",
    "predicate1_mention": "take birth in",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Raymond_Picard",
    "entity1_mention": "raymond picard",
    "entity2_uri": "http://dbpedia.org/resource/Paris",
    "entity2_mention": "paris"
},
{
    "id": "3278",
    "question": "Whihc birthplace of Svetlana Gounkina is also the largest city of Union State ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Union_State> <http://dbpedia.org/property/largestCity> ?uri. <http://dbpedia.org/resource/Svetlana_Gounkina> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/largestCity",
    "predicate1_mention": "largest city",
    "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate2_mention": "birthplace",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Union_State",
    "entity1_mention": "union state",
    "entity2_uri": "http://dbpedia.org/resource/Svetlana_Gounkina",
    "entity2_mention": "svetlana gounkina"
},
{
    "id": "3281",
    "question": "To which series does the book belong which came after the Blade Runner 2?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/Blade_Runner_2:_The_Edge_of_Human> . ?x <http://dbpedia.org/ontology/series> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/previousWork",
    "predicate1_mention": "book",
    "predicate2_uri": "http://dbpedia.org/ontology/series",
    "predicate2_mention": "series",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Blade_Runner_2:_The_Edge_of_Human",
    "entity1_mention": "blade runner 2",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3283",
    "question": "Which company's cars are assembled in Colombia?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Colombia> . ?x <http://dbpedia.org/property/parentCompany> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/assembly",
    "predicate1_mention": "assembled",
    "predicate2_uri": "http://dbpedia.org/property/parentCompany",
    "predicate2_mention": "company's",
    "type_uri": "http://dbpedia.org/ontology/Automobile",
    "type_mention": "cars",
    "entity1_uri": "http://dbpedia.org/resource/Colombia",
    "entity1_mention": "colombia",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3284",
    "question": "In which places do companies founded in Newcastle operate?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/City_of_Newcastle> . ?x <http://dbpedia.org/ontology/regionServed> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/foundationPlace",
    "predicate1_mention": "founded in",
    "predicate2_uri": "http://dbpedia.org/ontology/regionServed",
    "predicate2_mention": "operate",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "companies",
    "entity1_uri": "http://dbpedia.org/resource/City_of_Newcastle",
    "entity1_mention": "newcastle",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3287",
    "question": "Musical artists who are associated with Ren & Angela were born where ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Ren\u00e9_&_Angela> . ?x <http://dbpedia.org/property/birthPlace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/associatedActs",
    "predicate1_mention": "associated",
    "predicate2_uri": "http://dbpedia.org/property/birthPlace",
    "predicate2_mention": "born",
    "type_uri": "http://dbpedia.org/ontology/MusicalArtist",
    "type_mention": "musical",
    "entity1_uri": "http://dbpedia.org/resource/Ren\u00e9_&_Angela",
    "entity1_mention": "Ren & Angela",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3293",
    "question": "Which sects people are part of local political parties which fall under the International Muslim Brotherhood?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/international> <http://dbpedia.org/resource/Muslim_Brotherhood> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/international",
    "predicate1_mention": "international",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "sects",
    "type_uri": "http://dbpedia.org/ontology/PoliticalParty",
    "type_mention": "political parties",
    "entity1_uri": "http://dbpedia.org/resource/Muslim_Brotherhood",
    "entity1_mention": "Muslim Brotherhood",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3294",
    "question": "Whose predecessor had Jenny Macklin as a deputy ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Jenny_Macklin> . ?uri <http://dbpedia.org/property/predecessor> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/deputy",
    "predicate1_mention": "deputy",
    "predicate2_uri": "http://dbpedia.org/property/predecessor",
    "predicate2_mention": "predecessor",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jenny_Macklin",
    "entity1_mention": "jenny macklin",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3301",
    "question": "Name  the Pole driver of 1994 Spanish Grand Prix ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1994_Spanish_Grand_Prix> <http://dbpedia.org/property/poleDriver> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/poleDriver",
    "predicate1_mention": "pole driver",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/1994_Spanish_Grand_Prix",
    "entity1_mention": "1994 Spanish Grand Prix",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3302",
    "question": "Who was the First Driver of 1999 San Marino Grand Prix ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1999_San_Marino_Grand_Prix> <http://dbpedia.org/property/firstDriver> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/firstDriver",
    "predicate1_mention": "first driver",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/1999_San_Marino_Grand_Prix",
    "entity1_mention": "1999 San Marino Grand Prix",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3304",
    "question": "List the universities from a country where Norwegian language is officially accepted.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/Norwegian_language> . ?uri <http://dbpedia.org/ontology/country> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/officialLanguage",
    "predicate1_mention": "officially",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "country",
    "type_uri": "http://dbpedia.org/ontology/University",
    "type_mention": "universities",
    "entity1_uri": "http://dbpedia.org/resource/Norwegian_language",
    "entity1_mention": "norwegian language",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3314",
    "question": "Name the movie whose screenplay is by Akiva Goldsman and directed by Joel Schumacher ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Akiva_Goldsman> . ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Joel_Schumacher>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/screenplay",
    "predicate1_mention": "screenplay",
    "predicate2_uri": "http://dbpedia.org/ontology/director",
    "predicate2_mention": "directed by",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movie",
    "entity1_uri": "http://dbpedia.org/resource/Akiva_Goldsman",
    "entity1_mention": "akiva goldsman",
    "entity2_uri": "http://dbpedia.org/resource/Joel_Schumacher",
    "entity2_mention": "joel schumacher"
},
{
    "id": "3324",
    "question": "Where did Georges Wolinski and Judson Huss die",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Georges_Wolinski> <http://dbpedia.org/property/placeOfDeath> ?uri. <http://dbpedia.org/resource/Judson_Huss> <http://dbpedia.org/property/deathPlace> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/placeOfDeath",
    "predicate1_mention": "die",
    "predicate2_uri": "http://dbpedia.org/property/deathPlace",
    "predicate2_mention": "die",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Georges_Wolinski",
    "entity1_mention": "georges wolinski",
    "entity2_uri": "http://dbpedia.org/resource/Judson_Huss",
    "entity2_mention": "judson huss"
},
{
    "id": "3325",
    "question": "Which city is known for the people working in the western penn hospital?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/workInstitutions> <http://dbpedia.org/resource/Western_Pennsylvania_Hospital> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/workInstitutions",
    "predicate1_mention": "working",
    "predicate2_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate2_mention": "known for",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Western_Pennsylvania_Hospital",
    "entity1_mention": "western penn hospital",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3327",
    "question": "Which team won the American Football League?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/American_Football_League> <http://dbpedia.org/property/champion> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/champion",
    "predicate1_mention": "won",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/American_Football_League",
    "entity1_mention": "american football league",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3330",
    "question": "what is the headquarters of Juan Dalmau Ramerez?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Juan_Dalmau_Ram\u00edrez> <http://dbpedia.org/property/headquarters> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/headquarters",
    "predicate1_mention": "headquarters",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Juan_Dalmau_Ram\u00edrez",
    "entity1_mention": "Juan Dalmau Ramerez",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3342",
    "question": "Who is the leader of Allgemeine SS ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Allgemeine_SS> <http://dbpedia.org/ontology/leader> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/leader",
    "predicate1_mention": "leader",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Allgemeine_SS",
    "entity1_mention": "allgemeine ss",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3343",
    "question": "How many important works have been done by Russel Davies?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/ontology/notableWork> ?uri  . }",
    "sparql_id": "102",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/notableWork",
    "predicate1_mention": "works",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Russell_T_Davies",
    "entity1_mention": "russel davies",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3345",
    "question": "What is the birth name  of Putri Raemawasti ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Putri_Raemawasti> <http://dbpedia.org/property/birthName> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/birthName",
    "predicate1_mention": "birth name",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Putri_Raemawasti",
    "entity1_mention": "putri raemawasti",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3348",
    "question": "From where does the river Upper Neretva start flowing?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Upper_Neretva> <http://dbpedia.org/ontology/riverMouth> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/riverMouth",
    "predicate1_mention": "river",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Upper_Neretva",
    "entity1_mention": "upper neretva",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3354",
    "question": "What did Steven T Mason's father die from?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Stevens_T._Mason> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/child",
    "predicate1_mention": "father",
    "predicate2_uri": "http://dbpedia.org/ontology/deathCause",
    "predicate2_mention": "die from",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Stevens_T._Mason",
    "entity1_mention": "steven t mason's",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3356",
    "question": "What made jo garcia and merritt cabal both famous?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jo_Garcia> <http://dbpedia.org/ontology/knownFor> ?uri. <http://dbpedia.org/resource/Merritt_Cabal> <http://dbpedia.org/ontology/knownFor> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate1_mention": "famous",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jo_Garcia",
    "entity1_mention": "jo garcia",
    "entity2_uri": "http://dbpedia.org/resource/Merritt_Cabal",
    "entity2_mention": "merritt cabal"
},
{
    "id": "3367",
    "question": "Which architect of the Marine Corps Air Station Kaneohe Bay is the branch of the Burnet R. Maybank?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marine_Corps_Air_Station_Kaneohe_Bay> <http://dbpedia.org/property/architect> ?uri. <http://dbpedia.org/resource/Burnet_R._Maybank> <http://dbpedia.org/property/branch> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/architect",
    "predicate1_mention": "architect",
    "predicate2_uri": "http://dbpedia.org/property/branch",
    "predicate2_mention": "branch",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Marine_Corps_Air_Station_Kaneohe_Bay",
    "entity1_mention": "Marine Corps Air Station",
    "entity2_uri": "http://dbpedia.org/resource/Burnet_R._Maybank",
    "entity2_mention": "Burnet R. Maybank"
},
{
    "id": "3368",
    "question": "To which american football teams does the Heinz Field as home stadium?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Heinz_Field> <http://dbpedia.org/property/tenants> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/tenants",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Heinz_Field",
    "entity1_mention": "heinz field",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3369",
    "question": "What is the official name of Colorado wine ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Colorado_wine> <http://dbpedia.org/property/officialName> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/officialName",
    "predicate1_mention": "official name",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Colorado_wine",
    "entity1_mention": "colorado wine",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3373",
    "question": "Count the total number of cast member of the television shows whose actress is Joey McIntyre?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Joey_McIntyre> . ?x <http://dbpedia.org/property/starring> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/starring",
    "predicate1_mention": "cast member",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Joey_McIntyre",
    "entity1_mention": "joey mcintyre",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3374",
    "question": "Name the TV show with artist Christopher Franke and cast member Jason Carter ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Christopher_Franke> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jason_Carter_(actor)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/artist",
    "predicate1_mention": "artist",
    "predicate2_uri": "http://dbpedia.org/ontology/starring",
    "predicate2_mention": "cast member",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "tv show",
    "entity1_uri": "http://dbpedia.org/resource/Christopher_Franke",
    "entity1_mention": "christopher franke",
    "entity2_uri": "http://dbpedia.org/resource/Jason_Carter_(actor)",
    "entity2_mention": "jason carter"
},
{
    "id": "3376",
    "question": "Name the office holder with successor as Adrian A Basora and child as Lori Black ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Lori_Black> . ?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Adrian_A._Basora>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/child",
    "predicate1_mention": "child",
    "predicate2_uri": "http://dbpedia.org/property/successor",
    "predicate2_mention": "successor",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "office holder",
    "entity1_uri": "http://dbpedia.org/resource/Lori_Black",
    "entity1_mention": "lori black",
    "entity2_uri": "http://dbpedia.org/resource/Adrian_A._Basora",
    "entity2_mention": "Adrian A Basora"
},
{
    "id": "3385",
    "question": "does the US navy have the structure of command of us department of defence?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/property/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_Defense> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/commandStructure",
    "predicate1_mention": "structure of command",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_States_Navy",
    "entity1_mention": "us navy",
    "entity2_uri": "http://dbpedia.org/resource/United_States_Department_of_Defense",
    "entity2_mention": "department of defence"
},
{
    "id": "3389",
    "question": "What is the route end of Birmingham and Oxford Junction Railway ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Birmingham_and_Oxford_Junction_Railway> <http://dbpedia.org/ontology/routeEnd> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/routeEnd",
    "predicate1_mention": "route end",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Birmingham_and_Oxford_Junction_Railway",
    "entity1_mention": "Birmingham and Oxford Junction Railway",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3391",
    "question": "What is the municipality of Homestead Grays Bridge ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Homestead_Grays_Bridge> <http://dbpedia.org/ontology/municipality> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/municipality",
    "predicate1_mention": "municipality",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Homestead_Grays_Bridge",
    "entity1_mention": "homestead grays bridge",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3394",
    "question": "Which fictional character sculpted by Josh Friedmann was portrayed in Terminator 3 ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Josh_Friedman> . ?uri <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Terminator_3:_Rise_of_the_Machines>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/creator",
    "predicate1_mention": "sculpted by",
    "predicate2_uri": "http://dbpedia.org/ontology/portrayer",
    "predicate2_mention": "portrayed",
    "type_uri": "http://dbpedia.org/ontology/FictionalCharacter",
    "type_mention": "fictional character",
    "entity1_uri": "http://dbpedia.org/resource/Josh_Friedman",
    "entity1_mention": "Josh Friedmann",
    "entity2_uri": "http://dbpedia.org/resource/Terminator_3:_Rise_of_the_Machines",
    "entity2_mention": "terminator 3"
},
{
    "id": "3397",
    "question": "Which region of Bannock is the origin od Spaghetti squash ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Spaghetti_squash> <http://dbpedia.org/ontology/origin> ?uri. <http://dbpedia.org/resource/Bannock_(food)> <http://dbpedia.org/ontology/region> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/origin",
    "predicate1_mention": "origin",
    "predicate2_uri": "http://dbpedia.org/ontology/region",
    "predicate2_mention": "region",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Spaghetti_squash",
    "entity1_mention": "spaghetti squash",
    "entity2_uri": "http://dbpedia.org/resource/Bannock_(food)",
    "entity2_mention": "bannock"
},
{
    "id": "3417",
    "question": "Who are the architect of the stadium whose one of the architect is louis D. Astorino ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/architect> <http://dbpedia.org/resource/Louis_D._Astorino> . ?x <http://dbpedia.org/property/architect> ?uri  . }",
    "sparql_id": "11",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/architect",
    "predicate1_mention": "architect",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Louis_D._Astorino",
    "entity1_mention": "louis D. Astorino",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3419",
    "question": "Give me the sitcoms where Eliza Schneider and Isaac Hayes gave voice?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Eliza_Schneider> . ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Isaac_Hayes> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/voices",
    "predicate1_mention": "voice",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "sitcoms",
    "entity1_uri": "http://dbpedia.org/resource/Eliza_Schneider",
    "entity1_mention": "eliza Schneider",
    "entity2_uri": "http://dbpedia.org/resource/Isaac_Hayes",
    "entity2_mention": "isaac hayes"
},
{
    "id": "3420",
    "question": "Who is the fictional character whose family member is Padme Amidala?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/family> <http://dbpedia.org/resource/Padm\u00e9_Amidala>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/family",
    "predicate1_mention": "family",
    "predicate2_uri": "http://dbpedia.org/ontology/FictionalCharacter",
    "predicate2_mention": "fictional character",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Padm\u00e9_Amidala",
    "entity1_mention": "Padme Amidala",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3421",
    "question": "Which notable series of Russell T Davies is also the series of Short Trips: A day in the life ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Short_Trips:_A_Day_in_the_Life> <http://dbpedia.org/ontology/series> ?uri. <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/ontology/notableWork> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/series",
    "predicate1_mention": "series",
    "predicate2_uri": "http://dbpedia.org/ontology/notableWork",
    "predicate2_mention": "notable",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Short_Trips:_A_Day_in_the_Life",
    "entity1_mention": "Short Trips: A day in the life",
    "entity2_uri": "http://dbpedia.org/resource/Russell_T_Davies",
    "entity2_mention": "russell T davies"
},
{
    "id": "3432",
    "question": "What is the birth place of the astronaut whose mission was the Vostok programmer?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Vostok_programme> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Astronaut>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/mission",
    "predicate1_mention": "mission",
    "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate2_mention": "birth place",
    "type_uri": "http://dbpedia.org/ontology/Astronaut",
    "type_mention": "astronaut",
    "entity1_uri": "http://dbpedia.org/resource/Vostok_programme",
    "entity1_mention": "Vostok programmer",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3436",
    "question": "Name the company which produces both  Boeing F/A-18 E/F Hornet and CH-46 Chinook ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Boeing_CH-47_Chinook>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Boeing_CH-47_Chinook",
    "entity1_mention": "Boeing F/A-18 E/F Hornet",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3440",
    "question": "What are the other notable work of the executive producer of The Runaway Bride episode of Doctor Who?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Runaway_Bride_(Doctor_Who)> <http://dbpedia.org/ontology/executiveProducer> ?x . ?x <http://dbpedia.org/property/notableworks> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/executiveProducer",
    "predicate1_mention": "executive producer",
    "predicate2_uri": "http://dbpedia.org/property/notableworks",
    "predicate2_mention": "notable work",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Runaway_Bride_(Doctor_Who)",
    "entity1_mention": "The Runaway Bride episode of Doctor Who",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3444",
    "question": "Who is the meaning of Isa  ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Isa_(name)> <http://dbpedia.org/property/meaning> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/meaning",
    "predicate1_mention": "meaning",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Isa_(name)",
    "entity1_mention": "isa",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3445",
    "question": "Which company founded by Fusajiro Yamauchi also provides services of Nintendo eShop ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Fusajiro_Yamauchi> . ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Nintendo_eShop>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/foundedBy",
    "predicate1_mention": "founded by",
    "predicate2_uri": "http://dbpedia.org/property/services",
    "predicate2_mention": "services",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "company",
    "entity1_uri": "http://dbpedia.org/resource/Fusajiro_Yamauchi",
    "entity1_mention": "fusajiro yamauchi",
    "entity2_uri": "http://dbpedia.org/resource/Nintendo_eShop",
    "entity2_mention": "nintendo eshop"
},
{
    "id": "3446",
    "question": "What is the official language of Ladonia, which is the target area of Probus Journal?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ladonia_(micronation)> <http://dbpedia.org/ontology/officialLanguage> ?uri. <http://dbpedia.org/resource/Probus_(journal)> <http://dbpedia.org/ontology/academicDiscipline> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/officialLanguage",
    "predicate1_mention": "official language",
    "predicate2_uri": "http://dbpedia.org/ontology/academicDiscipline",
    "predicate2_mention": "target area",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ladonia_(micronation)",
    "entity1_mention": "Ladonia",
    "entity2_uri": "http://dbpedia.org/resource/Probus_(journal)",
    "entity2_mention": "probus journal"
},
{
    "id": "3448",
    "question": "Name the movie who has screenplay by Akiva Goldsman and is edited by Mark Stevens ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Akiva_Goldsman> . ?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Mark_Stevens_(film_editor)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/screenplay",
    "predicate1_mention": "screenplay",
    "predicate2_uri": "http://dbpedia.org/property/editing",
    "predicate2_mention": "edited by",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movie",
    "entity1_uri": "http://dbpedia.org/resource/Akiva_Goldsman",
    "entity1_mention": "akiva goldsman",
    "entity2_uri": "http://dbpedia.org/resource/Mark_Stevens_(film_editor)",
    "entity2_mention": "mark stevens"
},
{
    "id": "3449",
    "question": "How many TV shows are similar to the ones belonging to fantasy genre?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Fantasy_television> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/genre",
    "predicate1_mention": "genre",
    "predicate2_uri": "http://dbpedia.org/ontology/related",
    "predicate2_mention": "similar to",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "tv shows",
    "entity1_uri": "http://dbpedia.org/resource/Fantasy_television",
    "entity1_mention": "fantasy",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3457",
    "question": "How many teams have rented stadiums in Canada?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Canada> . ?x <http://dbpedia.org/property/tenants> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/location",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/tenants",
    "predicate2_mention": "rented",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Canada",
    "entity1_mention": "canada",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3461",
    "question": "What is the sea whose cities are Gdask and Oulu?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Gda\u0144sk> . ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Oulu> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/cities",
    "predicate1_mention": "cities",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Sea",
    "type_mention": "sea",
    "entity1_uri": "http://dbpedia.org/resource/Gda\u0144sk",
    "entity1_mention": "Gdask",
    "entity2_uri": "http://dbpedia.org/resource/Oulu",
    "entity2_mention": "oulu"
},
{
    "id": "3465",
    "question": "Total number of places where people drafted in the detroit pistons have died?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/draftTeam> <http://dbpedia.org/resource/Detroit_Pistons> . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/draftTeam",
    "predicate1_mention": "drafted in",
    "predicate2_uri": "http://dbpedia.org/property/placeOfDeath",
    "predicate2_mention": "died",
    "type_uri": "http://dbpedia.org/ontology/Location",
    "type_mention": "places",
    "entity1_uri": "http://dbpedia.org/resource/Detroit_Pistons",
    "entity1_mention": "detroit pistons",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3472",
    "question": "List few musical artist whose notable instruments are Ludwig Drums and  Remo?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Ludwig_Drums> . ?uri <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Remo>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/notableInstruments",
    "predicate1_mention": "notable instruments",
    "predicate2_uri": "http://dbpedia.org/ontology/instrument",
    "predicate2_mention": "instruments",
    "type_uri": "http://dbpedia.org/ontology/MusicalArtist",
    "type_mention": "musical artist",
    "entity1_uri": "http://dbpedia.org/resource/Ludwig_Drums",
    "entity1_mention": "ludwig drums",
    "entity2_uri": "http://dbpedia.org/resource/Remo",
    "entity2_mention": "remo"
},
{
    "id": "3474",
    "question": "Who commanded the invasion of Buwat and made Fatima bint Sa'd famous?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Invasion_of_Buwat> <http://dbpedia.org/property/commander> ?uri. <http://dbpedia.org/resource/Fatimah_bint_Sa'd> <http://dbpedia.org/ontology/knownFor> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/commander",
    "predicate1_mention": "commanded",
    "predicate2_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate2_mention": "famous",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Invasion_of_Buwat",
    "entity1_mention": "invasion of buwat",
    "entity2_uri": "http://dbpedia.org/resource/Fatimah_bint_Sa'd",
    "entity2_mention": "Fatima bint Sa'd"
},
{
    "id": "3476",
    "question": "Who are the astronauts associated with NASA?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/type> <http://dbpedia.org/resource/NASA>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Astronaut>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/type",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/Astronaut",
    "predicate2_mention": "astronauts",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/NASA",
    "entity1_mention": "nasa",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3486",
    "question": "Who all have been presenters on shows by the NBC?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/NBC> . ?x <http://dbpedia.org/property/presenter> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/channel",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/presenter",
    "predicate2_mention": "presenters",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "shows",
    "entity1_uri": "http://dbpedia.org/resource/NBC",
    "entity1_mention": "nbc",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3490",
    "question": "What are the central characters in spy kids series?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/series> <http://dbpedia.org/resource/Spy_Kids_(franchise)>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/series",
    "predicate1_mention": "series",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Spy_Kids_(franchise)",
    "entity1_mention": "spy kids",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3495",
    "question": "Is William H Blanchard buried in Colorado?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/William_H._Blanchard> <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/Colorado> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/placeofburial",
    "predicate1_mention": "buried in",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/William_H._Blanchard",
    "entity1_mention": "William H Blanchard",
    "entity2_uri": "http://dbpedia.org/resource/Colorado",
    "entity2_mention": "colorado"
},
{
    "id": "3498",
    "question": "What award was won by the father of Angelina Jolie?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Angelina_Jolie> . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/children",
    "predicate1_mention": "father",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "award",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Angelina_Jolie",
    "entity1_mention": "angelina jolie",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3502",
    "question": "What are the hubs of PLUS Helicopter Services a highway helicopter unit of PLUS Expressways?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/PLUS_Expressways> <http://dbpedia.org/property/hubs> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/hubs",
    "predicate1_mention": "hubs",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/PLUS_Expressways",
    "entity1_mention": "PLUS Helicopter Services a highway helicopter unit of PLUS Expressways",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3506",
    "question": "In how many places are the tombs of people who died in Connecticut Colony?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Connecticut_Colony> . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/placeOfDeath",
    "predicate1_mention": "died in",
    "predicate2_uri": "http://dbpedia.org/ontology/restingPlace",
    "predicate2_mention": "tombs",
    "type_uri": "http://dbpedia.org/ontology/Place",
    "type_mention": "places",
    "entity1_uri": "http://dbpedia.org/resource/Connecticut_Colony",
    "entity1_mention": "connecticut colony",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3507",
    "question": "Who are the shareholder of the soccer club for whom Steve Holland plays?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Steve_Holland_(footballer)> <http://dbpedia.org/property/currentclub> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/currentclub",
    "predicate1_mention": "club",
    "predicate2_uri": "http://dbpedia.org/property/owner",
    "predicate2_mention": "shareholder",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Steve_Holland_(footballer)",
    "entity1_mention": "Steve Holland",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3510",
    "question": "Where does the river flow into which begins in Lebrsnik?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Lebr\u0161nik> . ?x <http://dbpedia.org/ontology/riverMouth> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/sourcePlace",
    "predicate1_mention": "begins",
    "predicate2_uri": "http://dbpedia.org/ontology/riverMouth",
    "predicate2_mention": "river",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lebr\u0161nik",
    "entity1_mention": "Lebrsnik",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3512",
    "question": "What is the colour of Xocolatlite ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Xocolatlite> <http://dbpedia.org/ontology/colour> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/colour",
    "predicate1_mention": "colour",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Xocolatlite",
    "entity1_mention": "xocolatlite",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3514",
    "question": "Name the location of Lekh Castle which is also the location of SamurAbsheron channel ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lekh_Castle> <http://dbpedia.org/ontology/location> ?uri. <http://dbpedia.org/resource/Samur\u2013Absheron_channel> <http://dbpedia.org/ontology/sourceCountry> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/location",
    "predicate1_mention": "location",
    "predicate2_uri": "http://dbpedia.org/ontology/sourceCountry",
    "predicate2_mention": "location",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lekh_Castle",
    "entity1_mention": "lekh castle",
    "entity2_uri": "http://dbpedia.org/resource/Samur\u2013Absheron_channel",
    "entity2_mention": "SamurAbsheron channel"
},
{
    "id": "3517",
    "question": "Was True Grit a novel of the western genre?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/True_Grit_(novel)> <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Western_(genre)> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/literaryGenre",
    "predicate1_mention": "genre",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/True_Grit_(novel)",
    "entity1_mention": "true grit",
    "entity2_uri": "http://dbpedia.org/resource/Western_(genre)",
    "entity2_mention": "western genre"
},
{
    "id": "3522",
    "question": "Name the president of Wyche Fowler ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wyche_Fowler> <http://dbpedia.org/ontology/president> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/president",
    "predicate1_mention": "president",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Wyche_Fowler",
    "entity1_mention": "wyche fowler",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3530",
    "question": "Which interest of Philip Novak is the relegion of Vesak ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Philip_Novak> <http://dbpedia.org/property/mainInterests> ?uri. <http://dbpedia.org/resource/Vesak> <http://dbpedia.org/ontology/type> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/mainInterests",
    "predicate1_mention": "interest",
    "predicate2_uri": "http://dbpedia.org/ontology/type",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Philip_Novak",
    "entity1_mention": "philip novak",
    "entity2_uri": "http://dbpedia.org/resource/Vesak",
    "entity2_mention": "vesak"
},
{
    "id": "3531",
    "question": "Is semnani one of the languages spoken in Iran?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Iran> <http://dbpedia.org/property/languages> <http://dbpedia.org/resource/Semnani_languages> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/languages",
    "predicate1_mention": "languages",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Iran",
    "entity1_mention": "iran",
    "entity2_uri": "http://dbpedia.org/resource/Semnani_languages",
    "entity2_mention": "semnani"
},
{
    "id": "3533",
    "question": "Which movies's screenplay is written by Akiva Goldsman",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Akiva_Goldsman>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/screenplay",
    "predicate1_mention": "screenplay",
    "predicate2_uri": "http://dbpedia.org/ontology/Film",
    "predicate2_mention": "movies's",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Akiva_Goldsman",
    "entity1_mention": "akiva goldsman",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3546",
    "question": "What are the movies written by Nick Castle?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Nick_Castle>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/writer",
    "predicate1_mention": "written by",
    "predicate2_uri": "http://dbpedia.org/ontology/Film",
    "predicate2_mention": "movies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Nick_Castle",
    "entity1_mention": "nick castle",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3556",
    "question": "What city gave birth to Mishal Raheja and also houses New India Assurance?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mishal_Raheja> <http://dbpedia.org/ontology/birthPlace> ?uri. <http://dbpedia.org/resource/New_India_Assurance> <http://dbpedia.org/property/location> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate1_mention": "gave birth to",
    "predicate2_uri": "http://dbpedia.org/property/location",
    "predicate2_mention": "city",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mishal_Raheja",
    "entity1_mention": "mishal raheja",
    "entity2_uri": "http://dbpedia.org/resource/New_India_Assurance",
    "entity2_mention": "New India Assurance"
},
{
    "id": "3561",
    "question": "Name the Fox TV show judged by Rand Jackson ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Randy_Jackson> . ?uri <http://dbpedia.org/property/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/judges",
    "predicate1_mention": "judged",
    "predicate2_uri": "http://dbpedia.org/property/channel",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "tv show",
    "entity1_uri": "http://dbpedia.org/resource/Randy_Jackson",
    "entity1_mention": "rand jackson",
    "entity2_uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company",
    "entity2_mention": "Fox"
},
{
    "id": "3572",
    "question": "Whihc uni did Joshua A. Siegel attend ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Joshua_A._Siegel> <http://dbpedia.org/property/education> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/education",
    "predicate1_mention": "uni",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Joshua_A._Siegel",
    "entity1_mention": "Joshua A. Siegel",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3577",
    "question": "What is the successor of PlayStation 4",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/PlayStation_4>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/PlayStation_4",
    "entity1_mention": "playstation 4",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3579",
    "question": "To which series does Lost special belong to ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Lost_Special> <http://dbpedia.org/property/series> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/series",
    "predicate1_mention": "series",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Lost_Special",
    "entity1_mention": "lost special",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3581",
    "question": "List the awards won by the film director of Chicken Run?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chicken_Run> <http://dbpedia.org/property/director> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/director",
    "predicate1_mention": "director",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Chicken_Run",
    "entity1_mention": "chicken run",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3582",
    "question": "Was Elton John a chairman of a Watford FC Season?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/1999\u20132000_Watford_F.C._season> <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Elton_John> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/chairman",
    "predicate1_mention": "chairman",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/1999\u20132000_Watford_F.C._season",
    "entity1_mention": "watford fc season",
    "entity2_uri": "http://dbpedia.org/resource/Elton_John",
    "entity2_mention": "elton john"
},
{
    "id": "3584",
    "question": "What is the religious affiliation of Neungin High School?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Neungin_High_School> <http://dbpedia.org/property/religiousAffiliation> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/religiousAffiliation",
    "predicate1_mention": "religious affiliation",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Neungin_High_School",
    "entity1_mention": "neungin high school",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3596",
    "question": "Who directed The Haunted House ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Haunted_House_(1929_film)> <http://dbpedia.org/ontology/director> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/director",
    "predicate1_mention": "directed",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Haunted_House_(1929_film)",
    "entity1_mention": "haunted house",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3597",
    "question": "For how many movies are there whose musicians home town is in Volos ?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Volos> . ?uri <http://dbpedia.org/property/music> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/hometown",
    "predicate1_mention": "home town",
    "predicate2_uri": "http://dbpedia.org/property/music",
    "predicate2_mention": "musicians",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Volos",
    "entity1_mention": "volos",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3600",
    "question": "what awards have been given to A. Peter Dewey?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/A._Peter_Dewey> <http://dbpedia.org/ontology/award> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/award",
    "predicate1_mention": "awards",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/A._Peter_Dewey",
    "entity1_mention": "A. Peter Dewey",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3602",
    "question": "Which Texas based company  was founded by Jim Harris ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Texas> . ?uri <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Jim_Harris_(entrepreneur)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/locationCity",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/founder",
    "predicate2_mention": "founded by",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "company",
    "entity1_uri": "http://dbpedia.org/resource/Texas",
    "entity1_mention": "texas",
    "entity2_uri": "http://dbpedia.org/resource/Jim_Harris_(entrepreneur)",
    "entity2_mention": "jim harris"
},
{
    "id": "3627",
    "question": "Name the officeholder who hasa child named Augustus and has an associate named Marcus Bibulus ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/associate> <http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus> . ?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Augustus>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/associate",
    "predicate1_mention": "associate",
    "predicate2_uri": "http://dbpedia.org/property/children",
    "predicate2_mention": "child",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "officeholder",
    "entity1_uri": "http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus",
    "entity1_mention": "marcus bibulus",
    "entity2_uri": "http://dbpedia.org/resource/Augustus",
    "entity2_mention": "augustus"
},
{
    "id": "3636",
    "question": "What are Jerry Bock's musicals based upon?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Jerry_Bock> . ?x <http://dbpedia.org/ontology/basedOn> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/music",
    "predicate1_mention": "musicals",
    "predicate2_uri": "http://dbpedia.org/ontology/basedOn",
    "predicate2_mention": "based upon",
    "type_uri": "http://dbpedia.org/ontology/Musical",
    "type_mention": "musicals",
    "entity1_uri": "http://dbpedia.org/resource/Jerry_Bock",
    "entity1_mention": "jerry bock's",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3637",
    "question": "The president who was in office when Lee Hyun Jae was the PM followed which religion?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/primeminister> <http://dbpedia.org/resource/Lee_Hyun-jae> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/primeminister",
    "predicate1_mention": "PM",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religion",
    "type_uri": "http://dbpedia.org/ontology/President",
    "type_mention": "president",
    "entity1_uri": "http://dbpedia.org/resource/Lee_Hyun-jae",
    "entity1_mention": "Lee Hyun Jae",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3643",
    "question": "What is the religion of the ones in the Kampuchean Union of Salvation?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Kampuchean_United_Front_for_National_Salvation> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/militaryBranch",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religion",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kampuchean_United_Front_for_National_Salvation",
    "entity1_mention": "Kampuchean Union of Salvation",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3644",
    "question": "List the employments of people who died in Tampa, Florida.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Tampa,_Florida> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate1_mention": "died in",
    "predicate2_uri": "http://dbpedia.org/ontology/occupation",
    "predicate2_mention": "employments",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tampa,_Florida",
    "entity1_mention": "Tampa, Florida",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3645",
    "question": "Which parent organization of GetTV is also the label of next thing ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Next_Thing> <http://dbpedia.org/ontology/recordLabel> ?uri. <http://dbpedia.org/resource/GetTV> <http://dbpedia.org/ontology/parentOrganisation> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/recordLabel",
    "predicate1_mention": "label",
    "predicate2_uri": "http://dbpedia.org/ontology/parentOrganisation",
    "predicate2_mention": "parent organization",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Next_Thing",
    "entity1_mention": "next thing",
    "entity2_uri": "http://dbpedia.org/resource/GetTV",
    "entity2_mention": "gettv"
},
{
    "id": "3672",
    "question": "Is Andrew Lincoln the narrator of Million Dollar Traders?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Million_Dollar_Traders> <http://dbpedia.org/ontology/narrator> <http://dbpedia.org/resource/Andrew_Lincoln> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/narrator",
    "predicate1_mention": "narrator",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Million_Dollar_Traders",
    "entity1_mention": "million dollar traders",
    "entity2_uri": "http://dbpedia.org/resource/Andrew_Lincoln",
    "entity2_mention": "andrew lincoln"
},
{
    "id": "3675",
    "question": "List the names of the soccer club seasons whose division is 2012 Campeonato Brasileiro Srie A.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/2012_Campeonato_Brasileiro_S\u00e9rie_A> . ?x <http://dbpedia.org/property/name> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/league",
    "predicate1_mention": "club",
    "predicate2_uri": "http://dbpedia.org/property/name",
    "predicate2_mention": "names",
    "type_uri": "http://dbpedia.org/ontology/SoccerClubSeason",
    "type_mention": "soccer club",
    "entity1_uri": "http://dbpedia.org/resource/2012_Campeonato_Brasileiro_S\u00e9rie_A",
    "entity1_mention": "2012 Campeonato Brasileiro Srie A.",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3677",
    "question": "What is the content licence of MSX BASIC ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/MSX_BASIC> <http://dbpedia.org/property/license> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/license",
    "predicate1_mention": "licence",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/MSX_BASIC",
    "entity1_mention": "msx basic",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3687",
    "question": "What are the notable commanders of the army  whose one of the notable commanders is Paul Hausser?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/notableCommanders> <http://dbpedia.org/resource/Paul_Hausser> . ?x <http://dbpedia.org/property/notableCommanders> ?uri  . }",
    "sparql_id": "11",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/notableCommanders",
    "predicate1_mention": "notable commanders",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Paul_Hausser",
    "entity1_mention": "paul hausser",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3696",
    "question": "Does StandBy records distribute via Sony?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/StandBy_Records> <http://dbpedia.org/ontology/distributingLabel> <http://dbpedia.org/resource/Sony> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/distributingLabel",
    "predicate1_mention": "distribute",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/StandBy_Records",
    "entity1_mention": "standby records",
    "entity2_uri": "http://dbpedia.org/resource/Sony",
    "entity2_mention": "sony"
},
{
    "id": "3701",
    "question": "Is Seattle the Ship builder of USS Marmora (IX-189)?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/USS_Marmora_(IX-189)> <http://dbpedia.org/property/shipBuilder> <http://dbpedia.org/resource/Seattle> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/shipBuilder",
    "predicate1_mention": "ship builder",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/USS_Marmora_(IX-189)",
    "entity1_mention": "USS Marmora (IX-189)",
    "entity2_uri": "http://dbpedia.org/resource/Seattle",
    "entity2_mention": "seattle"
},
{
    "id": "3709",
    "question": "Is Charles Drummond Ellis a doctoral student of James Chadwick?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/James_Chadwick> <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/Charles_Drummond_Ellis> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/doctoralStudent",
    "predicate1_mention": "doctoral student",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/James_Chadwick",
    "entity1_mention": "james chadwick",
    "entity2_uri": "http://dbpedia.org/resource/Charles_Drummond_Ellis",
    "entity2_mention": "charles drummond ellis"
},
{
    "id": "3713",
    "question": "What is the purpose of New Zealand Chess Federation ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/New_Zealand_Chess_Federation> <http://dbpedia.org/property/purpose> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/purpose",
    "predicate1_mention": "purpose",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/New_Zealand_Chess_Federation",
    "entity1_mention": "New Zealand Chess Federation",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3719",
    "question": "Under which presidents have politicians from the Continental army served?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Continental_Army> . ?x <http://dbpedia.org/property/president> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/branch",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/president",
    "predicate2_mention": "presidents",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Continental_Army",
    "entity1_mention": "continental army",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3723",
    "question": "How many universities are there whose country's capital is Oslo?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/capital> <http://dbpedia.org/resource/Oslo> . ?uri <http://dbpedia.org/ontology/country> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/capital",
    "predicate1_mention": "capital",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "country's",
    "type_uri": "http://dbpedia.org/ontology/University",
    "type_mention": "universities",
    "entity1_uri": "http://dbpedia.org/resource/Oslo",
    "entity1_mention": "oslo",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3730",
    "question": "Horses sired by Karinga Bay have participated in which races?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/sire> <http://dbpedia.org/resource/Karinga_Bay> . ?x <http://dbpedia.org/property/race> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/sire",
    "predicate1_mention": "sired by",
    "predicate2_uri": "http://dbpedia.org/property/race",
    "predicate2_mention": "races",
    "type_uri": "http://dbpedia.org/ontology/Horse",
    "type_mention": "horses",
    "entity1_uri": "http://dbpedia.org/resource/Karinga_Bay",
    "entity1_mention": "karinga bay",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3735",
    "question": "What is the radio show created by Timoteo Jeffries, about?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Timoteo_Jeffries> . ?x <http://dbpedia.org/property/format> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioProgram>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/creator",
    "predicate1_mention": "created by",
    "predicate2_uri": "http://dbpedia.org/property/format",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/RadioProgram",
    "type_mention": "radio show",
    "entity1_uri": "http://dbpedia.org/resource/Timoteo_Jeffries",
    "entity1_mention": "Timoteo Jeffries",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3736",
    "question": "Who is associated  with the musical artists from Africa '70 (band) and Tony Allen ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Africa_'70_(band)> . ?uri <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Tony_Allen_(musician)> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
    "predicate1_mention": "associated  with the musical artists",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/MusicalArtist",
    "type_mention": "musical artists",
    "entity1_uri": "http://dbpedia.org/resource/Africa_'70_(band)",
    "entity1_mention": "Africa '70 (band)",
    "entity2_uri": "http://dbpedia.org/resource/Tony_Allen_(musician)",
    "entity2_mention": "Tony Allen"
},
{
    "id": "3737",
    "question": "How many religions are followed by the group whose architectural style can be seen on Sanggar Agung?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Sanggar_Agung> <http://dbpedia.org/property/architecturalStyle> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}",
    "sparql_id": "403",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/architecturalStyle",
    "predicate1_mention": "architectural style",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religions",
    "type_uri": "http://dbpedia.org/ontology/EthnicGroup",
    "type_mention": "group",
    "entity1_uri": "http://dbpedia.org/resource/Sanggar_Agung",
    "entity1_mention": "sanggar agung",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3743",
    "question": "Which companies makes cars assembled in Karachi, Pakistan?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Karachi> . ?x <http://dbpedia.org/property/parentCompany> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/assembly",
    "predicate1_mention": "assembled",
    "predicate2_uri": "http://dbpedia.org/property/parentCompany",
    "predicate2_mention": "companies",
    "type_uri": "http://dbpedia.org/ontology/Automobile",
    "type_mention": "cars",
    "entity1_uri": "http://dbpedia.org/resource/Karachi",
    "entity1_mention": "Karachi",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3744",
    "question": "Who is the president of Carl Stokes nad Wyche Fowler ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Carl_Stokes> <http://dbpedia.org/property/president> ?uri. <http://dbpedia.org/resource/Wyche_Fowler> <http://dbpedia.org/ontology/president> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/president",
    "predicate1_mention": "president",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Carl_Stokes",
    "entity1_mention": "carl stokes",
    "entity2_uri": "http://dbpedia.org/resource/Wyche_Fowler",
    "entity2_mention": "wyche fowler"
},
{
    "id": "3746",
    "question": "Josef Bhler belongs to which political party?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Josef_B\u00fchler> <http://dbpedia.org/ontology/occupation> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/occupation",
    "predicate1_mention": "party",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Josef_B\u00fchler",
    "entity1_mention": "josef bhler",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3748",
    "question": "Where is the headquarters of Sigma TV",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sigma_TV> <http://dbpedia.org/property/headquarters> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/headquarters",
    "predicate1_mention": "headquarters",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sigma_TV",
    "entity1_mention": "sigma tv",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3756",
    "question": "How many subjects are covered in the publications of Doubleday?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Doubleday_(publisher)> . ?x <http://dbpedia.org/ontology/nonFictionSubject> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/publisher",
    "predicate1_mention": "publications",
    "predicate2_uri": "http://dbpedia.org/ontology/nonFictionSubject",
    "predicate2_mention": "subjects",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Doubleday_(publisher)",
    "entity1_mention": "doubleday",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3762",
    "question": "In how many places has Don R. Berlin worked?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Don_R._Berlin> <http://dbpedia.org/ontology/employer> ?uri  . }",
    "sparql_id": "102",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/employer",
    "predicate1_mention": "worked",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Don_R._Berlin",
    "entity1_mention": " Don R. Berlin",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3763",
    "question": "Was Heinrich Himmler ever a commanders of Army Group Oberrhein?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Army_Group_Oberrhein_(Germany)> <http://dbpedia.org/property/notableCommanders> <http://dbpedia.org/resource/Heinrich_Himmler> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/notableCommanders",
    "predicate1_mention": "commanders",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Army_Group_Oberrhein_(Germany)",
    "entity1_mention": "army group oberrhein",
    "entity2_uri": "http://dbpedia.org/resource/Heinrich_Himmler",
    "entity2_mention": "heinrich himmler"
},
{
    "id": "3766",
    "question": "What is the stylistic origin of the music genres where the Bass guitar is important?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/instruments> <http://dbpedia.org/resource/Bass_guitar> . ?x <http://dbpedia.org/ontology/stylisticOrigin> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicGenre>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/instruments",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/stylisticOrigin",
    "predicate2_mention": "stylistic origin",
    "type_uri": "http://dbpedia.org/ontology/MusicGenre",
    "type_mention": "music genres",
    "entity1_uri": "http://dbpedia.org/resource/Bass_guitar",
    "entity1_mention": "bass guitar",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3769",
    "question": "Where did the office holder  who is predecessor to Marco Aurelio Robles died ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Marco_Aurelio_Robles> . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/predecessor",
    "predicate1_mention": "predecessor",
    "predicate2_uri": "http://dbpedia.org/property/placeOfDeath",
    "predicate2_mention": "died",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "office holder",
    "entity1_uri": "http://dbpedia.org/resource/Marco_Aurelio_Robles",
    "entity1_mention": "Marco Aurelio Robles",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3772",
    "question": "List all the schools of the rugby player whose went to school named Pietermaritzburg ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/school> <http://dbpedia.org/resource/Pietermaritzburg> . ?x <http://dbpedia.org/property/school> ?uri  . }",
    "sparql_id": "11",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/school",
    "predicate1_mention": "schools",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Pietermaritzburg",
    "entity1_mention": "pietermaritzburg",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3775",
    "question": "What are the things whose mascots are from the class Eutheria?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/class> <http://dbpedia.org/resource/Eutheria> . ?uri <http://dbpedia.org/property/mascot> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/class",
    "predicate1_mention": "class",
    "predicate2_uri": "http://dbpedia.org/property/mascot",
    "predicate2_mention": "mascots",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Eutheria",
    "entity1_mention": "eutheria",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3777",
    "question": "Name the are where South side Elevated Railroad operate and has place of birth as Arthur A. Ross ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Side_Elevated_Railroad> <http://dbpedia.org/ontology/operatedBy> ?uri. <http://dbpedia.org/resource/Arthur_A._Ross> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/operatedBy",
    "predicate1_mention": "operate",
    "predicate2_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate2_mention": "place of birth",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/South_Side_Elevated_Railroad",
    "entity1_mention": "South side Elevated Railroad",
    "entity2_uri": "http://dbpedia.org/resource/Arthur_A._Ross",
    "entity2_mention": "arthur a. ross"
},
{
    "id": "3791",
    "question": "Quebec born ice hockey players have stopped playing for which teams?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Quebec> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/IceHockeyPlayer>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate1_mention": "born",
    "predicate2_uri": "http://dbpedia.org/ontology/formerTeam",
    "predicate2_mention": "teams",
    "type_uri": "http://dbpedia.org/ontology/IceHockeyPlayer",
    "type_mention": "ice hockey players",
    "entity1_uri": "http://dbpedia.org/resource/Quebec",
    "entity1_mention": "quebec",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3797",
    "question": "How many politicians are there from the city of Ganges?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Ganges> <http://dbpedia.org/property/city> ?x . ?x <http://dbpedia.org/ontology/leaderName> ?uri  . }",
    "sparql_id": "103",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/city",
    "predicate1_mention": "city",
    "predicate2_uri": "http://dbpedia.org/ontology/leaderName",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ganges",
    "entity1_mention": "ganges",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3798",
    "question": "What genre's softwares are released with a GNU GPL license?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/license> <http://dbpedia.org/resource/GNU_General_Public_License> . ?x <http://dbpedia.org/property/genre> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/license",
    "predicate1_mention": "license",
    "predicate2_uri": "http://dbpedia.org/property/genre",
    "predicate2_mention": "genre's",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/GNU_General_Public_License",
    "entity1_mention": "license",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3812",
    "question": "Count the movies in Swedish language?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/language> <http://dbpedia.org/resource/Swedish_language>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/language",
    "predicate1_mention": "language",
    "predicate2_uri": "http://dbpedia.org/ontology/Film",
    "predicate2_mention": "movies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Swedish_language",
    "entity1_mention": "swedish language",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3818",
    "question": "How many politicians live in India?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/India>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/residence",
    "predicate1_mention": "live in",
    "predicate2_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "predicate2_mention": "politicians",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/India",
    "entity1_mention": "india",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3823",
    "question": "Who is the producer of the device which is the operating system of Now TV  ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Now_TV_(UK)> <http://dbpedia.org/ontology/operatingSystem> ?x . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/operatingSystem",
    "predicate1_mention": "operating system",
    "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate2_mention": "producer",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Now_TV_(UK)",
    "entity1_mention": "now tv",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3840",
    "question": "What faiths are followed by the relatives of Meadow Soprano?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Meadow_Soprano> <http://dbpedia.org/ontology/relative> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/relative",
    "predicate1_mention": "relatives",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "relatives",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Meadow_Soprano",
    "entity1_mention": "meadow soprano",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3843",
    "question": "Where did the scientist study whose doctoral thesis was supervised by Leonard Lerman?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Leonard_Lerman> . ?x <http://dbpedia.org/property/almaMater> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/doctoralAdvisor",
    "predicate1_mention": "supervised by",
    "predicate2_uri": "http://dbpedia.org/property/almaMater",
    "predicate2_mention": "study",
    "type_uri": "http://dbpedia.org/ontology/Scientist",
    "type_mention": "scientist",
    "entity1_uri": "http://dbpedia.org/resource/Leonard_Lerman",
    "entity1_mention": "leonard lerman",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3847",
    "question": "Which river flows through Hudson Highlands State park and also through Troy, New york ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hudson_Highlands_State_Park> <http://dbpedia.org/property/river> ?uri. <http://dbpedia.org/resource/Troy,_New_York> <http://dbpedia.org/ontology/river> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/river",
    "predicate1_mention": "river",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hudson_Highlands_State_Park",
    "entity1_mention": "Hudson Highlands State park",
    "entity2_uri": "http://dbpedia.org/resource/Troy,_New_York",
    "entity2_mention": "troy, new york"
},
{
    "id": "3850",
    "question": "What river is it whose source is Dowra?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Dowra>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/sourceLocation",
    "predicate1_mention": "source",
    "predicate2_uri": "http://dbpedia.org/ontology/River",
    "predicate2_mention": "river",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Dowra",
    "entity1_mention": "dowra",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3851",
    "question": "Who was the voice actor of allen walker also gave voice to kimihiro watanuki?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Allen_Walker> <http://dbpedia.org/ontology/voice> ?uri. <http://dbpedia.org/resource/Kimihiro_Watanuki> <http://dbpedia.org/ontology/voice> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/voice",
    "predicate1_mention": "voice",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Allen_Walker",
    "entity1_mention": "allen walker",
    "entity2_uri": "http://dbpedia.org/resource/Kimihiro_Watanuki",
    "entity2_mention": "kimihiro watanuki"
},
{
    "id": "3854",
    "question": "What is the launch site of Aquarius (rocket) ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Aquarius_(rocket)> <http://dbpedia.org/ontology/launchSite> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/launchSite",
    "predicate1_mention": "launch site",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Aquarius_(rocket)",
    "entity1_mention": "aquarius (rocket)",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3863",
    "question": "What are some dishes from the family of dishes which primarily use flour?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/mainIngredient> <http://dbpedia.org/resource/Flour> . ?uri <http://dbpedia.org/ontology/type> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Food>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/mainIngredient",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/type",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Food",
    "type_mention": "dishes",
    "entity1_uri": "http://dbpedia.org/resource/Flour",
    "entity1_mention": "flour",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3874",
    "question": " Giuseppe Bertello and Pietro Parolin are leaders of which place ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Giuseppe_Bertello> . ?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Pietro_Parolin> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/leader",
    "predicate1_mention": "leaders",
    "predicate2_uri": "http://dbpedia.org/ontology/leader",
    "predicate2_mention": "leaders",
    "type_uri": "http://dbpedia.org/ontology/Place",
    "type_mention": "place",
    "entity1_uri": "http://dbpedia.org/resource/Giuseppe_Bertello",
    "entity1_mention": "giuseppe bertello",
    "entity2_uri": "http://dbpedia.org/resource/Pietro_Parolin",
    "entity2_mention": "pietro parolin"
},
{
    "id": "3876",
    "question": "How did the child of Stevens T. Mason die?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Stevens_Thomson_Mason_(Virginia)> <http://dbpedia.org/ontology/child> ?x . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/child",
    "predicate1_mention": "child",
    "predicate2_uri": "http://dbpedia.org/ontology/deathCause",
    "predicate2_mention": "die",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Stevens_Thomson_Mason_(Virginia)",
    "entity1_mention": "stevens T. mason",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3877",
    "question": "What is the faith of Kwai Chang Caine ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kwai_Chang_Caine> <http://dbpedia.org/ontology/religion> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/religion",
    "predicate1_mention": "faith",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kwai_Chang_Caine",
    "entity1_mention": "Kwai Chang Caine",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3884",
    "question": "List the settlements area whose province is Metropolitan City of Venice ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/province> <http://dbpedia.org/resource/Metropolitan_City_of_Venice>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/province",
    "predicate1_mention": "province",
    "predicate2_uri": "http://dbpedia.org/ontology/Settlement",
    "predicate2_mention": "settlements",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Metropolitan_City_of_Venice",
    "entity1_mention": "metropolitan city of venice",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3890",
    "question": "Is the Vadodara railway junction onwed by Indian Railway Ministry?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Vadodara_Junction_railway_station> <http://dbpedia.org/ontology/owningOrganisation> <http://dbpedia.org/resource/Ministry_of_Railways_(India)> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/owningOrganisation",
    "predicate1_mention": "ministry",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Vadodara_Junction_railway_station",
    "entity1_mention": "vadodara railway junction",
    "entity2_uri": "http://dbpedia.org/resource/Ministry_of_Railways_(India)",
    "entity2_mention": "Indian Railway Ministry"
},
{
    "id": "3900",
    "question": "Who is the writer of mark twain Tonight ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mark_Twain_Tonight> <http://dbpedia.org/property/writer> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/writer",
    "predicate1_mention": "writer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mark_Twain_Tonight",
    "entity1_mention": "mark twain tonight",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3913",
    "question": "Which nationalist group was responsible for foundation of Young Lords?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Young_Lords> <http://dbpedia.org/property/international> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/international",
    "predicate1_mention": "nationalist",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Young_Lords",
    "entity1_mention": "young lords",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3923",
    "question": "How many people have fought wars where Arthur St. Clair was a commander?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_St._Clair> . ?x <http://dbpedia.org/property/combatant> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/commander",
    "predicate1_mention": "commander",
    "predicate2_uri": "http://dbpedia.org/property/combatant",
    "predicate2_mention": "wars",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Arthur_St._Clair",
    "entity1_mention": "Arthur St. Clair",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3925",
    "question": "What are some parties which have people from Mangalore as a member?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Mangalore> . ?x <http://dbpedia.org/property/party> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/party",
    "predicate2_mention": "parties",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mangalore",
    "entity1_mention": "mangalore",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3943",
    "question": "What is the venue of San Diego Comic-Con International ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/San_Diego_Comic-Con_International> <http://dbpedia.org/property/venue> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/venue",
    "predicate1_mention": "venue",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/San_Diego_Comic-Con_International",
    "entity1_mention": "San Diego Comic-Con International",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3952",
    "question": "Who composed the episode after which came Butter's Very own Episode?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Butters'_Very_Own_Episode> . ?x <http://dbpedia.org/ontology/musicComposer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionEpisode>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/subsequentWork",
    "predicate1_mention": "after which",
    "predicate2_uri": "http://dbpedia.org/ontology/musicComposer",
    "predicate2_mention": "composed",
    "type_uri": "http://dbpedia.org/ontology/TelevisionEpisode",
    "type_mention": "episode",
    "entity1_uri": "http://dbpedia.org/resource/Butters'_Very_Own_Episode",
    "entity1_mention": "Butter's Very own Episode",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3953",
    "question": "What are some wars fought when Chung Il Kwon as the country's prime minister?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/primeminister> <http://dbpedia.org/resource/Chung_Il-kwon> . ?uri <http://dbpedia.org/ontology/commander> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/primeminister",
    "predicate1_mention": "prime minister",
    "predicate2_uri": "http://dbpedia.org/ontology/commander",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/MilitaryConflict",
    "type_mention": "wars",
    "entity1_uri": "http://dbpedia.org/resource/Chung_Il-kwon",
    "entity1_mention": "chung Il kwon",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3962",
    "question": "How many people have worked for teams chaired by Patricia Amorim?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Patr\u00edcia_Amorim> . ?x <http://dbpedia.org/property/name> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/chairman",
    "predicate1_mention": "chaired",
    "predicate2_uri": "http://dbpedia.org/property/name",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Patr\u00edcia_Amorim",
    "entity1_mention": "Patricia Amorim",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3969",
    "question": "Which broadcast area of CFRX is also the palce of birth of Anthony Raymond ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/CFRX> <http://dbpedia.org/ontology/broadcastArea> ?uri. <http://dbpedia.org/resource/Anthony_Raymond_Ceresko> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/broadcastArea",
    "predicate1_mention": "broadcast area",
    "predicate2_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate2_mention": "palce of birth",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/CFRX",
    "entity1_mention": "cfrx",
    "entity2_uri": "http://dbpedia.org/resource/Anthony_Raymond_Ceresko",
    "entity2_mention": "anthony raymond"
},
{
    "id": "3974",
    "question": "For how many PMs did the politician work, whose successor was Kingsley Wood?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Kingsley_Wood> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/property/primeminister> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "403",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "http://dbpedia.org/property/primeminister",
    "predicate2_mention": "PMs",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "politician",
    "entity1_uri": "http://dbpedia.org/resource/Kingsley_Wood",
    "entity1_mention": "kingsley wood",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3981",
    "question": "Was Love Hurts in Short Cut Draw Blood?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Love_Hurts> <http://dbpedia.org/property/album> <http://dbpedia.org/resource/Short_Cut_Draw_Blood> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/album",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Love_Hurts",
    "entity1_mention": "love hurts",
    "entity2_uri": "http://dbpedia.org/resource/Short_Cut_Draw_Blood",
    "entity2_mention": "Short Cut Draw Blood"
},
{
    "id": "3987",
    "question": "Count the writers whose work has been played in NY?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/place> <http://dbpedia.org/resource/New_York> . ?x <http://dbpedia.org/property/writer> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/place",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/writer",
    "predicate2_mention": "writers",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/New_York",
    "entity1_mention": "NY",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3991",
    "question": "Give me the home town of all musical artists who uses Guitar as instrument ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Guitar> . ?x <http://dbpedia.org/ontology/hometown> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/instrument",
    "predicate1_mention": "instrument",
    "predicate2_uri": "http://dbpedia.org/ontology/hometown",
    "predicate2_mention": "home town",
    "type_uri": "http://dbpedia.org/ontology/MusicalArtist",
    "type_mention": "musical artists",
    "entity1_uri": "http://dbpedia.org/resource/Guitar",
    "entity1_mention": "guitar",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3993",
    "question": "What are the airline hubs of Cascade Airways?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Union_of_Cambodian_Democrats> <http://dbpedia.org/ontology/ideology> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/ideology",
    "predicate1_mention": "airline hubs",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Union_of_Cambodian_Democrats",
    "entity1_mention": "cascade airways",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4000",
    "question": "Was Marshall Arisman the cover artist in american psycho?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/American_Psycho> <http://dbpedia.org/property/coverArtist> <http://dbpedia.org/resource/Marshall_Arisman> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/coverArtist",
    "predicate1_mention": "cover artist",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/American_Psycho",
    "entity1_mention": "american psycho",
    "entity2_uri": "http://dbpedia.org/resource/Marshall_Arisman",
    "entity2_mention": "marshall arisman"
},
{
    "id": "4007",
    "question": "People in the royal Thai army follow which religion?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Royal_Thai_Army> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/branch",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religion",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Royal_Thai_Army",
    "entity1_mention": "royal thai army",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4014",
    "question": "What city is located on the mouth of Duwamish River?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Duwamish_River> <http://dbpedia.org/ontology/riverMouth> ?x . ?x <http://dbpedia.org/property/cities> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/riverMouth",
    "predicate1_mention": "mouth",
    "predicate2_uri": "http://dbpedia.org/property/cities",
    "predicate2_mention": "city",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Duwamish_River",
    "entity1_mention": "duwamish river",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4018",
    "question": "Which party won the elections when Y.S. Rajasekhara Reddy was in power?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Y._S._Rajasekhara_Reddy> . ?x <http://dbpedia.org/ontology/affiliation> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Election>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/leader",
    "predicate1_mention": "power",
    "predicate2_uri": "http://dbpedia.org/ontology/affiliation",
    "predicate2_mention": "elections",
    "type_uri": "http://dbpedia.org/ontology/Election",
    "type_mention": "elections",
    "entity1_uri": "http://dbpedia.org/resource/Y._S._Rajasekhara_Reddy",
    "entity1_mention": "y.s. rajasekhara reddy",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4021",
    "question": "Is Henry David Thoreau interested in Politics?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Henry_David_Thoreau> <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/Politics> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/mainInterests",
    "predicate1_mention": "interested",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Henry_David_Thoreau",
    "entity1_mention": "Henry David Thoreau",
    "entity2_uri": "http://dbpedia.org/resource/Politics",
    "entity2_mention": "politics"
},
{
    "id": "4027",
    "question": "VP-8 and VP-10 shares which command structure ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/VP-8> <http://dbpedia.org/ontology/commandStructure> ?uri. <http://dbpedia.org/resource/VP-10> <http://dbpedia.org/ontology/commandStructure> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/commandStructure",
    "predicate1_mention": "command structure",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/VP-8",
    "entity1_mention": "vp-8",
    "entity2_uri": "http://dbpedia.org/resource/VP-10",
    "entity2_mention": "vp-10"
},
{
    "id": "4029",
    "question": "List the people residing in Wilton , Connecticut?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Wilton,_Connecticut> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/residence",
    "predicate1_mention": "residing in",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Wilton,_Connecticut",
    "entity1_mention": "Wilton , Connecticut",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4033",
    "question": "Does Fa'a' International Airport serve tahiti too?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Fa'a'\u0101_International_Airport> <http://dbpedia.org/property/cityServed> <http://dbpedia.org/resource/Tahiti> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/cityServed",
    "predicate1_mention": "serve",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Fa'a'\u0101_International_Airport",
    "entity1_mention": "fa'a' international airport",
    "entity2_uri": "http://dbpedia.org/resource/Tahiti",
    "entity2_mention": "tahiti"
},
{
    "id": "4042",
    "question": "Does Dan River flow into the Jordan Valley?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jordan_River> <http://dbpedia.org/ontology/leftTributary> <http://dbpedia.org/resource/Dan_River_(Middle_East)> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/leftTributary",
    "predicate1_mention": "river",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jordan_River",
    "entity1_mention": "jordan valley",
    "entity2_uri": "http://dbpedia.org/resource/Dan_River_(Middle_East)",
    "entity2_mention": "dan river"
},
{
    "id": "4045",
    "question": "Music of how many things has been given by Akira Ifukube?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Akira_Ifukube>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/music",
    "predicate1_mention": "music",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Akira_Ifukube",
    "entity1_mention": "akira ifukube",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4057",
    "question": "Is north caucasian emirate have an islamic government?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/North_Caucasian_Emirate> <http://dbpedia.org/ontology/governmentType> <http://dbpedia.org/resource/Islam> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/governmentType",
    "predicate1_mention": "government",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/North_Caucasian_Emirate",
    "entity1_mention": "north caucasian emirate",
    "entity2_uri": "http://dbpedia.org/resource/Islam",
    "entity2_mention": "islamic"
},
{
    "id": "4061",
    "question": "In how many states can one find Burr Tuss kind of bridges?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/style> <http://dbpedia.org/resource/Burr_Truss> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/style",
    "predicate1_mention": "kind of",
    "predicate2_uri": "http://dbpedia.org/ontology/state",
    "predicate2_mention": "states",
    "type_uri": "http://dbpedia.org/ontology/Region",
    "type_mention": "states",
    "entity1_uri": "http://dbpedia.org/resource/Burr_Truss",
    "entity1_mention": "Burr Tuss",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4067",
    "question": "What are the television shows whose company is owned by Viacom?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/Viacom_(original)> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/owningCompany",
    "predicate1_mention": "company",
    "predicate2_uri": "http://dbpedia.org/property/company",
    "predicate2_mention": "company",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television shows",
    "entity1_uri": "http://dbpedia.org/resource/Viacom_(original)",
    "entity1_mention": "viacom",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4070",
    "question": "What is the origin of Xynisteri?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Xynisteri> <http://dbpedia.org/ontology/origin> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/origin",
    "predicate1_mention": "origin",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Xynisteri",
    "entity1_mention": "xynisteri",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4079",
    "question": "In which city was the film star of Singhasan Battisi born ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Singhasan_Battisi_(TV_series)> <http://dbpedia.org/ontology/starring> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/starring",
    "predicate1_mention": "star",
    "predicate2_uri": "http://dbpedia.org/property/birthPlace",
    "predicate2_mention": "born",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Singhasan_Battisi_(TV_series)",
    "entity1_mention": "singhasan battisi",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4090",
    "question": "What are some other things developed by the company who made the remote desktop protocol?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Remote_Desktop_Protocol> . ?x <http://dbpedia.org/ontology/product> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/products",
    "predicate1_mention": "things",
    "predicate2_uri": "http://dbpedia.org/ontology/product",
    "predicate2_mention": "made",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "company",
    "entity1_uri": "http://dbpedia.org/resource/Remote_Desktop_Protocol",
    "entity1_mention": "remote desktop protocol",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4097",
    "question": "What is the band with previous members  Kevin Jonas and Joe Jonas?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Kevin_Jonas> . ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Joe_Jonas> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/pastMembers",
    "predicate1_mention": "previous members",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Band",
    "type_mention": "band",
    "entity1_uri": "http://dbpedia.org/resource/Kevin_Jonas",
    "entity1_mention": "kevin jonas",
    "entity2_uri": "http://dbpedia.org/resource/Joe_Jonas",
    "entity2_mention": "joe jonas"
},
{
    "id": "4102",
    "question": "Name the nearest city to David W. Brown House ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/David_W._Brown_House> <http://dbpedia.org/ontology/nearestCity> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/nearestCity",
    "predicate1_mention": "nearest city",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/David_W._Brown_House",
    "entity1_mention": "David W. Brown House",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4106",
    "question": "In which country does the publishing house exist which was cofounded by Panos Loannides?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/founder> <http://dbpedia.org/resource/Panos_Ioannides> . ?x <http://dbpedia.org/property/country> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Publisher>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/founder",
    "predicate1_mention": "cofounded by",
    "predicate2_uri": "http://dbpedia.org/property/country",
    "predicate2_mention": "country",
    "type_uri": "http://dbpedia.org/ontology/Publisher",
    "type_mention": "publishing",
    "entity1_uri": "http://dbpedia.org/resource/Panos_Ioannides",
    "entity1_mention": "Panos Loannides",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4107",
    "question": "List all the awards won by the artist who has won SIGGRAPH ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/SIGGRAPH> . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "sparql_id": "11",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/award",
    "predicate1_mention": "awards",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/SIGGRAPH",
    "entity1_mention": "siggraph",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4115",
    "question": "How many movies have been directed by Orson Welles ?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Orson_Welles>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/director",
    "predicate1_mention": "directed by",
    "predicate2_uri": "http://dbpedia.org/ontology/Film",
    "predicate2_mention": "movies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Orson_Welles",
    "entity1_mention": "orson welles",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4117",
    "question": "Name the common home port of the Trishna (yacht) and INS Viraat (R22)?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Trishna_(yacht)> <http://dbpedia.org/ontology/homeport> ?uri. <http://dbpedia.org/resource/INS_Viraat_(R22)> <http://dbpedia.org/ontology/homeport> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/homeport",
    "predicate1_mention": "home port",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Trishna_(yacht)",
    "entity1_mention": "trishna (yacht)",
    "entity2_uri": "http://dbpedia.org/resource/INS_Viraat_(R22)",
    "entity2_mention": "ins viraat (r22)"
},
{
    "id": "4123",
    "question": "Who designed the language integrated query?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Language_Integrated_Query> <http://dbpedia.org/ontology/designer> ?uri  . }",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/designer",
    "predicate1_mention": "designed",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Language_Integrated_Query",
    "entity1_mention": "language integrated query",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4124",
    "question": "List the associates of bands which have a label by Motown ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/Motown> . ?x <http://dbpedia.org/property/associatedActs> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/recordLabel",
    "predicate1_mention": "label",
    "predicate2_uri": "http://dbpedia.org/property/associatedActs",
    "predicate2_mention": "associates",
    "type_uri": "http://dbpedia.org/ontology/Band",
    "type_mention": "bands",
    "entity1_uri": "http://dbpedia.org/resource/Motown",
    "entity1_mention": "motown",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4131",
    "question": "Which borough is common for Duddeston and Bordesley railway station ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Duddeston_railway_station> <http://dbpedia.org/property/borough> ?uri. <http://dbpedia.org/resource/Bordesley_railway_station> <http://dbpedia.org/property/borough> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/borough",
    "predicate1_mention": "borough",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Duddeston_railway_station",
    "entity1_mention": "Duddeston",
    "entity2_uri": "http://dbpedia.org/resource/Bordesley_railway_station",
    "entity2_mention": "Bordesley railway station"
},
{
    "id": "4132",
    "question": "Name the office holder whose final resting place is North Bend and was part of Siege of fort recovery conflict ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Siege_of_Fort_Recovery> . ?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/North_Bend,_Ohio>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/battle",
    "predicate1_mention": "conflict",
    "predicate2_uri": "http://dbpedia.org/property/restingplace",
    "predicate2_mention": "resting place",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "office holder",
    "entity1_uri": "http://dbpedia.org/resource/Siege_of_Fort_Recovery",
    "entity1_mention": "Siege of fort recovery",
    "entity2_uri": "http://dbpedia.org/resource/North_Bend,_Ohio",
    "entity2_mention": "north bend"
},
{
    "id": "4134",
    "question": "In which fields have people born in Lausanne worked?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Lausanne> . ?x <http://dbpedia.org/property/fields> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate1_mention": "born in",
    "predicate2_uri": "http://dbpedia.org/property/fields",
    "predicate2_mention": "fields",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lausanne",
    "entity1_mention": "lausanne",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4136",
    "question": "For whom did Michael Springer palyed for which is also had a former student named Donald Brooks ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Springer> <http://dbpedia.org/property/team> ?uri. <http://dbpedia.org/resource/Donald_Brooks> <http://dbpedia.org/property/education> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/team",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/education",
    "predicate2_mention": "student",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Michael_Springer",
    "entity1_mention": "michael springer",
    "entity2_uri": "http://dbpedia.org/resource/Donald_Brooks",
    "entity2_mention": "donald brooks"
},
{
    "id": "4138",
    "question": "How many artists have collaborated with famous guitar players?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Guitar> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/notableInstruments",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
    "predicate2_mention": "artists",
    "type_uri": "http://dbpedia.org/ontology/Artist",
    "type_mention": "artists",
    "entity1_uri": "http://dbpedia.org/resource/Guitar",
    "entity1_mention": "guitar",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4142",
    "question": "What have some US citizens died of?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/citizenship> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/citizenship",
    "predicate1_mention": "citizens",
    "predicate2_uri": "http://dbpedia.org/ontology/deathCause",
    "predicate2_mention": "died of",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_States",
    "entity1_mention": "US",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4143",
    "question": "What are some famous veterinary physicians known for?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/field> <http://dbpedia.org/resource/Veterinary_physician> . ?x <http://dbpedia.org/property/knownFor> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/field",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/knownFor",
    "predicate2_mention": "known for",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Veterinary_physician",
    "entity1_mention": "veterinary physicians",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4146",
    "question": "Is the Hyundai Lavita assembled in Kulim?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hyundai_Lavita> <http://dbpedia.org/ontology/assembly> <http://dbpedia.org/resource/Kulim> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/assembly",
    "predicate1_mention": "assembled in",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hyundai_Lavita",
    "entity1_mention": "hyundai lavita",
    "entity2_uri": "http://dbpedia.org/resource/Kulim",
    "entity2_mention": "kulim"
},
{
    "id": "4149",
    "question": "Name the sea into which Danish Straits flows and has Kaliningrad as one of the city on the shore ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Kaliningrad> . ?uri <http://dbpedia.org/property/outflow> <http://dbpedia.org/resource/Danish_straits>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/cities",
    "predicate1_mention": "city",
    "predicate2_uri": "http://dbpedia.org/property/outflow",
    "predicate2_mention": "flows",
    "type_uri": "http://dbpedia.org/ontology/Sea",
    "type_mention": "sea",
    "entity1_uri": "http://dbpedia.org/resource/Kaliningrad",
    "entity1_mention": "kaliningrad",
    "entity2_uri": "http://dbpedia.org/resource/Danish_straits",
    "entity2_mention": "danish straits"
},
{
    "id": "4156",
    "question": "Was Kevin Rudd the PM of Julia Gillard?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Julia_Gillard> <http://dbpedia.org/ontology/primeMinister> <http://dbpedia.org/resource/Kevin_Rudd> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/primeMinister",
    "predicate1_mention": "pm",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Julia_Gillard",
    "entity1_mention": "julia gillard",
    "entity2_uri": "http://dbpedia.org/resource/Kevin_Rudd",
    "entity2_mention": "kevin rudd"
},
{
    "id": "4158",
    "question": "Which employer of Michael M. Sears is also the producer of Delta III ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_M._Sears> <http://dbpedia.org/ontology/employer> ?uri. <http://dbpedia.org/resource/Delta_III> <http://dbpedia.org/ontology/manufacturer> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/employer",
    "predicate1_mention": "employer",
    "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate2_mention": "producer",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Michael_M._Sears",
    "entity1_mention": "michael m. sears",
    "entity2_uri": "http://dbpedia.org/resource/Delta_III",
    "entity2_mention": "delta iii"
},
{
    "id": "4160",
    "question": "Guggenheim family is the cofounder of a company that invested stocks in which baseball teams?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Guggenheim_family> . ?uri <http://dbpedia.org/property/owner> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballTeam>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/founder",
    "predicate1_mention": "cofounder",
    "predicate2_uri": "http://dbpedia.org/property/owner",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/BaseballTeam",
    "type_mention": "baseball",
    "entity1_uri": "http://dbpedia.org/resource/Guggenheim_family",
    "entity1_mention": "guggenheim family",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4164",
    "question": "Who operates Liverpool Playhouse ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Liverpool_Playhouse> <http://dbpedia.org/ontology/operatedBy> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/operatedBy",
    "predicate1_mention": "operates",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Liverpool_Playhouse",
    "entity1_mention": "liverpool playhouse",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4167",
    "question": "where did Deion Sanders debut?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Deion_Sanders> <http://dbpedia.org/property/debutteam> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/debutteam",
    "predicate1_mention": "debut",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Deion_Sanders",
    "entity1_mention": "deion sanders",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4170",
    "question": "Name the tv show with judges Randy Jackson and Jennifer Lopez?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Randy_Jackson> . ?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Jennifer_Lopez> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/judges",
    "predicate1_mention": "judges",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "tv show",
    "entity1_uri": "http://dbpedia.org/resource/Randy_Jackson",
    "entity1_mention": "randy jackson",
    "entity2_uri": "http://dbpedia.org/resource/Jennifer_Lopez",
    "entity2_mention": "jennifer lopez"
},
{
    "id": "4171",
    "question": "What is the total number of professions in which someone who has suicided worked?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/deathCause> <http://dbpedia.org/resource/Suicide> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/deathCause",
    "predicate1_mention": "suicided",
    "predicate2_uri": "http://dbpedia.org/ontology/occupation",
    "predicate2_mention": "professions",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Suicide",
    "entity1_mention": "suicided",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4175",
    "question": "What kind of games are made by Interplay Entertainment?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Interplay_Entertainment> . ?x <http://dbpedia.org/property/genre> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/publisher",
    "predicate1_mention": "made by",
    "predicate2_uri": "http://dbpedia.org/property/genre",
    "predicate2_mention": "kind of",
    "type_uri": "http://dbpedia.org/ontology/VideoGame",
    "type_mention": "games",
    "entity1_uri": "http://dbpedia.org/resource/Interplay_Entertainment",
    "entity1_mention": "interplay entertainment",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4178",
    "question": "What acts and artists are associated with people who have worked with Divertis?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Divertis> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/associatedActs",
    "predicate1_mention": "associated",
    "predicate2_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
    "predicate2_mention": "associated",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Divertis",
    "entity1_mention": "divertis",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4185",
    "question": "List all the writers of the comics which has Robert Bernstein as one of the writer ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/writers> <http://dbpedia.org/resource/Robert_Bernstein_(comics)> . ?x <http://dbpedia.org/property/writers> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Comic>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/writers",
    "predicate1_mention": "writers",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Comic",
    "type_mention": "comics",
    "entity1_uri": "http://dbpedia.org/resource/Robert_Bernstein_(comics)",
    "entity1_mention": "Robert Bernstein",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4186",
    "question": "To which educational institute does Cornell University Press belong to?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cornell_University_Press> <http://dbpedia.org/ontology/parentCompany> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/parentCompany",
    "predicate1_mention": "belong to",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Cornell_University_Press",
    "entity1_mention": "Cornell University Press",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4188",
    "question": "What city was recorded in Live in detroit which is also the official residence of ken Holland ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Live_in_Detroit,_MI> <http://dbpedia.org/ontology/recordedIn> ?uri. <http://dbpedia.org/resource/Ken_Holland> <http://dbpedia.org/ontology/residence> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/recordedIn",
    "predicate1_mention": "recorded in",
    "predicate2_uri": "http://dbpedia.org/ontology/residence",
    "predicate2_mention": "residence",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Live_in_Detroit,_MI",
    "entity1_mention": "live in detroit",
    "entity2_uri": "http://dbpedia.org/resource/Ken_Holland",
    "entity2_mention": "ken holland"
},
{
    "id": "4191",
    "question": "Is Sloth in the Chordate phylum?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Sloth> <http://dbpedia.org/property/phylum> <http://dbpedia.org/resource/Chordate> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/phylum",
    "predicate1_mention": "phylum",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sloth",
    "entity1_mention": "sloth",
    "entity2_uri": "http://dbpedia.org/resource/Chordate",
    "entity2_mention": "chordate"
},
{
    "id": "4199",
    "question": "Does Chicago own the Monroe Station?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Monroe_station_(CTA_Blue_Line)> <http://dbpedia.org/property/owned> <http://dbpedia.org/resource/Chicago> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/owned",
    "predicate1_mention": "own",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Monroe_station_(CTA_Blue_Line)",
    "entity1_mention": "monroe station",
    "entity2_uri": "http://dbpedia.org/resource/Chicago",
    "entity2_mention": "chicago"
},
{
    "id": "4202",
    "question": "Name the children of the person who is the star of The Weathered Underground ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Weathered_Underground> <http://dbpedia.org/ontology/starring> ?x . ?x <http://dbpedia.org/property/children> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/starring",
    "predicate1_mention": "star",
    "predicate2_uri": "http://dbpedia.org/property/children",
    "predicate2_mention": "children",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "person",
    "entity1_uri": "http://dbpedia.org/resource/The_Weathered_Underground",
    "entity1_mention": "the weathered underground",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4206",
    "question": "Who are the producers of the movies  which has music by Gary Chang ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Gary_Chang> . ?x <http://dbpedia.org/property/producer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/music",
    "predicate1_mention": "music",
    "predicate2_uri": "http://dbpedia.org/property/producer",
    "predicate2_mention": "producers",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Gary_Chang",
    "entity1_mention": "gary chang",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4208",
    "question": "Whose shrines are in a place governed by Justin Trudeau?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Justin_Trudeau> . ?uri <http://dbpedia.org/ontology/majorShrine> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/leaderName",
    "predicate1_mention": "governed by",
    "predicate2_uri": "http://dbpedia.org/ontology/majorShrine",
    "predicate2_mention": "shrines",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Justin_Trudeau",
    "entity1_mention": "justin trudeau",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4218",
    "question": "What are some people born in NY known for?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_City> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate1_mention": "born in",
    "predicate2_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate2_mention": "known for",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/New_York_City",
    "entity1_mention": "NY",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4249",
    "question": "Name the awards won by Elie Wiesel ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elie_Wiesel> <http://dbpedia.org/property/awards> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/awards",
    "predicate1_mention": "awards",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Elie_Wiesel",
    "entity1_mention": "elie wiesel",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4261",
    "question": "Organization holding stocks of  Galician and German wikipedias?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Galician_Wikipedia> <http://dbpedia.org/property/owner> ?uri. <http://dbpedia.org/resource/German_Wikipedia> <http://dbpedia.org/ontology/owner> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/owner",
    "predicate1_mention": "holding stocks of",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Galician_Wikipedia",
    "entity1_mention": "Galician",
    "entity2_uri": "http://dbpedia.org/resource/German_Wikipedia",
    "entity2_mention": "German wikipedias"
},
{
    "id": "4268",
    "question": "Name the local authority of Trinity School, Brentwood ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Trinity_School,_Brentwood> <http://dbpedia.org/ontology/localAuthority> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/localAuthority",
    "predicate1_mention": "local authority",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Trinity_School,_Brentwood",
    "entity1_mention": "trinity school, brentwood",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4276",
    "question": "Is Baker's Dozen Donuts in the coffee industry?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Baker's_Dozen_Donuts> <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Coffee> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/industry",
    "predicate1_mention": "industry",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Baker's_Dozen_Donuts",
    "entity1_mention": "baker's dozen donuts",
    "entity2_uri": "http://dbpedia.org/resource/Coffee",
    "entity2_mention": "coffee"
},
{
    "id": "4282",
    "question": "Where in the us military did pierre r graham and edwin f hunter work?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pierre_R._Graham> <http://dbpedia.org/property/branch> ?uri. <http://dbpedia.org/resource/Edwin_F._Hunter> <http://dbpedia.org/property/branch> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/branch",
    "predicate1_mention": "graham",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Pierre_R._Graham",
    "entity1_mention": "pierre r graham",
    "entity2_uri": "http://dbpedia.org/resource/Edwin_F._Hunter",
    "entity2_mention": "edwin f hunter"
},
{
    "id": "4285",
    "question": "What are some products of the the company whose subsidiary is Sony Corp shareholders and subsidies?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Sony_Corporation_shareholders_and_subsidiaries> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/subsidiary",
    "predicate1_mention": "subsidiary",
    "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate2_mention": "company",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sony_Corporation_shareholders_and_subsidiaries",
    "entity1_mention": "shareholders",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4297",
    "question": "Which fictional character portrayed in Terminator 2: Judgment Day is painted by Josh Friedman?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Terminator_2:_Judgment_Day> . ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Josh_Friedman>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/portrayer",
    "predicate1_mention": "portrayed in",
    "predicate2_uri": "http://dbpedia.org/ontology/creator",
    "predicate2_mention": "painted by",
    "type_uri": "http://dbpedia.org/ontology/FictionalCharacter",
    "type_mention": "fictional character",
    "entity1_uri": "http://dbpedia.org/resource/Terminator_2:_Judgment_Day",
    "entity1_mention": "Terminator 2: Judgment Day",
    "entity2_uri": "http://dbpedia.org/resource/Josh_Friedman",
    "entity2_mention": "josh friedman"
},
{
    "id": "4298",
    "question": "What is the common ethnicity of the Maike Evers and Francisco Lachowski ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maike_Evers> <http://dbpedia.org/ontology/ethnicity> ?uri. <http://dbpedia.org/resource/Francisco_Lachowski> <http://dbpedia.org/ontology/ethnicity> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/ethnicity",
    "predicate1_mention": "ethnicity",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Maike_Evers",
    "entity1_mention": "maike evers",
    "entity2_uri": "http://dbpedia.org/resource/Francisco_Lachowski",
    "entity2_mention": "francisco lachowski"
},
{
    "id": "4300",
    "question": "What is the base currency of the country which operates the Marion Dufresne?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marion_Dufresne_(1995)> <http://dbpedia.org/ontology/operator> ?x . ?x <http://dbpedia.org/ontology/currency> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/operator",
    "predicate1_mention": "operates",
    "predicate2_uri": "http://dbpedia.org/ontology/currency",
    "predicate2_mention": "currency",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Marion_Dufresne_(1995)",
    "entity1_mention": "marion dufresne",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4312",
    "question": "List all the movies whose directors were born in Kenosha, Wisconsin?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kenosha,_Wisconsin> . ?uri <http://dbpedia.org/property/director> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate1_mention": "born in",
    "predicate2_uri": "http://dbpedia.org/property/director",
    "predicate2_mention": "directors",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kenosha,_Wisconsin",
    "entity1_mention": "kenosha, wisconsin",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4330",
    "question": "Give me all magazines whose founder died in Berkeley, California?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Berkeley,_California> . ?uri <http://dbpedia.org/ontology/founder> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate1_mention": "magazines",
    "predicate2_uri": "http://dbpedia.org/ontology/founder",
    "predicate2_mention": "founder",
    "type_uri": "http://dbpedia.org/ontology/Magazine",
    "type_mention": "magazines",
    "entity1_uri": "http://dbpedia.org/resource/Berkeley,_California",
    "entity1_mention": "berkeley, california",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4332",
    "question": "Cologny and Lancy are the neighboring municipalities of which place ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Cologny> . ?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Lancy> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/neighboringMunicipalities",
    "predicate1_mention": "neighboring municipalities",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Place",
    "type_mention": "place",
    "entity1_uri": "http://dbpedia.org/resource/Cologny",
    "entity1_mention": "cologny",
    "entity2_uri": "http://dbpedia.org/resource/Lancy",
    "entity2_mention": "lancy"
},
{
    "id": "4338",
    "question": "What are some musical artists associated with the ones signed up with EMI?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/EMI> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/recordLabel",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
    "predicate2_mention": "musical artists",
    "type_uri": "http://dbpedia.org/ontology/MusicalArtist",
    "type_mention": "musical artists",
    "entity1_uri": "http://dbpedia.org/resource/EMI",
    "entity1_mention": "emi",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4341",
    "question": "Ricky Gervais is the executive producer of the series having how many fictional characters?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Ricky_Gervais> . ?uri <http://dbpedia.org/ontology/series> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/executiveProducer",
    "predicate1_mention": "executive producer",
    "predicate2_uri": "http://dbpedia.org/ontology/series",
    "predicate2_mention": "series",
    "type_uri": "http://dbpedia.org/ontology/FictionalCharacter",
    "type_mention": "fictional characters",
    "entity1_uri": "http://dbpedia.org/resource/Ricky_Gervais",
    "entity1_mention": "ricky gervais",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4344",
    "question": "Name the river with Reading, Brekshire in its path and mouth place is Sothend-on-sea ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Reading,_Berkshire> . ?uri <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/Southend-on-Sea>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/city",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/mouthPlace",
    "predicate2_mention": "mouth place",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "river",
    "entity1_uri": "http://dbpedia.org/resource/Reading,_Berkshire",
    "entity1_mention": "Reading, Brekshire",
    "entity2_uri": "http://dbpedia.org/resource/Southend-on-Sea",
    "entity2_mention": "Sothend-on-sea"
},
{
    "id": "4345",
    "question": "What award has been awarded to both Dion Beebe and Charles LeMaire?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dion_Beebe> <http://dbpedia.org/ontology/award> ?uri. <http://dbpedia.org/resource/Charles_LeMaire> <http://dbpedia.org/property/awards> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/award",
    "predicate1_mention": "award",
    "predicate2_uri": "http://dbpedia.org/property/awards",
    "predicate2_mention": "award",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Dion_Beebe",
    "entity1_mention": "dion beebe",
    "entity2_uri": "http://dbpedia.org/resource/Charles_LeMaire",
    "entity2_mention": "charles lemaire"
},
{
    "id": "4351",
    "question": "What religions are followed by members of the societies whose architectural influences can be seen on the Sanggar Agung ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sanggar_Agung> <http://dbpedia.org/property/architecturalStyle> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/architecturalStyle",
    "predicate1_mention": "architectural",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religions",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sanggar_Agung",
    "entity1_mention": "sanggar agung",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4355",
    "question": "Where is the school which is the rival of Somerset Berkley Regional High?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Somerset_Berkley_Regional_High_School> <http://dbpedia.org/ontology/rival> ?x . ?x <http://dbpedia.org/ontology/region> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/rival",
    "predicate1_mention": "rival",
    "predicate2_uri": "http://dbpedia.org/ontology/region",
    "predicate2_mention": "regional",
    "type_uri": "http://dbpedia.org/ontology/School",
    "type_mention": "school",
    "entity1_uri": "http://dbpedia.org/resource/Somerset_Berkley_Regional_High_School",
    "entity1_mention": "Somerset Berkley Regional High",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4360",
    "question": "Name the company whose key person is Raymond Conner and produces Boeing CH-47 Chinook?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Raymond_Conner> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Boeing_CH-47_Chinook>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/keyPeople",
    "predicate1_mention": "key person",
    "predicate2_uri": "http://dbpedia.org/property/products",
    "predicate2_mention": "produces",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "company",
    "entity1_uri": "http://dbpedia.org/resource/Raymond_Conner",
    "entity1_mention": "raymond conner",
    "entity2_uri": "http://dbpedia.org/resource/Boeing_CH-47_Chinook",
    "entity2_mention": "boeing ch-47 chinook"
},
{
    "id": "4363",
    "question": "In which countries is coconut used as a food ingredient?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Coconut> . ?x <http://dbpedia.org/property/country> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Food>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/ingredient",
    "predicate1_mention": "ingredient",
    "predicate2_uri": "http://dbpedia.org/property/country",
    "predicate2_mention": "countries",
    "type_uri": "http://dbpedia.org/ontology/Food",
    "type_mention": "food",
    "entity1_uri": "http://dbpedia.org/resource/Coconut",
    "entity1_mention": "coconut",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4364",
    "question": "Who is considered to be the deciding person when it comes to crustaceans from the Balanidae family?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Balanidae> . ?x <http://dbpedia.org/ontology/binomialAuthority> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Crustacean>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/family",
    "predicate1_mention": "family",
    "predicate2_uri": "http://dbpedia.org/ontology/binomialAuthority",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Crustacean",
    "type_mention": "crustaceans",
    "entity1_uri": "http://dbpedia.org/resource/Balanidae",
    "entity1_mention": "balanidae",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4366",
    "question": "What is the river whose source is Lake Ontario?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Lake_Ontario>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/source",
    "predicate1_mention": "source",
    "predicate2_uri": "http://dbpedia.org/ontology/River",
    "predicate2_mention": "river",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lake_Ontario",
    "entity1_mention": "lake ontario",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4367",
    "question": "Which rivers have source origins as north western , Zambia ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/sourceRegion",
    "predicate1_mention": "source origins",
    "predicate2_uri": "http://dbpedia.org/ontology/River",
    "predicate2_mention": "rivers",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia",
    "entity1_mention": "north western , Zambia",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4370",
    "question": "Who is  related to Kelly Osbourne & Ozzy Osbourne?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Kelly_Osbourne> . ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Ozzy_Osbourne> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/relatives",
    "predicate1_mention": "related to",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kelly_Osbourne",
    "entity1_mention": "kelly osbourne",
    "entity2_uri": "http://dbpedia.org/resource/Ozzy_Osbourne",
    "entity2_mention": "ozzy osbourne"
},
{
    "id": "4372",
    "question": "Where was  William Anthony  trained ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Anthony_(artist)> <http://dbpedia.org/ontology/training> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/training",
    "predicate1_mention": "trained",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/William_Anthony_(artist)",
    "entity1_mention": "william anthony",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4379",
    "question": "How many artists have their works in the Sao Paolo Museum of Art?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/museum> <http://dbpedia.org/resource/S\u00e3o_Paulo_Museum_of_Art> . ?x <http://dbpedia.org/property/artist> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/museum",
    "predicate1_mention": "museum",
    "predicate2_uri": "http://dbpedia.org/property/artist",
    "predicate2_mention": "artists",
    "type_uri": "http://dbpedia.org/ontology/Artist",
    "type_mention": "artists",
    "entity1_uri": "http://dbpedia.org/resource/S\u00e3o_Paulo_Museum_of_Art",
    "entity1_mention": "Sao Paolo Museum of Art",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4380",
    "question": "Count the battles fought by Raoul Magrin Vernerey?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Raoul_Magrin-Vernerey> <http://dbpedia.org/property/battles> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "sparql_id": "402",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/battles",
    "predicate1_mention": "battles",
    "predicate2_uri": "http://dbpedia.org/ontology/MilitaryConflict",
    "predicate2_mention": "fought by",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Raoul_Magrin-Vernerey",
    "entity1_mention": "Raoul Magrin Vernerey",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4383",
    "question": "What is the military branch of the William French Smith which is also the branch of Pierre R. Graham ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_French_Smith> <http://dbpedia.org/ontology/militaryBranch> ?uri. <http://dbpedia.org/resource/Pierre_R._Graham> <http://dbpedia.org/property/branch> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/militaryBranch",
    "predicate1_mention": "military branch",
    "predicate2_uri": "http://dbpedia.org/property/branch",
    "predicate2_mention": "branch",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/William_French_Smith",
    "entity1_mention": "william french smith",
    "entity2_uri": "http://dbpedia.org/resource/Pierre_R._Graham",
    "entity2_mention": "pierre r. graham"
},
{
    "id": "4389",
    "question": "Where were sverre krogh sundbo and havard vad petersson born?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sverre_Krogh_Sundb\u00f8> <http://dbpedia.org/property/birthPlace> ?uri. <http://dbpedia.org/resource/H\u00e5vard_Vad_Petersson> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/birthPlace",
    "predicate1_mention": "born",
    "predicate2_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate2_mention": "born",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sverre_Krogh_Sundb\u00f8",
    "entity1_mention": "sverre krogh",
    "entity2_uri": "http://dbpedia.org/resource/H\u00e5vard_Vad_Petersson",
    "entity2_mention": "havard vad petersson"
},
{
    "id": "4394",
    "question": "What are the musicals whose musicians worked under Sony Music Entertainment?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Sony_Music_Entertainment> . ?uri <http://dbpedia.org/property/music> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/label",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/music",
    "predicate2_mention": "music",
    "type_uri": "http://dbpedia.org/ontology/Musical",
    "type_mention": "musicals",
    "entity1_uri": "http://dbpedia.org/resource/Sony_Music_Entertainment",
    "entity1_mention": "sony music entertainment",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4398",
    "question": "List the award which have been won by both Charles LeMaire and Nick Park ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charles_LeMaire> <http://dbpedia.org/ontology/award> ?uri. <http://dbpedia.org/resource/Nick_Park> <http://dbpedia.org/ontology/award> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/award",
    "predicate1_mention": "award",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Charles_LeMaire",
    "entity1_mention": "charles lemaire",
    "entity2_uri": "http://dbpedia.org/resource/Nick_Park",
    "entity2_mention": "nick park"
},
{
    "id": "4413",
    "question": "Which scientist was advised by John Robert Woodyard?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/John_Robert_Woodyard>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/doctoralAdvisor",
    "predicate1_mention": "advised",
    "predicate2_uri": "http://dbpedia.org/ontology/Scientist",
    "predicate2_mention": "scientist",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/John_Robert_Woodyard",
    "entity1_mention": "John Robert Woodyard",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4417",
    "question": "In how many places are Marjas found?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Marja'> . ?x <http://dbpedia.org/ontology/location> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/title",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/location",
    "predicate2_mention": "places",
    "type_uri": "http://dbpedia.org/ontology/Location",
    "type_mention": "places",
    "entity1_uri": "http://dbpedia.org/resource/Marja'",
    "entity1_mention": "Marjas",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4426",
    "question": "Who is  venerated in  Judaism and Islam?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/veneratedIn> <http://dbpedia.org/resource/Judaism> . ?uri <http://dbpedia.org/ontology/veneratedIn> <http://dbpedia.org/resource/Islam> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/veneratedIn",
    "predicate1_mention": "venerated in",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Judaism",
    "entity1_mention": "judaism",
    "entity2_uri": "http://dbpedia.org/resource/Islam",
    "entity2_mention": "islam"
},
{
    "id": "4429",
    "question": "Which child of Jack Ferguson became a Prime Minister?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jack_Ferguson> <http://dbpedia.org/ontology/child> ?x . ?x <http://dbpedia.org/property/primeminister> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/child",
    "predicate1_mention": "child",
    "predicate2_uri": "http://dbpedia.org/property/primeminister",
    "predicate2_mention": "prime minister",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jack_Ferguson",
    "entity1_mention": "jack ferguson",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4432",
    "question": "Name the team manger of Middlebrough F.C season 2006-07 ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2006\u201307_Middlesbrough_F.C._season> <http://dbpedia.org/ontology/manager> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/manager",
    "predicate1_mention": "manger",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/2006\u201307_Middlesbrough_F.C._season",
    "entity1_mention": "F.C season 2006-07",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4433",
    "question": "In which fields are the graduates of Worcester College, Oxford working?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Worcester_College,_Oxford> . ?x <http://dbpedia.org/ontology/field> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/almaMater",
    "predicate1_mention": "graduates",
    "predicate2_uri": "http://dbpedia.org/ontology/field",
    "predicate2_mention": "fields",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Worcester_College,_Oxford",
    "entity1_mention": "worcester college, oxford",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4448",
    "question": "Where can one find the Dzogchen Ponolop Rinpoche?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dzogchen_Ponlop_Rinpoche> <http://dbpedia.org/property/location> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/location",
    "predicate1_mention": "find",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Dzogchen_Ponlop_Rinpoche",
    "entity1_mention": "Dzogchen Ponolop Rinpoche",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4452",
    "question": "Where do beauty queens with brown hair reside?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/hairColor> <http://dbpedia.org/resource/Brown_hair> . ?x <http://dbpedia.org/ontology/residence> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/hairColor",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/residence",
    "predicate2_mention": "reside",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Brown_hair",
    "entity1_mention": "brown hair",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4464",
    "question": "What is the party of the politicians whose children is Sanjay Gandhi ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Sanjay_Gandhi> . ?x <http://dbpedia.org/ontology/party> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/children",
    "predicate1_mention": "children",
    "predicate2_uri": "http://dbpedia.org/ontology/party",
    "predicate2_mention": "party",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "politicians",
    "entity1_uri": "http://dbpedia.org/resource/Sanjay_Gandhi",
    "entity1_mention": "sanjay gandhi",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4465",
    "question": "Who is the owner of the FC which owns the Cobham Training Centre?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cobham_Training_Centre> <http://dbpedia.org/property/owner> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/owner",
    "predicate1_mention": "owner",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/SoccerClub",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Cobham_Training_Centre",
    "entity1_mention": "Cobham Training Centre",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4469",
    "question": "Which country's leader  is Giuseppe Bertello?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Giuseppe_Bertello>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/leader",
    "predicate1_mention": "leader",
    "predicate2_uri": "http://dbpedia.org/ontology/Country",
    "predicate2_mention": "country's",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Giuseppe_Bertello",
    "entity1_mention": "giuseppe bertello",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4474",
    "question": "What is the total number of software whose programming language is C++ and operating system is Microsoft Windows?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/programmingLanguage> <http://dbpedia.org/resource/C++> . ?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows> } ",
    "sparql_id": "108",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/programmingLanguage",
    "predicate1_mention": "programming language",
    "predicate2_uri": "http://dbpedia.org/ontology/operatingSystem",
    "predicate2_mention": "operating system",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/C++",
    "entity1_mention": "C++",
    "entity2_uri": "http://dbpedia.org/resource/Microsoft_Windows",
    "entity2_mention": "microsoft windows"
},
{
    "id": "4481",
    "question": "who are starring in the movies written by Mark Sandrich ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Mark_Sandrich> . ?x <http://dbpedia.org/ontology/starring> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/writer",
    "predicate1_mention": "written by",
    "predicate2_uri": "http://dbpedia.org/ontology/starring",
    "predicate2_mention": "starring",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Mark_Sandrich",
    "entity1_mention": "mark sandrich",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4485",
    "question": "In which city is the sister station of KTXY located ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/KTXY> <http://dbpedia.org/ontology/sisterStation> ?x . ?x <http://dbpedia.org/ontology/city> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/sisterStation",
    "predicate1_mention": "sister station",
    "predicate2_uri": "http://dbpedia.org/ontology/city",
    "predicate2_mention": "city",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/KTXY",
    "entity1_mention": "ktxy",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4486",
    "question": "Is Maria Sharapova the silver medalist of Tennis at the 2012 Summer Olympics  Women's singles?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Tennis_at_the_2012_Summer_Olympics_\u2013_Women's_singles> <http://dbpedia.org/ontology/silverMedalist> <http://dbpedia.org/resource/Maria_Sharapova> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/silverMedalist",
    "predicate1_mention": "silver medalist",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tennis_at_the_2012_Summer_Olympics_\u2013_Women's_singles",
    "entity1_mention": "Tennis at the 2012 Summer Olympics  Women's singles",
    "entity2_uri": "http://dbpedia.org/resource/Maria_Sharapova",
    "entity2_mention": "maria sharapova"
},
{
    "id": "4488",
    "question": "Where do the rivers starting from Zambia end?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/sourceCountry> <http://dbpedia.org/resource/Zambia> . ?x <http://dbpedia.org/ontology/riverMouth> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/sourceCountry",
    "predicate1_mention": "where",
    "predicate2_uri": "http://dbpedia.org/ontology/riverMouth",
    "predicate2_mention": "starting from",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "rivers",
    "entity1_uri": "http://dbpedia.org/resource/Zambia",
    "entity1_mention": "zambia",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4491",
    "question": "What is Naval Support Activity Naples a part of?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Naval_Support_Activity_Naples> <http://dbpedia.org/ontology/type> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/type",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Naval_Support_Activity_Naples",
    "entity1_mention": "Naval Support Activity Naples",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4492",
    "question": "List the services provided by the company which provides Microsoft azure as one of the service ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Microsoft_Azure> . ?x <http://dbpedia.org/property/services> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/services",
    "predicate1_mention": "services",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "company",
    "entity1_uri": "http://dbpedia.org/resource/Microsoft_Azure",
    "entity1_mention": "microsoft azure",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4493",
    "question": "Who was member of boards at Royal Society and Trinity House?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Royal_Society> . ?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Trinity_House> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/board",
    "predicate1_mention": "boards",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Royal_Society",
    "entity1_mention": "royal society",
    "entity2_uri": "http://dbpedia.org/resource/Trinity_House",
    "entity2_mention": "trinity house"
},
{
    "id": "4495",
    "question": "Which serving railway line of the Daund Junction railway station is the home port of INS Viraat ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/INS_Viraat_(R22)> <http://dbpedia.org/ontology/homeport> ?uri. <http://dbpedia.org/resource/Daund_Junction_railway_station> <http://dbpedia.org/ontology/servingRailwayLine> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/homeport",
    "predicate1_mention": "home port",
    "predicate2_uri": "http://dbpedia.org/ontology/servingRailwayLine",
    "predicate2_mention": "serving railway line",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/INS_Viraat_(R22)",
    "entity1_mention": "ins viraat",
    "entity2_uri": "http://dbpedia.org/resource/Daund_Junction_railway_station",
    "entity2_mention": " Daund Junction railway station"
},
{
    "id": "4496",
    "question": "How many religions are followed by organizations which are internationally known as the muslim brotherhood?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/international> <http://dbpedia.org/resource/Muslim_Brotherhood> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/international",
    "predicate1_mention": "internationally",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religions",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Muslim_Brotherhood",
    "entity1_mention": "muslim brotherhood",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4498",
    "question": "Which series was written by Eric Jendresen and John Orloff?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Erik_Jendresen> . ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/John_Orloff> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/writer",
    "predicate1_mention": "written by",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "series",
    "entity1_uri": "http://dbpedia.org/resource/Erik_Jendresen",
    "entity1_mention": "eric jendresen",
    "entity2_uri": "http://dbpedia.org/resource/John_Orloff",
    "entity2_mention": "john orloff"
},
{
    "id": "4499",
    "question": "Count the number of musical work which were sold by Sony Music?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Sony_Music_Entertainment> . ?uri <http://dbpedia.org/property/music> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/label",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/music",
    "predicate2_mention": "music",
    "type_uri": "http://dbpedia.org/ontology/MusicalWork",
    "type_mention": "musical work",
    "entity1_uri": "http://dbpedia.org/resource/Sony_Music_Entertainment",
    "entity1_mention": "Sony Music",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4508",
    "question": "How many awards have been given to the founder of Grameen Bank?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Grameen_Bank> <http://dbpedia.org/property/founder> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "sparql_id": "103",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/founder",
    "predicate1_mention": "founder",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Grameen_Bank",
    "entity1_mention": "grameen bank",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4514",
    "question": "Name the city of Phil Ellena ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Phil-Ellena> <http://dbpedia.org/ontology/city> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/city",
    "predicate1_mention": "city",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Phil-Ellena",
    "entity1_mention": "phil ellena",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4516",
    "question": "To which nation did David Animle Hanses owe his allegiance?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/David_Animle_Hansen> <http://dbpedia.org/property/allegiance> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/allegiance",
    "predicate1_mention": "allegiance",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/David_Animle_Hansen",
    "entity1_mention": "david animle hanses",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4517",
    "question": "Count the tenants of MasterCard Centre?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/MasterCard_Centre> <http://dbpedia.org/property/tenants> ?uri  . }",
    "sparql_id": "102",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/tenants",
    "predicate1_mention": "tenants",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/MasterCard_Centre",
    "entity1_mention": "mastercard centre",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4521",
    "question": "Which company has developed games whose music is done by Gerard Marino?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/Gerard_Marino> . ?x <http://dbpedia.org/ontology/developer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/composer",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/developer",
    "predicate2_mention": "developed",
    "type_uri": "http://dbpedia.org/ontology/VideoGame",
    "type_mention": "games",
    "entity1_uri": "http://dbpedia.org/resource/Gerard_Marino",
    "entity1_mention": "Gerard Marino",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4531",
    "question": "Which sea is surrounded by Rostock and Kaliningrad?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Rostock> . ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Kaliningrad> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/cities",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/cities",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Sea",
    "type_mention": "sea",
    "entity1_uri": "http://dbpedia.org/resource/Rostock",
    "entity1_mention": "rostock",
    "entity2_uri": "http://dbpedia.org/resource/Kaliningrad",
    "entity2_mention": "kaliningrad"
},
{
    "id": "4535",
    "question": "List sports managers who managed Middlesbrough F.C. and England national under-21 football team?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/managerClub> <http://dbpedia.org/resource/Middlesbrough_F.C.> . ?uri <http://dbpedia.org/property/managerclubs> <http://dbpedia.org/resource/England_national_under-21_football_team>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/managerClub",
    "predicate1_mention": "managers",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/SportsManager",
    "type_mention": "managers",
    "entity1_uri": "http://dbpedia.org/resource/Middlesbrough_F.C.",
    "entity1_mention": "middlesbrough f.c.",
    "entity2_uri": "http://dbpedia.org/resource/England_national_under-21_football_team",
    "entity2_mention": "England national under-21 football team"
},
{
    "id": "4536",
    "question": "Whose commanders are John Mc Ewen and Park Chunghee?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/John_McEwen> . ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Park_Chung-hee> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/commander",
    "predicate1_mention": "commanders",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/John_McEwen",
    "entity1_mention": "john mc ewen",
    "entity2_uri": "http://dbpedia.org/resource/Park_Chung-hee",
    "entity2_mention": "Park Chunghee"
},
{
    "id": "4543",
    "question": "Who owns the airport in Paphos?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Paphos_District> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airport>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/city",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/owner",
    "predicate2_mention": "owns",
    "type_uri": "http://dbpedia.org/ontology/Airport",
    "type_mention": "airport",
    "entity1_uri": "http://dbpedia.org/resource/Paphos_District",
    "entity1_mention": "paphos",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4548",
    "question": "List the guests of On Broadway ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/On_Broadway_(Smash)> <http://dbpedia.org/property/guests> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/guests",
    "predicate1_mention": "guests",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/On_Broadway_(Smash)",
    "entity1_mention": "on broadway",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4551",
    "question": "Is Christchurch the largest city of South Island?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/South_Island> <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Christchurch> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/largestCity",
    "predicate1_mention": "largest city",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/South_Island",
    "entity1_mention": "south island",
    "entity2_uri": "http://dbpedia.org/resource/Christchurch",
    "entity2_mention": "christchurch"
},
{
    "id": "4555",
    "question": "Name books with publisher as Francisco de Robles and writer as Miguel de Cervantes ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Francisco_de_Robles> . ?uri <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Miguel_de_Cervantes>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/publisher",
    "predicate1_mention": "publisher",
    "predicate2_uri": "http://dbpedia.org/property/author",
    "predicate2_mention": "writer",
    "type_uri": "http://dbpedia.org/ontology/Book",
    "type_mention": "books",
    "entity1_uri": "http://dbpedia.org/resource/Francisco_de_Robles",
    "entity1_mention": "francisco de robles",
    "entity2_uri": "http://dbpedia.org/resource/Miguel_de_Cervantes",
    "entity2_mention": "miguel de cervantes"
},
{
    "id": "4558",
    "question": "Which universities are also known as the Tulane Green wave?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Tulane_Green_Wave>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/nickname",
    "predicate1_mention": "known as",
    "predicate2_uri": "http://dbpedia.org/ontology/University",
    "predicate2_mention": "universities",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tulane_Green_Wave",
    "entity1_mention": "tulane green wave",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4564",
    "question": "Who wrote the musical whose composer is Emil Dean Zoghby?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/musicBy> <http://dbpedia.org/resource/Emil_Dean_Zoghby> . ?x <http://dbpedia.org/ontology/author> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/musicBy",
    "predicate1_mention": "musical",
    "predicate2_uri": "http://dbpedia.org/ontology/author",
    "predicate2_mention": "wrote",
    "type_uri": "http://dbpedia.org/ontology/Musical",
    "type_mention": "musical",
    "entity1_uri": "http://dbpedia.org/resource/Emil_Dean_Zoghby",
    "entity1_mention": "emil dean zoghby",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4565",
    "question": "Where did the conflict take place where Louis Briere de I'Isle was a commander?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Louis_Bri\u00e8re_de_l'Isle> . ?x <http://dbpedia.org/ontology/territory> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/commander",
    "predicate1_mention": "commander",
    "predicate2_uri": "http://dbpedia.org/ontology/territory",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/MilitaryConflict",
    "type_mention": "conflict",
    "entity1_uri": "http://dbpedia.org/resource/Louis_Bri\u00e8re_de_l'Isle",
    "entity1_mention": "Louis Briere de I'Isle",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4567",
    "question": "what has been developed by John Fanning?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/John_Fanning_(businessman)> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/developer",
    "predicate1_mention": "developed by",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/John_Fanning_(businessman)",
    "entity1_mention": "john fanning",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4569",
    "question": "What are the houses of the legislature where the leader is called Pullaiahgaripalli ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pullaiahgaripalli> <http://dbpedia.org/property/leaderTitle> ?x . ?x <http://dbpedia.org/property/houses> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Legislature>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/leaderTitle",
    "predicate1_mention": "leader",
    "predicate2_uri": "http://dbpedia.org/property/houses",
    "predicate2_mention": "houses",
    "type_uri": "http://dbpedia.org/ontology/Legislature",
    "type_mention": "legislature",
    "entity1_uri": "http://dbpedia.org/resource/Pullaiahgaripalli",
    "entity1_mention": "pullaiahgaripalli",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4571",
    "question": "In which city can I find both the office of Elasticsearch and the Yellow Claw DJ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Yellow_Claw_(DJs)> <http://dbpedia.org/property/location> ?uri. <http://dbpedia.org/resource/Elasticsearch> <http://dbpedia.org/property/location> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/location",
    "predicate1_mention": "city",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Yellow_Claw_(DJs)",
    "entity1_mention": "yellow claw DJ",
    "entity2_uri": "http://dbpedia.org/resource/Elasticsearch",
    "entity2_mention": "elasticsearch"
},
{
    "id": "4579",
    "question": "is blue lagoon island a part of the bahamas achipelago?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Blue_Lagoon_Island> <http://dbpedia.org/ontology/archipelago> <http://dbpedia.org/resource/The_Bahamas> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/archipelago",
    "predicate1_mention": "achipelago",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Blue_Lagoon_Island",
    "entity1_mention": "blue lagoon island",
    "entity2_uri": "http://dbpedia.org/resource/The_Bahamas",
    "entity2_mention": "the bahamas"
},
{
    "id": "4583",
    "question": "Who are currently playing for Barcelona FC?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/FC_Barcelona> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/currentclub",
    "predicate1_mention": "currently playing for",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/FC_Barcelona",
    "entity1_mention": "barcelona fc",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4586",
    "question": "Who are the players whose current clubs have Ferran Soriano as chairman?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/chairman> <http://dbpedia.org/resource/Ferran_Soriano> . ?uri <http://dbpedia.org/property/currentclub> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/chairman",
    "predicate1_mention": "chairman",
    "predicate2_uri": "http://dbpedia.org/property/currentclub",
    "predicate2_mention": "current clubs",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "players",
    "entity1_uri": "http://dbpedia.org/resource/Ferran_Soriano",
    "entity1_mention": "ferran soriano",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4591",
    "question": "What type of engines are utilised by Purvis Eureka?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Purvis_Eureka> <http://dbpedia.org/property/engine> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/engine",
    "predicate1_mention": "engines",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Purvis_Eureka",
    "entity1_mention": "purvis eureka",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4592",
    "question": "Is Egyptian Arabic belong to the Central Semitic Languages family?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Egyptian_Arabic> <http://dbpedia.org/ontology/languageFamily> <http://dbpedia.org/resource/Central_Semitic_languages> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/languageFamily",
    "predicate1_mention": "languages family",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Egyptian_Arabic",
    "entity1_mention": "egyptian arabic",
    "entity2_uri": "http://dbpedia.org/resource/Central_Semitic_languages",
    "entity2_mention": "Central Semitic Languages"
},
{
    "id": "4598",
    "question": "Name the route end of the North-South Transport Corridor and Mumbai Vadodara Expressway?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/North\u2013South_Transport_Corridor> <http://dbpedia.org/ontology/routeEnd> ?uri. <http://dbpedia.org/resource/Mumbai_Vadodara_Expressway> <http://dbpedia.org/ontology/routeEnd> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/routeEnd",
    "predicate1_mention": "route end",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/North\u2013South_Transport_Corridor",
    "entity1_mention": "North-South Transport Corridor",
    "entity2_uri": "http://dbpedia.org/resource/Mumbai_Vadodara_Expressway",
    "entity2_mention": "Mumbai Vadodara Expressway"
},
{
    "id": "4600",
    "question": "Name the television show whose subsequent work is Crusade and Composer is Stewart Copeland?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Crusade_(TV_series)> . ?uri <http://dbpedia.org/property/composer> <http://dbpedia.org/resource/Stewart_Copeland>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/subsequentWork",
    "predicate1_mention": "subsequent work",
    "predicate2_uri": "http://dbpedia.org/property/composer",
    "predicate2_mention": "composer",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television show",
    "entity1_uri": "http://dbpedia.org/resource/Crusade_(TV_series)",
    "entity1_mention": "crusade",
    "entity2_uri": "http://dbpedia.org/resource/Stewart_Copeland",
    "entity2_mention": "stewart Copeland"
},
{
    "id": "4612",
    "question": "Who did Daniel Gibson marry?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Daniel_Gibson>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/spouse",
    "predicate1_mention": "marry",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Daniel_Gibson",
    "entity1_mention": "daniel gibson",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4618",
    "question": "How many movies are distributed by Cinema International Corporation?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Cinema_International_Corporation>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/distributor",
    "predicate1_mention": "distributed",
    "predicate2_uri": "http://dbpedia.org/ontology/Film",
    "predicate2_mention": "movies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Cinema_International_Corporation",
    "entity1_mention": "cinema international corporation",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4634",
    "question": "How many apes are there?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Ape>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/family",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ape",
    "entity1_mention": "apes",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4636",
    "question": "How many cities are close to Lake Victoria?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Lake_Victoria> <http://dbpedia.org/ontology/nearestCity> ?uri  . }",
    "sparql_id": "102",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/nearestCity",
    "predicate1_mention": "close to",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lake_Victoria",
    "entity1_mention": "lake victoria",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4639",
    "question": "Where did the war take place where one of the commander was Zuo Zongtang?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Zuo_Zongtang> . ?x <http://dbpedia.org/ontology/territory> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/commander",
    "predicate1_mention": "commander",
    "predicate2_uri": "http://dbpedia.org/ontology/territory",
    "predicate2_mention": "take place",
    "type_uri": "http://dbpedia.org/ontology/MilitaryConflict",
    "type_mention": "war",
    "entity1_uri": "http://dbpedia.org/resource/Zuo_Zongtang",
    "entity1_mention": "zuo zongtang",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4642",
    "question": "What is the name of the homeground of football team Panionios G.S.S.?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2013\u201314_Panionios_G.S.S._season> <http://dbpedia.org/ontology/ground> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/ground",
    "predicate1_mention": "homeground",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/2013\u201314_Panionios_G.S.S._season",
    "entity1_mention": "panionios g.s.s.",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4655",
    "question": "Give me the total number of television shows whose theme music composer is Julian Gingell and created by  Simon Fuller?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Julian_Gingell> . ?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller> } ",
    "sparql_id": "108",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/themeMusicComposer",
    "predicate1_mention": "theme music composer",
    "predicate2_uri": "http://dbpedia.org/property/creator",
    "predicate2_mention": "created",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Julian_Gingell",
    "entity1_mention": "julian gingell",
    "entity2_uri": "http://dbpedia.org/resource/Simon_Fuller",
    "entity2_mention": "simon fuller"
},
{
    "id": "4658",
    "question": "Is Latin the official language of Sovereign Military Order of Malta?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Sovereign_Military_Order_of_Malta> <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/Latin> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/officialLanguage",
    "predicate1_mention": "official language",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sovereign_Military_Order_of_Malta",
    "entity1_mention": "Sovereign Military Order of Malta",
    "entity2_uri": "http://dbpedia.org/resource/Latin",
    "entity2_mention": "latin"
},
{
    "id": "4659",
    "question": "List the  outflow of Lake Uniamsi?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lake_Uniam\u00e9si> <http://dbpedia.org/ontology/outflow> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/outflow",
    "predicate1_mention": "outflow",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lake_Uniam\u00e9si",
    "entity1_mention": "Lake Uniamsi",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4665",
    "question": "Which shows are from a company whose subsidiary is Viacom Productions?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Viacom_Productions> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/subsidiary",
    "predicate1_mention": "subsidiary",
    "predicate2_uri": "http://dbpedia.org/property/company",
    "predicate2_mention": "company",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "shows",
    "entity1_uri": "http://dbpedia.org/resource/Viacom_Productions",
    "entity1_mention": "viacom productions",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4668",
    "question": "Who edited  British Gazette ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/British_Gazette> <http://dbpedia.org/property/editor> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/editor",
    "predicate1_mention": "edited",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/British_Gazette",
    "entity1_mention": "british gazette",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4671",
    "question": "Count the total number  of hometown of the gymnasts whose one of the hometown in Russia ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/hometown> <http://dbpedia.org/resource/Russia> . ?x <http://dbpedia.org/property/hometown> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/hometown",
    "predicate1_mention": "hometown",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Russia",
    "entity1_mention": "russia",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4682",
    "question": "Who all have succeeded the kings buried in Rome?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Rome> . ?x <http://dbpedia.org/ontology/successor> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/placeOfBurial",
    "predicate1_mention": "buried in",
    "predicate2_uri": "http://dbpedia.org/ontology/successor",
    "predicate2_mention": "succeeded",
    "type_uri": "http://dbpedia.org/ontology/Royalty",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Rome",
    "entity1_mention": "rome",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4702",
    "question": "How many other battles have the military person fought whose one of the battles is World War II ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/World_War_II> . ?x <http://dbpedia.org/property/battles> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/battles",
    "predicate1_mention": "battles",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/World_War_II",
    "entity1_mention": "world war ii",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4706",
    "question": "Name the nationalteam of Trn Vit Hng ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tr\u1ea7n_Vi\u1ec7t_H\u01b0\u01a1ng> <http://dbpedia.org/property/nationalteam> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/nationalteam",
    "predicate1_mention": "nationalteam",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tr\u1ea7n_Vi\u1ec7t_H\u01b0\u01a1ng",
    "entity1_mention": "Trn Vit Hng",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4723",
    "question": "Through which states do the rivers flow which join in the republican river from the left?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Republican_River> <http://dbpedia.org/ontology/leftTributary> ?x . ?x <http://dbpedia.org/ontology/state> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/leftTributary",
    "predicate1_mention": "left",
    "predicate2_uri": "http://dbpedia.org/ontology/state",
    "predicate2_mention": "states",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Republican_River",
    "entity1_mention": "republican river",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4725",
    "question": "Under which common jurisdiction do Trinity School, Brentwood and Buckhurst Hill County High School fall?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Trinity_School,_Brentwood> <http://dbpedia.org/ontology/localAuthority> ?uri. <http://dbpedia.org/resource/Buckhurst_Hill_County_High_School> <http://dbpedia.org/ontology/localAuthority> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/localAuthority",
    "predicate1_mention": "common jurisdiction",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Trinity_School,_Brentwood",
    "entity1_mention": "trinity school, brentwood",
    "entity2_uri": "http://dbpedia.org/resource/Buckhurst_Hill_County_High_School",
    "entity2_mention": "Buckhurst Hill County High School"
},
{
    "id": "4727",
    "question": "How many television shows have  Fox Broadcasting Company as their channel?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/channel",
    "predicate1_mention": "channel",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "television shows",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company",
    "entity1_mention": "fox broadcasting company",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4728",
    "question": "How many things are written in C++?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/C++>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/programmingLanguage",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/C++",
    "entity1_mention": "c++",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4731",
    "question": "List the mammals whose taxonomy is Diprotodontia and phylum is Chordate?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Diprotodontia> . ?uri <http://dbpedia.org/ontology/phylum> <http://dbpedia.org/resource/Chordate>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/order",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/phylum",
    "predicate2_mention": "phylum",
    "type_uri": "http://dbpedia.org/ontology/Mammal",
    "type_mention": "mammals",
    "entity1_uri": "http://dbpedia.org/resource/Diprotodontia",
    "entity1_mention": "diprotodontia",
    "entity2_uri": "http://dbpedia.org/resource/Chordate",
    "entity2_mention": "chordate"
},
{
    "id": "4735",
    "question": "Which collaborator of Nice and Smooth wrote Same Song ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Nice_&_Smooth> <http://dbpedia.org/ontology/associatedBand> ?uri. <http://dbpedia.org/resource/Same_Song_(Digital_Underground_song)> <http://dbpedia.org/property/writer> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedBand",
    "predicate1_mention": "collaborator",
    "predicate2_uri": "http://dbpedia.org/property/writer",
    "predicate2_mention": "wrote",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Nice_&_Smooth",
    "entity1_mention": "nice and smooth",
    "entity2_uri": "http://dbpedia.org/resource/Same_Song_(Digital_Underground_song)",
    "entity2_mention": "same song"
},
{
    "id": "4736",
    "question": "Who is the child of John Tyler, Sr .?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Tyler,_Sr.> <http://dbpedia.org/ontology/child> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/child",
    "predicate1_mention": "child",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/John_Tyler,_Sr.",
    "entity1_mention": "John Tyler, Sr.",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4737",
    "question": "What is the country with native language as Languages of Ethiopia?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/language> <http://dbpedia.org/resource/Languages_of_Ethiopia>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/language",
    "predicate1_mention": "language",
    "predicate2_uri": "http://dbpedia.org/ontology/Country",
    "predicate2_mention": "country",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Languages_of_Ethiopia",
    "entity1_mention": "languages of ethiopia",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4738",
    "question": "The successor of Ulrich II, Count of East Frisia was born in what place?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ulrich_II,_Count_of_East_Frisia> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate2_mention": "born in",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ulrich_II,_Count_of_East_Frisia",
    "entity1_mention": "Ulrich II, Count of East Frisia",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4742",
    "question": "Which artists trained in San Francisco Art Institute?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/training> <http://dbpedia.org/resource/San_Francisco_Art_Institute>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/training",
    "predicate1_mention": "trained in",
    "predicate2_uri": "http://dbpedia.org/ontology/Artist",
    "predicate2_mention": "artists",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/San_Francisco_Art_Institute",
    "entity1_mention": "san francisco art institute",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4744",
    "question": "What is the launch site of the Juno I which was also the ground of 2016 Fort Lauderdale Strikers season ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Juno_I> <http://dbpedia.org/ontology/launchSite> ?uri. <http://dbpedia.org/resource/2016_Fort_Lauderdale_Strikers_season> <http://dbpedia.org/ontology/ground> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/launchSite",
    "predicate1_mention": "launch site",
    "predicate2_uri": "http://dbpedia.org/ontology/ground",
    "predicate2_mention": "ground",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Juno_I",
    "entity1_mention": "juno",
    "entity2_uri": "http://dbpedia.org/resource/2016_Fort_Lauderdale_Strikers_season",
    "entity2_mention": "016 Fort Lauderdale Strikers season "
},
{
    "id": "4779",
    "question": "From which countries are the people from who are an academic authority of the Western pygmy blue species?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Western_pygmy_blue> <http://dbpedia.org/ontology/binomialAuthority> ?x . ?x <http://dbpedia.org/ontology/citizenship> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/binomialAuthority",
    "predicate1_mention": "academic authority",
    "predicate2_uri": "http://dbpedia.org/ontology/citizenship",
    "predicate2_mention": "countries",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Western_pygmy_blue",
    "entity1_mention": "western pygmy blue",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4780",
    "question": "Is Henry Knox a commander of Continental Artillery Regiment?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Continental_Artillery_Regiment> <http://dbpedia.org/ontology/notableCommander> <http://dbpedia.org/resource/Henry_Knox> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/notableCommander",
    "predicate1_mention": "commander",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Continental_Artillery_Regiment",
    "entity1_mention": "continental artillery regiment",
    "entity2_uri": "http://dbpedia.org/resource/Henry_Knox",
    "entity2_mention": "henry knox"
},
{
    "id": "4784",
    "question": "Brian Moriarty designed video games written by whom?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/designer> <http://dbpedia.org/resource/Brian_Moriarty> . ?x <http://dbpedia.org/property/writer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/designer",
    "predicate1_mention": "designed",
    "predicate2_uri": "http://dbpedia.org/property/writer",
    "predicate2_mention": "written by",
    "type_uri": "http://dbpedia.org/ontology/VideoGame",
    "type_mention": "video games",
    "entity1_uri": "http://dbpedia.org/resource/Brian_Moriarty",
    "entity1_mention": "brian moriarty",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4787",
    "question": "What is the religion of the president who won the Mongolian legislative election, 2004 ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mongolian_legislative_election,_2004> <http://dbpedia.org/property/leader> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/leader",
    "predicate1_mention": "president",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religion",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mongolian_legislative_election,_2004",
    "entity1_mention": "mongolian legislative election,",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4795",
    "question": "Was John muir one of the first to ascend a mountain on Mt hoffmann?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mount_Hoffmann> <http://dbpedia.org/ontology/firstAscentPerson> <http://dbpedia.org/resource/John_Muir> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/firstAscentPerson",
    "predicate1_mention": "first to ascend",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mount_Hoffmann",
    "entity1_mention": "mt hoffmann",
    "entity2_uri": "http://dbpedia.org/resource/John_Muir",
    "entity2_mention": "john muir"
},
{
    "id": "4798",
    "question": "Does AMC Gremlin have the Volkswagen engine?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/AMC_Gremlin> <http://dbpedia.org/property/engine> <http://dbpedia.org/resource/Volkswagen> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/engine",
    "predicate1_mention": "engine",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/AMC_Gremlin",
    "entity1_mention": "amc gremlin",
    "entity2_uri": "http://dbpedia.org/resource/Volkswagen",
    "entity2_mention": "volkswagen"
},
{
    "id": "4806",
    "question": "Which footballers did their high school in west Sacramento california? ",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/highSchool> <http://dbpedia.org/resource/West_Sacramento,_California>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/highSchool",
    "predicate1_mention": "high school",
    "predicate2_uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
    "predicate2_mention": "footballers",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/West_Sacramento,_California",
    "entity1_mention": "west sacramento california",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4807",
    "question": "What is the state of origin of the president whose alma mater is Hellenic Naval Academy ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Hellenic_Naval_Academy> . ?x <http://dbpedia.org/ontology/stateOfOrigin> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/almaMater",
    "predicate1_mention": "alma mater",
    "predicate2_uri": "http://dbpedia.org/ontology/stateOfOrigin",
    "predicate2_mention": "state of origin",
    "type_uri": "http://dbpedia.org/ontology/President",
    "type_mention": "president",
    "entity1_uri": "http://dbpedia.org/resource/Hellenic_Naval_Academy",
    "entity1_mention": "Hellenic Naval Academy",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4818",
    "question": "Whose mayors are affiliated with Christen-Democratisch en Vlaams?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/affiliation> <http://dbpedia.org/resource/Christen-Democratisch_en_Vlaams> . ?uri <http://dbpedia.org/ontology/leaderName> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/affiliation",
    "predicate1_mention": "affiliated",
    "predicate2_uri": "http://dbpedia.org/ontology/leaderName",
    "predicate2_mention": "mayors",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Christen-Democratisch_en_Vlaams",
    "entity1_mention": "christen-democratisch en vlaams",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4820",
    "question": "What company is the one which wrote the google web toolkit and PlayN?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Google_Web_Toolkit> <http://dbpedia.org/ontology/author> ?uri. <http://dbpedia.org/resource/PlayN> <http://dbpedia.org/ontology/author> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/author",
    "predicate1_mention": "wrote",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Google_Web_Toolkit",
    "entity1_mention": "google web toolkit",
    "entity2_uri": "http://dbpedia.org/resource/PlayN",
    "entity2_mention": "playn"
},
{
    "id": "4823",
    "question": "Who fought in the battle at Tupelo Mississippi?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Tupelo,_Mississippi> . ?x <http://dbpedia.org/property/combatant> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/place",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/combatant",
    "predicate2_mention": "battle",
    "type_uri": "http://dbpedia.org/ontology/MilitaryConflict",
    "type_mention": "battle",
    "entity1_uri": "http://dbpedia.org/resource/Tupelo,_Mississippi",
    "entity1_mention": "tupelo mississippi",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4828",
    "question": "which movies have been published by Cinema International Corporation?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Cinema_International_Corporation> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/distributor",
    "predicate1_mention": "published by",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Cinema_International_Corporation",
    "entity1_mention": "cinema international corporation",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4836",
    "question": "Count the number of characters in Batman Live?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Batman_Live> <http://dbpedia.org/property/characters> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>}",
    "sparql_id": "402",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/characters",
    "predicate1_mention": "characters",
    "predicate2_uri": "http://dbpedia.org/ontology/ComicsCharacter",
    "predicate2_mention": "characters",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Batman_Live",
    "entity1_mention": "batman live",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4843",
    "question": "Did Stanlee write the Tales of Suspense?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Tales_of_Suspense> <http://dbpedia.org/property/writers> <http://dbpedia.org/resource/Stan_Lee> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/writers",
    "predicate1_mention": "write",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tales_of_Suspense",
    "entity1_mention": "tales of Suspense",
    "entity2_uri": "http://dbpedia.org/resource/Stan_Lee",
    "entity2_mention": "Stanlee"
},
{
    "id": "4844",
    "question": "Who is the head coach of the teams in Middlesbrough FC?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/club> <http://dbpedia.org/resource/Middlesbrough_F.C.> . ?x <http://dbpedia.org/ontology/manager> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/club",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/manager",
    "predicate2_mention": "head coach",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Middlesbrough_F.C.",
    "entity1_mention": "middlesbrough fc",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4850",
    "question": "Copley Medal has been awarded to which scientists?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Copley_Medal>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/awards",
    "predicate1_mention": "awarded",
    "predicate2_uri": "http://dbpedia.org/ontology/Scientist",
    "predicate2_mention": "scientists",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Copley_Medal",
    "entity1_mention": "copley medal",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4852",
    "question": "to which university did both, the Stanford Cardinal and Gerald Reaven go?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Stanford_Cardinal> <http://dbpedia.org/ontology/university> ?uri. <http://dbpedia.org/resource/Gerald_Reaven> <http://dbpedia.org/ontology/institution> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/university",
    "predicate1_mention": "university",
    "predicate2_uri": "http://dbpedia.org/ontology/institution",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Stanford_Cardinal",
    "entity1_mention": "stanford cardinal",
    "entity2_uri": "http://dbpedia.org/resource/Gerald_Reaven",
    "entity2_mention": "gerald reaven"
},
{
    "id": "4853",
    "question": "Which american football team is owned by Mark davis and is located in O.co Colliseum ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/owner> <http://dbpedia.org/resource/Mark_Davis_(American_football)> . ?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/O.co_Coliseum>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballTeam>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/owner",
    "predicate1_mention": "owned",
    "predicate2_uri": "http://dbpedia.org/ontology/locationCity",
    "predicate2_mention": "located in",
    "type_uri": "http://dbpedia.org/ontology/AmericanFootballTeam",
    "type_mention": "american football team",
    "entity1_uri": "http://dbpedia.org/resource/Mark_Davis_(American_football)",
    "entity1_mention": "Mark davis",
    "entity2_uri": "http://dbpedia.org/resource/O.co_Coliseum",
    "entity2_mention": "O.co Colliseum"
},
{
    "id": "4857",
    "question": "How many books are written by the author who is famous for Novelas Ejemplares?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/Novelas_ejemplares> . ?uri <http://dbpedia.org/ontology/author> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/notableWork",
    "predicate1_mention": "famous for",
    "predicate2_uri": "http://dbpedia.org/ontology/author",
    "predicate2_mention": "author",
    "type_uri": "http://dbpedia.org/ontology/Book",
    "type_mention": "books",
    "entity1_uri": "http://dbpedia.org/resource/Novelas_ejemplares",
    "entity1_mention": "novelas ejemplares",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4859",
    "question": "To which city does Northeast Library belong?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Northeast_Library> <http://dbpedia.org/ontology/city> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/city",
    "predicate1_mention": "city",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Northeast_Library",
    "entity1_mention": "northeast library",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4864",
    "question": "Which comic characters were created by Paul Dini?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Paul_Dini>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/creators",
    "predicate1_mention": "created by",
    "predicate2_uri": "http://dbpedia.org/ontology/ComicsCharacter",
    "predicate2_mention": "comic characters",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Paul_Dini",
    "entity1_mention": "paul dini",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4869",
    "question": "What developed EMMS?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/EMMS> <http://dbpedia.org/ontology/developer> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/developer",
    "predicate1_mention": "developed",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/EMMS",
    "entity1_mention": "emms",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4875",
    "question": "Which hockey team is head coached by Bill Peters?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/headCoach> <http://dbpedia.org/resource/Bill_Peters_(ice_hockey)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HockeyTeam>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/headCoach",
    "predicate1_mention": "head coached by",
    "predicate2_uri": "http://dbpedia.org/ontology/HockeyTeam",
    "predicate2_mention": "hockey team",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bill_Peters_(ice_hockey)",
    "entity1_mention": "Bill Peters",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4879",
    "question": "How many companies were started in the states?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/United_States>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/foundationPlace",
    "predicate1_mention": "started in",
    "predicate2_uri": "http://dbpedia.org/ontology/Company",
    "predicate2_mention": "companies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_States",
    "entity1_mention": "states",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4882",
    "question": "List the television shows one of whose distributor's divisions is Warner Bros. Animation.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/divisions> <http://dbpedia.org/resource/Warner_Bros._Animation> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/divisions",
    "predicate1_mention": "divisions",
    "predicate2_uri": "http://dbpedia.org/property/distributor",
    "predicate2_mention": "distributor's",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television shows",
    "entity1_uri": "http://dbpedia.org/resource/Warner_Bros._Animation",
    "entity1_mention": "Warner Bros. Animation",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4887",
    "question": "Who has manufactured vehicles designed originally by NASA?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/designCompany> <http://dbpedia.org/resource/NASA> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/designCompany",
    "predicate1_mention": "designed originally by",
    "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate2_mention": "manufactured",
    "type_uri": "http://dbpedia.org/ontology/Automobile",
    "type_mention": "vehicles",
    "entity1_uri": "http://dbpedia.org/resource/NASA",
    "entity1_mention": "nasa",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4891",
    "question": "What subsequent work of Moondog Matinee has the composer of Motorpsycho Nitemare ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Motorpsycho_Nitemare> <http://dbpedia.org/property/composer> ?uri. <http://dbpedia.org/resource/Moondog_Matinee> <http://dbpedia.org/ontology/subsequentWork> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/composer",
    "predicate1_mention": "composer",
    "predicate2_uri": "http://dbpedia.org/ontology/subsequentWork",
    "predicate2_mention": "subsequent work",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Motorpsycho_Nitemare",
    "entity1_mention": "motorpsycho nitemare",
    "entity2_uri": "http://dbpedia.org/resource/Moondog_Matinee",
    "entity2_mention": "moondog matinee"
},
{
    "id": "4896",
    "question": "Who is the narrator of The Incredible Hulk , 1982 TV series ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)> <http://dbpedia.org/property/narrated> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/narrated",
    "predicate1_mention": "narrator",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)",
    "entity1_mention": "The Incredible Hulk , 1982 TV series",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4903",
    "question": "Who owns the company that made the Edsel Villager?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Edsel_Villager> . ?x <http://dbpedia.org/property/parent> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/products",
    "predicate1_mention": "made",
    "predicate2_uri": "http://dbpedia.org/property/parent",
    "predicate2_mention": "company",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Edsel_Villager",
    "entity1_mention": "edsel villager",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4911",
    "question": "Giorgos Kaminis is the mayor of what?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Giorgos_Kaminis> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/mayor",
    "predicate1_mention": "mayor",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Giorgos_Kaminis",
    "entity1_mention": "giorgos kaminis",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4912",
    "question": "Name the incumbent of Linda Jenness ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Linda_Jenness> <http://dbpedia.org/ontology/incumbent> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/incumbent",
    "predicate1_mention": "incumbent",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Linda_Jenness",
    "entity1_mention": "linda jenness",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4927",
    "question": "Where did the members of judge advocate general corps study?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/Judge_Advocate_General's_Corps,_United_States_Army> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/militaryRank",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate2_mention": "study",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Judge_Advocate_General's_Corps,_United_States_Army",
    "entity1_mention": "judge advocate general corps",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4934",
    "question": "How many things are produced by companies located in Tehran?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Tehran> . ?x <http://dbpedia.org/ontology/product> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/location",
    "predicate1_mention": "located",
    "predicate2_uri": "http://dbpedia.org/ontology/product",
    "predicate2_mention": "produced by",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tehran",
    "entity1_mention": "tehran",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4938",
    "question": "Who was in the missions of Apollo 11 and Gemini 8?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Apollo_11> . ?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Gemini_8> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/mission",
    "predicate1_mention": "missions",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Apollo_11",
    "entity1_mention": "apollo 11",
    "entity2_uri": "http://dbpedia.org/resource/Gemini_8",
    "entity2_mention": "gemini 8"
},
{
    "id": "4946",
    "question": "Which ethinicity of  Riley Reid is the state of origin of Holmes Colbert?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Riley_Reid> <http://dbpedia.org/property/ethnicity> ?uri. <http://dbpedia.org/resource/Holmes_Colbert> <http://dbpedia.org/ontology/stateOfOrigin> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/ethnicity",
    "predicate1_mention": "ethinicity",
    "predicate2_uri": "http://dbpedia.org/ontology/stateOfOrigin",
    "predicate2_mention": "state of origin",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Riley_Reid",
    "entity1_mention": "riley reid",
    "entity2_uri": "http://dbpedia.org/resource/Holmes_Colbert",
    "entity2_mention": "holmes colbert"
},
{
    "id": "4947",
    "question": "Where was Girls (The Prodigy song)  recorded ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Girls_(The_Prodigy_song)> <http://dbpedia.org/property/recorded> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/recorded",
    "predicate1_mention": "recorded",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Girls_(The_Prodigy_song)",
    "entity1_mention": "Girls (The Prodigy song)",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4949",
    "question": "Who are the scientists known for the Manhattan Project?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/knownFor> <http://dbpedia.org/resource/Manhattan_Project>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/knownFor",
    "predicate1_mention": "known for",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Scientist",
    "type_mention": "scientists",
    "entity1_uri": "http://dbpedia.org/resource/Manhattan_Project",
    "entity1_mention": "manhattan project",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4950",
    "question": "What are the regions in which the distributor of Secrets and Lies serves ? ",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Secrets_and_Lies_(U.S._TV_series)> <http://dbpedia.org/ontology/distributor> ?x . ?x <http://dbpedia.org/ontology/regionServed> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/distributor",
    "predicate1_mention": "distributor",
    "predicate2_uri": "http://dbpedia.org/ontology/regionServed",
    "predicate2_mention": "regions",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Secrets_and_Lies_(U.S._TV_series)",
    "entity1_mention": "Secrets and Lies serves",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4953",
    "question": "Which is the common past team of the Charlie Justice (American football player) and Bobby Hoppe ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charlie_Justice_(American_football_player)> <http://dbpedia.org/property/pastteams> ?uri. <http://dbpedia.org/resource/Bobby_Hoppe> <http://dbpedia.org/property/pastteams> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/pastteams",
    "predicate1_mention": "past team",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Charlie_Justice_(American_football_player)",
    "entity1_mention": "Charlie Justice (American football player)",
    "entity2_uri": "http://dbpedia.org/resource/Bobby_Hoppe",
    "entity2_mention": "bobby hoppe"
},
{
    "id": "4955",
    "question": "Which city council owns the Ted Williams tunnel and Leonard Memorial ridge?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ted_Williams_Tunnel> <http://dbpedia.org/property/owner> ?uri. <http://dbpedia.org/resource/Leonard_P._Zakim_Bunker_Hill_Memorial_Bridge> <http://dbpedia.org/property/owner> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/owner",
    "predicate1_mention": "owns",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ted_Williams_Tunnel",
    "entity1_mention": "ted williams tunnel",
    "entity2_uri": "http://dbpedia.org/resource/Leonard_P._Zakim_Bunker_Hill_Memorial_Bridge",
    "entity2_mention": "Leonard Memorial ridge"
},
{
    "id": "4960",
    "question": "Whose relatives are Clan McDuck and Huey, Dewey, and Louie?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Clan_McDuck> . ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Huey,_Dewey,_and_Louie> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/relatives",
    "predicate1_mention": "relatives",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Clan_McDuck",
    "entity1_mention": "clan mcduck",
    "entity2_uri": "http://dbpedia.org/resource/Huey,_Dewey,_and_Louie",
    "entity2_mention": "Huey, Dewey, and Louie"
},
{
    "id": "4971",
    "question": "In which city did The Ultimate Fighter : Team Rousey vs. Team Tate take place ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Rousey_vs._Team_Tate> <http://dbpedia.org/property/city> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/city",
    "predicate1_mention": "city",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Rousey_vs._Team_Tate",
    "entity1_mention": "The Ultimate Fighter: Team Rousey vs. Team Tate",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4980",
    "question": "Muhammad Yunus has won how many awards?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Muhammad_Yunus> <http://dbpedia.org/ontology/award> ?uri  . }",
    "sparql_id": "102",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/award",
    "predicate1_mention": "awards",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Muhammad_Yunus",
    "entity1_mention": "muhammad yunus",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4985",
    "question": "How many people hold important positions alongwith Donna Shalala?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Donna_Shalala> . ?x <http://dbpedia.org/property/keyPeople> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/keyPerson",
    "predicate1_mention": "hold important positions",
    "predicate2_uri": "http://dbpedia.org/property/keyPeople",
    "predicate2_mention": "hold important positions",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Donna_Shalala",
    "entity1_mention": "donna shalala",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "4986",
    "question": "Which currency can I use both in Kerguelen islands and French southern and antarctic lands?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/French_Southern_and_Antarctic_Lands> <http://dbpedia.org/ontology/currency> ?uri. <http://dbpedia.org/resource/Kerguelen_Islands> <http://dbpedia.org/ontology/currency> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/currency",
    "predicate1_mention": "currency",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/French_Southern_and_Antarctic_Lands",
    "entity1_mention": "French southern and antarctic lands",
    "entity2_uri": "http://dbpedia.org/resource/Kerguelen_Islands",
    "entity2_mention": "kerguelen islands"
},
{
    "id": "4992",
    "question": "Is Brazilian jiu-jitsu the trainer of Nick Diaz?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Nick_Diaz> <http://dbpedia.org/ontology/trainer> <http://dbpedia.org/resource/Brazilian_jiu-jitsu> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/trainer",
    "predicate1_mention": "trainer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Nick_Diaz",
    "entity1_mention": "nick diaz",
    "entity2_uri": "http://dbpedia.org/resource/Brazilian_jiu-jitsu",
    "entity2_mention": "brazilian jiu-jitsu"
},
{
    "id": "4994",
    "question": "What is the total number of other combatant of the military conflicts whose combatant is Choctaw?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/combatant> <http://dbpedia.org/resource/Choctaw> . ?x <http://dbpedia.org/property/combatant> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/combatant",
    "predicate1_mention": "combatant",
    "predicate2_uri": "http://dbpedia.org/property/combatant",
    "predicate2_mention": "combatant",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Choctaw",
    "entity1_mention": "choctaw",
    "entity2_uri": "",
    "entity2_mention": ""
}]