[{
    "id": "0",
    "question": "Which comic characters are painted by Bill Finger?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Bill_Finger>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/creator",
    "predicate1_mention": "painted by",
    "predicate2_uri": "http://dbpedia.org/ontology/ComicsCharacter",
    "predicate2_mention": "comic characters",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bill_Finger",
    "entity1_mention": "Bill Finger",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1",
    "question": "Was winston churchill the prime minister of Selwyn Lloyd?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Selwyn_Lloyd> <http://dbpedia.org/ontology/primeMinister> <http://dbpedia.org/resource/Winston_Churchill> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/primeMinister",
    "predicate1_mention": "prime minister",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Selwyn_Lloyd",
    "entity1_mention": "selwyn lloyd",
    "entity2_uri": "http://dbpedia.org/resource/Winston_Churchill",
    "entity2_mention": "winston churchill"
},
{
    "id": "2",
    "question": "Name some leaders of the parent organisation of the Gestapo?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gestapo> <http://dbpedia.org/ontology/parentOrganisation> ?x . ?x <http://dbpedia.org/ontology/leader> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/parentOrganisation",
    "predicate1_mention": "parent organisation",
    "predicate2_uri": "http://dbpedia.org/ontology/leader",
    "predicate2_mention": "leaders",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Gestapo",
    "entity1_mention": "gestapo",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "6",
    "question": "In which monarch did Li Si succeed someone?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Li_Si> . ?x <http://dbpedia.org/ontology/monarch> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/successor",
    "predicate1_mention": "succeed",
    "predicate2_uri": "http://dbpedia.org/ontology/monarch",
    "predicate2_mention": "monarch",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Li_Si",
    "entity1_mention": "Li Si",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "7",
    "question": "Which home town of PAvel Moroz is the death location of the Yakov Estrin ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pavel_Moroz> <http://dbpedia.org/property/hometown> ?uri. <http://dbpedia.org/resource/Yakov_Estrin> <http://dbpedia.org/ontology/deathPlace> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/hometown",
    "predicate1_mention": "home town",
    "predicate2_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate2_mention": "death location",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Pavel_Moroz",
    "entity1_mention": "PAvel Moroz",
    "entity2_uri": "http://dbpedia.org/resource/Yakov_Estrin",
    "entity2_mention": "Yakov Estrin"
},
{
    "id": "8",
    "question": "Which company which assembles its cars in Broadmeadows, Victoria?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Broadmeadows,_Victoria> . ?x <http://dbpedia.org/ontology/parentCompany> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/assembly",
    "predicate1_mention": "assembles",
    "predicate2_uri": "http://dbpedia.org/ontology/parentCompany",
    "predicate2_mention": "company",
    "type_uri": "http://dbpedia.org/ontology/Automobile",
    "type_mention": "cars",
    "entity1_uri": "http://dbpedia.org/resource/Broadmeadows,_Victoria",
    "entity1_mention": "broadmeadows, victoria",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "10",
    "question": "Name the scientist whose supervisor was Ernest Rutherford and had a doctoral students named Charles Drummond Ellis?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/doctoralAdvisor> <http://dbpedia.org/resource/Ernest_Rutherford> . ?uri <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Charles_Drummond_Ellis>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/doctoralAdvisor",
    "predicate1_mention": "supervisor",
    "predicate2_uri": "http://dbpedia.org/property/doctoralStudents",
    "predicate2_mention": "doctoral students",
    "type_uri": "http://dbpedia.org/ontology/Scientist",
    "type_mention": "scientist",
    "entity1_uri": "http://dbpedia.org/resource/Ernest_Rutherford",
    "entity1_mention": "Ernest Rutherford",
    "entity2_uri": "http://dbpedia.org/resource/Charles_Drummond_Ellis",
    "entity2_mention": "Charles Drummond Ellis"
},
{
    "id": "11",
    "question": "Where was the designer of REP Parasol born?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/REP_Parasol> <http://dbpedia.org/ontology/designer> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/designer",
    "predicate1_mention": "designer",
    "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate2_mention": "born",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/REP_Parasol",
    "entity1_mention": "REP Parasol",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "12",
    "question": "What is the common affiliation of the Monroe Carell Jr. Children's Hospital at Vanderbilt and alma mater of the Duncan U. Fletcher?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Monroe_Carell_Jr._Children's_Hospital_at_Vanderbilt> <http://dbpedia.org/property/affiliation> ?uri. <http://dbpedia.org/resource/Duncan_U._Fletcher> <http://dbpedia.org/ontology/almaMater> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/affiliation",
    "predicate1_mention": "affiliation",
    "predicate2_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate2_mention": "alma mater",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Monroe_Carell_Jr._Children's_Hospital_at_Vanderbilt",
    "entity1_mention": "Monroe Carell Jr. Children's Hospital at Vanderbilt",
    "entity2_uri": "http://dbpedia.org/resource/Duncan_U._Fletcher",
    "entity2_mention": "Duncan U. Fletcher"
},
{
    "id": "13",
    "question": "What is the hometown of Nader Guirat where Josef Johansson was born too?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Josef_Johansson> <http://dbpedia.org/property/birthPlace> ?uri. <http://dbpedia.org/resource/Nader_Guirat> <http://dbpedia.org/ontology/hometown> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/birthPlace",
    "predicate1_mention": "born",
    "predicate2_uri": "http://dbpedia.org/ontology/hometown",
    "predicate2_mention": "hometown",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Josef_Johansson",
    "entity1_mention": "Josef Johansson",
    "entity2_uri": "http://dbpedia.org/resource/Nader_Guirat",
    "entity2_mention": "Nader Guirat"
},
{
    "id": "14",
    "question": "What tv series can be said to be related to the sarah jane adventure and dr who confidential?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/The_Sarah_Jane_Adventures> . ?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/Doctor_Who_Confidential> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/related",
    "predicate1_mention": "related",
    "predicate2_uri": "http://dbpedia.org/ontology/related",
    "predicate2_mention": "related",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures",
    "entity1_mention": "sarah jane adventure",
    "entity2_uri": "http://dbpedia.org/resource/Doctor_Who_Confidential",
    "entity2_mention": "dr who confidential"
},
{
    "id": "15",
    "question": "How many shows does HBO have?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/HBO>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/company",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "shows",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/HBO",
    "entity1_mention": "hbo",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "17",
    "question": "What is the common genere of Abhijit Kunte and Kasparov ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Abhijit_Kunte> <http://dbpedia.org/property/knownFor> ?uri. <http://dbpedia.org/resource/Virtual_Kasparov> <http://dbpedia.org/ontology/genre> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/knownFor",
    "predicate1_mention": "common",
    "predicate2_uri": "http://dbpedia.org/ontology/genre",
    "predicate2_mention": "genere",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Abhijit_Kunte",
    "entity1_mention": "Abhijit Kunte",
    "entity2_uri": "http://dbpedia.org/resource/Virtual_Kasparov",
    "entity2_mention": "kasparov"
},
{
    "id": "18",
    "question": "Which share holder of outlook is also the content license of the MSX Basics ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/MSX_BASIC> <http://dbpedia.org/property/license> ?uri. <http://dbpedia.org/resource/Outlook_on_the_web> <http://dbpedia.org/property/owner> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/license",
    "predicate1_mention": "license",
    "predicate2_uri": "http://dbpedia.org/property/owner",
    "predicate2_mention": "share holder",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/MSX_BASIC",
    "entity1_mention": "MSX Basics",
    "entity2_uri": "http://dbpedia.org/resource/Outlook_on_the_web",
    "entity2_mention": "outlook"
},
{
    "id": "19",
    "question": "On how many different grounds were seasons chaired by Ronaldo held?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Ronaldo> . ?x <http://dbpedia.org/ontology/ground> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/chairman",
    "predicate1_mention": "chaired",
    "predicate2_uri": "http://dbpedia.org/ontology/ground",
    "predicate2_mention": "grounds",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ronaldo",
    "entity1_mention": "ronaldo",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "20",
    "question": "Which source country of SamurAbsheron channel is the birth place of Anar Salmanov ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Samur\u2013Absheron_channel> <http://dbpedia.org/ontology/sourceCountry> ?uri. <http://dbpedia.org/resource/Anar_Salmanov> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/sourceCountry",
    "predicate1_mention": "source country",
    "predicate2_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate2_mention": "birth place",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Samur\u2013Absheron_channel",
    "entity1_mention": "SamurAbsheron",
    "entity2_uri": "http://dbpedia.org/resource/Anar_Salmanov",
    "entity2_mention": "Anar Salmanov"
},
{
    "id": "21",
    "question": "Where was the battle fought where 2nd Foreign Infantry Regiment participated  ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2nd_Foreign_Infantry_Regiment> <http://dbpedia.org/ontology/battle> ?x . ?x <http://dbpedia.org/ontology/territory> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/battle",
    "predicate1_mention": "battle",
    "predicate2_uri": "http://dbpedia.org/ontology/territory",
    "predicate2_mention": "where",
    "type_uri": "http://dbpedia.org/ontology/MilitaryConflict",
    "type_mention": "battle",
    "entity1_uri": "http://dbpedia.org/resource/2nd_Foreign_Infantry_Regiment",
    "entity1_mention": "2nd Foreign Infantry Regiment",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "22",
    "question": "What is the operator of SR class 3Sub ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/SR_class_3Sub> <http://dbpedia.org/ontology/operator> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/operator",
    "predicate1_mention": "operator",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/SR_class_3Sub",
    "entity1_mention": "SR class 3Sub",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "23",
    "question": "Which band's  former member are Kevin Jonas and Joe Jonas?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Kevin_Jonas> . ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Joe_Jonas>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/formerBandMember",
    "predicate1_mention": "former member",
    "predicate2_uri": "http://dbpedia.org/property/pastMembers",
    "predicate2_mention": "former member",
    "type_uri": "http://dbpedia.org/ontology/Band",
    "type_mention": "band's",
    "entity1_uri": "http://dbpedia.org/resource/Kevin_Jonas",
    "entity1_mention": "kevin jonas",
    "entity2_uri": "http://dbpedia.org/resource/Joe_Jonas",
    "entity2_mention": "Joe Jonas"
},
{
    "id": "25",
    "question": "Name the tenants of O.co Coliseum ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/O.co_Coliseum> <http://dbpedia.org/ontology/tenant> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/tenant",
    "predicate1_mention": "tenants",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/O.co_Coliseum",
    "entity1_mention": "O.co Coliseum",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "26",
    "question": "which politician is currently ruling over Rishikesh?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rishikesh> <http://dbpedia.org/ontology/leaderName> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/leaderName",
    "predicate1_mention": "politician",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Rishikesh",
    "entity1_mention": "Rishikesh",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "27",
    "question": "Is north america one of the destinations of airtours airways?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Airtours_International_Airways> <http://dbpedia.org/ontology/destination> <http://dbpedia.org/resource/North_America> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/destination",
    "predicate1_mention": "destinations",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Airtours_International_Airways",
    "entity1_mention": "airtours airways",
    "entity2_uri": "http://dbpedia.org/resource/North_America",
    "entity2_mention": "north america"
},
{
    "id": "28",
    "question": "Who have done their PhDs under a National Medal of Science winner?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/National_Medal_of_Science> . ?uri <http://dbpedia.org/property/doctoralAdvisor> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/prizes",
    "predicate1_mention": "winner",
    "predicate2_uri": "http://dbpedia.org/property/doctoralAdvisor",
    "predicate2_mention": "PhDs under",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/National_Medal_of_Science",
    "entity1_mention": "National Medal of Science",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "29",
    "question": "Who is the common manager of Aston Villa 2000-02 season and aldo the manager of Middlesbrough F.C. season 2009-10",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2000\u201301_Aston_Villa_F.C._season> <http://dbpedia.org/property/name> ?uri. <http://dbpedia.org/resource/2009\u201310_Middlesbrough_F.C._season> <http://dbpedia.org/ontology/manager> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/name",
    "predicate1_mention": "Who",
    "predicate2_uri": "http://dbpedia.org/ontology/manager",
    "predicate2_mention": "manager",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/2000\u201301_Aston_Villa_F.C._season",
    "entity1_mention": "Aston Villa 2000-02 season",
    "entity2_uri": "http://dbpedia.org/resource/2009\u201310_Middlesbrough_F.C._season",
    "entity2_mention": "Middlesbrough F.C. season 2009-10"
},
{
    "id": "30",
    "question": "Name the mascot of the military branch of William Harper.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Harper_(Rhodesian_politician)> <http://dbpedia.org/ontology/militaryBranch> ?x . ?x <http://dbpedia.org/property/mascot> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/militaryBranch",
    "predicate1_mention": "military branch",
    "predicate2_uri": "http://dbpedia.org/property/mascot",
    "predicate2_mention": "mascot",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/William_Harper_(Rhodesian_politician)",
    "entity1_mention": "William Harper.",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "31",
    "question": "How many tenats have been there, of the constructions of PCL constructures?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/builder> <http://dbpedia.org/resource/PCL_Construction> . ?x <http://dbpedia.org/ontology/tenant> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/builder",
    "predicate1_mention": "constructions",
    "predicate2_uri": "http://dbpedia.org/ontology/tenant",
    "predicate2_mention": "tenats",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/PCL_Construction",
    "entity1_mention": "PCL constructures",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "32",
    "question": "Was Kevin Jonas a part of Jonas brothers?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jonas_Brothers> <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Kevin_Jonas> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/formerBandMember",
    "predicate1_mention": "a part of",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jonas_Brothers",
    "entity1_mention": "Jonas brothers",
    "entity2_uri": "http://dbpedia.org/resource/Kevin_Jonas",
    "entity2_mention": "Kevin Jonas"
},
{
    "id": "33",
    "question": "What was the book that lead to Sagan's Cosmos, about?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Cosmos_(Carl_Sagan_book)> . ?x <http://dbpedia.org/property/subject> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/subsequentWork",
    "predicate1_mention": "lead to",
    "predicate2_uri": "http://dbpedia.org/property/subject",
    "predicate2_mention": "about",
    "type_uri": "http://dbpedia.org/ontology/Book",
    "type_mention": "book",
    "entity1_uri": "http://dbpedia.org/resource/Cosmos_(Carl_Sagan_book)",
    "entity1_mention": "Sagan's Cosmos",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "35",
    "question": "What are the type of Greenup County High School?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Greenup_County_High_School> <http://dbpedia.org/property/type> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/type",
    "predicate1_mention": "type",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Greenup_County_High_School",
    "entity1_mention": "Greenup County High School",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "36",
    "question": "List the teams for which Bobby Hoppe played ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bobby_Hoppe> <http://dbpedia.org/property/pastteams> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/pastteams",
    "predicate1_mention": "teams",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bobby_Hoppe",
    "entity1_mention": "Bobby Hoppe",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "37",
    "question": "What are some famous works of the writer of The Second Coming?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Second_Coming_(TV_serial)> <http://dbpedia.org/property/writer> ?x . ?x <http://dbpedia.org/property/notableworks> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/writer",
    "predicate1_mention": "writer",
    "predicate2_uri": "http://dbpedia.org/property/notableworks",
    "predicate2_mention": "famous works",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Second_Coming_(TV_serial)",
    "entity1_mention": "The Second Coming",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "38",
    "question": "How many books have been penned by Miguel de Cervantes?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Miguel_de_Cervantes>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/author",
    "predicate1_mention": "penned",
    "predicate2_uri": "http://dbpedia.org/ontology/Book",
    "predicate2_mention": "books",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Miguel_de_Cervantes",
    "entity1_mention": "Miguel de Cervantes",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "39",
    "question": "Which labels signs up progressive rock bands?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/genre> <http://dbpedia.org/resource/Progressive_rock> . ?x <http://dbpedia.org/ontology/recordLabel> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/genre",
    "predicate1_mention": "signs",
    "predicate2_uri": "http://dbpedia.org/ontology/recordLabel",
    "predicate2_mention": "labels",
    "type_uri": "http://dbpedia.org/ontology/MusicalArtist",
    "type_mention": "bands",
    "entity1_uri": "http://dbpedia.org/resource/Progressive_rock",
    "entity1_mention": "progressive rock",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "40",
    "question": "What are the schools whose city is Reading, Berkshire?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Reading,_Berkshire> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/city",
    "predicate1_mention": "city",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Reading,_Berkshire",
    "entity1_mention": "Reading, Berkshire",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "41",
    "question": "Which magazine's editor is married to Crystal Harris?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Crystal_Harris> . ?uri <http://dbpedia.org/property/editor> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/spouse",
    "predicate1_mention": "married",
    "predicate2_uri": "http://dbpedia.org/property/editor",
    "predicate2_mention": "editor",
    "type_uri": "http://dbpedia.org/ontology/Magazine",
    "type_mention": "magazine's",
    "entity1_uri": "http://dbpedia.org/resource/Crystal_Harris",
    "entity1_mention": "Crystal Harris",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "42",
    "question": "Does the west thurrock come under Essex county?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/West_Thurrock> <http://dbpedia.org/ontology/ceremonialCounty> <http://dbpedia.org/resource/Essex> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/ceremonialCounty",
    "predicate1_mention": "county",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/West_Thurrock",
    "entity1_mention": "west thurrock",
    "entity2_uri": "http://dbpedia.org/resource/Essex",
    "entity2_mention": "essex"
},
{
    "id": "43",
    "question": "How many people have headed organizations headquartered at Niederkirchnerstrae?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Niederkirchnerstra\u00dfe> . ?x <http://dbpedia.org/ontology/leader> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/headquarter",
    "predicate1_mention": "headquartered",
    "predicate2_uri": "http://dbpedia.org/ontology/leader",
    "predicate2_mention": "headed",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Niederkirchnerstra\u00dfe",
    "entity1_mention": "Niederkirchnerstrae",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "44",
    "question": "In which television shows have Steven Moffat served as an executive producer?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Steven_Moffat>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/executiveProducer",
    "predicate1_mention": "executive producer",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "television shows",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Steven_Moffat",
    "entity1_mention": "steven moffat",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "45",
    "question": "Which shareholder of Dagenham wind turbines is also the parent company of the Ford Falcon Cobra?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Falcon_Cobra> <http://dbpedia.org/ontology/parentCompany> ?uri. <http://dbpedia.org/resource/Dagenham_wind_turbines> <http://dbpedia.org/property/owner> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/parentCompany",
    "predicate1_mention": "parent company",
    "predicate2_uri": "http://dbpedia.org/property/owner",
    "predicate2_mention": "shareholder",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ford_Falcon_Cobra",
    "entity1_mention": "Ford Falcon Cobra",
    "entity2_uri": "http://dbpedia.org/resource/Dagenham_wind_turbines",
    "entity2_mention": "Dagenham wind turbines"
},
{
    "id": "46",
    "question": "What are the airlines whose hub is San Francisco International Airport?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/hubs> <http://dbpedia.org/resource/San_Francisco_International_Airport>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/hubs",
    "predicate1_mention": "hub",
    "predicate2_uri": "http://dbpedia.org/ontology/Airline",
    "predicate2_mention": "airlines",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/San_Francisco_International_Airport",
    "entity1_mention": "San Francisco International Airport",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "47",
    "question": "Where can I find things run by the maritime museum of San Diego?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/Maritime_Museum_of_San_Diego> . ?x <http://dbpedia.org/property/location> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/governingBody",
    "predicate1_mention": "run by",
    "predicate2_uri": "http://dbpedia.org/property/location",
    "predicate2_mention": "Where",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Maritime_Museum_of_San_Diego",
    "entity1_mention": "maritime museum of San Diego",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "48",
    "question": "What is the local authority of the Trinity School, Brentwood and place of birth of the Sarah Walker (badminton) ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Trinity_School,_Brentwood> <http://dbpedia.org/ontology/localAuthority> ?uri. <http://dbpedia.org/resource/Sarah_Walker_(badminton)> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/localAuthority",
    "predicate1_mention": "local authority",
    "predicate2_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate2_mention": "place of birth",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Trinity_School,_Brentwood",
    "entity1_mention": "Trinity School, Brentwood",
    "entity2_uri": "http://dbpedia.org/resource/Sarah_Walker_(badminton)",
    "entity2_mention": "Sarah Walker (badminton)"
},
{
    "id": "49",
    "question": "How many services does 21Vianet provide?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/21Vianet> <http://dbpedia.org/property/services> ?uri  . }",
    "sparql_id": "102",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/services",
    "predicate1_mention": "services",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/21Vianet",
    "entity1_mention": "21vianet",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "50",
    "question": "Which planet was discovered by Johann Gottfried and Urbain Le Verrier ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/discoverer> <http://dbpedia.org/resource/Johann_Gottfried_Galle> . ?uri <http://dbpedia.org/ontology/discoverer> <http://dbpedia.org/resource/Urbain_Le_Verrier>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Planet>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/discoverer",
    "predicate1_mention": "discovered by",
    "predicate2_uri":"" ,
    "predicate2_mention": "planet",
    "type_uri": "http://dbpedia.org/ontology/Planet",
    "type_mention": "planet",
    "entity1_uri": "http://dbpedia.org/resource/Johann_Gottfried_Galle",
    "entity1_mention": "Johann Gottfried",
    "entity2_uri": "http://dbpedia.org/resource/Urbain_Le_Verrier",
    "entity2_mention": "Urbain Le Verrier"
},
{
    "id": "51",
    "question": "where did the office holder died  who is successor to Elmer Burkett ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Elmer_Burkett> . ?x <http://dbpedia.org/property/deathPlace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "http://dbpedia.org/property/deathPlace",
    "predicate2_mention": "died",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "office holder",
    "entity1_uri": "http://dbpedia.org/resource/Elmer_Burkett",
    "entity1_mention": "Elmer Burkett",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "52",
    "question": "Name the team for which Hensley Meulens played, which was also the debut team od Steve Ontiveros ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Steve_Ontiveros_(infielder)> <http://dbpedia.org/property/debutteam> ?uri. <http://dbpedia.org/resource/Hensley_Meulens> <http://dbpedia.org/ontology/team> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/debutteam",
    "predicate1_mention": "debut team",
    "predicate2_uri": "http://dbpedia.org/ontology/team",
    "predicate2_mention": "team",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Steve_Ontiveros_(infielder)",
    "entity1_mention": "od Steve Ontiveros",
    "entity2_uri": "http://dbpedia.org/resource/Hensley_Meulens",
    "entity2_mention": "Hensley Meulens"
},
{
    "id": "53",
    "question": "List the actors of  Lucy Sullivan Is Getting Married?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lucy_Sullivan_Is_Getting_Married> <http://dbpedia.org/property/starring> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/starring",
    "predicate1_mention": "actors of",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lucy_Sullivan_Is_Getting_Married",
    "entity1_mention": "Lucy Sullivan Is Getting Married",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "54",
    "question": "Name the island with archipelago as Society Islands and has the largest city named Faaa ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Faaa> . ?uri <http://dbpedia.org/property/archipelago> <http://dbpedia.org/resource/Society_Islands>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Island>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/largestCity",
    "predicate1_mention": "largest city",
    "predicate2_uri": "http://dbpedia.org/property/archipelago",
    "predicate2_mention": "archipelago",
    "type_uri": "http://dbpedia.org/ontology/Island",
    "type_mention": "island",
    "entity1_uri": "http://dbpedia.org/resource/Faaa",
    "entity1_mention": "faaa",
    "entity2_uri": "http://dbpedia.org/resource/Society_Islands",
    "entity2_mention": "society islands"
},
{
    "id": "56",
    "question": "Who appointed the governor under whom Richard Winn served?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Richard_Winn> <http://dbpedia.org/ontology/governor> ?x . ?x <http://dbpedia.org/property/appointer> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/governor",
    "predicate1_mention": "governor",
    "predicate2_uri": "http://dbpedia.org/property/appointer",
    "predicate2_mention": "appointed",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Richard_Winn",
    "entity1_mention": "richard winn",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "57",
    "question": "What company involved in the development of Sherlock did Arthur Levinson work for?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arthur_D._Levinson> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/Sherlock_(software)> <http://dbpedia.org/ontology/developer> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/occupation",
    "predicate1_mention": "work for",
    "predicate2_uri": "http://dbpedia.org/ontology/developer",
    "predicate2_mention": "development",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Arthur_D._Levinson",
    "entity1_mention": "Arthur Levinson",
    "entity2_uri": "http://dbpedia.org/resource/Sherlock_(software)",
    "entity2_mention": "sherlock"
},
{
    "id": "58",
    "question": "Which tenants of the Master Card center is also th draft team of Sam Carrick ",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/MasterCard_Centre> <http://dbpedia.org/property/tenants> ?uri. <http://dbpedia.org/resource/Sam_Carrick> <http://dbpedia.org/property/draftTeam> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/tenants",
    "predicate1_mention": "tenants",
    "predicate2_uri": "http://dbpedia.org/property/draftTeam",
    "predicate2_mention": "draft team",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/MasterCard_Centre",
    "entity1_mention": "Master Card center",
    "entity2_uri": "http://dbpedia.org/resource/Sam_Carrick",
    "entity2_mention": "Sam Carrick"
},
{
    "id": "59",
    "question": "Who produced the TV shows for Fremantle Media?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/company> <http://dbpedia.org/resource/FremantleMedia> . ?x <http://dbpedia.org/ontology/producer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/company",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/producer",
    "predicate2_mention": "produced",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "TV shows",
    "entity1_uri": "http://dbpedia.org/resource/FremantleMedia",
    "entity1_mention": "fremantle media",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "60",
    "question": "What is the style of architecture of South Loop Printing House District ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Loop_Printing_House_District> <http://dbpedia.org/ontology/architecturalStyle> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/architecturalStyle",
    "predicate1_mention": "style of architecture",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/South_Loop_Printing_House_District",
    "entity1_mention": "South Loop Printing House District",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "61",
    "question": "Whose provides the service of  Outlook and also products  such as Visual Studio?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Outlook.com> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Microsoft_Visual_Studio>  . }",
    "sparql_id": "8",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/services",
    "predicate1_mention": "service",
    "predicate2_uri": "http://dbpedia.org/property/products",
    "predicate2_mention": "products",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Outlook.com",
    "entity1_mention": "outlook",
    "entity2_uri": "http://dbpedia.org/resource/Microsoft_Visual_Studio",
    "entity2_mention": "visual studio"
},
{
    "id": "63",
    "question": "What is the nationality of Newin Chidchob ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Newin_Chidchob> <http://dbpedia.org/property/nationality> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/nationality",
    "predicate1_mention": "nationality",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Newin_Chidchob",
    "entity1_mention": "Newin Chidchob",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "65",
    "question": "Was Ganymede discovered by Galileo Galilei?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ganymede_(moon)> <http://dbpedia.org/property/discoverer> <http://dbpedia.org/resource/Galileo_Galilei> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/discoverer",
    "predicate1_mention": "discovered",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ganymede_(moon)",
    "entity1_mention": "ganymede",
    "entity2_uri": "http://dbpedia.org/resource/Galileo_Galilei",
    "entity2_mention": "galileo galilei"
},
{
    "id": "67",
    "question": "What are the awards won by the producer of Elizabeth: The Golden Age?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elizabeth:_The_Golden_Age_(soundtrack)> <http://dbpedia.org/property/producer> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/producer",
    "predicate1_mention": "producer",
    "predicate2_uri": "http://dbpedia.org/property/awards",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Elizabeth:_The_Golden_Age_(soundtrack)",
    "entity1_mention": "Elizabeth: The Golden Age",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "68",
    "question": "With what company is the service OneDrive associated?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/OneDrive>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/services",
    "predicate1_mention": "service",
    "predicate2_uri": "http://dbpedia.org/ontology/Company",
    "predicate2_mention": "company",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/OneDrive",
    "entity1_mention": "onedrive",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "69",
    "question": "Name the university whose affiliations's foundation place is Washington, D.C.?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Washington,_D.C.> . ?uri <http://dbpedia.org/property/affiliations> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/foundationPlace",
    "predicate1_mention": "foundation place",
    "predicate2_uri": "http://dbpedia.org/property/affiliations",
    "predicate2_mention": "affiliations's",
    "type_uri": "http://dbpedia.org/ontology/University",
    "type_mention": "university",
    "entity1_uri": "http://dbpedia.org/resource/Washington,_D.C.",
    "entity1_mention": "washington, d.c.",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "70",
    "question": "Name presidents of the schools which have queen noor of Jordan as one of them ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/president> <http://dbpedia.org/resource/Queen_Noor_of_Jordan> . ?x <http://dbpedia.org/property/president> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/president",
    "predicate1_mention": "presidents",
    "predicate2_uri": "http://dbpedia.org/property/president",
    "predicate2_mention": "presidents",
    "type_uri": "http://dbpedia.org/ontology/School",
    "type_mention": "schools",
    "entity1_uri": "http://dbpedia.org/resource/Queen_Noor_of_Jordan",
    "entity1_mention": "queen noor of Jordan",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "71",
    "question": "Who appointed the governor under which Robert Witherspoon worked?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Witherspoon> <http://dbpedia.org/ontology/governor> ?x . ?x <http://dbpedia.org/property/appointer> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/governor",
    "predicate1_mention": "governor",
    "predicate2_uri": "http://dbpedia.org/property/appointer",
    "predicate2_mention": "appointed",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Robert_Witherspoon",
    "entity1_mention": "Robert Witherspoon",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "72",
    "question": "Who is the producer of the song which is the previous work of He's a Liar ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/He's_a_Liar> <http://dbpedia.org/ontology/previousWork> ?x . ?x <http://dbpedia.org/ontology/producer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/previousWork",
    "predicate1_mention": "previous work",
    "predicate2_uri": "http://dbpedia.org/ontology/producer",
    "predicate2_mention": "producer",
    "type_uri": "http://dbpedia.org/ontology/Song",
    "type_mention": "song",
    "entity1_uri": "http://dbpedia.org/resource/He's_a_Liar",
    "entity1_mention": "He's a Liar",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "73",
    "question": "List the base currency of the country whose anthem is Oj, svijetla majska zoro.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/anthem> <http://dbpedia.org/resource/Oj,_svijetla_majska_zoro> . ?x <http://dbpedia.org/property/currency> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/anthem",
    "predicate1_mention": "anthem",
    "predicate2_uri": "http://dbpedia.org/property/currency",
    "predicate2_mention": "currency",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Oj,_svijetla_majska_zoro",
    "entity1_mention": "Oj, svijetla majska zoro",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "74",
    "question": "Who gave the voice for Allen Walker ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Allen_Walker> <http://dbpedia.org/ontology/voice> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/voice",
    "predicate1_mention": "voice",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Allen_Walker",
    "entity1_mention": "Allen Walker",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "75",
    "question": "Who is associated to Publius Servilius Vatia Isauricus  and Marcus Calpurnius Bibulus?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/associate> <http://dbpedia.org/resource/Publius_Servilius_Vatia_Isauricus_(consul_48_BC)> . ?uri <http://dbpedia.org/ontology/associate> <http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/associate",
    "predicate1_mention": "associated",
    "predicate2_uri": "http://dbpedia.org/ontology/associate",
    "predicate2_mention": "associated",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Publius_Servilius_Vatia_Isauricus_(consul_48_BC)",
    "entity1_mention": "Publius Servilius Vatia Isauricus",
    "entity2_uri": "http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus",
    "entity2_mention": "Marcus Calpurnius Bibulus"
},
{
    "id": "76",
    "question": "Which country has given citizenship to both saima chowdhury and edmund john?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Saima_Chowdhury> <http://dbpedia.org/ontology/citizenship> ?uri. <http://dbpedia.org/resource/Edmund_John> <http://dbpedia.org/ontology/citizenship> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/citizenship",
    "predicate1_mention": "citizenship",
    "predicate2_uri": "http://dbpedia.org/ontology/citizenship",
    "predicate2_mention": "citizenship",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Saima_Chowdhury",
    "entity1_mention": "saima chowdhury",
    "entity2_uri": "http://dbpedia.org/resource/Edmund_John",
    "entity2_mention": "edmund john"
},
{
    "id": "78",
    "question": "What university campuses are situated in Indiana?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Indiana>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/campus",
    "predicate1_mention": "campuses",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/University",
    "type_mention": "university",
    "entity1_uri": "http://dbpedia.org/resource/Indiana",
    "entity1_mention": "indiana",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "79",
    "question": "Where is the swedish covenant hospital?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Swedish_Covenant_Hospital> <http://dbpedia.org/ontology/location> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/location",
    "predicate1_mention": "Where",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Swedish_Covenant_Hospital",
    "entity1_mention": "swedish covenant hospital",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "80",
    "question": "Which composer of Girl from the North Country is the subsequent work of the Moondog Matinee?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Girl_from_the_North_Country> <http://dbpedia.org/ontology/composer> ?uri. <http://dbpedia.org/resource/Moondog_Matinee> <http://dbpedia.org/ontology/subsequentWork> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/composer",
    "predicate1_mention": "composer",
    "predicate2_uri": "http://dbpedia.org/ontology/subsequentWork",
    "predicate2_mention": "subsequent work",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Girl_from_the_North_Country",
    "entity1_mention": "Girl from the North Country",
    "entity2_uri": "http://dbpedia.org/resource/Moondog_Matinee",
    "entity2_mention": "moondog matinee"
},
{
    "id": "81",
    "question": "What is the television show whose vocals are performed by  April Stewart and Mona Marshall?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/April_Stewart> . ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Mona_Marshall> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/voices",
    "predicate1_mention": "vocals",
    "predicate2_uri": "http://dbpedia.org/property/voices",
    "predicate2_mention": "vocals",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television show",
    "entity1_uri": "http://dbpedia.org/resource/April_Stewart",
    "entity1_mention": "April Stewart",
    "entity2_uri": "http://dbpedia.org/resource/Mona_Marshall",
    "entity2_mention": "Mona Marshall"
},
{
    "id": "82",
    "question": "Name the members of  boards of Freedom of the City and Trinity House?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Freedom_of_the_City> . ?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Trinity_House> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/board",
    "predicate1_mention": "boards",
    "predicate2_uri": "http://dbpedia.org/ontology/board",
    "predicate2_mention": "boards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Freedom_of_the_City",
    "entity1_mention": "Freedom of the City",
    "entity2_uri": "http://dbpedia.org/resource/Trinity_House",
    "entity2_mention": "trinity house"
},
{
    "id": "83",
    "question": "Was Reza Amrollahi born in Iran?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Reza_Amrollahi> <http://dbpedia.org/property/birthplace> <http://dbpedia.org/resource/Iran> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/birthplace",
    "predicate1_mention": "born",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Reza_Amrollahi",
    "entity1_mention": "Reza Amrollahi",
    "entity2_uri": "http://dbpedia.org/resource/Iran",
    "entity2_mention": "iran"
},
{
    "id": "84",
    "question": "Which title of Zaman Shah Durrani is also the nationality of Salahuddin ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Zaman_Shah_Durrani> <http://dbpedia.org/property/title> ?uri. <http://dbpedia.org/resource/Salahuddin_Rabbani> <http://dbpedia.org/ontology/nationality> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/title",
    "predicate1_mention": "title",
    "predicate2_uri": "http://dbpedia.org/ontology/nationality",
    "predicate2_mention": "nationality",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Zaman_Shah_Durrani",
    "entity1_mention": "Zaman Shah Durrani",
    "entity2_uri": "http://dbpedia.org/resource/Salahuddin_Rabbani",
    "entity2_mention": "salahuddin"
},
{
    "id": "85",
    "question": "In which war did Roh Tae Woo and Lee Leffingwell fight?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Roh_Tae-woo> <http://dbpedia.org/ontology/battle> ?uri. <http://dbpedia.org/resource/Lee_Leffingwell> <http://dbpedia.org/ontology/battle> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/battle",
    "predicate1_mention": "war",
    "predicate2_uri": "http://dbpedia.org/ontology/battle",
    "predicate2_mention": "war",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Roh_Tae-woo",
    "entity1_mention": "Roh Tae Woo",
    "entity2_uri": "http://dbpedia.org/resource/Lee_Leffingwell",
    "entity2_mention": "Lee Leffingwell"
},
{
    "id": "86",
    "question": "list  the producer of the movies in which Rosemarie DeWitt in the star cast?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Rosemarie_DeWitt> . ?x <http://dbpedia.org/property/producer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/starring",
    "predicate1_mention": "star",
    "predicate2_uri": "http://dbpedia.org/property/producer",
    "predicate2_mention": "producer",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Rosemarie_DeWitt",
    "entity1_mention": "rosemarie dewitt",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "87",
    "question": "What can be cooked out of things belonging to the order Sapindales?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Sapindales> . ?uri <http://dbpedia.org/ontology/ingredient> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/order",
    "predicate1_mention": "order",
    "predicate2_uri": "http://dbpedia.org/ontology/ingredient",
    "predicate2_mention": "things",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sapindales",
    "entity1_mention": "sapindales",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "88",
    "question": "How many  TV shows were made by someone who was associated with Lewis Hamilton?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Lewis_Hamilton> . ?uri <http://dbpedia.org/property/creator> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedBand",
    "predicate1_mention": "associated",
    "predicate2_uri": "http://dbpedia.org/property/creator",
    "predicate2_mention": "made",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "TV shows",
    "entity1_uri": "http://dbpedia.org/resource/Lewis_Hamilton",
    "entity1_mention": "Lewis Hamilton",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "89",
    "question": "What is the city whose mayor is Giorgos Kaminis?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mayor> <http://dbpedia.org/resource/Giorgos_Kaminis>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/mayor",
    "predicate1_mention": "mayor",
    "predicate2_uri": "http://dbpedia.org/ontology/AdministrativeRegion",
    "predicate2_mention": "city",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Giorgos_Kaminis",
    "entity1_mention": "Giorgos Kaminis",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "90",
    "question": "Name the alma mater of Michael hahn ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Hahn> <http://dbpedia.org/ontology/almaMater> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate1_mention": "alma mater",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Michael_Hahn",
    "entity1_mention": "michael hahn",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "91",
    "question": "How many party leaders are there whose parties are headquartered in Berlin?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Berlin> . ?x <http://dbpedia.org/ontology/leader> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/headquarter",
    "predicate1_mention": "headquartered",
    "predicate2_uri": "http://dbpedia.org/ontology/leader",
    "predicate2_mention": "leaders",
    "type_uri": "http://dbpedia.org/ontology/Politician",
    "type_mention": "party leaders",
    "entity1_uri": "http://dbpedia.org/resource/Berlin",
    "entity1_mention": "berlin",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "92",
    "question": "How many total religions are followed by people whose hometown is somewhere in India?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/India> . ?x <http://dbpedia.org/property/religion> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/hometown",
    "predicate1_mention": "hometown",
    "predicate2_uri": "http://dbpedia.org/property/religion",
    "predicate2_mention": "religions",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/India",
    "entity1_mention": "india",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "93",
    "question": "Who are the cast members of The Simpsons Ride?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Simpsons_Ride> <http://dbpedia.org/property/starring> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/starring",
    "predicate1_mention": "cast members",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Simpsons_Ride",
    "entity1_mention": "The Simpsons Ride",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "95",
    "question": "What woman acted in the mating habits of earthbound humans and is often associated with Mams taylor?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Mating_Habits_of_the_Earthbound_Human> <http://dbpedia.org/property/starring> ?uri. <http://dbpedia.org/resource/Mams_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/starring",
    "predicate1_mention": "acted",
    "predicate2_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
    "predicate2_mention": "associated",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Mating_Habits_of_the_Earthbound_Human",
    "entity1_mention": "the mating habits of earthbound humans",
    "entity2_uri": "http://dbpedia.org/resource/Mams_Taylor",
    "entity2_mention": "Mams taylor"
},
{
    "id": "96",
    "question": "List the products of Playboy Enterprises?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Playboy_Enterprises> <http://dbpedia.org/property/products> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/products",
    "predicate1_mention": "products",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Playboy_Enterprises",
    "entity1_mention": "Playboy Enterprises",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "97",
    "question": "Did Gwo Ka originate in Western Africa?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Gwo_ka> <http://dbpedia.org/property/stylisticOrigins> <http://dbpedia.org/resource/West_Africa> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/stylisticOrigins",
    "predicate1_mention": "originate",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Gwo_ka",
    "entity1_mention": "gwo ka",
    "entity2_uri": "http://dbpedia.org/resource/West_Africa",
    "entity2_mention": "Western Africa"
},
{
    "id": "99",
    "question": "Which company has a product named Visual Studio and One Drive as service ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/OneDrive> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Microsoft_Visual_Studio>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/services",
    "predicate1_mention": "service",
    "predicate2_uri": "http://dbpedia.org/property/products",
    "predicate2_mention": "product",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "company",
    "entity1_uri": "http://dbpedia.org/resource/OneDrive",
    "entity1_mention": "One Drive",
    "entity2_uri": "http://dbpedia.org/resource/Microsoft_Visual_Studio",
    "entity2_mention": "visual studio"
},
{
    "id": "100",
    "question": "Give me the total number of commander of the military conflicts whose commander is Roundhead (Wyandot).",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Roundhead_(Wyandot)> . ?x <http://dbpedia.org/ontology/commander> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/commander",
    "predicate1_mention": "commander",
    "predicate2_uri": "http://dbpedia.org/ontology/commander",
    "predicate2_mention": "commander",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Roundhead_(Wyandot)",
    "entity1_mention": "Roundhead (Wyandot).",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "101",
    "question": "Who is the player who plays for the team that has the Michigan Stadium?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/stadium> <http://dbpedia.org/resource/Michigan_Stadium> . ?uri <http://dbpedia.org/property/currentteam> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/stadium",
    "predicate1_mention": "stadium",
    "predicate2_uri": "http://dbpedia.org/property/currentteam",
    "predicate2_mention": "team",
    "type_uri": "http://dbpedia.org/ontology/Athlete",
    "type_mention": "player",
    "entity1_uri": "http://dbpedia.org/resource/Michigan_Stadium",
    "entity1_mention": "michigan stadium",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "102",
    "question": "Which country's leader is David Johnston?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/David_Johnston>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/leader",
    "predicate1_mention": "leader",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Country",
    "type_mention": "country's",
    "entity1_uri": "http://dbpedia.org/resource/David_Johnston",
    "entity1_mention": "David Johnston",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "103",
    "question": "How many factions have fought in wars where Francois Marie Le Marchand de Lignery was involved?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Fran\u00e7ois-Marie_Le_Marchand_de_Lignery> <http://dbpedia.org/ontology/battle> ?x . ?x <http://dbpedia.org/property/combatant> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "sparql_id": "403",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/battle",
    "predicate1_mention": "fought",
    "predicate2_uri": "http://dbpedia.org/property/combatant",
    "predicate2_mention": "wars",
    "type_uri": "http://dbpedia.org/ontology/MilitaryConflict",
    "type_mention": "fought",
    "entity1_uri": "http://dbpedia.org/resource/Fran\u00e7ois-Marie_Le_Marchand_de_Lignery",
    "entity1_mention": "Francois Marie Le Marchand de Lignery",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "104",
    "question": "Who is the leader of the town where the Myntdu river originates?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Myntdu_River> <http://dbpedia.org/ontology/origin> ?x . ?x <http://dbpedia.org/ontology/leaderName> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/origin",
    "predicate1_mention": "originates",
    "predicate2_uri": "http://dbpedia.org/ontology/leaderName",
    "predicate2_mention": "leader",
    "type_uri": "http://dbpedia.org/ontology/Town",
    "type_mention": "town",
    "entity1_uri": "http://dbpedia.org/resource/Myntdu_River",
    "entity1_mention": "myntdu river",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "105",
    "question": "List the movies whose editors are born in London.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/London> . ?uri <http://dbpedia.org/ontology/editing> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate1_mention": "born",
    "predicate2_uri": "http://dbpedia.org/ontology/editing",
    "predicate2_mention": "editors",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/London",
    "entity1_mention": "London",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "106",
    "question": "What is the incumbent of the Al Gore presidential campaign, 2000 and also the president of the Ann Lewis ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Al_Gore_presidential_campaign,_2000> <http://dbpedia.org/ontology/incumbent> ?uri. <http://dbpedia.org/resource/Ann_Lewis> <http://dbpedia.org/ontology/president> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/incumbent",
    "predicate1_mention": "incumbent",
    "predicate2_uri": "http://dbpedia.org/ontology/president",
    "predicate2_mention": "president",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Al_Gore_presidential_campaign,_2000",
    "entity1_mention": "Al Gore presidential campaign, 2000",
    "entity2_uri": "http://dbpedia.org/resource/Ann_Lewis",
    "entity2_mention": "Ann Lewis"
},
{
    "id": "107",
    "question": "Which royal person married the successor of Darius I?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Darius_I> . ?uri <http://dbpedia.org/property/spouse> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/predecessor",
    "predicate1_mention": "successor",
    "predicate2_uri": "http://dbpedia.org/property/spouse",
    "predicate2_mention": "married",
    "type_uri": "http://dbpedia.org/ontology/Royalty",
    "type_mention": "royal person",
    "entity1_uri": "http://dbpedia.org/resource/Darius_I",
    "entity1_mention": "Darius I",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "108",
    "question": "What is the region of the Kim Sawchuk which is also served by the Airtours International Airways ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kim_Sawchuk> <http://dbpedia.org/property/region> ?uri. <http://dbpedia.org/resource/Airtours_International_Airways> <http://dbpedia.org/property/destinations> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/region",
    "predicate1_mention": "region",
    "predicate2_uri": "http://dbpedia.org/property/destinations",
    "predicate2_mention": "served by",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kim_Sawchuk",
    "entity1_mention": "Kim Sawchuk",
    "entity2_uri": "http://dbpedia.org/resource/Airtours_International_Airways",
    "entity2_mention": "Airtours International Airways"
},
{
    "id": "109",
    "question": "Where was Antonio Giannini born?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Antonio_Giannini> <http://dbpedia.org/ontology/birthPlace> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate1_mention": "born",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Antonio_Giannini",
    "entity1_mention": "Antonio Giannini",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "110",
    "question": "Where was David Scherman trained ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/David_Scherman> <http://dbpedia.org/ontology/training> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/training",
    "predicate1_mention": "trained",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/David_Scherman",
    "entity1_mention": "David Scherman",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "111",
    "question": "Which company offer service of Outlook.com and OneDrive?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Outlook.com> . ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/OneDrive> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/services",
    "predicate1_mention": "service",
    "predicate2_uri": "http://dbpedia.org/property/services",
    "predicate2_mention": "service",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "company",
    "entity1_uri": "http://dbpedia.org/resource/Outlook.com",
    "entity1_mention": "outlook.com",
    "entity2_uri": "http://dbpedia.org/resource/OneDrive",
    "entity2_mention": "onedrive"
},
{
    "id": "112",
    "question": "What is the province of Rouen Business School ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rouen_Business_School> <http://dbpedia.org/property/province> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/province",
    "predicate1_mention": "province",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Rouen_Business_School",
    "entity1_mention": "Rouen Business School",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "113",
    "question": "What religions do politicians in the Korean Minjoo Party follow?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Minjoo_Party_of_Korea> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/party",
    "predicate1_mention": "party",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religions",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "politicians",
    "entity1_uri": "http://dbpedia.org/resource/Minjoo_Party_of_Korea",
    "entity1_mention": "Korean Minjoo Party",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "115",
    "question": "What were the major actions taken by the politicians living in Gales Ferry, Connecticut?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Gales_Ferry,_Connecticut> . ?x <http://dbpedia.org/ontology/battle> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/residence",
    "predicate1_mention": "living in",
    "predicate2_uri": "http://dbpedia.org/ontology/battle",
    "predicate2_mention": "actions",
    "type_uri": "http://dbpedia.org/ontology/Politician",
    "type_mention": "politicians",
    "entity1_uri": "http://dbpedia.org/resource/Gales_Ferry,_Connecticut",
    "entity1_mention": "Gales Ferry, Connecticut",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "118",
    "question": "Name the sea with Helsinki as one of the shore city and is also an outflow for Danish straits?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Helsinki> . ?uri <http://dbpedia.org/property/outflow> <http://dbpedia.org/resource/Danish_straits>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/cities",
    "predicate1_mention": "city",
    "predicate2_uri": "http://dbpedia.org/property/outflow",
    "predicate2_mention": "outflow",
    "type_uri": "http://dbpedia.org/ontology/Sea",
    "type_mention": "sea",
    "entity1_uri": "http://dbpedia.org/resource/Helsinki",
    "entity1_mention": "helsinki",
    "entity2_uri": "http://dbpedia.org/resource/Danish_straits",
    "entity2_mention": "Danish straits"
},
{
    "id": "120",
    "question": "What is the district of Fort Heath radar station ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fort_Heath_radar_station> <http://dbpedia.org/property/district> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/district",
    "predicate1_mention": "district",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Fort_Heath_radar_station",
    "entity1_mention": "Fort Heath radar station",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "121",
    "question": "What is the common nickname given both to Harding academy and Lyons township high school?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Harding_Academy_(Memphis)> <http://dbpedia.org/property/nickname> ?uri. <http://dbpedia.org/resource/Lyons_Township_High_School> <http://dbpedia.org/property/nickname> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/nickname",
    "predicate1_mention": "nickname",
    "predicate2_uri": "http://dbpedia.org/property/nickname",
    "predicate2_mention": "nickname",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Harding_Academy_(Memphis)",
    "entity1_mention": "harding academy",
    "entity2_uri": "http://dbpedia.org/resource/Lyons_Township_High_School",
    "entity2_mention": "Lyons township high school"
},
{
    "id": "122",
    "question": "Count all those who've played for the youth club which owns the Rosario, Santa Fe stadium.",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/ground> <http://dbpedia.org/resource/Rosario,_Santa_Fe> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . }",
    "sparql_id": "106",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/ground",
    "predicate1_mention": "stadium",
    "predicate2_uri": "http://dbpedia.org/property/youthclubs",
    "predicate2_mention": "youth club",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Rosario,_Santa_Fe",
    "entity1_mention": "the Rosario, Santa Fe stadium",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "123",
    "question": "What are some families of mammals in the animal kingdom?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/kingdom> <http://dbpedia.org/resource/Animal> . ?x <http://dbpedia.org/ontology/family> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/kingdom",
    "predicate1_mention": "kingdom",
    "predicate2_uri": "http://dbpedia.org/ontology/family",
    "predicate2_mention": "families",
    "type_uri": "http://dbpedia.org/ontology/Mammal",
    "type_mention": "mammals",
    "entity1_uri": "http://dbpedia.org/resource/Animal",
    "entity1_mention": "animal",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "124",
    "question": "What is the profession of the Chris Myers (New Jersey) which is the governing body of Oahu Railway and Land Company ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chris_Myers_(New_Jersey)> <http://dbpedia.org/ontology/profession> ?uri. <http://dbpedia.org/resource/Oahu_Railway_and_Land_Company> <http://dbpedia.org/property/governingBody> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/profession",
    "predicate1_mention": "profession",
    "predicate2_uri": "http://dbpedia.org/property/governingBody",
    "predicate2_mention": "governing body",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Chris_Myers_(New_Jersey)",
    "entity1_mention": "Chris Myers (New Jersey)",
    "entity2_uri": "http://dbpedia.org/resource/Oahu_Railway_and_Land_Company",
    "entity2_mention": "Oahu Railway and Land Company"
},
{
    "id": "128",
    "question": "Did Steve Sampson manage a club of Santa Clara university",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Steve_Sampson> <http://dbpedia.org/ontology/managerClub> <http://dbpedia.org/resource/Santa_Clara_University> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/managerClub",
    "predicate1_mention": "manage a club",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Steve_Sampson",
    "entity1_mention": "Steve Sampson",
    "entity2_uri": "http://dbpedia.org/resource/Santa_Clara_University",
    "entity2_mention": "Santa Clara university"
},
{
    "id": "129",
    "question": "What newspapers's owners is Schibsted",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/owners> <http://dbpedia.org/resource/Schibsted>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/owners",
    "predicate1_mention": "owners",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Newspaper",
    "type_mention": "newspapers's",
    "entity1_uri": "http://dbpedia.org/resource/Schibsted",
    "entity1_mention": "schibsted",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "131",
    "question": "List the name of the soccer clubs whose chairman is Joan Laporta.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Joan_Laporta> . ?x <http://dbpedia.org/property/name> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/chairman",
    "predicate1_mention": "chairman",
    "predicate2_uri": "http://dbpedia.org/property/name",
    "predicate2_mention": "name",
    "type_uri": "http://dbpedia.org/ontology/SoccerClub",
    "type_mention": "soccer clubs",
    "entity1_uri": "http://dbpedia.org/resource/Joan_Laporta",
    "entity1_mention": "Joan Laporta",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "132",
    "question": "List all the layouts of the automobile whose one of the layout is four-wheel-drive layout ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/layout> <http://dbpedia.org/resource/Front-engine,_four-wheel-drive_layout> . ?x <http://dbpedia.org/ontology/layout> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/layout",
    "predicate1_mention": "layouts",
    "predicate2_uri": "http://dbpedia.org/ontology/layout",
    "predicate2_mention": "layout",
    "type_uri": "http://dbpedia.org/ontology/Automobile",
    "type_mention": "automobile",
    "entity1_uri": "http://dbpedia.org/resource/Front-engine,_four-wheel-drive_layout",
    "entity1_mention": "four-wheel-drive layout",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "134",
    "question": "What is the alma mater of the Angela Trusty and Charles Ayres?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Angela_Trusty> <http://dbpedia.org/ontology/almaMater> ?uri. <http://dbpedia.org/resource/Charles_Ayres> <http://dbpedia.org/ontology/almaMater> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate1_mention": "alma mater",
    "predicate2_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate2_mention": "alma mater",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Angela_Trusty",
    "entity1_mention": "Angela Trusty",
    "entity2_uri": "http://dbpedia.org/resource/Charles_Ayres",
    "entity2_mention": "charles ayres"
},
{
    "id": "135",
    "question": "Which band had the members of The Conglomerate, and has made 'Before I let you go'?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Conglomerate_(American_group)> <http://dbpedia.org/property/pastMembers> ?uri. <http://dbpedia.org/resource/Before_I_Let_You_Go> <http://dbpedia.org/ontology/musicalArtist> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/pastMembers",
    "predicate1_mention": "members",
    "predicate2_uri": "http://dbpedia.org/ontology/musicalArtist",
    "predicate2_mention": "band",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Conglomerate_(American_group)",
    "entity1_mention": "The Conglomerate,",
    "entity2_uri": "http://dbpedia.org/resource/Before_I_Let_You_Go",
    "entity2_mention": "'Before I let you go'"
},
{
    "id": "136",
    "question": "What is the birth place of the cast of Lagnacha Dhumdhadaka?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lagnacha_Dhumdhadaka> <http://dbpedia.org/property/starring> ?x . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/starring",
    "predicate1_mention": "cast",
    "predicate2_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate2_mention": "birth place",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lagnacha_Dhumdhadaka",
    "entity1_mention": "Lagnacha Dhumdhadaka",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "138",
    "question": "What is the television show whose theme music composer's home town is El Sobrante, California?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/El_Sobrante,_California> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/hometown",
    "predicate1_mention": "home town",
    "predicate2_uri": "http://dbpedia.org/property/themeMusicComposer",
    "predicate2_mention": "composer's",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television show",
    "entity1_uri": "http://dbpedia.org/resource/El_Sobrante,_California",
    "entity1_mention": "El Sobrante, California",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "139",
    "question": "What  is the Nickname of Daniel O'Regan ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Daniel_O'Regan> <http://dbpedia.org/property/nickname> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/nickname",
    "predicate1_mention": "nickname",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Daniel_O'Regan",
    "entity1_mention": "Daniel O'Regan",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "140",
    "question": "Where are Aureus and Solidus used as currency?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Aureus> . ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Solidus_(coin)> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/currency",
    "predicate1_mention": "currency",
    "predicate2_uri": "http://dbpedia.org/ontology/currency",
    "predicate2_mention": "currency",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Aureus",
    "entity1_mention": "aureus",
    "entity2_uri": "http://dbpedia.org/resource/Solidus_(coin)",
    "entity2_mention": "solidus"
},
{
    "id": "141",
    "question": "Music for what was made by someone who died of a cardiovascular disease?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathCause> <http://dbpedia.org/resource/Cardiovascular_disease> . ?uri <http://dbpedia.org/property/music> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/deathCause",
    "predicate1_mention": "died of",
    "predicate2_uri": "http://dbpedia.org/property/music",
    "predicate2_mention": "music",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Cardiovascular_disease",
    "entity1_mention": "cardiovascular disease",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "142",
    "question": "Is the chestnut white bellied rat a mammal?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Chestnut_white-bellied_rat> <http://dbpedia.org/ontology/class> <http://dbpedia.org/resource/Mammal> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/class",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Chestnut_white-bellied_rat",
    "entity1_mention": "chestnut white bellied rat",
    "entity2_uri": "http://dbpedia.org/resource/Mammal",
    "entity2_mention": "mammal"
},
{
    "id": "144",
    "question": "In how many nations can I find dishes made of Shallot?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Shallot> . ?x <http://dbpedia.org/ontology/country> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/ingredient",
    "predicate1_mention": "made of",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "nations",
    "type_uri": "http://dbpedia.org/ontology/Country",
    "type_mention": "nations",
    "entity1_uri": "http://dbpedia.org/resource/Shallot",
    "entity1_mention": "shallot",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "145",
    "question": "Who are some american football players whose high school is Oktoc, Mississippi?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/highSchool> <http://dbpedia.org/resource/Oktoc,_Mississippi>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/highSchool",
    "predicate1_mention": "high school",
    "predicate2_uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
    "predicate2_mention": "american football players",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Oktoc,_Mississippi",
    "entity1_mention": "Oktoc, Mississippi",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "148",
    "question": "what are some common games played at both Fr Agnel Multipurpose School and Vishwajyot High School?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College> <http://dbpedia.org/ontology/sport> ?uri. <http://dbpedia.org/resource/Vishwajyot_High_School> <http://dbpedia.org/ontology/sport> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/sport",
    "predicate1_mention": "games",
    "predicate2_uri": "http://dbpedia.org/ontology/sport",
    "predicate2_mention": "games",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College",
    "entity1_mention": "Fr Agnel Multipurpose School",
    "entity2_uri": "http://dbpedia.org/resource/Vishwajyot_High_School",
    "entity2_mention": "Vishwajyot High School"
},
{
    "id": "149",
    "question": "Who were all the people in office when bob hawke was the PM?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/primeMinister> <http://dbpedia.org/resource/Bob_Hawke> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/primeMinister",
    "predicate1_mention": "PM",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bob_Hawke",
    "entity1_mention": "bob hawke",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "150",
    "question": "Name some shows whose company is owned by the CBS Corporation?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/owner> <http://dbpedia.org/resource/CBS_Corporation> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/owner",
    "predicate1_mention": "owned",
    "predicate2_uri": "http://dbpedia.org/property/company",
    "predicate2_mention": "company",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "shows",
    "entity1_uri": "http://dbpedia.org/resource/CBS_Corporation",
    "entity1_mention": "CBS Corporation",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "151",
    "question": "Which sports are played at institues in Taguig?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Taguig> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/city",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/sport",
    "predicate2_mention": "sports",
    "type_uri": "http://dbpedia.org/ontology/EducationalInstitution",
    "type_mention": "institues",
    "entity1_uri": "http://dbpedia.org/resource/Taguig",
    "entity1_mention": "taguig",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "152",
    "question": "Joe Hahn is the member of what band?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Joe_Hahn>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/currentMembers",
    "predicate1_mention": "member",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Band",
    "type_mention": "band",
    "entity1_uri": "http://dbpedia.org/resource/Joe_Hahn",
    "entity1_mention": "Joe Hahn",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "153",
    "question": "Name the television show whose distributor is Comedy central and  the character voice is given by Isaac hayes ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Comedy_Central> . ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Isaac_Hayes>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/distributor",
    "predicate1_mention": "distributor",
    "predicate2_uri": "http://dbpedia.org/property/voices",
    "predicate2_mention": "voice",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television show",
    "entity1_uri": "http://dbpedia.org/resource/Comedy_Central",
    "entity1_mention": "Comedy central",
    "entity2_uri": "http://dbpedia.org/resource/Isaac_Hayes",
    "entity2_mention": "isaac hayes"
},
{
    "id": "155",
    "question": "What is the nation of the speedway league where Ikaros Smederna played?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ikaros_Smederna> <http://dbpedia.org/ontology/league> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SpeedwayLeague>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/league",
    "predicate1_mention": "league",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "nation",
    "type_uri": "http://dbpedia.org/ontology/SpeedwayLeague",
    "type_mention": "speedway league",
    "entity1_uri": "http://dbpedia.org/resource/Ikaros_Smederna",
    "entity1_mention": "Ikaros Smederna",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "156",
    "question": "What are the kind of games one can play on windows?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Microsoft_Windows> . ?x <http://dbpedia.org/ontology/genre> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "sparql_id": "605",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/computingPlatform",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/genre",
    "predicate2_mention": "kind of",
    "type_uri": "http://dbpedia.org/ontology/VideoGame",
    "type_mention": "games",
    "entity1_uri": "http://dbpedia.org/resource/Microsoft_Windows",
    "entity1_mention": "windows",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "157",
    "question": "Count the number of sports played by schools which play hockey ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Hockey> . ?x <http://dbpedia.org/ontology/sport> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/sport",
    "predicate1_mention": "sports",
    "predicate2_uri": "http://dbpedia.org/ontology/sport",
    "predicate2_mention": "sports",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hockey",
    "entity1_mention": "hockey",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "158",
    "question": "Who holds stock in the railway lines ending in Washington DC?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/routeEnd> <http://dbpedia.org/resource/Union_Station_(Washington,_D.C.)> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RailwayLine>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/routeEnd",
    "predicate1_mention": "ending",
    "predicate2_uri": "http://dbpedia.org/property/owner",
    "predicate2_mention": "holds stock",
    "type_uri": "http://dbpedia.org/ontology/RailwayLine",
    "type_mention": "railway lines",
    "entity1_uri": "http://dbpedia.org/resource/Union_Station_(Washington,_D.C.)",
    "entity1_mention": "Washington DC",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "159",
    "question": "Where is Temenos Group founded ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Temenos_Group> <http://dbpedia.org/property/foundation> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/foundation",
    "predicate1_mention": "founded",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Temenos_Group",
    "entity1_mention": "temenos group",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "162",
    "question": "What is the common school of Chris Marve and Neria Douglass?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chris_Marve> <http://dbpedia.org/ontology/school> ?uri. <http://dbpedia.org/resource/Neria_Douglass> <http://dbpedia.org/ontology/almaMater> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/school",
    "predicate1_mention": "school",
    "predicate2_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate2_mention": "marve",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Chris_Marve",
    "entity1_mention": "Chris Marve",
    "entity2_uri": "http://dbpedia.org/resource/Neria_Douglass",
    "entity2_mention": "Neria Douglass"
},
{
    "id": "163",
    "question": "In which areas are the radio stations of Monticello, Maine available too?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Monticello,_Maine> . ?x <http://dbpedia.org/property/area> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/city",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/area",
    "predicate2_mention": "areas",
    "type_uri": "http://dbpedia.org/ontology/RadioStation",
    "type_mention": "radio stations",
    "entity1_uri": "http://dbpedia.org/resource/Monticello,_Maine",
    "entity1_mention": "Monticello, Maine available too",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "164",
    "question": "What relegious affiliation of Josiah Idowu-Fearon was canonized by john of Damasucs ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_of_Damascus> <http://dbpedia.org/ontology/canonizedBy> ?uri. <http://dbpedia.org/resource/Josiah_Idowu-Fearon> <http://dbpedia.org/ontology/religion> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/canonizedBy",
    "predicate1_mention": "canonized by",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "relegious",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/John_of_Damascus",
    "entity1_mention": "john of Damasucs",
    "entity2_uri": "http://dbpedia.org/resource/Josiah_Idowu-Fearon",
    "entity2_mention": "Josiah Idowu-Fearon"
},
{
    "id": "165",
    "question": "Name the TV show whose composer is Judy Hart Angelo and company as Paramount Television ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/Judy_Hart_Angelo> . ?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Paramount_Television>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/composer",
    "predicate1_mention": "composer",
    "predicate2_uri": "http://dbpedia.org/property/company",
    "predicate2_mention": "company",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "TV show",
    "entity1_uri": "http://dbpedia.org/resource/Judy_Hart_Angelo",
    "entity1_mention": "Judy Hart Angelo",
    "entity2_uri": "http://dbpedia.org/resource/Paramount_Television",
    "entity2_mention": "Paramount Television"
},
{
    "id": "166",
    "question": "Rivers from which countries flow into the Caspian?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Caspian_Sea> . ?x <http://dbpedia.org/ontology/sourceCountry> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/riverMouth",
    "predicate1_mention": "rivers",
    "predicate2_uri": "http://dbpedia.org/ontology/sourceCountry",
    "predicate2_mention": "countries",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "rivers",
    "entity1_uri": "http://dbpedia.org/resource/Caspian_Sea",
    "entity1_mention": "caspian",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "167",
    "question": "Name the military unit whose garrison is Arlington County, Virginia and command structure is United States Department of Defense?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/garrison> <http://dbpedia.org/resource/Arlington_County,_Virginia> . ?uri <http://dbpedia.org/ontology/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_Defense>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/garrison",
    "predicate1_mention": "garrison",
    "predicate2_uri": "http://dbpedia.org/ontology/commandStructure",
    "predicate2_mention": "command structure",
    "type_uri": "http://dbpedia.org/ontology/MilitaryUnit",
    "type_mention": "military unit",
    "entity1_uri": "http://dbpedia.org/resource/Arlington_County,_Virginia",
    "entity1_mention": "Arlington County, Virginia",
    "entity2_uri": "http://dbpedia.org/resource/United_States_Department_of_Defense",
    "entity2_mention": "United States Department of Defense"
},
{
    "id": "168",
    "question": "Where does the successor of Thongsuk Samdaengpan reside?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thongsuk_Samdaengpan> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/ontology/location> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "http://dbpedia.org/ontology/location",
    "predicate2_mention": "reside",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Thongsuk_Samdaengpan",
    "entity1_mention": "Thongsuk Samdaengpan",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "169",
    "question": "what are some devices made by asus?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Asus>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate1_mention": "made by",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/InformationAppliance",
    "type_mention": "devices",
    "entity1_uri": "http://dbpedia.org/resource/Asus",
    "entity1_mention": "asus",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "170",
    "question": "Count the number of people who graduated from universities affiliated with the NCAA.",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/athletics> <http://dbpedia.org/resource/National_Collegiate_Athletic_Association> . ?uri <http://dbpedia.org/property/education> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/athletics",
    "predicate1_mention": "NCAA",
    "predicate2_uri": "http://dbpedia.org/property/education",
    "predicate2_mention": "graduated",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/National_Collegiate_Athletic_Association",
    "entity1_mention": "NCAA",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "171",
    "question": "Is Queen Latifah associated with Afrika Baby Bam?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Afrika_Baby_Bam> <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Queen_Latifah> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedBand",
    "predicate1_mention": "associated",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Afrika_Baby_Bam",
    "entity1_mention": "afrika baby bam",
    "entity2_uri": "http://dbpedia.org/resource/Queen_Latifah",
    "entity2_mention": "Queen Latifah"
},
{
    "id": "172",
    "question": "Count all that was built by a company whose leader is Kazuo Hirai?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Kazuo_Hirai> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }",
    "sparql_id": "106",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/keyPeople",
    "predicate1_mention": "leader",
    "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate2_mention": "built by",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kazuo_Hirai",
    "entity1_mention": "kazuo hirai",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "173",
    "question": "Name the sports played by PATTS College of Aeronautics?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/PATTS_College_of_Aeronautics> <http://dbpedia.org/property/athletics> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/athletics",
    "predicate1_mention": "aeronautics",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/PATTS_College_of_Aeronautics",
    "entity1_mention": "PATTS College of Aeronautics",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "174",
    "question": "Name the tenant of Ever bank field which has also has player named Dan Shamash ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dan_Shamash> <http://dbpedia.org/ontology/team> ?uri. <http://dbpedia.org/resource/EverBank_Field> <http://dbpedia.org/ontology/tenant> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/team",
    "predicate1_mention": "player",
    "predicate2_uri": "http://dbpedia.org/ontology/tenant",
    "predicate2_mention": "tenant",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Dan_Shamash",
    "entity1_mention": "Dan Shamash",
    "entity2_uri": "http://dbpedia.org/resource/EverBank_Field",
    "entity2_mention": "Ever bank field"
},
{
    "id": "175",
    "question": "Which country did the prime minister belong to who was served by Thanong Bidaya ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thanong_Bidaya> <http://dbpedia.org/property/primeminister> ?x . ?x <http://dbpedia.org/ontology/nationality> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/primeminister",
    "predicate1_mention": "prime minister",
    "predicate2_uri": "http://dbpedia.org/ontology/nationality",
    "predicate2_mention": "country",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Thanong_Bidaya",
    "entity1_mention": "thanong bidaya",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "176",
    "question": "What is the largest city in the country where the San Marcos River originates?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/San_Marcos_River> <http://dbpedia.org/ontology/sourceMountain> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/sourceMountain",
    "predicate1_mention": "originates",
    "predicate2_uri": "http://dbpedia.org/ontology/largestCity",
    "predicate2_mention": "largest city",
    "type_uri": "http://dbpedia.org/ontology/Country",
    "type_mention": "country",
    "entity1_uri": "http://dbpedia.org/resource/San_Marcos_River",
    "entity1_mention": "San Marcos River",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "177",
    "question": "Give a list of all the labels that have jazz fusion artists signed up with them?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Jazz_fusion> . ?x <http://dbpedia.org/ontology/recordLabel> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/genre",
    "predicate1_mention": "signed",
    "predicate2_uri": "http://dbpedia.org/ontology/recordLabel",
    "predicate2_mention": "labels",
    "type_uri": "http://dbpedia.org/ontology/MusicalArtist",
    "type_mention": "artists",
    "entity1_uri": "http://dbpedia.org/resource/Jazz_fusion",
    "entity1_mention": "jazz fusion",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "178",
    "question": "Name the major shrine of Bogumilus?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bogumilus> <http://dbpedia.org/ontology/majorShrine> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/majorShrine",
    "predicate1_mention": "major shrine",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bogumilus",
    "entity1_mention": "bogumilus",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "179",
    "question": "Name the office holder whose predecessor is  Henry E. Catto, Jr. and won Screen Actors Guild Life Achievement Award?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Henry_E._Catto,_Jr.> . ?uri <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/predecessor",
    "predicate1_mention": "predecessor",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "award",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "office holder",
    "entity1_uri": "http://dbpedia.org/resource/Henry_E._Catto,_Jr.",
    "entity1_mention": "Henry E. Catto, Jr.",
    "entity2_uri": "http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award",
    "entity2_mention": "Screen Actors Guild Life Achievement Award"
},
{
    "id": "180",
    "question": "Which holy places did consider Pope Gregory I as a saint?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pope_Gregory_I> <http://dbpedia.org/property/veneratedIn> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/veneratedIn",
    "predicate1_mention": "saint",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Pope_Gregory_I",
    "entity1_mention": "Pope Gregory I as a saint",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "181",
    "question": "List the religion of people in the Cambodian human rights party?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/otherParty> <http://dbpedia.org/resource/Human_Rights_Party_(Cambodia)> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/otherParty",
    "predicate1_mention": "party",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religion",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Human_Rights_Party_(Cambodia)",
    "entity1_mention": "human rights party",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "182",
    "question": "In which teams have league members of the Czech Extraliga played previously?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/Czech_Extraliga> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/league",
    "predicate1_mention": "league",
    "predicate2_uri": "http://dbpedia.org/ontology/formerTeam",
    "predicate2_mention": "teams",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Czech_Extraliga",
    "entity1_mention": "Czech Extraliga",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "183",
    "question": "Count the wars in which people awarded with the Croix de guerre fought.",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Croix_de_guerre_1939\u20131945_(France)> . ?x <http://dbpedia.org/property/battles> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/awards",
    "predicate1_mention": "awarded",
    "predicate2_uri": "http://dbpedia.org/property/battles",
    "predicate2_mention": "wars",
    "type_uri": "http://dbpedia.org/ontology/MilitaryConflict",
    "type_mention": "count",
    "entity1_uri": "http://dbpedia.org/resource/Croix_de_guerre_1939\u20131945_(France)",
    "entity1_mention": "Croix de guerre",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "184",
    "question": "For which clubs do the players of Azam F.C. play for?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Azam_F.C.> <http://dbpedia.org/property/name> ?x . ?x <http://dbpedia.org/ontology/team> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/name",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/team",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/SoccerPlayer",
    "type_mention": "players",
    "entity1_uri": "http://dbpedia.org/resource/Azam_F.C.",
    "entity1_mention": "Azam F.C.",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "185",
    "question": "Which location of  INKAS is also the location of  T.I. Ahmadiyya Senior High School, Kumasi ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/INKAS> <http://dbpedia.org/property/locations> ?uri. <http://dbpedia.org/resource/T.I._Ahmadiyya_Senior_High_School,_Kumasi> <http://dbpedia.org/ontology/denomination> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/locations",
    "predicate1_mention": "location",
    "predicate2_uri": "http://dbpedia.org/ontology/denomination",
    "predicate2_mention": "location",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/INKAS",
    "entity1_mention": "inkas",
    "entity2_uri": "http://dbpedia.org/resource/T.I._Ahmadiyya_Senior_High_School,_Kumasi",
    "entity2_mention": "T.I. Ahmadiyya Senior High School, Kumasi"
},
{
    "id": "186",
    "question": "Who are buried in  Rome and Mausoleum of Augustus?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Rome> . ?uri <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Mausoleum_of_Augustus> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/placeOfBurial",
    "predicate1_mention": "buried",
    "predicate2_uri": "http://dbpedia.org/property/placeOfBurial",
    "predicate2_mention": "buried",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Rome",
    "entity1_mention": "rome",
    "entity2_uri": "http://dbpedia.org/resource/Mausoleum_of_Augustus",
    "entity2_mention": "Mausoleum of Augustus"
},
{
    "id": "187",
    "question": "How many battles have involved commanders of 1st Free French Division?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/1st_Free_French_Division> <http://dbpedia.org/property/notableCommanders> ?x . ?x <http://dbpedia.org/property/battles> ?uri  . }",
    "sparql_id": "103",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/notableCommanders",
    "predicate1_mention": "commanders",
    "predicate2_uri": "http://dbpedia.org/property/battles",
    "predicate2_mention": "battles",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/1st_Free_French_Division",
    "entity1_mention": "1st Free French Division",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "188",
    "question": "Count the number of cities on the Mediterranean Sea?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Mediterranean_Sea> <http://dbpedia.org/property/cities> ?uri  . }",
    "sparql_id": "102",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/cities",
    "predicate1_mention": "cities",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mediterranean_Sea",
    "entity1_mention": "the Mediterranean Sea",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "191",
    "question": "acer nigrum is used in making what?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Acer_nigrum> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/ingredient",
    "predicate1_mention": "making",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Acer_nigrum",
    "entity1_mention": "acer nigrum",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "192",
    "question": "what are some famous people out of the Filipinos?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/stateOfOrigin> <http://dbpedia.org/resource/Filipinos> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/stateOfOrigin",
    "predicate1_mention": "out of",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Filipinos",
    "entity1_mention": "filipinos",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "194",
    "question": "Which executive producer of Into the Dalek also produced Wizards vs Aliens ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Into_the_Dalek> <http://dbpedia.org/property/executiveProducer> ?uri. <http://dbpedia.org/resource/Wizards_vs_Aliens> <http://dbpedia.org/ontology/producer> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/executiveProducer",
    "predicate1_mention": "executive producer",
    "predicate2_uri": "http://dbpedia.org/ontology/producer",
    "predicate2_mention": "producer",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Into_the_Dalek",
    "entity1_mention": "Into the Dalek",
    "entity2_uri": "http://dbpedia.org/resource/Wizards_vs_Aliens",
    "entity2_mention": "Wizards vs Aliens"
},
{
    "id": "195",
    "question": "Who appointed the successor of Charles Pinckney ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charles_Pinckney_(governor)> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/property/appointer> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "http://dbpedia.org/property/appointer",
    "predicate2_mention": "appointed",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Charles_Pinckney_(governor)",
    "entity1_mention": "Charles Pinckney",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "196",
    "question": "Where did they debut their careers , those who have played for US men's national soccer team?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/United_States_men's_national_soccer_team> . ?x <http://dbpedia.org/property/debutteam> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/nationalteam",
    "predicate1_mention": "national soccer team",
    "predicate2_uri": "http://dbpedia.org/property/debutteam",
    "predicate2_mention": "debut",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_States_men's_national_soccer_team",
    "entity1_mention": "US men's national soccer team",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "198",
    "question": "EU Broadcasting Union is the owner of the distributor of what?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/European_Broadcasting_Union> . ?uri <http://dbpedia.org/ontology/distributor> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/owner",
    "predicate1_mention": "owner",
    "predicate2_uri": "http://dbpedia.org/ontology/distributor",
    "predicate2_mention": "distributor",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/European_Broadcasting_Union",
    "entity1_mention": "EU Broadcasting Union",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "199",
    "question": "Was Jack Ryan a nominee of US Senate?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jack_Ryan_(politician)> <http://dbpedia.org/ontology/nominee> <http://dbpedia.org/resource/United_States_Senate> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/nominee",
    "predicate1_mention": "nominee",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jack_Ryan_(politician)",
    "entity1_mention": "Jack Ryan",
    "entity2_uri": "http://dbpedia.org/resource/United_States_Senate",
    "entity2_mention": "US Senate"
},
{
    "id": "203",
    "question": "What is the broadcast area of WBCQ (SW) ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WBCQ_(SW)> <http://dbpedia.org/property/area> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/area",
    "predicate1_mention": "area",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/WBCQ_(SW)",
    "entity1_mention": "WBCQ (SW)",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "204",
    "question": "Who were in the youth clubs that were in season of 2015 Argentine Primera Division?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/season> <http://dbpedia.org/resource/2015_Argentine_Primera_Divisi\u00f3n> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/season",
    "predicate1_mention": "season",
    "predicate2_uri": "http://dbpedia.org/property/youthclubs",
    "predicate2_mention": "youth clubs",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/2015_Argentine_Primera_Divisi\u00f3n",
    "entity1_mention": "2015 Argentine Primera Division",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "205",
    "question": "List the cities which share the same water body as that of Florida ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Florida> . ?x <http://dbpedia.org/property/cities> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BodyOfWater>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/cities",
    "predicate1_mention": "cities",
    "predicate2_uri": "http://dbpedia.org/property/cities",
    "predicate2_mention": "cities",
    "type_uri": "http://dbpedia.org/ontology/BodyOfWater",
    "type_mention": "the same water body as",
    "entity1_uri": "http://dbpedia.org/resource/Florida",
    "entity1_mention": "florida",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "207",
    "question": "What is the name of the movie whose director of photography was Jordan Cronenweth and music composer was Vangelis?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/cinematography> <http://dbpedia.org/resource/Jordan_Cronenweth> . ?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Vangelis>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/cinematography",
    "predicate1_mention": "photography",
    "predicate2_uri": "http://dbpedia.org/ontology/musicComposer",
    "predicate2_mention": "music composer",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movie",
    "entity1_uri": "http://dbpedia.org/resource/Jordan_Cronenweth",
    "entity1_mention": "Jordan Cronenweth",
    "entity2_uri": "http://dbpedia.org/resource/Vangelis",
    "entity2_mention": "vangelis"
},
{
    "id": "208",
    "question": "From how many coutries do companies come, which are headquartered in the Klang Valley?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Klang_Valley> . ?x <http://dbpedia.org/property/country> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/headquarters",
    "predicate1_mention": "headquartered",
    "predicate2_uri": "http://dbpedia.org/property/country",
    "predicate2_mention": "coutries",
    "type_uri": "http://dbpedia.org/ontology/Country",
    "type_mention": "coutries",
    "entity1_uri": "http://dbpedia.org/resource/Klang_Valley",
    "entity1_mention": "Klang Valley",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "209",
    "question": "Who founded the sister stations of Discovery Communications?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/sisterNames> <http://dbpedia.org/resource/Discovery_Communications> . ?x <http://dbpedia.org/property/founder> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/sisterNames",
    "predicate1_mention": "sister",
    "predicate2_uri": "http://dbpedia.org/property/founder",
    "predicate2_mention": "founded",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Discovery_Communications",
    "entity1_mention": "Discovery Communications",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "210",
    "question": "What are the notable works of the person who produced Queer as Folk?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Queer_as_Folk_(UK_TV_series)> <http://dbpedia.org/ontology/producer> ?x . ?x <http://dbpedia.org/property/notableworks> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/producer",
    "predicate1_mention": "produced",
    "predicate2_uri": "http://dbpedia.org/property/notableworks",
    "predicate2_mention": "notable works",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "person",
    "entity1_uri": "http://dbpedia.org/resource/Queer_as_Folk_(UK_TV_series)",
    "entity1_mention": "Queer as Folk",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "211",
    "question": "What are the border of High Desert (Oregon)?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/High_Desert_(Oregon)> <http://dbpedia.org/ontology/border> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/border",
    "predicate1_mention": "border",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/High_Desert_(Oregon)",
    "entity1_mention": "High Desert (Oregon)",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "212",
    "question": "What all is owned by a company one of whose division is Paramount Domestic Television?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/division> <http://dbpedia.org/resource/Paramount_Domestic_Television> . ?uri <http://dbpedia.org/property/company> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/division",
    "predicate1_mention": "division",
    "predicate2_uri": "http://dbpedia.org/property/company",
    "predicate2_mention": "company",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Paramount_Domestic_Television",
    "entity1_mention": "Paramount Domestic Television",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "213",
    "question": " Which musical band produced the subsequent work of City of New Orleans ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/City_of_New_Orleans_(song)> <http://dbpedia.org/ontology/subsequentWork> ?x . ?x <http://dbpedia.org/ontology/musicalBand> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/subsequentWork",
    "predicate1_mention": "subsequent work",
    "predicate2_uri": "http://dbpedia.org/ontology/musicalBand",
    "predicate2_mention": "musical band",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/City_of_New_Orleans_(song)",
    "entity1_mention": "City of New Orleans",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "214",
    "question": "Which parent organization of Get TV also owns the Galleria ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/GetTV> <http://dbpedia.org/ontology/parentOrganisation> ?uri. <http://dbpedia.org/resource/The_Galleria> <http://dbpedia.org/ontology/owner> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/parentOrganisation",
    "predicate1_mention": "parent organization",
    "predicate2_uri": "http://dbpedia.org/ontology/owner",
    "predicate2_mention": "owns",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/GetTV",
    "entity1_mention": "get tv",
    "entity2_uri": "http://dbpedia.org/resource/The_Galleria",
    "entity2_mention": "the Galleria"
},
{
    "id": "215",
    "question": "Which artist of Madagascar: Operation Penguin is also the writer of He's a Pirate ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Madagascar:_Operation_Penguin> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/He's_a_Pirate> <http://dbpedia.org/property/writer> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/artist",
    "predicate1_mention": "artist",
    "predicate2_uri": "http://dbpedia.org/property/writer",
    "predicate2_mention": "writer",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Madagascar:_Operation_Penguin",
    "entity1_mention": "madagascar: operation penguin",
    "entity2_uri": "http://dbpedia.org/resource/He's_a_Pirate",
    "entity2_mention": "He's a Pirate"
},
{
    "id": "216",
    "question": "Where did Goran Cengic die?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Goran_\u010cengi\u0107> <http://dbpedia.org/property/deathPlace> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/deathPlace",
    "predicate1_mention": "die",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Goran_\u010cengi\u0107",
    "entity1_mention": "Goran Cengic",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "217",
    "question": "The authors of Zhorstoke nebo was influenced by whom ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Zhorstoke_nebo> <http://dbpedia.org/ontology/author> ?x . ?x <http://dbpedia.org/ontology/influencedBy> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/author",
    "predicate1_mention": "authors",
    "predicate2_uri": "http://dbpedia.org/ontology/influencedBy",
    "predicate2_mention": "influenced by",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Zhorstoke_nebo",
    "entity1_mention": "zhorstoke nebo",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "218",
    "question": "Name the basketball team which is coached by Louis Dunbar and has president as Jeff Munn ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Louis_Dunbar> . ?uri <http://dbpedia.org/property/president> <http://dbpedia.org/resource/Jeff_Munn>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballTeam>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/coach",
    "predicate1_mention": "coached",
    "predicate2_uri": "http://dbpedia.org/property/president",
    "predicate2_mention": "president",
    "type_uri": "http://dbpedia.org/ontology/BasketballTeam",
    "type_mention": "basketball team",
    "entity1_uri": "http://dbpedia.org/resource/Louis_Dunbar",
    "entity1_mention": "Louis Dunbar",
    "entity2_uri": "http://dbpedia.org/resource/Jeff_Munn",
    "entity2_mention": "Jeff Munn"
},
{
    "id": "219",
    "question": "Who all have rented the stadium whose architect is Populous?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/architect> <http://dbpedia.org/resource/Populous_(company)> . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/architect",
    "predicate1_mention": "architect",
    "predicate2_uri": "http://dbpedia.org/ontology/tenant",
    "predicate2_mention": "rented",
    "type_uri": "http://dbpedia.org/ontology/Stadium",
    "type_mention": "stadium",
    "entity1_uri": "http://dbpedia.org/resource/Populous_(company)",
    "entity1_mention": "populous",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "220",
    "question": "Which body governs over the place made by the chumash people?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/architect> <http://dbpedia.org/resource/Chumash_people> . ?x <http://dbpedia.org/ontology/governingBody> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/architect",
    "predicate1_mention": "made by",
    "predicate2_uri": "http://dbpedia.org/ontology/governingBody",
    "predicate2_mention": "governs",
    "type_uri": "http://dbpedia.org/ontology/Place",
    "type_mention": "place",
    "entity1_uri": "http://dbpedia.org/resource/Chumash_people",
    "entity1_mention": "chumash people",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "221",
    "question": "Which hometown of pavel Moroz is also the palace of birthplace of Helena of Moscow ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pavel_Moroz> <http://dbpedia.org/property/hometown> ?uri. <http://dbpedia.org/resource/Helena_of_Moscow> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/hometown",
    "predicate1_mention": "hometown",
    "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate2_mention": "birthplace",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Pavel_Moroz",
    "entity1_mention": "pavel moroz",
    "entity2_uri": "http://dbpedia.org/resource/Helena_of_Moscow",
    "entity2_mention": "Helena of Moscow"
},
{
    "id": "222",
    "question": "Which TV show developed by J. Michael Stracznski has artist as Christopher Franke ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Christopher_Franke> . ?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/J._Michael_Straczynski>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/artist",
    "predicate1_mention": "artist",
    "predicate2_uri": "http://dbpedia.org/ontology/developer",
    "predicate2_mention": "developed",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "TV show",
    "entity1_uri": "http://dbpedia.org/resource/Christopher_Franke",
    "entity1_mention": "christopher franke",
    "entity2_uri": "http://dbpedia.org/resource/J._Michael_Straczynski",
    "entity2_mention": "J. Michael Stracznski"
},
{
    "id": "226",
    "question": "Who is the performer of album which has the song To Where You Are ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/To_Where_You_Are> <http://dbpedia.org/ontology/album> ?x . ?x <http://dbpedia.org/ontology/artist> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/album",
    "predicate1_mention": "album",
    "predicate2_uri": "http://dbpedia.org/ontology/artist",
    "predicate2_mention": "performer",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/To_Where_You_Are",
    "entity1_mention": "To Where You Are",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "227",
    "question": "Does the merlin express have a hub at the cibano international airport?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Merlin_Express> <http://dbpedia.org/ontology/hubAirport> <http://dbpedia.org/resource/Cibao_International_Airport> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/hubAirport",
    "predicate1_mention": "airport",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Merlin_Express",
    "entity1_mention": "merlin express",
    "entity2_uri": "http://dbpedia.org/resource/Cibao_International_Airport",
    "entity2_mention": "international airport"
},
{
    "id": "228",
    "question": "How many people live in Wilton, Connecticut?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Wilton,_Connecticut>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/residence",
    "predicate1_mention": "live in",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Wilton,_Connecticut",
    "entity1_mention": "Wilton, Connecticut",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "229",
    "question": "For how many different teams have Ontarians been drafted ?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Ontario> . ?x <http://dbpedia.org/ontology/draftTeam> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/draftTeam",
    "predicate2_mention": "drafted",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ontario",
    "entity1_mention": "Ontarians",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "230",
    "question": "Which Fox show is presented by Ryan Seacrest?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Ryan_Seacrest> . ?uri <http://dbpedia.org/property/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/presenter",
    "predicate1_mention": "presented",
    "predicate2_uri": "http://dbpedia.org/property/channel",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "show",
    "entity1_uri": "http://dbpedia.org/resource/Ryan_Seacrest",
    "entity1_mention": "Ryan Seacrest",
    "entity2_uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company",
    "entity2_mention": "Fox"
},
{
    "id": "231",
    "question": "How many rivers are crossed by different Box Girder bridges?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/design> <http://dbpedia.org/resource/Box_girder_bridge> . ?x <http://dbpedia.org/property/crosses> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/design",
    "predicate1_mention": "bridges",
    "predicate2_uri": "http://dbpedia.org/property/crosses",
    "predicate2_mention": "crossed",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "rivers",
    "entity1_uri": "http://dbpedia.org/resource/Box_girder_bridge",
    "entity1_mention": "Box Girder bridges",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "233",
    "question": "What railway lines go through the stations maintained by Western Australian Public Transport Authority?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/owningOrganisation> <http://dbpedia.org/resource/Public_Transport_Authority_(Western_Australia)> . ?x <http://dbpedia.org/ontology/servingRailwayLine> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Station>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/owningOrganisation",
    "predicate1_mention": "stations",
    "predicate2_uri": "http://dbpedia.org/ontology/servingRailwayLine",
    "predicate2_mention": "railway lines",
    "type_uri": "http://dbpedia.org/ontology/Station",
    "type_mention": "stations",
    "entity1_uri": "http://dbpedia.org/resource/Public_Transport_Authority_(Western_Australia)",
    "entity1_mention": "Western Australian Public Transport Authority",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "234",
    "question": "Which label released the movie written by Thomas Meehan?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Thomas_Meehan_(writer)> . ?x <http://dbpedia.org/property/label> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/writer",
    "predicate1_mention": "written",
    "predicate2_uri": "http://dbpedia.org/property/label",
    "predicate2_mention": "label",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movie",
    "entity1_uri": "http://dbpedia.org/resource/Thomas_Meehan_(writer)",
    "entity1_mention": "thomas meehan",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "236",
    "question": "What is the major shrine of Jacques-Dsir Laval ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jacques-D\u00e9sir\u00e9_Laval> <http://dbpedia.org/ontology/majorShrine> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/majorShrine",
    "predicate1_mention": "major shrine",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jacques-D\u00e9sir\u00e9_Laval",
    "entity1_mention": "Jacques-Dsir Laval",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "237",
    "question": "List places that are associated to cities in the state of Mecklenburg-Vorpommern.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/federalState> <http://dbpedia.org/resource/Mecklenburg-Vorpommern> . ?uri <http://dbpedia.org/property/cities> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/federalState",
    "predicate1_mention": "state",
    "predicate2_uri": "http://dbpedia.org/property/cities",
    "predicate2_mention": "cities",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mecklenburg-Vorpommern",
    "entity1_mention": "Mecklenburg-Vorpommern",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "238",
    "question": "What sporting goods companies are located in Herzogenaurach?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Herzogenaurach> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/location",
    "predicate1_mention": "located",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Herzogenaurach",
    "entity1_mention": "herzogenaurach",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "239",
    "question": "Count the number of actors in Lucy Sullivan Is Getting Married.",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Lucy_Sullivan_Is_Getting_Married> <http://dbpedia.org/property/starring> ?uri  . }",
    "sparql_id": "102",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/starring",
    "predicate1_mention": "actors",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lucy_Sullivan_Is_Getting_Married",
    "entity1_mention": "Lucy Sullivan Is Getting Married",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "240",
    "question": "What genre of games are made by Blizzard Entertainment studios?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Blizzard_Entertainment> . ?x <http://dbpedia.org/property/genre> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/developer",
    "predicate1_mention": "made",
    "predicate2_uri": "http://dbpedia.org/property/genre",
    "predicate2_mention": "genre",
    "type_uri": "http://dbpedia.org/ontology/VideoGame",
    "type_mention": "games",
    "entity1_uri": "http://dbpedia.org/resource/Blizzard_Entertainment",
    "entity1_mention": "Blizzard Entertainment studios",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "243",
    "question": "Which sports are played in the alma mater of Amitava Datta?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Amitava_Datta> <http://dbpedia.org/property/almaMater> ?x . ?x <http://dbpedia.org/ontology/sport> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/almaMater",
    "predicate1_mention": "alma mater",
    "predicate2_uri": "http://dbpedia.org/ontology/sport",
    "predicate2_mention": "sports",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Amitava_Datta",
    "entity1_mention": "amitava datta",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "244",
    "question": "To which series does the character of Londo Mollari belong?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Londo_Mollari> <http://dbpedia.org/ontology/series> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/series",
    "predicate1_mention": "series",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Londo_Mollari",
    "entity1_mention": "Londo Mollari",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "245",
    "question": "Count all the scientologists.",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Scientology>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/religion",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Scientology",
    "entity1_mention": "scientologists",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "246",
    "question": "Rashid Behbudov State Song Theatre and Baku Puppet Theatre can be found in which country?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rashid_Behbudov_State_Song_Theatre> <http://dbpedia.org/ontology/locationCountry> ?uri. <http://dbpedia.org/resource/Baku_Puppet_Theatre> <http://dbpedia.org/ontology/locationCountry> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/locationCountry",
    "predicate1_mention": "country",
    "predicate2_uri": "http://dbpedia.org/ontology/locationCountry",
    "predicate2_mention": "country",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Rashid_Behbudov_State_Song_Theatre",
    "entity1_mention": "Rashid Behbudov State Song Theatre",
    "entity2_uri": "http://dbpedia.org/resource/Baku_Puppet_Theatre",
    "entity2_mention": "Baku Puppet Theatre"
},
{
    "id": "247",
    "question": "What is the birthplace of Liudmila Privivkova and Qadir Huseynov ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Liudmila_Privivkova> <http://dbpedia.org/ontology/birthPlace> ?uri. <http://dbpedia.org/resource/Qadir_Huseynov> <http://dbpedia.org/ontology/birthPlace> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate1_mention": "birthplace",
    "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate2_mention": "birthplace",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Liudmila_Privivkova",
    "entity1_mention": "Liudmila Privivkova",
    "entity2_uri": "http://dbpedia.org/resource/Qadir_Huseynov",
    "entity2_mention": "Qadir Huseynov"
},
{
    "id": "248",
    "question": "What is the predecessor of the automobile which is the related of Cadillac Fleetwood?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cadillac_Fleetwood> <http://dbpedia.org/property/related> ?x . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/related",
    "predicate1_mention": "related",
    "predicate2_uri": "http://dbpedia.org/ontology/predecessor",
    "predicate2_mention": "predecessor",
    "type_uri": "http://dbpedia.org/ontology/Automobile",
    "type_mention": "automobile",
    "entity1_uri": "http://dbpedia.org/resource/Cadillac_Fleetwood",
    "entity1_mention": "Cadillac Fleetwood",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "250",
    "question": "List the cast member of the movies whose producer is Mark Johnson.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Mark_Johnson_(producer)> . ?x <http://dbpedia.org/ontology/starring> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/producer",
    "predicate1_mention": "producer",
    "predicate2_uri": "http://dbpedia.org/ontology/starring",
    "predicate2_mention": "mark",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Mark_Johnson_(producer)",
    "entity1_mention": "Mark Johnson",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "251",
    "question": "Under which archipelago does Canary Islands fall?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/archipelago> <http://dbpedia.org/resource/Canary_Islands> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/archipelago",
    "predicate1_mention": "archipelago",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Canary_Islands",
    "entity1_mention": "Canary Islands",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "252",
    "question": "In how many  territories were the wars fought where Fusil Gras Mile 1874 were used?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Fusil_Gras_mle_1874> <http://dbpedia.org/ontology/usedInWar> ?x . ?x <http://dbpedia.org/ontology/territory> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "sparql_id": "403",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/usedInWar",
    "predicate1_mention": "used",
    "predicate2_uri": "http://dbpedia.org/ontology/territory",
    "predicate2_mention": "territories",
    "type_uri": "http://dbpedia.org/ontology/MilitaryConflict",
    "type_mention": "wars",
    "entity1_uri": "http://dbpedia.org/resource/Fusil_Gras_mle_1874",
    "entity1_mention": "Fusil Gras Mile 1874",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "254",
    "question": "Who are the politicians whose death place is Ontario?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Ontario>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate1_mention": "death place",
    "predicate2_uri": "http://dbpedia.org/ontology/Politician",
    "predicate2_mention": "politicians",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ontario",
    "entity1_mention": "ontario",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "256",
    "question": "Where do the CNN employees typically graduate from?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/CNN> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/employer",
    "predicate1_mention": "employees",
    "predicate2_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate2_mention": "graduate",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/CNN",
    "entity1_mention": "cnn",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "257",
    "question": "Who has stock in the railway lines managed by Norfolk Southern Railway?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/system> <http://dbpedia.org/resource/Norfolk_Southern_Railway> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RailwayLine>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/system",
    "predicate1_mention": "managed by",
    "predicate2_uri": "http://dbpedia.org/property/owner",
    "predicate2_mention": "southern",
    "type_uri": "http://dbpedia.org/ontology/RailwayLine",
    "type_mention": "railway lines",
    "entity1_uri": "http://dbpedia.org/resource/Norfolk_Southern_Railway",
    "entity1_mention": "Norfolk Southern Railway",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "258",
    "question": "Name the company whose one of the product is Pixar Image Computer and has one of the key person as Edwin Catmull?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Pixar_Image_Computer> . ?uri <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Edwin_Catmull>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/product",
    "predicate1_mention": "product",
    "predicate2_uri": "http://dbpedia.org/ontology/keyPerson",
    "predicate2_mention": "key person",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "company",
    "entity1_uri": "http://dbpedia.org/resource/Pixar_Image_Computer",
    "entity1_mention": "Pixar Image Computer",
    "entity2_uri": "http://dbpedia.org/resource/Edwin_Catmull",
    "entity2_mention": "Edwin Catmull"
},
{
    "id": "259",
    "question": "Who has official residences at Beverly Hills and Colts Neck Township ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Beverly_Hills,_California> . ?uri <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Colts_Neck_Township,_New_Jersey> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/residence",
    "predicate1_mention": "residences",
    "predicate2_uri": "http://dbpedia.org/ontology/residence",
    "predicate2_mention": "residences",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Beverly_Hills,_California",
    "entity1_mention": "beverly hills",
    "entity2_uri": "http://dbpedia.org/resource/Colts_Neck_Township,_New_Jersey",
    "entity2_mention": "Colts Neck Township"
},
{
    "id": "261",
    "question": "What is the route junction of Rhode Island Route 15 ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rhode_Island_Route_15> <http://dbpedia.org/ontology/routeJunction> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/routeJunction",
    "predicate1_mention": "route junction",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Rhode_Island_Route_15",
    "entity1_mention": "Rhode Island Route 15",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "263",
    "question": "Is KOMC-FM the sister station of KOMC (AM)?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/KOMC_(AM)> <http://dbpedia.org/ontology/sisterStation> <http://dbpedia.org/resource/KOMC-FM> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/sisterStation",
    "predicate1_mention": "sister station",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/KOMC_(AM)",
    "entity1_mention": "KOMC (AM)",
    "entity2_uri": "http://dbpedia.org/resource/KOMC-FM",
    "entity2_mention": "komc-fm"
},
{
    "id": "264",
    "question": "Do the asiana airlines fly  to Jeju airport?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Asiana_Airlines> <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Jeju_International_Airport> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/targetAirport",
    "predicate1_mention": "airport",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Asiana_Airlines",
    "entity1_mention": "asiana airlines",
    "entity2_uri": "http://dbpedia.org/resource/Jeju_International_Airport",
    "entity2_mention": "Jeju airport"
},
{
    "id": "265",
    "question": "Which awards are presented by Swedish Academy?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Swedish_Academy>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/presenter",
    "predicate1_mention": "presented",
    "predicate2_uri": "http://dbpedia.org/ontology/Award",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Swedish_Academy",
    "entity1_mention": "swedish academy",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "266",
    "question": "List the awards won by the fashion designer which have been recognized by Tennessee State Museum ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Tennessee_State_Museum> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FashionDesigner>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/award",
    "predicate1_mention": "awards",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/FashionDesigner",
    "type_mention": "fashion designer",
    "entity1_uri": "http://dbpedia.org/resource/Tennessee_State_Museum",
    "entity1_mention": "Tennessee State Museum",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "267",
    "question": "Which motion picture stories were edited by Ishir Honda?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Ishir\u014d_Honda>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/writer",
    "predicate1_mention": "edited by",
    "predicate2_uri": "http://dbpedia.org/ontology/Film",
    "predicate2_mention": "motion picture stories",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ishir\u014d_Honda",
    "entity1_mention": "ishir honda",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "268",
    "question": "What is the location of death of the skier who was the bronze medalist of Alpine skiing at the 1964 Winter Olympics Men's slalom ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alpine_skiing_at_the_1964_Winter_Olympics_\u2013_Men's_slalom> <http://dbpedia.org/ontology/bronzeMedalist> ?x . ?x <http://dbpedia.org/property/deathPlace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Skier>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/bronzeMedalist",
    "predicate1_mention": "bronze medalist",
    "predicate2_uri": "http://dbpedia.org/property/deathPlace",
    "predicate2_mention": "location of death",
    "type_uri": "http://dbpedia.org/ontology/Skier",
    "type_mention": "skier",
    "entity1_uri": "http://dbpedia.org/resource/Alpine_skiing_at_the_1964_Winter_Olympics_\u2013_Men's_slalom",
    "entity1_mention": "Alpine skiing at the 1964 Winter Olympics Men's slalom",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "269",
    "question": "Where all does the sister station of virgin radio play?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/sisterStation> <http://dbpedia.org/resource/Virgin_Radio> . ?x <http://dbpedia.org/property/location> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/sisterStation",
    "predicate1_mention": "sister station",
    "predicate2_uri": "http://dbpedia.org/property/location",
    "predicate2_mention": "where",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Virgin_Radio",
    "entity1_mention": "virgin radio",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "270",
    "question": "What is the affiliation of tani University ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/\u014ctani_University> <http://dbpedia.org/property/affiliation> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/affiliation",
    "predicate1_mention": "affiliation",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/\u014ctani_University",
    "entity1_mention": "tani University",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "271",
    "question": "Which rivers originate from Dowra?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Dowra> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/sourceMountain",
    "predicate1_mention": "originate",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Dowra",
    "entity1_mention": "dowra",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "272",
    "question": "Who was the architect of the stadium currently run by the Pittsburgh Pirates?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/operator> <http://dbpedia.org/resource/Pittsburgh_Pirates> . ?x <http://dbpedia.org/property/architect> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/operator",
    "predicate1_mention": "run by",
    "predicate2_uri": "http://dbpedia.org/property/architect",
    "predicate2_mention": "architect",
    "type_uri": "http://dbpedia.org/ontology/Stadium",
    "type_mention": "stadium",
    "entity1_uri": "http://dbpedia.org/resource/Pittsburgh_Pirates",
    "entity1_mention": "pittsburgh pirates",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "273",
    "question": "How many TV shows have been created by Simon Fuller ?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/creator",
    "predicate1_mention": "created",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "TV shows",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Simon_Fuller",
    "entity1_mention": "Simon Fuller",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "274",
    "question": "What is the record label of the Next Thing and also the  label of the The Producers (2005 film)?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Next_Thing> <http://dbpedia.org/ontology/recordLabel> ?uri. <http://dbpedia.org/resource/The_Producers_(2005_film)> <http://dbpedia.org/property/label> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/recordLabel",
    "predicate1_mention": "record label",
    "predicate2_uri": "http://dbpedia.org/property/label",
    "predicate2_mention": "label",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Next_Thing",
    "entity1_mention": "next thing",
    "entity2_uri": "http://dbpedia.org/resource/The_Producers_(2005_film)",
    "entity2_mention": "The Producers (2005 film)"
},
{
    "id": "275",
    "question": "Did Henry Ford design the Model C?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ford_Model_C> <http://dbpedia.org/ontology/designCompany> <http://dbpedia.org/resource/Henry_Ford> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/designCompany",
    "predicate1_mention": "design",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ford_Model_C",
    "entity1_mention": "the Model C",
    "entity2_uri": "http://dbpedia.org/resource/Henry_Ford",
    "entity2_mention": "henry ford"
},
{
    "id": "276",
    "question": "How many people are known for Dragons' Den?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Dragons'_Den_(UK_TV_series)>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate1_mention": "known for",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Dragons'_Den_(UK_TV_series)",
    "entity1_mention": "dragons' den",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "277",
    "question": "WHich region of the Providence Chapel, Charlwood is also the region of the Joseph Case High School",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Providence_Chapel,_Charlwood> <http://dbpedia.org/property/style> ?uri. <http://dbpedia.org/resource/Joseph_Case_High_School> <http://dbpedia.org/ontology/region> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/style",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/region",
    "predicate2_mention": "region",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Providence_Chapel,_Charlwood",
    "entity1_mention": "Providence Chapel, Charlwood",
    "entity2_uri": "http://dbpedia.org/resource/Joseph_Case_High_School",
    "entity2_mention": "the Joseph Case High School"
},
{
    "id": "278",
    "question": "Name the scientist whose supervisor was John Robert Woodyard and has won Norbert Wiener Award for Social and Professional Responsibility?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/John_Robert_Woodyard> . ?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/doctoralAdvisor",
    "predicate1_mention": "supervisor",
    "predicate2_uri": "http://dbpedia.org/property/prizes",
    "predicate2_mention": "professional",
    "type_uri": "http://dbpedia.org/ontology/Scientist",
    "type_mention": "scientist",
    "entity1_uri": "http://dbpedia.org/resource/John_Robert_Woodyard",
    "entity1_mention": "John Robert Woodyard",
    "entity2_uri": "http://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility",
    "entity2_mention": "Norbert Wiener Award for Social and Professional Responsibility"
},
{
    "id": "279",
    "question": "Which branch of american military have both George Siebels jr and Leroy Collins served?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_G._Siebels,_Jr.> <http://dbpedia.org/property/branch> ?uri. <http://dbpedia.org/resource/LeRoy_Collins> <http://dbpedia.org/property/branch> ?uri . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
    "sparql_id": "315",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/branch",
    "predicate1_mention": "branch",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/MilitaryUnit",
    "type_mention": "military",
    "entity1_uri": "http://dbpedia.org/resource/George_G._Siebels,_Jr.",
    "entity1_mention": "George Siebels jr",
    "entity2_uri": "http://dbpedia.org/resource/LeRoy_Collins",
    "entity2_mention": "Leroy Collins"
},
{
    "id": "281",
    "question": "What is the award presented by Downtown Athletic Club and Yale Club NYCity?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Downtown_Athletic_Club> . ?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Yale_Club_of_New_York_City> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/presenter",
    "predicate1_mention": "presented",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Award",
    "type_mention": "award",
    "entity1_uri": "http://dbpedia.org/resource/Downtown_Athletic_Club",
    "entity1_mention": "downtown athletic club",
    "entity2_uri": "http://dbpedia.org/resource/Yale_Club_of_New_York_City",
    "entity2_mention": "Yale Club NYCity"
},
{
    "id": "282",
    "question": "List the  primeministers of Victor Hope, 2nd Marquess of Linlithgow ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Victor_Hope,_2nd_Marquess_of_Linlithgow> <http://dbpedia.org/property/primeminister> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/primeminister",
    "predicate1_mention": "primeministers",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Victor_Hope,_2nd_Marquess_of_Linlithgow",
    "entity1_mention": "Victor Hope, 2nd Marquess of Linlithgow",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "283",
    "question": "What is the college of the basketball player who lives in Ashton Historic district?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Ashton_Historic_District> . ?x <http://dbpedia.org/property/college> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballPlayer>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/birthPlace",
    "predicate1_mention": "lives in",
    "predicate2_uri": "http://dbpedia.org/property/college",
    "predicate2_mention": "college",
    "type_uri": "http://dbpedia.org/ontology/BaseballPlayer",
    "type_mention": "basketball player",
    "entity1_uri": "http://dbpedia.org/resource/Ashton_Historic_District",
    "entity1_mention": "Ashton Historic district",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "286",
    "question": "Name the religious affiliation of Vagif Aliyev ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vagif_Aliyev> <http://dbpedia.org/ontology/religion> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/religion",
    "predicate1_mention": "religious",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Vagif_Aliyev",
    "entity1_mention": "Vagif Aliyev",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "287",
    "question": "Name the company founded in US and provides OneDrive as service ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/OneDrive> . ?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/United_States>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/services",
    "predicate1_mention": "service",
    "predicate2_uri": "http://dbpedia.org/property/foundation",
    "predicate2_mention": "founded",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "company",
    "entity1_uri": "http://dbpedia.org/resource/OneDrive",
    "entity1_mention": "onedrive",
    "entity2_uri": "http://dbpedia.org/resource/United_States",
    "entity2_mention": "US"
},
{
    "id": "288",
    "question": "In which branch of the government does James L. McConaughy belong?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/James_L._McConaughy> <http://dbpedia.org/ontology/governor> ?x . ?x <http://dbpedia.org/property/branch> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/governor",
    "predicate1_mention": "government",
    "predicate2_uri": "http://dbpedia.org/property/branch",
    "predicate2_mention": "branch",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/James_L._McConaughy",
    "entity1_mention": "James L. McConaughy",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "289",
    "question": "Count the number of characters of the play whose one of the character is Catwoman ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/characters> <http://dbpedia.org/resource/Catwoman> . ?x <http://dbpedia.org/property/characters> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/characters",
    "predicate1_mention": "characters",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Catwoman",
    "entity1_mention": "catwoman",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "290",
    "question": "what cities are located on the sides of mediterranean sea?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mediterranean_Sea> <http://dbpedia.org/property/cities> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/cities",
    "predicate1_mention": "cities",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mediterranean_Sea",
    "entity1_mention": "mediterranean sea",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "291",
    "question": "Is Bacillus belong to the domain Bacteria?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Bacillus> <http://dbpedia.org/property/domain> <http://dbpedia.org/resource/Bacteria> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/domain",
    "predicate1_mention": "domain",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bacillus",
    "entity1_mention": "bacillus",
    "entity2_uri": "http://dbpedia.org/resource/Bacteria",
    "entity2_mention": "bacteria"
},
{
    "id": "292",
    "question": "How many currencies are in used in places where people speak French?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/French_language> . ?x <http://dbpedia.org/ontology/currency> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Currency>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/officialLanguage",
    "predicate1_mention": "speak",
    "predicate2_uri": "http://dbpedia.org/ontology/currency",
    "predicate2_mention": "currencies",
    "type_uri": "http://dbpedia.org/ontology/Currency",
    "type_mention": "currencies",
    "entity1_uri": "http://dbpedia.org/resource/French_language",
    "entity1_mention": "french",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "293",
    "question": "What political party has governed both in Baraily, MP and Jowai?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Baraily> <http://dbpedia.org/ontology/leaderName> ?uri. <http://dbpedia.org/resource/Jowai> <http://dbpedia.org/ontology/leaderName> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/leaderName",
    "predicate1_mention": "governed",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Baraily",
    "entity1_mention": "Baraily, MP",
    "entity2_uri": "http://dbpedia.org/resource/Jowai",
    "entity2_mention": "jowai"
},
{
    "id": "294",
    "question": "Which officers fought in the war of Siege of Fort Recovery?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Siege_of_Fort_Recovery>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/battle",
    "predicate1_mention": "war",
    "predicate2_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "predicate2_mention": "officers",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Siege_of_Fort_Recovery",
    "entity1_mention": "Siege of Fort Recovery",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "295",
    "question": "How many writers speak a language belonging to the Germanic kind of languages?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/languageFamily> <http://dbpedia.org/resource/Germanic_languages> . ?uri <http://dbpedia.org/property/language> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/languageFamily",
    "predicate1_mention": "languages",
    "predicate2_uri": "http://dbpedia.org/property/language",
    "predicate2_mention": "language",
    "type_uri": "http://dbpedia.org/ontology/Writer",
    "type_mention": "writers",
    "entity1_uri": "http://dbpedia.org/resource/Germanic_languages",
    "entity1_mention": "the Germanic kind of languages",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "296",
    "question": "Was Duanne Allman known to play the Les Paul?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Duane_Allman> <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Gibson_Les_Paul> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/notableInstruments",
    "predicate1_mention": "known to play",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Duane_Allman",
    "entity1_mention": "Duanne Allman",
    "entity2_uri": "http://dbpedia.org/resource/Gibson_Les_Paul",
    "entity2_mention": "Les Paul"
},
{
    "id": "297",
    "question": "For which other teams do members of tanzanian national football team play?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Tanzania_national_football_team> . ?x <http://dbpedia.org/ontology/team> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/nationalteam",
    "predicate1_mention": "national football team",
    "predicate2_uri": "http://dbpedia.org/ontology/team",
    "predicate2_mention": "team",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tanzania_national_football_team",
    "entity1_mention": "tanzanian national football team",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "298",
    "question": "Who are the major stockholders of the bank which is the company of Bloomberg Markets ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bloomberg_Markets> <http://dbpedia.org/property/company> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/company",
    "predicate1_mention": "company",
    "predicate2_uri": "http://dbpedia.org/property/owner",
    "predicate2_mention": "stockholders",
    "type_uri": "http://dbpedia.org/ontology/Bank",
    "type_mention": "bank",
    "entity1_uri": "http://dbpedia.org/resource/Bloomberg_Markets",
    "entity1_mention": "bloomberg markets",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "299",
    "question": "How many maintainers are there of the bridges that can carry motor vehicles over them?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/carries> <http://dbpedia.org/resource/Motor_vehicle> . ?x <http://dbpedia.org/ontology/maintainedBy> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/carries",
    "predicate1_mention": "carry",
    "predicate2_uri": "http://dbpedia.org/ontology/maintainedBy",
    "predicate2_mention": "maintainers",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Motor_vehicle",
    "entity1_mention": "motor vehicles",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "300",
    "question": "What race of Linda Hogan is the state of origin of the Holmes Colbert ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Linda_Hogan> <http://dbpedia.org/property/ethnicity> ?uri. <http://dbpedia.org/resource/Holmes_Colbert> <http://dbpedia.org/ontology/stateOfOrigin> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/ethnicity",
    "predicate1_mention": "race",
    "predicate2_uri": "http://dbpedia.org/ontology/stateOfOrigin",
    "predicate2_mention": "state of origin",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Linda_Hogan",
    "entity1_mention": "linda hogan",
    "entity2_uri": "http://dbpedia.org/resource/Holmes_Colbert",
    "entity2_mention": "Holmes Colbert"
},
{
    "id": "303",
    "question": "What are the television shows whose network is Prime Time Entertainment Network?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/Prime_Time_Entertainment_Network>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/network",
    "predicate1_mention": "network",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "television shows",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Prime_Time_Entertainment_Network",
    "entity1_mention": "Prime Time Entertainment Network",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "304",
    "question": "What is the place of birth of the stars of Auto Shankar ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Auto_Shankar_(film)> <http://dbpedia.org/property/starring> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/starring",
    "predicate1_mention": "stars",
    "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate2_mention": "place of birth",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Auto_Shankar_(film)",
    "entity1_mention": "Auto Shankar",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "305",
    "question": "In which state can I find Burr Truss styled bridges?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/style> <http://dbpedia.org/resource/Burr_Truss> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/style",
    "predicate1_mention": "styled",
    "predicate2_uri": "http://dbpedia.org/ontology/state",
    "predicate2_mention": "state",
    "type_uri": "http://dbpedia.org/ontology/Bridge",
    "type_mention": "bridges",
    "entity1_uri": "http://dbpedia.org/resource/Burr_Truss",
    "entity1_mention": "Burr Truss",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "306",
    "question": "tonle sap flows into which river?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/rightTributary> <http://dbpedia.org/resource/Tonl\u00e9_Sap> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/rightTributary",
    "predicate1_mention": "river",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tonl\u00e9_Sap",
    "entity1_mention": "tonle sap",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "307",
    "question": "What city is the residence of Cheryl Teigs?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cheryl_Tiegs> <http://dbpedia.org/ontology/residence> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/residence",
    "predicate1_mention": "residence",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Cheryl_Tiegs",
    "entity1_mention": "Cheryl Teigs",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "308",
    "question": "List some teammates of Ndonga Mianga?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/currentMember> <http://dbpedia.org/resource/Ndonga_Mianga> . ?x <http://dbpedia.org/property/name> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/currentMember",
    "predicate1_mention": "teammates",
    "predicate2_uri": "http://dbpedia.org/property/name",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ndonga_Mianga",
    "entity1_mention": "ndonga mianga",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "309",
    "question": "Give me a count of everything under the archipelago, where Papeete is the biggest town.",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Papeete> . ?uri <http://dbpedia.org/property/archipelago> ?x  . }",
    "sparql_id": "106",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/largestCity",
    "predicate1_mention": "biggest town",
    "predicate2_uri": "http://dbpedia.org/property/archipelago",
    "predicate2_mention": "archipelago,",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Papeete",
    "entity1_mention": "papeete",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "310",
    "question": "Name the nearest city to  Lake Victoria?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lake_Victoria> <http://dbpedia.org/ontology/nearestCity> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/nearestCity",
    "predicate1_mention": "nearest city",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lake_Victoria",
    "entity1_mention": "Lake Victoria",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "311",
    "question": "Name the constituency of Domenico Modugno ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Domenico_Modugno> <http://dbpedia.org/property/constituency> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/constituency",
    "predicate1_mention": "constituency",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Domenico_Modugno",
    "entity1_mention": "domenico modugno",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "312",
    "question": "What awards did the founder of Grameen Bank win?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Grameen_Bank> <http://dbpedia.org/property/founder> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/founder",
    "predicate1_mention": "founder",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Grameen_Bank",
    "entity1_mention": "grameen bank",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "313",
    "question": "Where is Benjamin Franklin Terry buried, and US Route 59 has a junction?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Benjamin_Franklin_Terry> <http://dbpedia.org/property/placeofburial> ?uri. <http://dbpedia.org/resource/U.S._Route_59_in_Texas> <http://dbpedia.org/property/junction> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/placeofburial",
    "predicate1_mention": "buried,",
    "predicate2_uri": "http://dbpedia.org/property/junction",
    "predicate2_mention": "junction",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Benjamin_Franklin_Terry",
    "entity1_mention": "Benjamin Franklin Terry",
    "entity2_uri": "http://dbpedia.org/resource/U.S._Route_59_in_Texas",
    "entity2_mention": "US Route 59"
},
{
    "id": "314",
    "question": "Where were the doctoral students of James Langer born?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/James_S._Langer> <http://dbpedia.org/ontology/doctoralStudent> ?x . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/doctoralStudent",
    "predicate1_mention": "doctoral students",
    "predicate2_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate2_mention": "langer",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/James_S._Langer",
    "entity1_mention": "James Langer",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "315",
    "question": "Was A foreign policy on freedom covered by John Trumbull?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/A_Foreign_Policy_of_Freedom> <http://dbpedia.org/property/coverArtist> <http://dbpedia.org/resource/John_Trumbull> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/coverArtist",
    "predicate1_mention": "covered",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/A_Foreign_Policy_of_Freedom",
    "entity1_mention": "A foreign policy on freedom",
    "entity2_uri": "http://dbpedia.org/resource/John_Trumbull",
    "entity2_mention": "John Trumbull"
},
{
    "id": "316",
    "question": "Who is the writer of the singles whose producer is Peter-John Vettese?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Peter-John_Vettese> . ?x <http://dbpedia.org/ontology/writer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/producer",
    "predicate1_mention": "producer",
    "predicate2_uri": "http://dbpedia.org/ontology/writer",
    "predicate2_mention": "writer",
    "type_uri": "http://dbpedia.org/ontology/Single",
    "type_mention": "singles",
    "entity1_uri": "http://dbpedia.org/resource/Peter-John_Vettese",
    "entity1_mention": "peter-john vettese",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "317",
    "question": "What company's leader is Edwin Catmull?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Edwin_Catmull>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/keyPeople",
    "predicate1_mention": "leader",
    "predicate2_uri": "http://dbpedia.org/ontology/Company",
    "predicate2_mention": "company's",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Edwin_Catmull",
    "entity1_mention": "Edwin Catmull",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "318",
    "question": "Eric roth wrote how many screenplays?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Eric_Roth>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/screenplay",
    "predicate1_mention": "screenplays",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Eric_Roth",
    "entity1_mention": "Eric roth",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "319",
    "question": "What is the common race of the Martin Molony and race of the Coneygree ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Martin_Molony> <http://dbpedia.org/ontology/race> ?uri. <http://dbpedia.org/resource/Coneygree> <http://dbpedia.org/property/race> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/race",
    "predicate1_mention": "race",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Martin_Molony",
    "entity1_mention": "Martin Molony",
    "entity2_uri": "http://dbpedia.org/resource/Coneygree",
    "entity2_mention": "coneygree"
},
{
    "id": "321",
    "question": "How many have been awarded by the Royal Society?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Society>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/awards",
    "predicate1_mention": "awarded",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Royal_Society",
    "entity1_mention": "the Royal Society",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "322",
    "question": "Which philosophy journal has compiler as Stephen Law ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/editor> <http://dbpedia.org/resource/Stephen_Law> . ?uri <http://dbpedia.org/property/discipline> <http://dbpedia.org/resource/Philosophy>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AcademicJournal>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/editor",
    "predicate1_mention": "compiler",
    "predicate2_uri": "http://dbpedia.org/property/discipline",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/AcademicJournal",
    "type_mention": "journal",
    "entity1_uri": "http://dbpedia.org/resource/Stephen_Law",
    "entity1_mention": "stephen law",
    "entity2_uri": "http://dbpedia.org/resource/Philosophy",
    "entity2_mention": "philosophy"
},
{
    "id": "323",
    "question": "Who are the opponents of Gervase Helwys?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gervase_Helwys> <http://dbpedia.org/ontology/opponent> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/opponent",
    "predicate1_mention": "opponents",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Gervase_Helwys",
    "entity1_mention": "gervase helwys",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "324",
    "question": "Who is the starring of the movies such that music is by Raamlaxman?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Raamlaxman> . ?x <http://dbpedia.org/ontology/starring> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/music",
    "predicate1_mention": "music",
    "predicate2_uri": "http://dbpedia.org/ontology/starring",
    "predicate2_mention": "starring",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Raamlaxman",
    "entity1_mention": "raamlaxman",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "325",
    "question": "In which country is there a political party whose leader is Jose Cha Cha Jimenez?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Jose_Cha_Cha_Jimenez> . ?x <http://dbpedia.org/property/international> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/leader",
    "predicate1_mention": "leader",
    "predicate2_uri": "http://dbpedia.org/property/international",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/PoliticalParty",
    "type_mention": "political party",
    "entity1_uri": "http://dbpedia.org/resource/Jose_Cha_Cha_Jimenez",
    "entity1_mention": "Jose Cha Cha Jimenez",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "327",
    "question": "What is the headquarters of the public transit system which is the section of Red Ahead ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Red_Ahead> <http://dbpedia.org/ontology/isPartOf> ?x . ?x <http://dbpedia.org/property/headquarters> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PublicTransitSystem>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/isPartOf",
    "predicate1_mention": "section",
    "predicate2_uri": "http://dbpedia.org/property/headquarters",
    "predicate2_mention": "headquarters",
    "type_uri": "http://dbpedia.org/ontology/PublicTransitSystem",
    "type_mention": "public transit system",
    "entity1_uri": "http://dbpedia.org/resource/Red_Ahead",
    "entity1_mention": "Red Ahead",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "328",
    "question": "Which mascot of Celal Bayer university is also the nickname of kore Presbyterian Theological Seminar ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Korea_Presbyterian_Theological_Seminary> <http://dbpedia.org/property/nickname> ?uri. <http://dbpedia.org/resource/Celal_Bayar_University> <http://dbpedia.org/property/mascot> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/nickname",
    "predicate1_mention": "nickname",
    "predicate2_uri": "http://dbpedia.org/property/mascot",
    "predicate2_mention": "mascot",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Korea_Presbyterian_Theological_Seminary",
    "entity1_mention": "kore Presbyterian Theological Seminar",
    "entity2_uri": "http://dbpedia.org/resource/Celal_Bayar_University",
    "entity2_mention": "Celal Bayer university"
},
{
    "id": "329",
    "question": "Where is the head quarters of the owner of Hamline Avenue?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hamline_Avenue_(Metro_Transit_station)> <http://dbpedia.org/ontology/owner> ?x . ?x <http://dbpedia.org/property/headquarters> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/owner",
    "predicate1_mention": "owner",
    "predicate2_uri": "http://dbpedia.org/property/headquarters",
    "predicate2_mention": "head quarters",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hamline_Avenue_(Metro_Transit_station)",
    "entity1_mention": "hamline avenue",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "330",
    "question": "Give me some series related to the one which had Yasmin Paige in them.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Yasmin_Paige> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/starring",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/related",
    "predicate2_mention": "related",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "series",
    "entity1_uri": "http://dbpedia.org/resource/Yasmin_Paige",
    "entity1_mention": "yasmin paige",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "331",
    "question": "With whom is Heinz Kokott a relative to who also served Nazi Army?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Heinz_Kokott> <http://dbpedia.org/ontology/relation> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/relation",
    "predicate1_mention": "relative",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Heinz_Kokott",
    "entity1_mention": "Heinz Kokott",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "332",
    "question": "Which magazine's publisher is Jann Wenner and founded by Ralph J. Gleason?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Jann_Wenner> . ?uri <http://dbpedia.org/ontology/founder> <http://dbpedia.org/resource/Ralph_J._Gleason>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/publisher",
    "predicate1_mention": "publisher",
    "predicate2_uri": "http://dbpedia.org/ontology/founder",
    "predicate2_mention": "founded",
    "type_uri": "http://dbpedia.org/ontology/Magazine",
    "type_mention": "magazine's",
    "entity1_uri": "http://dbpedia.org/resource/Jann_Wenner",
    "entity1_mention": "Jann Wenner",
    "entity2_uri": "http://dbpedia.org/resource/Ralph_J._Gleason",
    "entity2_mention": "Ralph J. Gleason"
},
{
    "id": "333",
    "question": "Name the mountain whose range is Sierra Nevada (U.S.) and parent mountain peak is Nevado de Toluca?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mountainRange> <http://dbpedia.org/resource/Sierra_Nevada_(U.S.)> . ?uri <http://dbpedia.org/ontology/parentMountainPeak> <http://dbpedia.org/resource/Nevado_de_Toluca>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/mountainRange",
    "predicate1_mention": "mountain whose range",
    "predicate2_uri": "http://dbpedia.org/ontology/parentMountainPeak",
    "predicate2_mention": "parent mountain peak",
    "type_uri": "http://dbpedia.org/ontology/Mountain",
    "type_mention": "mountain",
    "entity1_uri": "http://dbpedia.org/resource/Sierra_Nevada_(U.S.)",
    "entity1_mention": "sierra nevada (u.s.)",
    "entity2_uri": "http://dbpedia.org/resource/Nevado_de_Toluca",
    "entity2_mention": "Nevado de Toluca"
},
{
    "id": "334",
    "question": "Which television show's network  is BBC HD and is related to Doctor Who Confidential?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_HD> . ?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/Doctor_Who_Confidential>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/network",
    "predicate1_mention": "network",
    "predicate2_uri": "http://dbpedia.org/ontology/related",
    "predicate2_mention": "related",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television show's",
    "entity1_uri": "http://dbpedia.org/resource/BBC_HD",
    "entity1_mention": "bbc hd",
    "entity2_uri": "http://dbpedia.org/resource/Doctor_Who_Confidential",
    "entity2_mention": "Doctor Who Confidential"
},
{
    "id": "336",
    "question": "What are the towns who have Thesaban system?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/settlementType> <http://dbpedia.org/resource/Thesaban>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/settlementType",
    "predicate1_mention": "system",
    "predicate2_uri": "http://dbpedia.org/ontology/Town",
    "predicate2_mention": "towns",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Thesaban",
    "entity1_mention": "thesaban",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "338",
    "question": "What is the television show whose producer is Stephen E. Ambrose?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Stephen_E._Ambrose>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/producer",
    "predicate1_mention": "producer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television show",
    "entity1_uri": "http://dbpedia.org/resource/Stephen_E._Ambrose",
    "entity1_mention": "Stephen E. Ambrose",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "339",
    "question": "List the newspapers whose headquarters's time zone is Central European Summer Time.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Summer_Time> . ?uri <http://dbpedia.org/property/headquarters> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/timeZone",
    "predicate1_mention": "time zone",
    "predicate2_uri": "http://dbpedia.org/property/headquarters",
    "predicate2_mention": "headquarters's",
    "type_uri": "http://dbpedia.org/ontology/Newspaper",
    "type_mention": "newspapers",
    "entity1_uri": "http://dbpedia.org/resource/Central_European_Summer_Time",
    "entity1_mention": "Central European Summer Time.",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "340",
    "question": "Which TV show's  opening theme is The Best of Both Worlds (song) and executive producer is Steven Peterman?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/The_Best_of_Both_Worlds_(song)> . ?uri <http://dbpedia.org/property/executiveProducer> <http://dbpedia.org/resource/Steven_Peterman>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/openingTheme",
    "predicate1_mention": "opening theme",
    "predicate2_uri": "http://dbpedia.org/property/executiveProducer",
    "predicate2_mention": "executive producer",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "TV show's",
    "entity1_uri": "http://dbpedia.org/resource/The_Best_of_Both_Worlds_(song)",
    "entity1_mention": "The Best of Both Worlds (song)",
    "entity2_uri": "http://dbpedia.org/resource/Steven_Peterman",
    "entity2_mention": "Steven Peterman"
},
{
    "id": "342",
    "question": "Paul Morphy compiled journals of which field?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/editor> <http://dbpedia.org/resource/Paul_Morphy> . ?x <http://dbpedia.org/property/discipline> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/editor",
    "predicate1_mention": "compiled",
    "predicate2_uri": "http://dbpedia.org/property/discipline",
    "predicate2_mention": "field",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Paul_Morphy",
    "entity1_mention": "Paul Morphy",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "343",
    "question": "Which river ends at  Thames Estuary and North Sea?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Thames_Estuary> . ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/North_Sea> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/riverMouth",
    "predicate1_mention": "river ends at",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "river",
    "entity1_uri": "http://dbpedia.org/resource/Thames_Estuary",
    "entity1_mention": "Thames Estuary",
    "entity2_uri": "http://dbpedia.org/resource/North_Sea",
    "entity2_mention": "north sea"
},
{
    "id": "344",
    "question": "Where was Ganefo hosted?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/GANEFO> <http://dbpedia.org/property/hostCity> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/hostCity",
    "predicate1_mention": "hosted",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/GANEFO",
    "entity1_mention": "ganefo",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "346",
    "question": "Name the office holder with predecessor as Samuel W. McCall and office in Massachusetts House of Representatives?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Samuel_W._McCall> . ?uri <http://dbpedia.org/property/office> <http://dbpedia.org/resource/Massachusetts_House_of_Representatives>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/predecessor",
    "predicate1_mention": "predecessor",
    "predicate2_uri": "http://dbpedia.org/property/office",
    "predicate2_mention": "office",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "office",
    "entity1_uri": "http://dbpedia.org/resource/Samuel_W._McCall",
    "entity1_mention": "Samuel W. McCall",
    "entity2_uri": "http://dbpedia.org/resource/Massachusetts_House_of_Representatives",
    "entity2_mention": "Massachusetts House of Representatives"
},
{
    "id": "347",
    "question": "How many other awards have been given to people who have won the Golden Globe?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Golden_Globe_Award> . ?x <http://dbpedia.org/property/awards> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/award",
    "predicate1_mention": "won",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Award",
    "type_mention": "awards",
    "entity1_uri": "http://dbpedia.org/resource/Golden_Globe_Award",
    "entity1_mention": "golden globe",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "348",
    "question": "Does Mr. Jim's Pizza operate in the pizza industry?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mr._Jim's_Pizza> <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Pizza> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/industry",
    "predicate1_mention": "industry",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mr._Jim's_Pizza",
    "entity1_mention": "Mr. Jim's Pizza",
    "entity2_uri": "http://dbpedia.org/resource/Pizza",
    "entity2_mention": "pizza"
},
{
    "id": "349",
    "question": "List down the schools whose mascot's order is Even-toed ungulate?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Even-toed_ungulate> . ?uri <http://dbpedia.org/property/mascot> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/order",
    "predicate1_mention": "order",
    "predicate2_uri": "http://dbpedia.org/property/mascot",
    "predicate2_mention": "mascot's",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Even-toed_ungulate",
    "entity1_mention": "even-toed ungulate",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "350",
    "question": "How many other field are there of the scientists whose one of the field is Mathematics ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/field> <http://dbpedia.org/resource/Mathematics> . ?x <http://dbpedia.org/ontology/field> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/field",
    "predicate1_mention": "field",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mathematics",
    "entity1_mention": "mathematics",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "351",
    "question": "Who had  Joe Purcell and Winston Bryant as lieutenants ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/lieutenant> <http://dbpedia.org/resource/Joe_Purcell> . ?uri <http://dbpedia.org/ontology/lieutenant> <http://dbpedia.org/resource/Winston_Bryant> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/lieutenant",
    "predicate1_mention": "lieutenants",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Joe_Purcell",
    "entity1_mention": "Joe Purcell",
    "entity2_uri": "http://dbpedia.org/resource/Winston_Bryant",
    "entity2_mention": "winston bryant"
},
{
    "id": "352",
    "question": "What company's founder is Jim Harris?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Jim_Harris_(entrepreneur)> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/founder",
    "predicate1_mention": "founder",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jim_Harris_(entrepreneur)",
    "entity1_mention": "Jim Harris",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "353",
    "question": "In which city is Corringham railway station located?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Corringham_railway_station> <http://dbpedia.org/property/borough> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/borough",
    "predicate1_mention": "corringham",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Corringham_railway_station",
    "entity1_mention": "Corringham railway station",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "354",
    "question": "Did stan lee narrate the incredible hulk tv show?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)> <http://dbpedia.org/ontology/narrator> <http://dbpedia.org/resource/Stan_Lee> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/narrator",
    "predicate1_mention": "narrate",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)",
    "entity1_mention": "incredible hulk tv",
    "entity2_uri": "http://dbpedia.org/resource/Stan_Lee",
    "entity2_mention": "stan lee"
},
{
    "id": "355",
    "question": "How many sports are played in organizations presided by Emanuel de Guzman?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/president> <http://dbpedia.org/resource/Emanuel_de_Guzman> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sport>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/president",
    "predicate1_mention": "presided",
    "predicate2_uri": "http://dbpedia.org/ontology/sport",
    "predicate2_mention": "sports",
    "type_uri": "http://dbpedia.org/ontology/Sport",
    "type_mention": "sports",
    "entity1_uri": "http://dbpedia.org/resource/Emanuel_de_Guzman",
    "entity1_mention": "Emanuel de Guzman",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "356",
    "question": "Where do the sister stations of Al Khaleejiya 100.9 play?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/sisterStations> <http://dbpedia.org/resource/Al_Khaleejiya_100.9> . ?x <http://dbpedia.org/property/location> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/sisterStations",
    "predicate1_mention": "sister stations",
    "predicate2_uri": "http://dbpedia.org/property/location",
    "predicate2_mention": "where",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Al_Khaleejiya_100.9",
    "entity1_mention": "Al Khaleejiya 100.9",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "358",
    "question": "What is the religion of the person who is in the cast of Master's Sun ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Master's_Sun> <http://dbpedia.org/ontology/starring> ?x . ?x <http://dbpedia.org/property/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/starring",
    "predicate1_mention": "cast",
    "predicate2_uri": "http://dbpedia.org/property/religion",
    "predicate2_mention": "religion",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "person",
    "entity1_uri": "http://dbpedia.org/resource/Master's_Sun",
    "entity1_mention": "Master's Sun",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "359",
    "question": "What is common between sports played at Fr Agnel School and Jr college, and the genre of Virtual Kasparov?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Virtual_Kasparov> <http://dbpedia.org/ontology/genre> ?uri. <http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College> <http://dbpedia.org/ontology/sport> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/genre",
    "predicate1_mention": "genre",
    "predicate2_uri": "http://dbpedia.org/ontology/sport",
    "predicate2_mention": "sports",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Virtual_Kasparov",
    "entity1_mention": "Virtual Kasparov",
    "entity2_uri": "http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College",
    "entity2_mention": "Fr Agnel School and Jr college,"
},
{
    "id": "360",
    "question": "Who has official residences at Colts Neck Township and Beverly Hills?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Colts_Neck_Township,_New_Jersey> . ?uri <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Beverly_Hills,_California> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/residence",
    "predicate1_mention": "residences",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Colts_Neck_Township,_New_Jersey",
    "entity1_mention": "Colts Neck Township",
    "entity2_uri": "http://dbpedia.org/resource/Beverly_Hills,_California",
    "entity2_mention": "Beverly Hills"
},
{
    "id": "361",
    "question": "How many different genres of games are produced by Blizzard?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Blizzard_Entertainment> . ?x <http://dbpedia.org/property/genre> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/developer",
    "predicate1_mention": "different",
    "predicate2_uri": "http://dbpedia.org/property/genre",
    "predicate2_mention": "genres",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Blizzard_Entertainment",
    "entity1_mention": "blizzard",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "363",
    "question": "Name the river flowing through Reading and source place as Gloucestershire ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Reading,_Berkshire> . ?uri <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Gloucestershire>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/city",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/sourcePlace",
    "predicate2_mention": "source place",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "river",
    "entity1_uri": "http://dbpedia.org/resource/Reading,_Berkshire",
    "entity1_mention": "reading",
    "entity2_uri": "http://dbpedia.org/resource/Gloucestershire",
    "entity2_mention": "gloucestershire"
},
{
    "id": "365",
    "question": "What is the common licence of the Frontaccounting and nUbuntu?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Frontaccounting> <http://dbpedia.org/ontology/license> ?uri. <http://dbpedia.org/resource/NUbuntu> <http://dbpedia.org/ontology/license> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/license",
    "predicate1_mention": "licence",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Frontaccounting",
    "entity1_mention": "frontaccounting",
    "entity2_uri": "http://dbpedia.org/resource/NUbuntu",
    "entity2_mention": "nubuntu"
},
{
    "id": "366",
    "question": "Which TV shows distributor is Broadcast syndication and developed by Brian Graden ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/developer> <http://dbpedia.org/resource/Brian_Graden> . ?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Broadcast_syndication>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/developer",
    "predicate1_mention": "developed",
    "predicate2_uri": "http://dbpedia.org/ontology/distributor",
    "predicate2_mention": "distributor",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "TV shows",
    "entity1_uri": "http://dbpedia.org/resource/Brian_Graden",
    "entity1_mention": "brian graden",
    "entity2_uri": "http://dbpedia.org/resource/Broadcast_syndication",
    "entity2_mention": "Broadcast syndication"
},
{
    "id": "367",
    "question": "Who was in conflicts of Fort Barrancas and Gadsden?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Fort_Barrancas> . ?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Fort_Gadsden> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/battle",
    "predicate1_mention": "gadsden",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Fort_Barrancas",
    "entity1_mention": "Fort Barrancas",
    "entity2_uri": "http://dbpedia.org/resource/Fort_Gadsden",
    "entity2_mention": "gadsden"
},
{
    "id": "368",
    "question": "Which university was attended by both Richard H Immerman and Franklin W Olin?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Richard_H._Immerman> <http://dbpedia.org/property/education> ?uri. <http://dbpedia.org/resource/Franklin_W._Olin> <http://dbpedia.org/property/education> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/education",
    "predicate1_mention": "attended",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Richard_H._Immerman",
    "entity1_mention": "Richard H Immerman",
    "entity2_uri": "http://dbpedia.org/resource/Franklin_W._Olin",
    "entity2_mention": "Franklin W Olin"
},
{
    "id": "369",
    "question": "Name someone known for a project involved in the Occupation of Japan?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Occupation_of_Japan> . ?uri <http://dbpedia.org/property/knownFor> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/battle",
    "predicate1_mention": "project",
    "predicate2_uri": "http://dbpedia.org/property/knownFor",
    "predicate2_mention": "known for",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Occupation_of_Japan",
    "entity1_mention": "Occupation of Japan",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "370",
    "question": "What are Monrow Carell Jr Children Hospital and Vanderbilt University Medical Center both affiliated with?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Monroe_Carell_Jr._Children's_Hospital_at_Vanderbilt> <http://dbpedia.org/property/affiliation> ?uri. <http://dbpedia.org/resource/Vanderbilt_University_Medical_Center> <http://dbpedia.org/property/affiliation> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/affiliation",
    "predicate1_mention": "affiliated",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Monroe_Carell_Jr._Children's_Hospital_at_Vanderbilt",
    "entity1_mention": "Monrow Carell Jr Children Hospital and Vanderbilt",
    "entity2_uri": "http://dbpedia.org/resource/Vanderbilt_University_Medical_Center",
    "entity2_mention": "Vanderbilt University Medical Center"
},
{
    "id": "371",
    "question": "What are some cars which came before the ones on a GM B base?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/automobilePlatform> <http://dbpedia.org/resource/GM_B_platform> . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/automobilePlatform",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/predecessor",
    "predicate2_mention": "came before",
    "type_uri": "http://dbpedia.org/ontology/Automobile",
    "type_mention": "cars",
    "entity1_uri": "http://dbpedia.org/resource/GM_B_platform",
    "entity1_mention": "GM B",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "372",
    "question": "Name few companies founded in Texas?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Texas>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/foundationPlace",
    "predicate1_mention": "founded",
    "predicate2_uri": "http://dbpedia.org/ontology/Company",
    "predicate2_mention": "companies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Texas",
    "entity1_mention": "texas",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "373",
    "question": "What is the awards given to the horse whose grandson is the famous Counterpoint?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Counterpoint_(horse)> <http://dbpedia.org/property/grandsire> ?x . ?x <http://dbpedia.org/ontology/honours> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/grandsire",
    "predicate1_mention": "grandson",
    "predicate2_uri": "http://dbpedia.org/ontology/honours",
    "predicate2_mention": "awards",
    "type_uri": "http://dbpedia.org/ontology/Horse",
    "type_mention": "horse",
    "entity1_uri": "http://dbpedia.org/resource/Counterpoint_(horse)",
    "entity1_mention": "counterpoint",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "374",
    "question": "what kind of games can I find for PC 9800?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/PC-9800_Series> . ?x <http://dbpedia.org/property/genre> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/computingPlatform",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/genre",
    "predicate2_mention": "kind of",
    "type_uri": "http://dbpedia.org/ontology/VideoGame",
    "type_mention": "games",
    "entity1_uri": "http://dbpedia.org/resource/PC-9800_Series",
    "entity1_mention": "PC 9800",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "376",
    "question": "Name all those whose spouses have performed with Tony Bennett?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Tony_Bennett> . ?uri <http://dbpedia.org/ontology/spouse> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
    "predicate1_mention": "performed",
    "predicate2_uri": "http://dbpedia.org/ontology/spouse",
    "predicate2_mention": "spouses",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tony_Bennett",
    "entity1_mention": "Tony Bennett",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "377",
    "question": "Which office holder's governor is Charles Willing Byrd and has final resting place in North Bend, Ohio?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/governor> <http://dbpedia.org/resource/Charles_Willing_Byrd> . ?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/North_Bend,_Ohio>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/governor",
    "predicate1_mention": "governor",
    "predicate2_uri": "http://dbpedia.org/property/restingplace",
    "predicate2_mention": "resting place",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "office holder's",
    "entity1_uri": "http://dbpedia.org/resource/Charles_Willing_Byrd",
    "entity1_mention": "Charles Willing Byrd",
    "entity2_uri": "http://dbpedia.org/resource/North_Bend,_Ohio",
    "entity2_mention": "north bend, ohio"
},
{
    "id": "378",
    "question": "What are the books written by the the person who made the Novelas ejemplares?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/Novelas_ejemplares> . ?uri <http://dbpedia.org/ontology/author> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/notableWork",
    "predicate1_mention": "made",
    "predicate2_uri": "http://dbpedia.org/ontology/author",
    "predicate2_mention": "written",
    "type_uri": "http://dbpedia.org/ontology/Book",
    "type_mention": "books",
    "entity1_uri": "http://dbpedia.org/resource/Novelas_ejemplares",
    "entity1_mention": "Novelas ejemplares",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "380",
    "question": "Name the TV show whose network is NBC and is the subsequent work of Fraiser ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/NBC> . ?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Frasier>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/network",
    "predicate1_mention": "network",
    "predicate2_uri": "http://dbpedia.org/ontology/subsequentWork",
    "predicate2_mention": "subsequent work",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "TV show",
    "entity1_uri": "http://dbpedia.org/resource/NBC",
    "entity1_mention": "nbc",
    "entity2_uri": "http://dbpedia.org/resource/Frasier",
    "entity2_mention": "Fraiser"
},
{
    "id": "381",
    "question": "Does chicago own the washington station on the CTA Blue Line?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Washington_station_(CTA_Blue_Line)> <http://dbpedia.org/property/owned> <http://dbpedia.org/resource/Chicago> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/owned",
    "predicate1_mention": "own",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Washington_station_(CTA_Blue_Line)",
    "entity1_mention": "washington station on the CTA Blue Line",
    "entity2_uri": "http://dbpedia.org/resource/Chicago",
    "entity2_mention": "chicago"
},
{
    "id": "382",
    "question": "Give the distinct number of other party of the people which have one of the party as Janata Party ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/otherParty> <http://dbpedia.org/resource/Janata_Party> . ?x <http://dbpedia.org/ontology/otherParty> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/otherParty",
    "predicate1_mention": "party",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Janata_Party",
    "entity1_mention": "janata party",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "383",
    "question": "What is the company of Ford Theatre ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Theatre> <http://dbpedia.org/property/company> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/company",
    "predicate1_mention": "company",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ford_Theatre",
    "entity1_mention": "Ford Theatre",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "386",
    "question": "Where is the grave of Ivan III of Russia ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ivan_III_of_Russia> <http://dbpedia.org/property/placeOfBurial> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/placeOfBurial",
    "predicate1_mention": "grave",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ivan_III_of_Russia",
    "entity1_mention": "Ivan III of Russia",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "387",
    "question": "Which company founded by Fusajiro Yamauchi gives service as Nintendo Network?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Fusajiro_Yamauchi> . ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Nintendo_Network>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/foundedBy",
    "predicate1_mention": "founded by",
    "predicate2_uri": "http://dbpedia.org/property/services",
    "predicate2_mention": "service",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "company",
    "entity1_uri": "http://dbpedia.org/resource/Fusajiro_Yamauchi",
    "entity1_mention": "Fusajiro Yamauchi",
    "entity2_uri": "http://dbpedia.org/resource/Nintendo_Network",
    "entity2_mention": "nintendo network"
},
{
    "id": "389",
    "question": "List all the co-founders of the non for profit which have founding member as David pressman ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/David_Pressman> . ?x <http://dbpedia.org/ontology/foundedBy> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Non-ProfitOrganisation>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/foundedBy",
    "predicate1_mention": "co-founders",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Non-ProfitOrganisation",
    "type_mention": "non for profit",
    "entity1_uri": "http://dbpedia.org/resource/David_Pressman",
    "entity1_mention": "David pressman",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "390",
    "question": "Name the products of Den norske Bank ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Den_norske_Bank> <http://dbpedia.org/property/products> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/products",
    "predicate1_mention": "products",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Den_norske_Bank",
    "entity1_mention": "Den norske Bank",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "392",
    "question": "What are some US citizens famous for?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/nationality",
    "predicate1_mention": "citizens",
    "predicate2_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate2_mention": "famous for",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_States",
    "entity1_mention": "US",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "393",
    "question": "Which genre of books are published by Random House?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/publisher> <http://dbpedia.org/resource/Random_House> . ?x <http://dbpedia.org/property/subject> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/publisher",
    "predicate1_mention": "published",
    "predicate2_uri": "http://dbpedia.org/property/subject",
    "predicate2_mention": "genre",
    "type_uri": "http://dbpedia.org/ontology/Book",
    "type_mention": "books",
    "entity1_uri": "http://dbpedia.org/resource/Random_House",
    "entity1_mention": "random house",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "394",
    "question": "Name the office holder whose child is Lori Black and predecessor is Henry E. Catto Jr ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Lori_Black> . ?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Henry_E._Catto,_Jr.>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/children",
    "predicate1_mention": "child",
    "predicate2_uri": "http://dbpedia.org/ontology/predecessor",
    "predicate2_mention": "predecessor",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "office holder",
    "entity1_uri": "http://dbpedia.org/resource/Lori_Black",
    "entity1_mention": "Lori Black",
    "entity2_uri": "http://dbpedia.org/resource/Henry_E._Catto,_Jr.",
    "entity2_mention": "Henry E. Catto Jr"
},
{
    "id": "396",
    "question": "Which rivers start in Wyoming?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceRegion> <http://dbpedia.org/resource/Wyoming> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/sourceRegion",
    "predicate1_mention": "rivers start",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Wyoming",
    "entity1_mention": "wyoming",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "397",
    "question": "What is the common profession of William Luther Hill and Claiborne Pell?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Luther_Hill> <http://dbpedia.org/ontology/profession> ?uri. <http://dbpedia.org/resource/Claiborne_Pell> <http://dbpedia.org/ontology/profession> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/profession",
    "predicate1_mention": "profession",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/William_Luther_Hill",
    "entity1_mention": "william luther hill",
    "entity2_uri": "http://dbpedia.org/resource/Claiborne_Pell",
    "entity2_mention": "claiborne pell"
},
{
    "id": "398",
    "question": "Name the movie whose director is Ridley Scott and it's music composer is Vangelis?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Ridley_Scott> . ?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Vangelis>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/director",
    "predicate1_mention": "director",
    "predicate2_uri": "http://dbpedia.org/ontology/musicComposer",
    "predicate2_mention": "music composer",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movie",
    "entity1_uri": "http://dbpedia.org/resource/Ridley_Scott",
    "entity1_mention": "ridley scott",
    "entity2_uri": "http://dbpedia.org/resource/Vangelis",
    "entity2_mention": "vangelis"
},
{
    "id": "399",
    "question": "What country is Jeffrey Werleman from, which also has the American Mediterranean Sea?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jeffrey_Werleman> <http://dbpedia.org/ontology/birthPlace> ?uri. <http://dbpedia.org/resource/American_Mediterranean_Sea> <http://dbpedia.org/ontology/country> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate1_mention": "from",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "country",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jeffrey_Werleman",
    "entity1_mention": "Jeffrey Werleman",
    "entity2_uri": "http://dbpedia.org/resource/American_Mediterranean_Sea",
    "entity2_mention": "American Mediterranean Sea"
},
{
    "id": "400",
    "question": "The Prime minister who worked in the Khmer Issarak follows which religion?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Khmer_Issarak> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/militaryBranch",
    "predicate1_mention": "worked in",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religion",
    "type_uri": "http://dbpedia.org/ontology/PrimeMinister",
    "type_mention": "Prime minister",
    "entity1_uri": "http://dbpedia.org/resource/Khmer_Issarak",
    "entity1_mention": "Khmer Issarak",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "401",
    "question": "Who coached the marquet golden eagels during 2013",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2013\u201314_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/ontology/coach> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/coach",
    "predicate1_mention": "coached",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/2013\u201314_Marquette_Golden_Eagles_men's_basketball_team",
    "entity1_mention": "marquet golden eagels during 2013",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "402",
    "question": "Who is the musical artist worked for labels Celluloid Records and Victor Entertainment?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Celluloid_Records> . ?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Victor_Entertainment> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/label",
    "predicate1_mention": "labels",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/MusicalArtist",
    "type_mention": "musical artist",
    "entity1_uri": "http://dbpedia.org/resource/Celluloid_Records",
    "entity1_mention": "celluloid records",
    "entity2_uri": "http://dbpedia.org/resource/Victor_Entertainment",
    "entity2_mention": "Victor Entertainment"
},
{
    "id": "403",
    "question": "Is Tea the main ingredient of Lahpet?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Lahpet> <http://dbpedia.org/property/mainIngredient> <http://dbpedia.org/resource/Tea> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/mainIngredient",
    "predicate1_mention": "main ingredient",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lahpet",
    "entity1_mention": "lahpet",
    "entity2_uri": "http://dbpedia.org/resource/Tea",
    "entity2_mention": "tea"
},
{
    "id": "405",
    "question": "How many destinations are covered by the airlines which also serves Europe ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/destinations> <http://dbpedia.org/resource/Europe> . ?x <http://dbpedia.org/property/destinations> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/destinations",
    "predicate1_mention": "destinations",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Europe",
    "entity1_mention": "europe",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "406",
    "question": "How many famous people are born in Long Island?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Long_Island>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate1_mention": "are born in",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Long_Island",
    "entity1_mention": "Long Island",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "407",
    "question": "List the other members of the team where Jason Hayne currently plays?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/currentMember> <http://dbpedia.org/resource/Jason_Hayne> . ?x <http://dbpedia.org/property/name> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OrganisationMember>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/currentMember",
    "predicate1_mention": "currently",
    "predicate2_uri": "http://dbpedia.org/property/name",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/OrganisationMember",
    "type_mention": "members",
    "entity1_uri": "http://dbpedia.org/resource/Jason_Hayne",
    "entity1_mention": "jason hayne",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "408",
    "question": "Whose academic advisor works at the St George's Hospital?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/workInstitutions> <http://dbpedia.org/resource/St_George's_Hospital> . ?uri <http://dbpedia.org/ontology/academicAdvisor> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/workInstitutions",
    "predicate1_mention": "works",
    "predicate2_uri": "http://dbpedia.org/ontology/academicAdvisor",
    "predicate2_mention": "academic advisor",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/St_George's_Hospital",
    "entity1_mention": "the St George's Hospital",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "409",
    "question": "List the home stadiums of the teams in the Russian Premier League?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/2011\u201312_Russian_Premier_League> . ?x <http://dbpedia.org/ontology/homeStadium> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/league",
    "predicate1_mention": "league",
    "predicate2_uri": "http://dbpedia.org/ontology/homeStadium",
    "predicate2_mention": "home stadiums",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/2011\u201312_Russian_Premier_League",
    "entity1_mention": "russian premier league",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "410",
    "question": "What are the countries for which History of Trier principal to?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/History_of_Trier>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/capital",
    "predicate1_mention": "principal",
    "predicate2_uri": "http://dbpedia.org/ontology/Country",
    "predicate2_mention": "countries",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/History_of_Trier",
    "entity1_mention": "History of Trier",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "411",
    "question": "In which country is there a dam on the Awash river?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/river> <http://dbpedia.org/resource/Awash_River> . ?x <http://dbpedia.org/property/country> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Dam>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/river",
    "predicate1_mention": "river",
    "predicate2_uri": "http://dbpedia.org/property/country",
    "predicate2_mention": "country",
    "type_uri": "http://dbpedia.org/ontology/Dam",
    "type_mention": "dam",
    "entity1_uri": "http://dbpedia.org/resource/Awash_River",
    "entity1_mention": "Awash river",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "413",
    "question": "What are the movies whose cinematographer is Gregg Toland?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Gregg_Toland>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/cinematography",
    "predicate1_mention": "cinematographer",
    "predicate2_uri": "http://dbpedia.org/ontology/Film",
    "predicate2_mention": "movies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Gregg_Toland",
    "entity1_mention": "Gregg Toland",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "414",
    "question": "Who is the person who are on the board of Freedom of the City?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Freedom_of_the_City>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/board",
    "predicate1_mention": "board",
    "predicate2_uri": "http://dbpedia.org/ontology/Person",
    "predicate2_mention": "person",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Freedom_of_the_City",
    "entity1_mention": "Freedom of the City",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "415",
    "question": "Name the sitcoms whose network's owning company is Chris-Craft Industries?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/Chris-Craft_Industries> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/owningCompany",
    "predicate1_mention": "owning company",
    "predicate2_uri": "http://dbpedia.org/ontology/network",
    "predicate2_mention": "network's",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "sitcoms",
    "entity1_uri": "http://dbpedia.org/resource/Chris-Craft_Industries",
    "entity1_mention": "chris-craft industries",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "416",
    "question": "Which astronauts went on the Gemini 8 mission?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Gemini_8>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Astronaut>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/mission",
    "predicate1_mention": "mission",
    "predicate2_uri": "http://dbpedia.org/ontology/Astronaut",
    "predicate2_mention": "astronauts",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Gemini_8",
    "entity1_mention": "Gemini 8",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "418",
    "question": "List the television shows whose Composers are associated with Strontium 90 ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Strontium_90_(band)> . ?uri <http://dbpedia.org/property/composer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedBand",
    "predicate1_mention": "associated",
    "predicate2_uri": "http://dbpedia.org/property/composer",
    "predicate2_mention": "composers",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television shows",
    "entity1_uri": "http://dbpedia.org/resource/Strontium_90_(band)",
    "entity1_mention": "Strontium 90",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "420",
    "question": "Does Caroline Augusta Foley Rhys Davids study Buddhism?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Caroline_Augusta_Foley_Rhys_Davids> <http://dbpedia.org/ontology/field> <http://dbpedia.org/resource/Buddhism> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/field",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Caroline_Augusta_Foley_Rhys_Davids",
    "entity1_mention": "Caroline Augusta Foley Rhys Davids",
    "entity2_uri": "http://dbpedia.org/resource/Buddhism",
    "entity2_mention": "buddhism"
},
{
    "id": "421",
    "question": "Who is the performer of Bengali in Platforms ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bengali_in_Platforms> <http://dbpedia.org/ontology/artist> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/artist",
    "predicate1_mention": "performer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bengali_in_Platforms",
    "entity1_mention": "Bengali in Platforms",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "422",
    "question": "In how many other states do people live, whose languages are spoken in Nebraska?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Nebraska> <http://dbpedia.org/ontology/language> ?x . ?x <http://dbpedia.org/property/region> ?uri  . }",
    "sparql_id": "103",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/language",
    "predicate1_mention": "languages",
    "predicate2_uri": "http://dbpedia.org/property/region",
    "predicate2_mention": "states",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Nebraska",
    "entity1_mention": "nebraska",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "423",
    "question": "Who founded the city where First Church of Christ, Scientist is located?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/First_Church_of_Christ,_Scientist_(Pittsburgh)> <http://dbpedia.org/property/locationTown> ?x . ?x <http://dbpedia.org/ontology/founder> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/locationTown",
    "predicate1_mention": "located",
    "predicate2_uri": "http://dbpedia.org/ontology/founder",
    "predicate2_mention": "founded",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/First_Church_of_Christ,_Scientist_(Pittsburgh)",
    "entity1_mention": "First Church of Christ, Scientist",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "424",
    "question": "Who is the owner of the bank where Thomas Secunda works ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thomas_Secunda> <http://dbpedia.org/ontology/occupation> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/occupation",
    "predicate1_mention": "works",
    "predicate2_uri": "http://dbpedia.org/property/owner",
    "predicate2_mention": "owner",
    "type_uri": "http://dbpedia.org/ontology/Bank",
    "type_mention": "bank",
    "entity1_uri": "http://dbpedia.org/resource/Thomas_Secunda",
    "entity1_mention": "Thomas Secunda",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "425",
    "question": "What are some fictional characters whose voice is in the peanuts movie?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/voice> <http://dbpedia.org/resource/The_Peanuts_Movie>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/voice",
    "predicate1_mention": "voice",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Peanuts_Movie",
    "entity1_mention": "the peanuts movie",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "426",
    "question": "What country had the title of 2001 Speedway Ekstraliga ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2001_Speedway_Ekstraliga> <http://dbpedia.org/property/title> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/title",
    "predicate1_mention": "title",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "country",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/2001_Speedway_Ekstraliga",
    "entity1_mention": "2001 Speedway Ekstraliga",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "427",
    "question": "Name the team for which Cam Plante played for which were also the tenants of MasterCard center ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cam_Plante> <http://dbpedia.org/property/playedFor> ?uri. <http://dbpedia.org/resource/MasterCard_Centre> <http://dbpedia.org/property/tenants> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/playedFor",
    "predicate1_mention": "played for",
    "predicate2_uri": "http://dbpedia.org/property/tenants",
    "predicate2_mention": "tenants",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Cam_Plante",
    "entity1_mention": "Cam Plante",
    "entity2_uri": "http://dbpedia.org/resource/MasterCard_Centre",
    "entity2_mention": "MasterCard center"
},
{
    "id": "429",
    "question": "Where is Carmel Winery?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Carmel_Winery> <http://dbpedia.org/property/locationCountry> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/locationCountry",
    "predicate1_mention": "Where",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Carmel_Winery",
    "entity1_mention": "Carmel Winery",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "430",
    "question": "In how many places have Irishmen died?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Ireland> . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/birthPlace",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate2_mention": "died",
    "type_uri": "http://dbpedia.org/ontology/Location",
    "type_mention": "places",
    "entity1_uri": "http://dbpedia.org/resource/Ireland",
    "entity1_mention": "Irishmen",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "431",
    "question": "List the stadium of the teams which uses Nea Smyrni as one of the stadium ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/stadium> <http://dbpedia.org/resource/Nea_Smyrni_Stadium> . ?x <http://dbpedia.org/property/stadium> ?uri  . }",
    "sparql_id": "11",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/stadium",
    "predicate1_mention": "stadium",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Nea_Smyrni_Stadium",
    "entity1_mention": "Nea Smyrni as one of the stadium",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "432",
    "question": "What awards have been awarded both to Ingmar bergman and James O'Brien?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ingmar_Bergman> <http://dbpedia.org/property/awards> ?uri. <http://dbpedia.org/resource/James_F._O'Brien> <http://dbpedia.org/ontology/award> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/awards",
    "predicate1_mention": "awards",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ingmar_Bergman",
    "entity1_mention": "Ingmar bergman",
    "entity2_uri": "http://dbpedia.org/resource/James_F._O'Brien",
    "entity2_mention": "James O'Brien"
},
{
    "id": "433",
    "question": "List the colonel with branch as Militia ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Militia> . ?uri <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Colonel_(United_States)>  . }",
    "sparql_id": "8",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/branch",
    "predicate1_mention": "branch",
    "predicate2_uri": "http://dbpedia.org/property/rank",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Militia",
    "entity1_mention": "militia",
    "entity2_uri": "http://dbpedia.org/resource/Colonel_(United_States)",
    "entity2_mention": "colonel"
},
{
    "id": "434",
    "question": "How many companies are located in Toronto ?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Toronto>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/locationCity",
    "predicate1_mention": "located",
    "predicate2_uri": "http://dbpedia.org/ontology/Company",
    "predicate2_mention": "companies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Toronto",
    "entity1_mention": "toronto",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "435",
    "question": "Name the chairman of the soccer club for which Mike Salmon currently plays?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mike_Salmon> <http://dbpedia.org/property/currentclub> ?x . ?x <http://dbpedia.org/property/chairman> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/currentclub",
    "predicate1_mention": "currently",
    "predicate2_uri": "http://dbpedia.org/property/chairman",
    "predicate2_mention": "chairman",
    "type_uri": "http://dbpedia.org/ontology/SoccerClub",
    "type_mention": "soccer club",
    "entity1_uri": "http://dbpedia.org/resource/Mike_Salmon",
    "entity1_mention": "Mike Salmon",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "436",
    "question": "Who is a successor of Kingship whose parents were Julius Caesar?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Julius_Caesar> . ?x <http://dbpedia.org/ontology/successor> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/parent",
    "predicate1_mention": "parents",
    "predicate2_uri": "http://dbpedia.org/ontology/successor",
    "predicate2_mention": "successor",
    "type_uri": "http://dbpedia.org/ontology/Royalty",
    "type_mention": "Kingship",
    "entity1_uri": "http://dbpedia.org/resource/Julius_Caesar",
    "entity1_mention": "julius caesar",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "437",
    "question": "Who wrote the musical based on Mary Poppins?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/basedOn> <http://dbpedia.org/resource/Mary_Poppins> . ?x <http://dbpedia.org/ontology/author> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/basedOn",
    "predicate1_mention": "based on",
    "predicate2_uri": "http://dbpedia.org/ontology/author",
    "predicate2_mention": "wrote",
    "type_uri": "http://dbpedia.org/ontology/Musical",
    "type_mention": "musical",
    "entity1_uri": "http://dbpedia.org/resource/Mary_Poppins",
    "entity1_mention": "Mary Poppins",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "438",
    "question": "Which draft team of bob Macmillan is also the prospect team of Mikhail Pashnin ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mikhail_Pashnin> <http://dbpedia.org/property/prospectTeam> ?uri. <http://dbpedia.org/resource/Bob_MacMillan> <http://dbpedia.org/property/draftTeam> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/prospectTeam",
    "predicate1_mention": "prospect team",
    "predicate2_uri": "http://dbpedia.org/property/draftTeam",
    "predicate2_mention": "draft team",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mikhail_Pashnin",
    "entity1_mention": "Mikhail Pashnin",
    "entity2_uri": "http://dbpedia.org/resource/Bob_MacMillan",
    "entity2_mention": "bob Macmillan"
},
{
    "id": "439",
    "question": "Which fields are covered by academic journals in the US?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/property/discipline> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AcademicJournal>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/country",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/discipline",
    "predicate2_mention": "fields",
    "type_uri": "http://dbpedia.org/ontology/AcademicJournal",
    "type_mention": "academic journals",
    "entity1_uri": "http://dbpedia.org/resource/United_States",
    "entity1_mention": "US",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "440",
    "question": "What river ends in Indian Ocean and also starts somewhere in Zambia?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Indian_Ocean> . ?uri <http://dbpedia.org/ontology/sourceCountry> <http://dbpedia.org/resource/Zambia>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/riverMouth",
    "predicate1_mention": "river ends",
    "predicate2_uri": "http://dbpedia.org/ontology/sourceCountry",
    "predicate2_mention": "starts",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "river",
    "entity1_uri": "http://dbpedia.org/resource/Indian_Ocean",
    "entity1_mention": "indian ocean",
    "entity2_uri": "http://dbpedia.org/resource/Zambia",
    "entity2_mention": "zambia"
},
{
    "id": "441",
    "question": "Where do the people, famous for the Panathinaikos FC reside?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Panathinaikos_F.C.> . ?x <http://dbpedia.org/property/residence> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate1_mention": "famous for",
    "predicate2_uri": "http://dbpedia.org/property/residence",
    "predicate2_mention": "reside",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people,",
    "entity1_uri": "http://dbpedia.org/resource/Panathinaikos_F.C.",
    "entity1_mention": "Panathinaikos FC",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "442",
    "question": "How many people have voiced characters sculpted by Clamp?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Clamp_(manga_artists)> . ?x <http://dbpedia.org/ontology/voice> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/creator",
    "predicate1_mention": "characters",
    "predicate2_uri": "http://dbpedia.org/ontology/voice",
    "predicate2_mention": "voiced",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Clamp_(manga_artists)",
    "entity1_mention": "clamp",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "443",
    "question": "To which company does Raymond Conner is critical to?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Raymond_Conner>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/keyPeople",
    "predicate1_mention": "critical",
    "predicate2_uri": "http://dbpedia.org/ontology/Company",
    "predicate2_mention": "company",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Raymond_Conner",
    "entity1_mention": "raymond conner",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "444",
    "question": "What team has  players  born in Dominican Republic ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Dominican_Republic> . ?x <http://dbpedia.org/ontology/team> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/birthPlace",
    "predicate1_mention": "born in",
    "predicate2_uri": "http://dbpedia.org/ontology/team",
    "predicate2_mention": "team",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Dominican_Republic",
    "entity1_mention": "dominican republic",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "445",
    "question": "What is the death place of the Elbieta Czartoryska which is also place of birth of the Charles Journet",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/El\u017cbieta_Czartoryska_(1905\u20131989)> <http://dbpedia.org/property/deathPlace> ?uri. <http://dbpedia.org/resource/Charles_Journet> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/deathPlace",
    "predicate1_mention": "death place",
    "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate2_mention": "place of birth",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/El\u017cbieta_Czartoryska_(1905\u20131989)",
    "entity1_mention": "Elbieta Czartoryska",
    "entity2_uri": "http://dbpedia.org/resource/Charles_Journet",
    "entity2_mention": "Charles Journet"
},
{
    "id": "446",
    "question": "What is the university attended by the baseball player who's known for Olin Corporation?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Olin_Corporation> . ?x <http://dbpedia.org/property/education> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballPlayer>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate1_mention": "known for",
    "predicate2_uri": "http://dbpedia.org/property/education",
    "predicate2_mention": "university",
    "type_uri": "http://dbpedia.org/ontology/BaseballPlayer",
    "type_mention": "baseball player",
    "entity1_uri": "http://dbpedia.org/resource/Olin_Corporation",
    "entity1_mention": "Olin Corporation",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "447",
    "question": "In which country did Philippe tesnire and judson huss die?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Philippe_Tesni\u00e8re> <http://dbpedia.org/property/placeOfDeath> ?uri. <http://dbpedia.org/resource/Judson_Huss> <http://dbpedia.org/property/placeOfDeath> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/placeOfDeath",
    "predicate1_mention": "die",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Philippe_Tesni\u00e8re",
    "entity1_mention": "Philippe tesnire",
    "entity2_uri": "http://dbpedia.org/resource/Judson_Huss",
    "entity2_mention": "judson huss"
},
{
    "id": "448",
    "question": "Which shows are voiced be US citizens?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/stateOfOrigin> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/voices> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/stateOfOrigin",
    "predicate1_mention": "citizens",
    "predicate2_uri": "http://dbpedia.org/property/voices",
    "predicate2_mention": "voiced",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "shows",
    "entity1_uri": "http://dbpedia.org/resource/United_States",
    "entity1_mention": "US",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "449",
    "question": "Who has starred in the amusement park attractions where Jim Dooley was performing?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Jim_Dooley> . ?x <http://dbpedia.org/property/starring> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmusementParkAttraction>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/music",
    "predicate1_mention": "performing",
    "predicate2_uri": "http://dbpedia.org/property/starring",
    "predicate2_mention": "starred",
    "type_uri": "http://dbpedia.org/ontology/AmusementParkAttraction",
    "type_mention": "amusement park attractions",
    "entity1_uri": "http://dbpedia.org/resource/Jim_Dooley",
    "entity1_mention": "Jim Dooley",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "450",
    "question": "Was Derg the anthem of Ethopia?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Derg> <http://dbpedia.org/ontology/anthem> <http://dbpedia.org/resource/Ethiopia> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/anthem",
    "predicate1_mention": "anthem",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Derg",
    "entity1_mention": "derg",
    "entity2_uri": "http://dbpedia.org/resource/Ethiopia",
    "entity2_mention": "Ethopia"
},
{
    "id": "451",
    "question": "What cities does the river goes through, whose tributary is the little black river in Arkansas?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/leftTributary> <http://dbpedia.org/resource/Little_Black_River_(Missouri_-_Arkansas)> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/leftTributary",
    "predicate1_mention": "tributary",
    "predicate2_uri": "http://dbpedia.org/ontology/city",
    "predicate2_mention": "cities",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "river",
    "entity1_uri": "http://dbpedia.org/resource/Little_Black_River_(Missouri_-_Arkansas)",
    "entity1_mention": "little black river in Arkansas",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "452",
    "question": "what region is governed by Mario Olivero?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Mario_Oliverio> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/leader",
    "predicate1_mention": "governed",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mario_Oliverio",
    "entity1_mention": "Mario Olivero",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "453",
    "question": "How many other characters are there of the plays which has a  characters name Joker (comics) ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/characters> <http://dbpedia.org/resource/Joker_(comics)> . ?x <http://dbpedia.org/property/characters> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/characters",
    "predicate1_mention": "characters",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Joker_(comics)",
    "entity1_mention": "Joker (comics)",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "454",
    "question": "What is the Team Name  of St. Viator High School ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/St._Viator_High_School> <http://dbpedia.org/property/teamName> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/teamName",
    "predicate1_mention": "team name",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/St._Viator_High_School",
    "entity1_mention": "St. Viator High School",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "456",
    "question": "What is the label of the singles whose group is Outlawz ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Outlawz> . ?x <http://dbpedia.org/property/label> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/musicalArtist",
    "predicate1_mention": "singles",
    "predicate2_uri": "http://dbpedia.org/property/label",
    "predicate2_mention": "label",
    "type_uri": "http://dbpedia.org/ontology/Single",
    "type_mention": "singles",
    "entity1_uri": "http://dbpedia.org/resource/Outlawz",
    "entity1_mention": "outlawz",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "457",
    "question": "For how many other teams have the former players of Boston Bruins played?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Boston_Bruins> . ?x <http://dbpedia.org/property/playedFor> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/formerTeam",
    "predicate1_mention": "former players",
    "predicate2_uri": "http://dbpedia.org/property/playedFor",
    "predicate2_mention": "played",
    "type_uri": "http://dbpedia.org/ontology/SportsTeam",
    "type_mention": "teams",
    "entity1_uri": "http://dbpedia.org/resource/Boston_Bruins",
    "entity1_mention": "Boston Bruins",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "458",
    "question": "Count the different origins of members of the Vitis Vinifera species.",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/Vitis_vinifera> . ?x <http://dbpedia.org/ontology/origin> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/species",
    "predicate1_mention": "species",
    "predicate2_uri": "http://dbpedia.org/ontology/origin",
    "predicate2_mention": "origins",
    "type_uri": "http://dbpedia.org/ontology/Place",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Vitis_vinifera",
    "entity1_mention": "Vitis Vinifera",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "459",
    "question": "Who is the author of Karakuri Dji Ultimo ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Karakuri_D\u00f4ji_Ultimo> <http://dbpedia.org/ontology/author> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/author",
    "predicate1_mention": "author",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Karakuri_D\u00f4ji_Ultimo",
    "entity1_mention": "Karakuri Dji Ultimo",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "460",
    "question": "List the destinations of the airlines which also serves Mediterranean Sea ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/destinations> <http://dbpedia.org/resource/Mediterranean_Sea> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/destinations",
    "predicate1_mention": "destinations",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Airline",
    "type_mention": "airlines",
    "entity1_uri": "http://dbpedia.org/resource/Mediterranean_Sea",
    "entity1_mention": "Mediterranean Sea",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "461",
    "question": "Was the  2d Command and Control Squadron barracked in Colorado?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/2d_Command_and_Control_Squadron> <http://dbpedia.org/ontology/garrison> <http://dbpedia.org/resource/Colorado> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/garrison",
    "predicate1_mention": "barracked",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/2d_Command_and_Control_Squadron",
    "entity1_mention": "2d Command and Control Squadron",
    "entity2_uri": "http://dbpedia.org/resource/Colorado",
    "entity2_mention": "colorado"
},
{
    "id": "462",
    "question": "Where do the airlines garrisoned at Manchester airport fly to?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Manchester_Airport> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/headquarter",
    "predicate1_mention": "where",
    "predicate2_uri": "http://dbpedia.org/property/destinations",
    "predicate2_mention": "garrisoned",
    "type_uri": "http://dbpedia.org/ontology/Airline",
    "type_mention": "airlines",
    "entity1_uri": "http://dbpedia.org/resource/Manchester_Airport",
    "entity1_mention": "manchester airport",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "463",
    "question": "Name the members of youth clubs which have Camp Nou as their homeground.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/ground> <http://dbpedia.org/resource/Camp_Nou> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/ground",
    "predicate1_mention": "homeground",
    "predicate2_uri": "http://dbpedia.org/property/youthclubs",
    "predicate2_mention": "youth clubs",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Camp_Nou",
    "entity1_mention": "camp nou",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "464",
    "question": "Who is the founder of Hohenau, Paraguay?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hohenau,_Paraguay> <http://dbpedia.org/ontology/founder> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/founder",
    "predicate1_mention": "founder",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hohenau,_Paraguay",
    "entity1_mention": "Hohenau, Paraguay",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "465",
    "question": "List the show related to the which was followed by Doctor Who Extra?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Doctor_Who_Extra> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/subsequentWork",
    "predicate1_mention": "extra",
    "predicate2_uri": "http://dbpedia.org/ontology/related",
    "predicate2_mention": "related",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "show",
    "entity1_uri": "http://dbpedia.org/resource/Doctor_Who_Extra",
    "entity1_mention": "Doctor Who Extra",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "468",
    "question": "Who gives the license of WXXV-DT2 ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WXXV-DT2> <http://dbpedia.org/property/licensee> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/licensee",
    "predicate1_mention": "license",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/WXXV-DT2",
    "entity1_mention": "wxxv-dt2",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "469",
    "question": "What is the result of the GazaIsrael conflict is also  the  place of the Qaqun?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gaza\u2013Israel_conflict> <http://dbpedia.org/property/result> ?uri. <http://dbpedia.org/resource/Qaqun> <http://dbpedia.org/property/place> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/result",
    "predicate1_mention": "result",
    "predicate2_uri": "http://dbpedia.org/property/place",
    "predicate2_mention": "place",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Gaza\u2013Israel_conflict",
    "entity1_mention": "GazaIsrael conflict",
    "entity2_uri": "http://dbpedia.org/resource/Qaqun",
    "entity2_mention": "qaqun"
},
{
    "id": "471",
    "question": "To how many places does the airlines fly, whose head office is located at the Gatwick Airport?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Gatwick_Airport> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/headquarter",
    "predicate1_mention": "head office",
    "predicate2_uri": "http://dbpedia.org/property/destinations",
    "predicate2_mention": "to",
    "type_uri": "http://dbpedia.org/ontology/Place",
    "type_mention": "places",
    "entity1_uri": "http://dbpedia.org/resource/Gatwick_Airport",
    "entity1_mention": "gatwick airport",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "472",
    "question": "Which political figures were awarded Screen Actors Guild Life Achievement Award?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/award",
    "predicate1_mention": "award",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award",
    "entity1_mention": "Screen Actors Guild Life Achievement Award",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "473",
    "question": "Where are the movies directed by Faisal Aman Khan recorded?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Faisal_Aman_Khan> . ?x <http://dbpedia.org/property/recorded> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/director",
    "predicate1_mention": "directed",
    "predicate2_uri": "http://dbpedia.org/property/recorded",
    "predicate2_mention": "recorded",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Faisal_Aman_Khan",
    "entity1_mention": "Faisal Aman Khan",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "475",
    "question": "How many awards have been given to Italians?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Italy> . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/birthPlace",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/awards",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Italy",
    "entity1_mention": "Italians",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "476",
    "question": "How many different layouts do cars designed by Oliver Boulay have?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Olivier_Boulay> . ?x <http://dbpedia.org/ontology/layout> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/designer",
    "predicate1_mention": "designed",
    "predicate2_uri": "http://dbpedia.org/ontology/layout",
    "predicate2_mention": "layouts",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Olivier_Boulay",
    "entity1_mention": "Oliver Boulay",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "478",
    "question": "How many other Guests are there of the television episodes whose Guests is Brian d'Arcy James ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/guests> <http://dbpedia.org/resource/Brian_d'Arcy_James> . ?x <http://dbpedia.org/property/guests> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/guests",
    "predicate1_mention": "guests",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Brian_d'Arcy_James",
    "entity1_mention": "Brian d'Arcy James",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "479",
    "question": "What awards have the narrator of the Cries and Whispers won?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cries_and_Whispers> <http://dbpedia.org/ontology/narrator> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/narrator",
    "predicate1_mention": "narrator",
    "predicate2_uri": "http://dbpedia.org/property/awards",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Cries_and_Whispers",
    "entity1_mention": "Cries and Whispers",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "480",
    "question": "Name the software which has been developed by John Fanning ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/developer> <http://dbpedia.org/resource/John_Fanning_(businessman)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/developer",
    "predicate1_mention": "developed",
    "predicate2_uri": "http://dbpedia.org/ontology/Software",
    "predicate2_mention": "software",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/John_Fanning_(businessman)",
    "entity1_mention": "John Fanning",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "481",
    "question": "What are the cities located on the sea into which the Aegean Sea flows?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Aegean_Sea> <http://dbpedia.org/ontology/outflow> ?x . ?x <http://dbpedia.org/property/cities> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/outflow",
    "predicate1_mention": "flows",
    "predicate2_uri": "http://dbpedia.org/property/cities",
    "predicate2_mention": "cities",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Aegean_Sea",
    "entity1_mention": "aegean sea",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "482",
    "question": "List the shrines of the saint whose one of the shrine is Ponza ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/majorShrine> <http://dbpedia.org/resource/Pozna\u0144> . ?x <http://dbpedia.org/ontology/majorShrine> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Saint>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/majorShrine",
    "predicate1_mention": "shrine",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Saint",
    "type_mention": "saint",
    "entity1_uri": "http://dbpedia.org/resource/Pozna\u0144",
    "entity1_mention": "Ponza",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "483",
    "question": "Whichi  burial place of the Henri, Duke of Rohan is also the birth place of Michel Frutschi ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Henri,_Duke_of_Rohan> <http://dbpedia.org/ontology/placeOfBurial> ?uri. <http://dbpedia.org/resource/Michel_Frutschi> <http://dbpedia.org/property/birthPlace> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/placeOfBurial",
    "predicate1_mention": "burial place",
    "predicate2_uri": "http://dbpedia.org/property/birthPlace",
    "predicate2_mention": "birth place",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Henri,_Duke_of_Rohan",
    "entity1_mention": "Henri, Duke of Rohan",
    "entity2_uri": "http://dbpedia.org/resource/Michel_Frutschi",
    "entity2_mention": "Michel Frutschi"
},
{
    "id": "484",
    "question": "Who is the former partner of the pupil of Dalilah Sappenfield?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Dalilah_Sappenfield> . ?x <http://dbpedia.org/ontology/formerPartner> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/coach",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/formerPartner",
    "predicate2_mention": "former partner",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Dalilah_Sappenfield",
    "entity1_mention": "Dalilah Sappenfield",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "485",
    "question": "Who died due to Morphine ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/deathCause> <http://dbpedia.org/resource/Morphine>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/deathCause",
    "predicate1_mention": "died due to",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Morphine",
    "entity1_mention": "morphine",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "486",
    "question": "How many mammals are in the Chordate phylum?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/phylum> <http://dbpedia.org/resource/Chordate>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/phylum",
    "predicate1_mention": "phylum",
    "predicate2_uri": "http://dbpedia.org/ontology/Mammal",
    "predicate2_mention": "mammals",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Chordate",
    "entity1_mention": "chordate",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "487",
    "question": "How many people were opponents of the ones buried in the tower of London?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Tower_of_London> . ?x <http://dbpedia.org/ontology/opponent> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/restingPlace",
    "predicate1_mention": "buried in",
    "predicate2_uri": "http://dbpedia.org/ontology/opponent",
    "predicate2_mention": "opponents",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Tower_of_London",
    "entity1_mention": "tower of London",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "489",
    "question": "Name the species of Southwest African lion ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Southwest_African_lion> <http://dbpedia.org/ontology/species> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/species",
    "predicate1_mention": "species",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Southwest_African_lion",
    "entity1_mention": "southwest african lion",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "490",
    "question": "In which country did the planes designed by Ursula Hanle originate?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Ursula_H\u00e4nle> . ?x <http://dbpedia.org/property/nationalOrigin> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Aircraft>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/designer",
    "predicate1_mention": "designed",
    "predicate2_uri": "http://dbpedia.org/property/nationalOrigin",
    "predicate2_mention": "originate",
    "type_uri": "http://dbpedia.org/ontology/Aircraft",
    "type_mention": "originate",
    "entity1_uri": "http://dbpedia.org/resource/Ursula_H\u00e4nle",
    "entity1_mention": "Ursula Hanle",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "491",
    "question": "List the pole drivers in the grand prixes where Williams Grand Prix Engineering was a first team?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/firstTeam> <http://dbpedia.org/resource/Williams_Grand_Prix_Engineering> . ?x <http://dbpedia.org/ontology/poleDriver> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GrandPrix>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/firstTeam",
    "predicate1_mention": "first team",
    "predicate2_uri": "http://dbpedia.org/ontology/poleDriver",
    "predicate2_mention": "pole drivers",
    "type_uri": "http://dbpedia.org/ontology/GrandPrix",
    "type_mention": "Grand Prix",
    "entity1_uri": "http://dbpedia.org/resource/Williams_Grand_Prix_Engineering",
    "entity1_mention": "Williams Grand Prix Engineering",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "493",
    "question": "Which newspaper owned by Schibsted is published in Swedish ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/language> <http://dbpedia.org/resource/Swedish_language> . ?uri <http://dbpedia.org/property/owners> <http://dbpedia.org/resource/Schibsted>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/language",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/owners",
    "predicate2_mention": "owned",
    "type_uri": "http://dbpedia.org/ontology/Newspaper",
    "type_mention": "newspaper",
    "entity1_uri": "http://dbpedia.org/resource/Swedish_language",
    "entity1_mention": "swedish",
    "entity2_uri": "http://dbpedia.org/resource/Schibsted",
    "entity2_mention": "schibsted"
},
{
    "id": "494",
    "question": "In how many different places have ehtics philosophers died?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/Ethics> . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/mainInterests",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/placeOfDeath",
    "predicate2_mention": "died",
    "type_uri": "http://dbpedia.org/ontology/Place",
    "type_mention": "places",
    "entity1_uri": "http://dbpedia.org/resource/Ethics",
    "entity1_mention": "ehtics",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "495",
    "question": "What political ideology of the Palang Dharma Party is relegion of Inthakin?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Palang_Dharma_Party> <http://dbpedia.org/ontology/ideology> ?uri. <http://dbpedia.org/resource/Inthakin> <http://dbpedia.org/ontology/type> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/ideology",
    "predicate1_mention": "ideology",
    "predicate2_uri": "http://dbpedia.org/ontology/type",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Palang_Dharma_Party",
    "entity1_mention": "palang dharma party",
    "entity2_uri": "http://dbpedia.org/resource/Inthakin",
    "entity2_mention": "inthakin"
},
{
    "id": "496",
    "question": "Where did Fort Lauderdale Strikers season of 2016 take place?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2016_Fort_Lauderdale_Strikers_season> <http://dbpedia.org/ontology/ground> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/ground",
    "predicate1_mention": "take place",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/2016_Fort_Lauderdale_Strikers_season",
    "entity1_mention": "Fort Lauderdale Strikers season of 2016",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "497",
    "question": "What are some relatives of the people who fought in Operation Barbarossa?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Operation_Barbarossa> . ?x <http://dbpedia.org/ontology/relation> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/battle",
    "predicate1_mention": "fought",
    "predicate2_uri": "http://dbpedia.org/ontology/relation",
    "predicate2_mention": "relatives",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Operation_Barbarossa",
    "entity1_mention": "Operation Barbarossa",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "498",
    "question": "What are the other key people of the non-profit organisations whose one of the  key person is Joe Green ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Joe_Green_(entrepreneur)> . ?x <http://dbpedia.org/property/keyPeople> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Non-ProfitOrganisation>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/keyPeople",
    "predicate1_mention": "key people",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Non-ProfitOrganisation",
    "type_mention": "non-profit organisations",
    "entity1_uri": "http://dbpedia.org/resource/Joe_Green_(entrepreneur)",
    "entity1_mention": "Joe Green",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "500",
    "question": "What writers have nationality as Statelessness?  ",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Statelessness>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/nationality",
    "predicate1_mention": "nationality",
    "predicate2_uri": "http://dbpedia.org/ontology/Writer",
    "predicate2_mention": "writers",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Statelessness",
    "entity1_mention": "Statelessness",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "501",
    "question": "Who is the leader of United States House of Representatives elections, 1788 and 1789 ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789> <http://dbpedia.org/property/leader> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/leader",
    "predicate1_mention": "leader",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789",
    "entity1_mention": "United States House of Representatives elections, 1788 and 1789",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "503",
    "question": "Is Audie Murphy buried in the Arlington national cementery?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Audie_Murphy> <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/Arlington_National_Cemetery> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/placeofburial",
    "predicate1_mention": "buried",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Audie_Murphy",
    "entity1_mention": "Audie Murphy",
    "entity2_uri": "http://dbpedia.org/resource/Arlington_National_Cemetery",
    "entity2_mention": "Arlington national cementery"
},
{
    "id": "505",
    "question": "How many people have written stuff broadcasted on the Tokyo Broadcasting System?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/Tokyo_Broadcasting_System> . ?x <http://dbpedia.org/property/writer> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/network",
    "predicate1_mention": "broadcasted",
    "predicate2_uri": "http://dbpedia.org/property/writer",
    "predicate2_mention": "written",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Tokyo_Broadcasting_System",
    "entity1_mention": "Tokyo Broadcasting System",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "506",
    "question": "List the awards received of the person whose child is Daine Disney Miller?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Diane_Disney_Miller> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/children",
    "predicate1_mention": "child",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "awards",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "person",
    "entity1_uri": "http://dbpedia.org/resource/Diane_Disney_Miller",
    "entity1_mention": "Daine Disney Miller",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "507",
    "question": "How many more teams have rented the stadium used by Raptors 905?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Raptors_905> <http://dbpedia.org/property/arena> ?x . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "sparql_id": "403",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/arena",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/tenant",
    "predicate2_mention": "rented",
    "type_uri": "http://dbpedia.org/ontology/Stadium",
    "type_mention": "stadium",
    "entity1_uri": "http://dbpedia.org/resource/Raptors_905",
    "entity1_mention": "raptors 905",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "508",
    "question": "Give me a count of musicians who play an instrument developed by George Beauchamp ?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/George_Beauchamp> . ?uri <http://dbpedia.org/ontology/instrument> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/keyPeople",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/instrument",
    "predicate2_mention": "instrument",
    "type_uri": "http://dbpedia.org/ontology/MusicalArtist",
    "type_mention": "musicians",
    "entity1_uri": "http://dbpedia.org/resource/George_Beauchamp",
    "entity1_mention": "George Beauchamp",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "509",
    "question": "What is the place of birth of Lauren Briggs ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lauren_Briggs> <http://dbpedia.org/property/placeOfBirth> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate1_mention": "place of birth",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lauren_Briggs",
    "entity1_mention": "lauren briggs",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "511",
    "question": "Give me an estimate of the number of manufacturers whose products are managed by MTR?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/MTR> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/operator",
    "predicate1_mention": "products",
    "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate2_mention": "manufacturers",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/MTR",
    "entity1_mention": "mtr",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "513",
    "question": "What are a few molluscas whose family is Buccinidae?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Buccinidae>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mollusca>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/family",
    "predicate1_mention": "family",
    "predicate2_uri": "http://dbpedia.org/ontology/Mollusca",
    "predicate2_mention": "molluscas",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Buccinidae",
    "entity1_mention": "buccinidae",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "514",
    "question": "What is the agency name of the Ministry of Information and Communication Technology (Thailand) and distribution region  of the Channel 9 MCOT HD ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ministry_of_Information_and_Communication_Technology_(Thailand)> <http://dbpedia.org/property/agencyName> ?uri. <http://dbpedia.org/resource/Channel_9_MCOT_HD> <http://dbpedia.org/property/city> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/agencyName",
    "predicate1_mention": "agency name",
    "predicate2_uri": "http://dbpedia.org/property/city",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ministry_of_Information_and_Communication_Technology_(Thailand)",
    "entity1_mention": "Ministry of Information and Communication Technology (Thailand)",
    "entity2_uri": "http://dbpedia.org/resource/Channel_9_MCOT_HD",
    "entity2_mention": "Channel 9 MCOT HD"
},
{
    "id": "515",
    "question": "What type of government is elected in Kumta?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kumta> <http://dbpedia.org/ontology/governmentType> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/governmentType",
    "predicate1_mention": "type of government",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kumta",
    "entity1_mention": "kumta",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "516",
    "question": "What company developed Mac OS 9 and also brought Tiny Tower to the market?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mac_OS_9> <http://dbpedia.org/ontology/developer> ?uri. <http://dbpedia.org/resource/Tiny_Tower> <http://dbpedia.org/property/distributor> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/developer",
    "predicate1_mention": "developed",
    "predicate2_uri": "http://dbpedia.org/property/distributor",
    "predicate2_mention": "brought",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mac_OS_9",
    "entity1_mention": "Mac OS 9",
    "entity2_uri": "http://dbpedia.org/resource/Tiny_Tower",
    "entity2_mention": "Tiny Tower"
},
{
    "id": "517",
    "question": "Which currency is primarily used by the company which is the distributing label of VDE-Gallo Records?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/VDE-Gallo_Records> <http://dbpedia.org/ontology/distributingLabel> ?x . ?x <http://dbpedia.org/property/currency> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/distributingLabel",
    "predicate1_mention": "distributing label",
    "predicate2_uri": "http://dbpedia.org/property/currency",
    "predicate2_mention": "currency",
    "type_uri": "http://dbpedia.org/ontology/Organisation",
    "type_mention": "company",
    "entity1_uri": "http://dbpedia.org/resource/VDE-Gallo_Records",
    "entity1_mention": "vde-gallo records",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "518",
    "question": "Who all have been in bands which have recorded their work in the Electric Lady Studios?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/recordedIn> <http://dbpedia.org/resource/Electric_Lady_Studios> . ?uri <http://dbpedia.org/property/associatedActs> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/recordedIn",
    "predicate1_mention": "recorded",
    "predicate2_uri": "http://dbpedia.org/property/associatedActs",
    "predicate2_mention": "bands",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "Who",
    "entity1_uri": "http://dbpedia.org/resource/Electric_Lady_Studios",
    "entity1_mention": "Electric Lady Studios",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "519",
    "question": "What is the label of things produced by the band If?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/If_(band)> . ?x <http://dbpedia.org/property/label> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/artist",
    "predicate1_mention": "things produced",
    "predicate2_uri": "http://dbpedia.org/property/label",
    "predicate2_mention": "label",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/If_(band)",
    "entity1_mention": "band if",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "520",
    "question": "What is the television show whose subsequent work is Crusade (TV series) and developed by  J. Michael Straczynski?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Crusade_(TV_series)> . ?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/J._Michael_Straczynski>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/subsequentWork",
    "predicate1_mention": "subsequent work",
    "predicate2_uri": "http://dbpedia.org/ontology/developer",
    "predicate2_mention": "developed",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television show",
    "entity1_uri": "http://dbpedia.org/resource/Crusade_(TV_series)",
    "entity1_mention": "Crusade (TV series)",
    "entity2_uri": "http://dbpedia.org/resource/J._Michael_Straczynski",
    "entity2_mention": "J. Michael Straczynski"
},
{
    "id": "521",
    "question": "What people were born in Ridgewood, New Jersey?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Ridgewood,_New_Jersey>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/birthPlace",
    "predicate1_mention": "born in",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Ridgewood,_New_Jersey",
    "entity1_mention": "Ridgewood, New Jersey",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "522",
    "question": "Which content license of the MSX BASIC is also the profession of the Laura K. Ipsen ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/MSX_BASIC> <http://dbpedia.org/property/license> ?uri. <http://dbpedia.org/resource/Laura_K._Ipsen> <http://dbpedia.org/ontology/occupation> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/license",
    "predicate1_mention": "license",
    "predicate2_uri": "http://dbpedia.org/ontology/occupation",
    "predicate2_mention": "profession",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/MSX_BASIC",
    "entity1_mention": "MSX BASIC",
    "entity2_uri": "http://dbpedia.org/resource/Laura_K._Ipsen",
    "entity2_mention": "Laura K. Ipsen"
},
{
    "id": "526",
    "question": "What is the POD of the successor of Pmare I ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/P\u014dmare_I> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate2_mention": "POD",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/P\u014dmare_I",
    "entity1_mention": "Pmare I",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "527",
    "question": "Who is the producer of Captain EO ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Captain_EO> <http://dbpedia.org/property/producer> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/producer",
    "predicate1_mention": "producer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Captain_EO",
    "entity1_mention": "captain eo",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "528",
    "question": "List all the home stadium of the soccer clubs which has one of the home stadium as Nairobi ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/homeStadium> <http://dbpedia.org/resource/Nairobi> . ?x <http://dbpedia.org/property/homeStadium> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/homeStadium",
    "predicate1_mention": "home stadium",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/SoccerClub",
    "type_mention": "soccer clubs",
    "entity1_uri": "http://dbpedia.org/resource/Nairobi",
    "entity1_mention": "nairobi",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "529",
    "question": "How many utopian and dystopian fiction books are there?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Utopian_and_dystopian_fiction>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/literaryGenre",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Utopian_and_dystopian_fiction",
    "entity1_mention": "utopian and dystopian fiction",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "530",
    "question": "Which college of Luke List (golfer) is the alma mater of K. Terry Dornbush",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Luke_List_(golfer)> <http://dbpedia.org/property/college> ?uri. <http://dbpedia.org/resource/K._Terry_Dornbush> <http://dbpedia.org/property/almaMater> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/college",
    "predicate1_mention": "college",
    "predicate2_uri": "http://dbpedia.org/property/almaMater",
    "predicate2_mention": "alma mater",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Luke_List_(golfer)",
    "entity1_mention": "Luke List (golfer)",
    "entity2_uri": "http://dbpedia.org/resource/K._Terry_Dornbush",
    "entity2_mention": "K. Terry Dornbush"
},
{
    "id": "531",
    "question": "What are the academic interest of Philip Novak?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Philip_Novak> <http://dbpedia.org/property/mainInterests> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/mainInterests",
    "predicate1_mention": "interest",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Philip_Novak",
    "entity1_mention": "philip novak",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "532",
    "question": "Does the Westchester Avenue fall under the Bronx?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Westchester_Avenue> <http://dbpedia.org/property/counties> <http://dbpedia.org/resource/The_Bronx> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/counties",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Westchester_Avenue",
    "entity1_mention": "westchester avenue",
    "entity2_uri": "http://dbpedia.org/resource/The_Bronx",
    "entity2_mention": "the Bronx"
},
{
    "id": "533",
    "question": "Count the total number of software whose programming language is C++ and operating system is Microsoft Windows?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/C++> . ?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows> } ",
    "sparql_id": "108",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/programmingLanguage",
    "predicate1_mention": "programming language",
    "predicate2_uri": "http://dbpedia.org/ontology/operatingSystem",
    "predicate2_mention": "operating system",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/C++",
    "entity1_mention": "c++",
    "entity2_uri": "http://dbpedia.org/resource/Microsoft_Windows",
    "entity2_mention": "microsoft windows"
},
{
    "id": "534",
    "question": "How many albums were released under the Victor Entertainment label?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Victor_Entertainment>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/label",
    "predicate1_mention": "label",
    "predicate2_uri": "http://dbpedia.org/ontology/Album",
    "predicate2_mention": "albums",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Victor_Entertainment",
    "entity1_mention": "Victor Entertainment",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "535",
    "question": "Does NOAAS Davidson (S 331) have a homeport in Seattle?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/NOAAS_Davidson_(S_331)> <http://dbpedia.org/ontology/homeport> <http://dbpedia.org/resource/Seattle> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/homeport",
    "predicate1_mention": "homeport",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/NOAAS_Davidson_(S_331)",
    "entity1_mention": "NOAAS Davidson (S 331)",
    "entity2_uri": "http://dbpedia.org/resource/Seattle",
    "entity2_mention": "seattle"
},
{
    "id": "538",
    "question": "Which office holder's resting place is Alta Mesa Memorial park and has adrian A. Basora as successor ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Adrian_A._Basora> . ?uri <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Alta_Mesa_Memorial_Park>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "http://dbpedia.org/property/restingPlace",
    "predicate2_mention": "resting place",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "office holder's",
    "entity1_uri": "http://dbpedia.org/resource/Adrian_A._Basora",
    "entity1_mention": "adrian A. Basora",
    "entity2_uri": "http://dbpedia.org/resource/Alta_Mesa_Memorial_Park",
    "entity2_mention": "Alta Mesa Memorial park"
},
{
    "id": "540",
    "question": "Which governor of Charles Willing byrd fought the battle of Siege of Fort Recovery ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Siege_of_Fort_Recovery> . ?uri <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Charles_Willing_Byrd>  . }",
    "sparql_id": "8",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/battle",
    "predicate1_mention": "battle",
    "predicate2_uri": "http://dbpedia.org/property/governor",
    "predicate2_mention": "governor",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Siege_of_Fort_Recovery",
    "entity1_mention": "Siege of Fort Recovery",
    "entity2_uri": "http://dbpedia.org/resource/Charles_Willing_Byrd",
    "entity2_mention": "Charles Willing byrd"
},
{
    "id": "541",
    "question": "On what subject does WTJC-LP air?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WTJC-LP> <http://dbpedia.org/property/format> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/format",
    "predicate1_mention": "subject",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/WTJC-LP",
    "entity1_mention": "wtjc-lp",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "542",
    "question": "Which company owns Evraz ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Evraz> <http://dbpedia.org/ontology/owningCompany> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/owningCompany",
    "predicate1_mention": "company owns",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Evraz",
    "entity1_mention": "evraz",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "543",
    "question": "Who is the leader of Panki block ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Panki_block> <http://dbpedia.org/ontology/leaderName> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/leaderName",
    "predicate1_mention": "leader",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Panki_block",
    "entity1_mention": "panki block",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "544",
    "question": "Which parent company of  Edsel was the first team of the 1967 Mexican Grand Prix ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Edsel> <http://dbpedia.org/property/parent> ?uri. <http://dbpedia.org/resource/1967_Mexican_Grand_Prix> <http://dbpedia.org/property/firstTeam> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/parent",
    "predicate1_mention": "parent",
    "predicate2_uri": "http://dbpedia.org/property/firstTeam",
    "predicate2_mention": "first team",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Edsel",
    "entity1_mention": "edsel",
    "entity2_uri": "http://dbpedia.org/resource/1967_Mexican_Grand_Prix",
    "entity2_mention": "the 1967 Mexican Grand Prix"
},
{
    "id": "545",
    "question": "Name the company whose products's predecessor is Boeing Vertol CH-46 Sea Knight?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Boeing_Vertol_CH-46_Sea_Knight> . ?uri <http://dbpedia.org/property/products> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/predecessor",
    "predicate1_mention": "predecessor",
    "predicate2_uri": "http://dbpedia.org/property/products",
    "predicate2_mention": "products's",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "company",
    "entity1_uri": "http://dbpedia.org/resource/Boeing_Vertol_CH-46_Sea_Knight",
    "entity1_mention": "Boeing Vertol CH-46 Sea Knight",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "546",
    "question": "Name the species of Liger ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Liger> <http://dbpedia.org/ontology/species> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/species",
    "predicate1_mention": "species",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Liger",
    "entity1_mention": "liger",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "547",
    "question": "Which fictional character's relative is Clan McDuck and belongs to American Pekin duck ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Clan_McDuck> . ?uri <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/American_Pekin_duck>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/relatives",
    "predicate1_mention": "relative",
    "predicate2_uri": "http://dbpedia.org/ontology/species",
    "predicate2_mention": "belongs to",
    "type_uri": "http://dbpedia.org/ontology/FictionalCharacter",
    "type_mention": "fictional character's",
    "entity1_uri": "http://dbpedia.org/resource/Clan_McDuck",
    "entity1_mention": "clan mcduck",
    "entity2_uri": "http://dbpedia.org/resource/American_Pekin_duck",
    "entity2_mention": "American Pekin duck"
},
{
    "id": "548",
    "question": "Is michelangelo the painter of The Persian Boy?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Persian_Boy> <http://dbpedia.org/ontology/illustrator> <http://dbpedia.org/resource/Michelangelo> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/illustrator",
    "predicate1_mention": "michelangelo",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Persian_Boy",
    "entity1_mention": "The Persian Boy",
    "entity2_uri": "http://dbpedia.org/resource/Michelangelo",
    "entity2_mention": "michelangelo"
},
{
    "id": "549",
    "question": "Name the line of the Vadodara Junction railway station which is also the  hub airport of the Pawan Hans?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vadodara_Junction_railway_station> <http://dbpedia.org/property/line> ?uri. <http://dbpedia.org/resource/Pawan_Hans> <http://dbpedia.org/ontology/hubAirport> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/line",
    "predicate1_mention": "line",
    "predicate2_uri": "http://dbpedia.org/ontology/hubAirport",
    "predicate2_mention": "hub airport",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Vadodara_Junction_railway_station",
    "entity1_mention": "Vadodara Junction railway station",
    "entity2_uri": "http://dbpedia.org/resource/Pawan_Hans",
    "entity2_mention": "pawan hans"
},
{
    "id": "550",
    "question": "Which television shows has sound format as 5.1 surround?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/format> <http://dbpedia.org/resource/5.1_surround_sound>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/format",
    "predicate1_mention": "format",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "television shows",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/5.1_surround_sound",
    "entity1_mention": "sound format as 5.1 surround",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "551",
    "question": "Which boarder country of Korean Peninsula was the state of Sodagreen ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Korean_Peninsula> <http://dbpedia.org/ontology/border> ?uri. <http://dbpedia.org/resource/Sodagreen> <http://dbpedia.org/ontology/country> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/border",
    "predicate1_mention": "boarder",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "country",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Korean_Peninsula",
    "entity1_mention": "Korean Peninsula",
    "entity2_uri": "http://dbpedia.org/resource/Sodagreen",
    "entity2_mention": "sodagreen"
},
{
    "id": "552",
    "question": "Where is the capital of Kelsey Creek located?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kelsey_Creek> <http://dbpedia.org/ontology/region> ?x . ?x <http://dbpedia.org/ontology/countySeat> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/region",
    "predicate1_mention": "located",
    "predicate2_uri": "http://dbpedia.org/ontology/countySeat",
    "predicate2_mention": "capital",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kelsey_Creek",
    "entity1_mention": "kelsey creek",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "553",
    "question": "Name the TV show whose opening theme is Gary Portnoy and the subsequent work is Frasier?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Gary_Portnoy> . ?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Frasier>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/openingTheme",
    "predicate1_mention": "opening theme",
    "predicate2_uri": "http://dbpedia.org/ontology/subsequentWork",
    "predicate2_mention": "subsequent work",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "TV show",
    "entity1_uri": "http://dbpedia.org/resource/Gary_Portnoy",
    "entity1_mention": "Gary Portnoy",
    "entity2_uri": "http://dbpedia.org/resource/Frasier",
    "entity2_mention": "frasier"
},
{
    "id": "554",
    "question": "Which president was served by someone whose lieutenant is Lewis Stuyvesant Chanler?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/lieutenant> <http://dbpedia.org/resource/Lewis_Stuyvesant_Chanler> . ?x <http://dbpedia.org/ontology/president> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/lieutenant",
    "predicate1_mention": "lieutenant",
    "predicate2_uri": "http://dbpedia.org/ontology/president",
    "predicate2_mention": "president",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lewis_Stuyvesant_Chanler",
    "entity1_mention": "Lewis Stuyvesant Chanler",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "555",
    "question": "What does the famous relative of Levon Ashotovich Grigorian do for a living?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Levon_Ashotovich_Grigorian> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/relatives",
    "predicate1_mention": "relative",
    "predicate2_uri": "http://dbpedia.org/ontology/occupation",
    "predicate2_mention": "do for a living",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Levon_Ashotovich_Grigorian",
    "entity1_mention": "Levon Ashotovich Grigorian",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "556",
    "question": "Whose county seats are Mediolanum and History of Trier?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Mediolanum> . ?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/History_of_Trier> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/capital",
    "predicate1_mention": "county seats",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mediolanum",
    "entity1_mention": "mediolanum",
    "entity2_uri": "http://dbpedia.org/resource/History_of_Trier",
    "entity2_mention": "History of Trier"
},
{
    "id": "557",
    "question": "How many movies did Joel Schumacher direct?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Joel_Schumacher>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/director",
    "predicate1_mention": "direct",
    "predicate2_uri": "http://dbpedia.org/ontology/Film",
    "predicate2_mention": "movies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Joel_Schumacher",
    "entity1_mention": "Joel Schumacher",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "558",
    "question": "How many games are played at universities in Metro Manilla?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/state> <http://dbpedia.org/resource/Metro_Manila> . ?x <http://dbpedia.org/property/athletics> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/state",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/athletics",
    "predicate2_mention": "games",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Metro_Manila",
    "entity1_mention": "Metro Manilla",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "560",
    "question": "Is Compaq a software company?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Compaq> <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Software> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/industry",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Compaq",
    "entity1_mention": "compaq",
    "entity2_uri": "http://dbpedia.org/resource/Software",
    "entity2_mention": "software"
},
{
    "id": "561",
    "question": "Name the president served by a lieutenant who succeeded Bob C Riley.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Bob_C._Riley> . ?uri <http://dbpedia.org/ontology/lieutenant> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/predecessor",
    "predicate1_mention": "succeeded",
    "predicate2_uri": "http://dbpedia.org/ontology/lieutenant",
    "predicate2_mention": "lieutenant",
    "type_uri": "http://dbpedia.org/ontology/President",
    "type_mention": "president",
    "entity1_uri": "http://dbpedia.org/resource/Bob_C._Riley",
    "entity1_mention": "Bob C Riley",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "564",
    "question": "How many owners are there of things located in Alabama?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Alabama> . ?x <http://dbpedia.org/ontology/owner> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/city",
    "predicate1_mention": "located",
    "predicate2_uri": "http://dbpedia.org/ontology/owner",
    "predicate2_mention": "owners",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Alabama",
    "entity1_mention": "alabama",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "565",
    "question": "Where is Oskar Blues located ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Oskar_Blues_Brewery> <http://dbpedia.org/property/location> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/location",
    "predicate1_mention": "located",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Oskar_Blues_Brewery",
    "entity1_mention": "oskar blues",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "566",
    "question": "Was the FIS Alpine World Ski Championship of 1950 held in Colorado?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/FIS_Alpine_World_Ski_Championships_1950> <http://dbpedia.org/property/hostCity> <http://dbpedia.org/resource/Colorado> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/hostCity",
    "predicate1_mention": "held in",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/FIS_Alpine_World_Ski_Championships_1950",
    "entity1_mention": "FIS Alpine World Ski Championship of 1950",
    "entity2_uri": "http://dbpedia.org/resource/Colorado",
    "entity2_mention": "colorado"
},
{
    "id": "567",
    "question": "What are the outflow of the lakes which also has one of the outflow as Congo River ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/outflow> <http://dbpedia.org/resource/Congo_River> . ?x <http://dbpedia.org/ontology/outflow> ?uri  . }",
    "sparql_id": "11",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/outflow",
    "predicate1_mention": "outflow",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Congo_River",
    "entity1_mention": "Congo River",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "568",
    "question": "List the science fiction shows broadcasted on BBC HD ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/genre> <http://dbpedia.org/resource/Science_fiction> . ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_HD>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/genre",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/network",
    "predicate2_mention": "broadcasted",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "shows",
    "entity1_uri": "http://dbpedia.org/resource/Science_fiction",
    "entity1_mention": "science fiction",
    "entity2_uri": "http://dbpedia.org/resource/BBC_HD",
    "entity2_mention": "bbc hd"
},
{
    "id": "570",
    "question": "What is the division of the companies who make Runes of Magic?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Runes_of_Magic> . ?x <http://dbpedia.org/ontology/division> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/products",
    "predicate1_mention": "make",
    "predicate2_uri": "http://dbpedia.org/ontology/division",
    "predicate2_mention": "division",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "companies",
    "entity1_uri": "http://dbpedia.org/resource/Runes_of_Magic",
    "entity1_mention": "Runes of Magic",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "571",
    "question": "What is the basketball team whose President's college is Brockport Golden Eagles?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/college> <http://dbpedia.org/resource/Brockport_Golden_Eagles> . ?uri <http://dbpedia.org/property/president> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballTeam>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/college",
    "predicate1_mention": "college",
    "predicate2_uri": "http://dbpedia.org/property/president",
    "predicate2_mention": "president's",
    "type_uri": "http://dbpedia.org/ontology/BasketballTeam",
    "type_mention": "basketball team",
    "entity1_uri": "http://dbpedia.org/resource/Brockport_Golden_Eagles",
    "entity1_mention": "brockport golden eagles",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "572",
    "question": "What common teams do Ramiro Pea and Bruce Bochy share?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ramiro_Pe\u00f1a> <http://dbpedia.org/ontology/team> ?uri. <http://dbpedia.org/resource/Bruce_Bochy> <http://dbpedia.org/ontology/team> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/team",
    "predicate1_mention": "teams",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ramiro_Pe\u00f1a",
    "entity1_mention": "ramiro pea",
    "entity2_uri": "http://dbpedia.org/resource/Bruce_Bochy",
    "entity2_mention": "bruce bochy"
},
{
    "id": "573",
    "question": "In which sitcom did Jeff Conaway acted and had TNT as its network ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/TNT_(TV_channel)> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jeff_Conaway>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/network",
    "predicate1_mention": "network",
    "predicate2_uri": "http://dbpedia.org/ontology/starring",
    "predicate2_mention": "acted",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "sitcom",
    "entity1_uri": "http://dbpedia.org/resource/TNT_(TV_channel)",
    "entity1_mention": "tnt",
    "entity2_uri": "http://dbpedia.org/resource/Jeff_Conaway",
    "entity2_mention": "Jeff Conaway"
},
{
    "id": "575",
    "question": "How many buildings are located in the jurisdiction of John Tory?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/leaderName> <http://dbpedia.org/resource/John_Tory> . ?uri <http://dbpedia.org/property/location> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/leaderName",
    "predicate1_mention": "jurisdiction",
    "predicate2_uri": "http://dbpedia.org/property/location",
    "predicate2_mention": "located",
    "type_uri": "http://dbpedia.org/ontology/Building",
    "type_mention": "buildings",
    "entity1_uri": "http://dbpedia.org/resource/John_Tory",
    "entity1_mention": "John Tory",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "576",
    "question": "Which railway line goes through the stations which are a part of the North Caucasus railway?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/North_Caucasus_Railway> . ?x <http://dbpedia.org/ontology/servingRailwayLine> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Station>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/type",
    "predicate1_mention": "which",
    "predicate2_uri": "http://dbpedia.org/ontology/servingRailwayLine",
    "predicate2_mention": "railway",
    "type_uri": "http://dbpedia.org/ontology/Station",
    "type_mention": "stations",
    "entity1_uri": "http://dbpedia.org/resource/North_Caucasus_Railway",
    "entity1_mention": "North Caucasus railway",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "577",
    "question": "Whose doctoral student is tienne Biler ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/\u00c9tienne_Bi\u00e9ler> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/doctoralStudent",
    "predicate1_mention": "doctoral student",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/\u00c9tienne_Bi\u00e9ler",
    "entity1_mention": "tienne Biler",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "578",
    "question": "What are some bands originating in London?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/London>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/hometown",
    "predicate1_mention": "originating in",
    "predicate2_uri": "http://dbpedia.org/ontology/Band",
    "predicate2_mention": "bands",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/London",
    "entity1_mention": "london",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "579",
    "question": "what awards have been giving to Muhammad Yunus?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Muhammad_Yunus> <http://dbpedia.org/ontology/award> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/award",
    "predicate1_mention": "awards",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Muhammad_Yunus",
    "entity1_mention": "muhammad yunus",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "581",
    "question": "What are some video games whose music is composed by an employ of the company Creatures?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Creatures_(company)> . ?uri <http://dbpedia.org/property/composer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/occupation",
    "predicate1_mention": "company",
    "predicate2_uri": "http://dbpedia.org/property/composer",
    "predicate2_mention": "composed",
    "type_uri": "http://dbpedia.org/ontology/VideoGame",
    "type_mention": "video games",
    "entity1_uri": "http://dbpedia.org/resource/Creatures_(company)",
    "entity1_mention": "company Creatures",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "582",
    "question": "Who are the people which ITV(TV network) has employed?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/ITV_(TV_network)>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/employer",
    "predicate1_mention": "employed",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/ITV_(TV_network)",
    "entity1_mention": "ITV(TV network)",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "583",
    "question": "Which televion show's theme music was given by Ron Grainer and is broadcasted by BBC HD ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Ron_Grainer> . ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_HD>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/themeMusicComposer",
    "predicate1_mention": "theme music",
    "predicate2_uri": "http://dbpedia.org/ontology/network",
    "predicate2_mention": "broadcasted by",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "televion show's",
    "entity1_uri": "http://dbpedia.org/resource/Ron_Grainer",
    "entity1_mention": "Ron Grainer",
    "entity2_uri": "http://dbpedia.org/resource/BBC_HD",
    "entity2_mention": "bbc hd"
},
{
    "id": "584",
    "question": "What team did J P Paris was former team of Bert McCaffrey play for?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/J._P._Paris\u00e9> <http://dbpedia.org/property/playedFor> ?uri. <http://dbpedia.org/resource/Bert_McCaffrey> <http://dbpedia.org/ontology/formerTeam> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/playedFor",
    "predicate1_mention": "play for",
    "predicate2_uri": "http://dbpedia.org/ontology/formerTeam",
    "predicate2_mention": "former team",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/J._P._Paris\u00e9",
    "entity1_mention": "J P Paris",
    "entity2_uri": "http://dbpedia.org/resource/Bert_McCaffrey",
    "entity2_mention": "Bert McCaffrey"
},
{
    "id": "585",
    "question": "How many teams have LA kings players in them currently?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Los_Angeles_Kings> . ?x <http://dbpedia.org/ontology/team> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/formerTeam",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/team",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/SportsTeam",
    "type_mention": "teams",
    "entity1_uri": "http://dbpedia.org/resource/Los_Angeles_Kings",
    "entity1_mention": "LA kings",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "586",
    "question": "List the opponents of the relatives of Thomas Helwys?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Thomas_Helwys> . ?x <http://dbpedia.org/ontology/opponent> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/relation",
    "predicate1_mention": "relatives",
    "predicate2_uri": "http://dbpedia.org/ontology/opponent",
    "predicate2_mention": "opponents",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "opponents",
    "entity1_uri": "http://dbpedia.org/resource/Thomas_Helwys",
    "entity1_mention": "thomas helwys",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "587",
    "question": "Who is the coach of England national under-21 football team ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/England_national_under-21_football_team> <http://dbpedia.org/property/coach> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/coach",
    "predicate1_mention": "coach",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/England_national_under-21_football_team",
    "entity1_mention": "England national under-21 football team",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "588",
    "question": "Name an airline with hub airports as Los Angeles International Airport and San Francisco International Airport?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/hubAirport> <http://dbpedia.org/resource/Los_Angeles_International_Airport> . ?uri <http://dbpedia.org/property/hubs> <http://dbpedia.org/resource/San_Francisco_International_Airport>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/hubAirport",
    "predicate1_mention": "hub airports",
    "predicate2_uri": "http://dbpedia.org/property/hubs",
    "predicate2_mention": "hub",
    "type_uri": "http://dbpedia.org/ontology/Airline",
    "type_mention": "airline",
    "entity1_uri": "http://dbpedia.org/resource/Los_Angeles_International_Airport",
    "entity1_mention": "Los Angeles International Airport",
    "entity2_uri": "http://dbpedia.org/resource/San_Francisco_International_Airport",
    "entity2_mention": "San Francisco International Airport"
},
{
    "id": "589",
    "question": "What is the region of Tom Perriello ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tom_Perriello> <http://dbpedia.org/ontology/region> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/region",
    "predicate1_mention": "region",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tom_Perriello",
    "entity1_mention": "Tom Perriello",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "590",
    "question": "What is the label of the album whose previous work is Waterfall?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/Waterfall_(album)> . ?x <http://dbpedia.org/property/label> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/previousWork",
    "predicate1_mention": "previous work",
    "predicate2_uri": "http://dbpedia.org/property/label",
    "predicate2_mention": "label",
    "type_uri": "http://dbpedia.org/ontology/Album",
    "type_mention": "album",
    "entity1_uri": "http://dbpedia.org/resource/Waterfall_(album)",
    "entity1_mention": "waterfall",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "591",
    "question": "What are some other great things by the person who produced Queer as Folk?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Queer_as_Folk_(UK_TV_series)> <http://dbpedia.org/ontology/producer> ?x . ?x <http://dbpedia.org/property/notableworks> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "403",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/producer",
    "predicate1_mention": "produced",
    "predicate2_uri": "http://dbpedia.org/property/notableworks",
    "predicate2_mention": "other",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "person",
    "entity1_uri": "http://dbpedia.org/resource/Queer_as_Folk_(UK_TV_series)",
    "entity1_mention": "Queer as Folk",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "592",
    "question": "Where is the assembly of Plymouth Savoy, and where Special 26 was recorded?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Plymouth_Savoy> <http://dbpedia.org/ontology/assembly> ?uri. <http://dbpedia.org/resource/Special_26> <http://dbpedia.org/property/recorded> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/assembly",
    "predicate1_mention": "assembly",
    "predicate2_uri": "http://dbpedia.org/property/recorded",
    "predicate2_mention": "recorded",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Plymouth_Savoy",
    "entity1_mention": "Plymouth Savoy",
    "entity2_uri": "http://dbpedia.org/resource/Special_26",
    "entity2_mention": "special 26"
},
{
    "id": "593",
    "question": "Who owns the railway line which goes through the Newark Station?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Newark_station_(Delaware)> <http://dbpedia.org/property/line> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/line",
    "predicate1_mention": "line",
    "predicate2_uri": "http://dbpedia.org/property/owner",
    "predicate2_mention": "owns",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Newark_station_(Delaware)",
    "entity1_mention": "Newark Station",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "594",
    "question": "Which relative of George Madison was the leader of United States House of Representatives elections, 1788 and 1789 ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_Madison> <http://dbpedia.org/ontology/relation> ?uri. <http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789> <http://dbpedia.org/property/leader> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/relation",
    "predicate1_mention": "relative",
    "predicate2_uri": "http://dbpedia.org/property/leader",
    "predicate2_mention": "leader",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/George_Madison",
    "entity1_mention": "George Madison",
    "entity2_uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789",
    "entity2_mention": "United States House of Representatives elections, 1788 and 1789"
},
{
    "id": "596",
    "question": "Is National Archaeological Museum (Florence) the museum of Chimera of Arezzo?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Chimera_of_Arezzo> <http://dbpedia.org/property/museum> <http://dbpedia.org/resource/National_Archaeological_Museum_(Florence)> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/museum",
    "predicate1_mention": "museum",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Chimera_of_Arezzo",
    "entity1_mention": "Chimera of Arezzo",
    "entity2_uri": "http://dbpedia.org/resource/National_Archaeological_Museum_(Florence)",
    "entity2_mention": "National Archaeological Museum (Florence)"
},
{
    "id": "597",
    "question": "Who are the associate musical artists of Dalma Kovcs ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dalma_Kov\u00e1cs> <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
    "predicate1_mention": "associate musical",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Dalma_Kov\u00e1cs",
    "entity1_mention": "Dalma Kovcs",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "598",
    "question": "Whichd officer's final resting place is North Bend, ohio and belongs to Indiana Territory branch ",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/North_Bend,_Ohio> . ?uri <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Indiana_Territory>  . }",
    "sparql_id": "8",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/restingplace",
    "predicate1_mention": "resting place",
    "predicate2_uri": "http://dbpedia.org/property/branch",
    "predicate2_mention": "branch",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/North_Bend,_Ohio",
    "entity1_mention": "North Bend, ohio",
    "entity2_uri": "http://dbpedia.org/resource/Indiana_Territory",
    "entity2_mention": "indiana territory"
},
{
    "id": "599",
    "question": "Name the profession of Oamr D Conger for which Jack Ryan was also nominated ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jack_Ryan_(politician)> <http://dbpedia.org/ontology/nominee> ?uri. <http://dbpedia.org/resource/Omar_D._Conger> <http://dbpedia.org/property/order> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/nominee",
    "predicate1_mention": "nominated",
    "predicate2_uri": "http://dbpedia.org/property/order",
    "predicate2_mention": "conger",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jack_Ryan_(politician)",
    "entity1_mention": "Jack Ryan",
    "entity2_uri": "http://dbpedia.org/resource/Omar_D._Conger",
    "entity2_mention": "Oamr D Conger"
},
{
    "id": "601",
    "question": "Does the Vadodara Railway station lie at the end of the Mathura Vadodara route?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mathura\u2013Vadodara_Section> <http://dbpedia.org/ontology/routeEnd> <http://dbpedia.org/resource/Vadodara_Junction_railway_station> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/routeEnd",
    "predicate1_mention": "route",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mathura\u2013Vadodara_Section",
    "entity1_mention": "Mathura Vadodara route",
    "entity2_uri": "http://dbpedia.org/resource/Vadodara_Junction_railway_station",
    "entity2_mention": "Vadodara Railway station"
},
{
    "id": "602",
    "question": "President of Ghana is the leader title of which country?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/leaderTitle> <http://dbpedia.org/resource/President_of_Ghana>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/leaderTitle",
    "predicate1_mention": "leader title",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Country",
    "type_mention": "country",
    "entity1_uri": "http://dbpedia.org/resource/President_of_Ghana",
    "entity1_mention": "President of Ghana",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "604",
    "question": "In which city are buildings by Solon Spencer Beman found?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Solon_Spencer_Beman> . ?x <http://dbpedia.org/property/locationTown> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/architect",
    "predicate1_mention": "buildings",
    "predicate2_uri": "http://dbpedia.org/property/locationTown",
    "predicate2_mention": "city",
    "type_uri": "http://dbpedia.org/ontology/Building",
    "type_mention": "buildings",
    "entity1_uri": "http://dbpedia.org/resource/Solon_Spencer_Beman",
    "entity1_mention": "Solon Spencer Beman",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "605",
    "question": "Name the scientist who was the winner of Royal Society award and had Georg Meissner as his doctoral advisor ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Royal_Society> . ?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Georg_Meissner>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/prizes",
    "predicate1_mention": "award",
    "predicate2_uri": "http://dbpedia.org/property/doctoralAdvisor",
    "predicate2_mention": "doctoral advisor",
    "type_uri": "http://dbpedia.org/ontology/Scientist",
    "type_mention": "scientist",
    "entity1_uri": "http://dbpedia.org/resource/Royal_Society",
    "entity1_mention": "Royal Society",
    "entity2_uri": "http://dbpedia.org/resource/Georg_Meissner",
    "entity2_mention": "Georg Meissner"
},
{
    "id": "607",
    "question": "What religion's politicians are in the Malaysian Chinese association?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Malaysian_Chinese_Association> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/party",
    "predicate1_mention": "politicians",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religion's",
    "type_uri": "http://dbpedia.org/ontology/Politician",
    "type_mention": "politicians",
    "entity1_uri": "http://dbpedia.org/resource/Malaysian_Chinese_Association",
    "entity1_mention": "Malaysian Chinese association",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "609",
    "question": "Who developed the programming languages designed by Rob Pike?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/designer> <http://dbpedia.org/resource/Rob_Pike> . ?x <http://dbpedia.org/ontology/developer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ProgrammingLanguage>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/designer",
    "predicate1_mention": "designed",
    "predicate2_uri": "http://dbpedia.org/ontology/developer",
    "predicate2_mention": "developed",
    "type_uri": "http://dbpedia.org/ontology/ProgrammingLanguage",
    "type_mention": "programming languages",
    "entity1_uri": "http://dbpedia.org/resource/Rob_Pike",
    "entity1_mention": "Rob Pike",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "610",
    "question": "List down the prime ministers of Peter Thorneycroft ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Peter_Thorneycroft> <http://dbpedia.org/ontology/primeMinister> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/primeMinister",
    "predicate1_mention": "prime ministers",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Peter_Thorneycroft",
    "entity1_mention": "Peter Thorneycroft",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "611",
    "question": "What are the non-fiction topics in the books whose authors is Terry Pratchett?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Terry_Pratchett> . ?x <http://dbpedia.org/ontology/nonFictionSubject> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/author",
    "predicate1_mention": "authors",
    "predicate2_uri": "http://dbpedia.org/ontology/nonFictionSubject",
    "predicate2_mention": "non-fiction topics",
    "type_uri": "http://dbpedia.org/ontology/Book",
    "type_mention": "books",
    "entity1_uri": "http://dbpedia.org/resource/Terry_Pratchett",
    "entity1_mention": "Terry Pratchett",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "612",
    "question": "Where is the senator from whose successor was James belford?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/James_B._Belford> . ?x <http://dbpedia.org/ontology/region> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Senator>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "http://dbpedia.org/ontology/region",
    "predicate2_mention": "Where",
    "type_uri": "http://dbpedia.org/ontology/Senator",
    "type_mention": "senator",
    "entity1_uri": "http://dbpedia.org/resource/James_B._Belford",
    "entity1_mention": "James belford",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "613",
    "question": "List the newspapers which has headquarters in Stockholm?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Stockholm>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/headquarters",
    "predicate1_mention": "headquarters",
    "predicate2_uri": "http://dbpedia.org/ontology/Newspaper",
    "predicate2_mention": "newspapers",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Stockholm",
    "entity1_mention": "stockholm",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "614",
    "question": "Which president of Lance Adams-Schneider had nickname Daniel O'Regan ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lance_Adams-Schneider> <http://dbpedia.org/property/president> ?uri. <http://dbpedia.org/resource/Daniel_O'Regan> <http://dbpedia.org/property/nickname> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/president",
    "predicate1_mention": "president",
    "predicate2_uri": "http://dbpedia.org/property/nickname",
    "predicate2_mention": "nickname",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lance_Adams-Schneider",
    "entity1_mention": "Lance Adams-Schneider",
    "entity2_uri": "http://dbpedia.org/resource/Daniel_O'Regan",
    "entity2_mention": "Daniel O'Regan"
},
{
    "id": "615",
    "question": "List the software using C++ as programming language and licence is Software as a service?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/C++> . ?uri <http://dbpedia.org/ontology/license> <http://dbpedia.org/resource/Software_as_a_service>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/programmingLanguage",
    "predicate1_mention": "programming language",
    "predicate2_uri": "http://dbpedia.org/ontology/license",
    "predicate2_mention": "licence",
    "type_uri": "http://dbpedia.org/ontology/Software",
    "type_mention": "software",
    "entity1_uri": "http://dbpedia.org/resource/C++",
    "entity1_mention": "c++",
    "entity2_uri": "http://dbpedia.org/resource/Software_as_a_service",
    "entity2_mention": "Software as a service"
},
{
    "id": "617",
    "question": "What has been founded in the state that Denton county, Texas is a part of?\u00a0",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/part> <http://dbpedia.org/resource/Denton_County,_Texas> . ?uri <http://dbpedia.org/ontology/foundationPlace> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/part",
    "predicate1_mention": "part",
    "predicate2_uri": "http://dbpedia.org/ontology/foundationPlace",
    "predicate2_mention": "founded in the state",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Denton_County,_Texas",
    "entity1_mention": "Denton county, Texas",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "618",
    "question": "Which countries militaries fought the SFOR battle?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/SFOR> . ?x <http://dbpedia.org/ontology/battle> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/battles",
    "predicate1_mention": "fought",
    "predicate2_uri": "http://dbpedia.org/ontology/battle",
    "predicate2_mention": "battle",
    "type_uri": "http://dbpedia.org/ontology/MilitaryPerson",
    "type_mention": "militaries",
    "entity1_uri": "http://dbpedia.org/resource/SFOR",
    "entity1_mention": "sfor",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "619",
    "question": "What is the awards won by the producer of From the Life of the Marionettes ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/From_the_Life_of_the_Marionettes> <http://dbpedia.org/ontology/producer> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/producer",
    "predicate1_mention": "producer",
    "predicate2_uri": "http://dbpedia.org/property/awards",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/From_the_Life_of_the_Marionettes",
    "entity1_mention": "From the Life of the Marionettes",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "620",
    "question": "How many team in Chicago Bulls ?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Chicago_Bulls>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/team",
    "predicate1_mention": "team",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Chicago_Bulls",
    "entity1_mention": "Chicago Bulls",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "621",
    "question": "How many writers worked on the album Main Course?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/album> <http://dbpedia.org/resource/Main_Course> . ?x <http://dbpedia.org/property/writer> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/album",
    "predicate1_mention": "album",
    "predicate2_uri": "http://dbpedia.org/property/writer",
    "predicate2_mention": "writers",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Main_Course",
    "entity1_mention": "Main Course",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "622",
    "question": "Count the number of shows whose creators are Jerry Seinfeld and Larry David?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Jerry_Seinfeld> . ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Larry_David>} ",
    "sparql_id": "107",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/creator",
    "predicate1_mention": "creators",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jerry_Seinfeld",
    "entity1_mention": "Jerry Seinfeld",
    "entity2_uri": "http://dbpedia.org/resource/Larry_David",
    "entity2_mention": "larry david"
},
{
    "id": "624",
    "question": "What is the television show whose company is Playtone and written by Erik Jendresen?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/Playtone> . ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Erik_Jendresen>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/company",
    "predicate1_mention": "company",
    "predicate2_uri": "http://dbpedia.org/property/writer",
    "predicate2_mention": "written",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television show",
    "entity1_uri": "http://dbpedia.org/resource/Playtone",
    "entity1_mention": "playtone",
    "entity2_uri": "http://dbpedia.org/resource/Erik_Jendresen",
    "entity2_mention": "Erik Jendresen"
},
{
    "id": "625",
    "question": "Which office holder allegiance is Colony of Virginia and was has a wife named Dolley Madison ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Dolley_Madison> . ?uri <http://dbpedia.org/property/allegiance> <http://dbpedia.org/resource/Colony_of_Virginia>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/spouse",
    "predicate1_mention": "office",
    "predicate2_uri": "http://dbpedia.org/property/allegiance",
    "predicate2_mention": "allegiance",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "office holder",
    "entity1_uri": "http://dbpedia.org/resource/Dolley_Madison",
    "entity1_mention": "Dolley Madison",
    "entity2_uri": "http://dbpedia.org/resource/Colony_of_Virginia",
    "entity2_mention": "Colony of Virginia"
},
{
    "id": "626",
    "question": "How many broadcast area of the television stations exists whose broadcast area is Rodrigues ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/broadcastArea> <http://dbpedia.org/resource/Rodrigues> . ?x <http://dbpedia.org/property/broadcastArea> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/broadcastArea",
    "predicate1_mention": "broadcast area",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Rodrigues",
    "entity1_mention": "rodrigues",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "627",
    "question": "What is the religion of the ethnic group to which the relatives of Waxiang people belong?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Waxiang_people> <http://dbpedia.org/property/related> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/related",
    "predicate1_mention": "relatives",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religion",
    "type_uri": "http://dbpedia.org/ontology/EthnicGroup",
    "type_mention": "ethnic group",
    "entity1_uri": "http://dbpedia.org/resource/Waxiang_people",
    "entity1_mention": "waxiang people",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "628",
    "question": "Which wine region of Bogdanua is the mouth country of Upper Neretva ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bogdanu\u0161a> <http://dbpedia.org/ontology/wineRegion> ?uri. <http://dbpedia.org/resource/Upper_Neretva> <http://dbpedia.org/ontology/mouthCountry> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/wineRegion",
    "predicate1_mention": "wine region",
    "predicate2_uri": "http://dbpedia.org/ontology/mouthCountry",
    "predicate2_mention": "mouth country",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bogdanu\u0161a",
    "entity1_mention": "Bogdanua",
    "entity2_uri": "http://dbpedia.org/resource/Upper_Neretva",
    "entity2_mention": "Upper Neretva"
},
{
    "id": "629",
    "question": "Under whom did Charles Drummond Ellis do his PhD?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/Charles_Drummond_Ellis> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/doctoralStudent",
    "predicate1_mention": "PhD",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Charles_Drummond_Ellis",
    "entity1_mention": "Charles Drummond Ellis",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "630",
    "question": "Which company is the parent company of Chevrolet Spark ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chevrolet_Spark> <http://dbpedia.org/property/parentCompany> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/parentCompany",
    "predicate1_mention": "parent company",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Chevrolet_Spark",
    "entity1_mention": "chevrolet spark",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "631",
    "question": "Which associat of Martin Pugh is also married to Alana Stewert ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Martin_Pugh> <http://dbpedia.org/property/associatedActs> ?uri. <http://dbpedia.org/resource/Alana_Stewart> <http://dbpedia.org/ontology/spouse> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/associatedActs",
    "predicate1_mention": "associat",
    "predicate2_uri": "http://dbpedia.org/ontology/spouse",
    "predicate2_mention": "married",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Martin_Pugh",
    "entity1_mention": "martin pugh",
    "entity2_uri": "http://dbpedia.org/resource/Alana_Stewart",
    "entity2_mention": "Alana Stewert"
},
{
    "id": "632",
    "question": "Which stadium's operator works in the Pepsi Center?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Pepsi_Center> . ?uri <http://dbpedia.org/ontology/operator> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/occupation",
    "predicate1_mention": "works in",
    "predicate2_uri": "http://dbpedia.org/ontology/operator",
    "predicate2_mention": "operator",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Pepsi_Center",
    "entity1_mention": "Pepsi Center",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "633",
    "question": "What is the drafted team of the people expected to join toronto marlies?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/prospectTeam> <http://dbpedia.org/resource/Toronto_Marlies> . ?x <http://dbpedia.org/property/draftTeam> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/prospectTeam",
    "predicate1_mention": "expected",
    "predicate2_uri": "http://dbpedia.org/property/draftTeam",
    "predicate2_mention": "drafted team",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Toronto_Marlies",
    "entity1_mention": "toronto marlies",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "634",
    "question": "What city in the US was Alfred Phillips born in, and is the resting place of William Smith?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_H._Smith_(Connecticut)> <http://dbpedia.org/ontology/restingPlace> ?uri. <http://dbpedia.org/resource/Alfred_N._Phillips> <http://dbpedia.org/property/birthPlace> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/restingPlace",
    "predicate1_mention": "resting place",
    "predicate2_uri": "http://dbpedia.org/property/birthPlace",
    "predicate2_mention": "born in",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/William_H._Smith_(Connecticut)",
    "entity1_mention": "william smith",
    "entity2_uri": "http://dbpedia.org/resource/Alfred_N._Phillips",
    "entity2_mention": "Alfred Phillips"
},
{
    "id": "636",
    "question": "Who appointed the governor under whom Richard Winn works?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/lieutenant> <http://dbpedia.org/resource/Richard_Winn> . ?x <http://dbpedia.org/property/appointer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Governor>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/lieutenant",
    "predicate1_mention": "winn",
    "predicate2_uri": "http://dbpedia.org/property/appointer",
    "predicate2_mention": "appointed",
    "type_uri": "http://dbpedia.org/ontology/Governor",
    "type_mention": "governor",
    "entity1_uri": "http://dbpedia.org/resource/Richard_Winn",
    "entity1_mention": "richard winn",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "637",
    "question": "Whose deputy is Neil Brown?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Neil_Brown_(Australian_politician)>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/deputy",
    "predicate1_mention": "deputy",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Neil_Brown_(Australian_politician)",
    "entity1_mention": "Neil Brown",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "639",
    "question": "Who first ascented a mountain of Mount Hoffmann ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mount_Hoffmann> <http://dbpedia.org/ontology/firstAscentPerson> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/firstAscentPerson",
    "predicate1_mention": "first ascented",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mount_Hoffmann",
    "entity1_mention": "Mount Hoffmann",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "640",
    "question": "List the broadcast area of the TV stations which also serves in Agalga ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/broadcastArea> <http://dbpedia.org/resource/Agal\u00e9ga> . ?x <http://dbpedia.org/property/broadcastArea> ?uri  . }",
    "sparql_id": "11",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/broadcastArea",
    "predicate1_mention": "broadcast area",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Agal\u00e9ga",
    "entity1_mention": "Agalga",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "641",
    "question": "Which operating system provider of LG Optimus Vu is also the employer of Manu Cornet ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/LG_Optimus_Vu> <http://dbpedia.org/ontology/operatingSystem> ?uri. <http://dbpedia.org/resource/Manu_Cornet> <http://dbpedia.org/property/employer> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/operatingSystem",
    "predicate1_mention": "operating system",
    "predicate2_uri": "http://dbpedia.org/property/employer",
    "predicate2_mention": "employer",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/LG_Optimus_Vu",
    "entity1_mention": "LG Optimus Vu",
    "entity2_uri": "http://dbpedia.org/resource/Manu_Cornet",
    "entity2_mention": "Manu Cornet"
},
{
    "id": "642",
    "question": "Which company owns the manufacturer of the Edsel Ranger?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Edsel_Ranger> . ?x <http://dbpedia.org/property/parent> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/products",
    "predicate1_mention": "manufacturer",
    "predicate2_uri": "http://dbpedia.org/property/parent",
    "predicate2_mention": "owns",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Edsel_Ranger",
    "entity1_mention": "Edsel Ranger",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "643",
    "question": "Which are the major hubs of airline which operates the Menora Tunnel?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Menora_Tunnel> <http://dbpedia.org/property/operator> ?x . ?x <http://dbpedia.org/property/hubs> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/operator",
    "predicate1_mention": "operates",
    "predicate2_uri": "http://dbpedia.org/property/hubs",
    "predicate2_mention": "hubs",
    "type_uri": "http://dbpedia.org/ontology/Airline",
    "type_mention": "airline",
    "entity1_uri": "http://dbpedia.org/resource/Menora_Tunnel",
    "entity1_mention": "Menora Tunnel",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "644",
    "question": "Name a scientist whose official residence is Cape Town and also won a gold medal at the Royal Astronomical Society ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Gold_Medal_of_the_Royal_Astronomical_Society> . ?uri <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Cape_Town>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/prizes",
    "predicate1_mention": "won",
    "predicate2_uri": "http://dbpedia.org/property/residence",
    "predicate2_mention": "residence",
    "type_uri": "http://dbpedia.org/ontology/Scientist",
    "type_mention": "scientist",
    "entity1_uri": "http://dbpedia.org/resource/Gold_Medal_of_the_Royal_Astronomical_Society",
    "entity1_mention": "gold medal at the Royal Astronomical Society",
    "entity2_uri": "http://dbpedia.org/resource/Cape_Town",
    "entity2_mention": "Cape Town"
},
{
    "id": "647",
    "question": "Bridges over what can carry vehicles?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/carries> <http://dbpedia.org/resource/Motor_vehicle> . ?x <http://dbpedia.org/property/crosses> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/carries",
    "predicate1_mention": "carry",
    "predicate2_uri": "http://dbpedia.org/property/crosses",
    "predicate2_mention": "bridges",
    "type_uri": "http://dbpedia.org/ontology/Bridge",
    "type_mention": "bridges",
    "entity1_uri": "http://dbpedia.org/resource/Motor_vehicle",
    "entity1_mention": "vehicles",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "648",
    "question": "In how many countries do the rivers start which end at the Caspian Sea?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Caspian_Sea> . ?x <http://dbpedia.org/ontology/sourceCountry> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/riverMouth",
    "predicate1_mention": "rivers",
    "predicate2_uri": "http://dbpedia.org/ontology/sourceCountry",
    "predicate2_mention": "countries",
    "type_uri": "http://dbpedia.org/ontology/Country",
    "type_mention": "countries",
    "entity1_uri": "http://dbpedia.org/resource/Caspian_Sea",
    "entity1_mention": "caspian sea",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "649",
    "question": "What was founded by Congress of Industrial Organizations ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Congress_of_Industrial_Organizations> <http://dbpedia.org/property/founded> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/founded",
    "predicate1_mention": "founded",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Congress_of_Industrial_Organizations",
    "entity1_mention": "Congress of Industrial Organizations",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "650",
    "question": "Who are the former partners of the figure skaters whose performance have been choreographed by Catarina Lindgren in the past?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/formerChoreographer> <http://dbpedia.org/resource/Catarina_Lindgren> . ?x <http://dbpedia.org/ontology/formerPartner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FigureSkater>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/formerChoreographer",
    "predicate1_mention": "choreographed",
    "predicate2_uri": "http://dbpedia.org/ontology/formerPartner",
    "predicate2_mention": "former partners",
    "type_uri": "http://dbpedia.org/ontology/FigureSkater",
    "type_mention": "figure skaters",
    "entity1_uri": "http://dbpedia.org/resource/Catarina_Lindgren",
    "entity1_mention": "Catarina Lindgren",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "651",
    "question": "Which holy things canonized John of Damascus?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_of_Damascus> <http://dbpedia.org/ontology/canonizedBy> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/canonizedBy",
    "predicate1_mention": "canonized",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/John_of_Damascus",
    "entity1_mention": "John of Damascus",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "652",
    "question": "Count the number of schools which are in a city governed by the West Berkshire Council?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/leaderName> <http://dbpedia.org/resource/West_Berkshire_Council> . ?uri <http://dbpedia.org/property/city> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/leaderName",
    "predicate1_mention": "governed",
    "predicate2_uri": "http://dbpedia.org/property/city",
    "predicate2_mention": "city",
    "type_uri": "http://dbpedia.org/ontology/School",
    "type_mention": "schools",
    "entity1_uri": "http://dbpedia.org/resource/West_Berkshire_Council",
    "entity1_mention": "West Berkshire Council",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "653",
    "question": "Did Hank Williams Jr. make Early in the Morning and Late at Night?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Early_in_the_Morning_and_Late_at_Night> <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Hank_Williams_Jr.> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/musicalArtist",
    "predicate1_mention": "make",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Early_in_the_Morning_and_Late_at_Night",
    "entity1_mention": "Early in the Morning and Late at Night",
    "entity2_uri": "http://dbpedia.org/resource/Hank_Williams_Jr.",
    "entity2_mention": "Hank Williams Jr."
},
{
    "id": "654",
    "question": "Is Pixar Canada a subsidiary of Pixar?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Pixar> <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Pixar_Canada> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/subsidiary",
    "predicate1_mention": "subsidiary",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Pixar",
    "entity1_mention": "pixar",
    "entity2_uri": "http://dbpedia.org/resource/Pixar_Canada",
    "entity2_mention": "Pixar Canada"
},
{
    "id": "655",
    "question": "List some leaders of regions in the Indian Standard Time Zone?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Indian_Standard_Time> . ?x <http://dbpedia.org/ontology/leaderName> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/timeZone",
    "predicate1_mention": "time zone",
    "predicate2_uri": "http://dbpedia.org/ontology/leaderName",
    "predicate2_mention": "leaders",
    "type_uri": "http://dbpedia.org/ontology/Place",
    "type_mention": "leaders",
    "entity1_uri": "http://dbpedia.org/resource/Indian_Standard_Time",
    "entity1_mention": "Indian Standard Time",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "656",
    "question": "List the spanish football player in the NYC FC ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/New_York_City_FC> . ?uri <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Spain_national_football_team>  . }",
    "sparql_id": "8",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/currentclub",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/nationalteam",
    "predicate2_mention": "in",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/New_York_City_FC",
    "entity1_mention": "NYC FC",
    "entity2_uri": "http://dbpedia.org/resource/Spain_national_football_team",
    "entity2_mention": "spanish football player"
},
{
    "id": "657",
    "question": "Who is the person whose child performed with Tony Bennett?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Tony_Bennett> . ?uri <http://dbpedia.org/ontology/child> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/associatedActs",
    "predicate1_mention": "performed",
    "predicate2_uri": "http://dbpedia.org/ontology/child",
    "predicate2_mention": "child",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tony_Bennett",
    "entity1_mention": "Tony Bennett",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "658",
    "question": "Name the rivers originating from an English speaking nation?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/English_language> . ?uri <http://dbpedia.org/ontology/sourceCountry> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/officialLanguage",
    "predicate1_mention": "speaking",
    "predicate2_uri": "http://dbpedia.org/ontology/sourceCountry",
    "predicate2_mention": "originating from",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "rivers",
    "entity1_uri": "http://dbpedia.org/resource/English_language",
    "entity1_mention": "english",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "660",
    "question": "List the notable work of David Isaacs (writer)?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/David_Isaacs_(writer)> <http://dbpedia.org/ontology/notableWork> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/notableWork",
    "predicate1_mention": "notable work",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/David_Isaacs_(writer)",
    "entity1_mention": "David Isaacs (writer)",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "662",
    "question": "Which cities were in the TV Show which came after The Ultimate Fighter: Brazil 2?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Ultimate_Fighter:_Brazil_2> <http://dbpedia.org/ontology/subsequentWork> ?x . ?x <http://dbpedia.org/property/city> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/subsequentWork",
    "predicate1_mention": "came after",
    "predicate2_uri": "http://dbpedia.org/property/city",
    "predicate2_mention": "cities",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "TV Show",
    "entity1_uri": "http://dbpedia.org/resource/The_Ultimate_Fighter:_Brazil_2",
    "entity1_mention": "The Ultimate Fighter: Brazil 2",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "664",
    "question": "List the movies whose music composer is often associated with Jon and Vangelis.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Jon_and_Vangelis> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/associatedActs",
    "predicate1_mention": "associated",
    "predicate2_uri": "http://dbpedia.org/ontology/musicComposer",
    "predicate2_mention": "music composer",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Jon_and_Vangelis",
    "entity1_mention": "Jon and Vangelis",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "665",
    "question": "How many teams have used the stadium which hosted the WCW mayhem?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/WCW_Mayhem> <http://dbpedia.org/property/venue> ?x . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "sparql_id": "403",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/venue",
    "predicate1_mention": "hosted",
    "predicate2_uri": "http://dbpedia.org/ontology/tenant",
    "predicate2_mention": "used",
    "type_uri": "http://dbpedia.org/ontology/Stadium",
    "type_mention": "stadium",
    "entity1_uri": "http://dbpedia.org/resource/WCW_Mayhem",
    "entity1_mention": "WCW mayhem",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "668",
    "question": "Was the Army Air Corps honored for the battle of Iraq?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Army_Air_Corps_(United_Kingdom)> <http://dbpedia.org/property/battleHonours> <http://dbpedia.org/resource/Iraq> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/battleHonours",
    "predicate1_mention": "honored for the battle",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Army_Air_Corps_(United_Kingdom)",
    "entity1_mention": "Army Air Corps",
    "entity2_uri": "http://dbpedia.org/resource/Iraq",
    "entity2_mention": "iraq"
},
{
    "id": "669",
    "question": "What is the debut team of the american football player who studied in North Fort Myers High School?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/highschool> <http://dbpedia.org/resource/North_Fort_Myers_High_School> . ?x <http://dbpedia.org/property/debutteam> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/highschool",
    "predicate1_mention": "High School",
    "predicate2_uri": "http://dbpedia.org/property/debutteam",
    "predicate2_mention": "debut team",
    "type_uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
    "type_mention": "american football player",
    "entity1_uri": "http://dbpedia.org/resource/North_Fort_Myers_High_School",
    "entity1_mention": "North Fort Myers High School",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "670",
    "question": "How many people have played for a club whose coach is Fred Hoiberg?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Fred_Hoiberg> . ?uri <http://dbpedia.org/property/team> ?x  . }",
    "sparql_id": "106",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/coach",
    "predicate1_mention": "coach",
    "predicate2_uri": "http://dbpedia.org/property/team",
    "predicate2_mention": "played for a club",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Fred_Hoiberg",
    "entity1_mention": "Fred Hoiberg",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "672",
    "question": "Name the TV show distributed by Broadcast Syndication and is broadcasted by comedy central ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Broadcast_syndication> . ?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/Comedy_Central>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/distributor",
    "predicate1_mention": "distributed",
    "predicate2_uri": "http://dbpedia.org/property/network",
    "predicate2_mention": "central",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "TV show",
    "entity1_uri": "http://dbpedia.org/resource/Broadcast_syndication",
    "entity1_mention": "Broadcast Syndication",
    "entity2_uri": "http://dbpedia.org/resource/Comedy_Central",
    "entity2_mention": "comedy central"
},
{
    "id": "674",
    "question": "Is Truth prevails the national motto of Czechoslovakia?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Czechoslovakia> <http://dbpedia.org/property/nationalMotto> <http://dbpedia.org/resource/Truth_prevails> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/nationalMotto",
    "predicate1_mention": "national motto",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Czechoslovakia",
    "entity1_mention": "czechoslovakia",
    "entity2_uri": "http://dbpedia.org/resource/Truth_prevails",
    "entity2_mention": "Truth prevails"
},
{
    "id": "676",
    "question": "What is Bob Adams (American football) known for?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bob_Adams_(American_football)> <http://dbpedia.org/property/knownFor> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/knownFor",
    "predicate1_mention": "known for",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bob_Adams_(American_football)",
    "entity1_mention": "Bob Adams (American football)",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "677",
    "question": "Who was the bronze medalist of Swimming at the 2008 Summer Olympics Men's 400 metre individual medley ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Swimming_at_the_2008_Summer_Olympics_\u2013_Men's_400_metre_individual_medley> <http://dbpedia.org/ontology/bronzeMedalist> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/bronzeMedalist",
    "predicate1_mention": "bronze medalist",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Swimming_at_the_2008_Summer_Olympics_\u2013_Men's_400_metre_individual_medley",
    "entity1_mention": "Swimming at the 2008 Summer Olympics Men's 400 metre individual medley",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "678",
    "question": "Which football players have Newell's Old Boys as youthclub?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/youthclubs> <http://dbpedia.org/resource/Newell's_Old_Boys> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/youthclubs",
    "predicate1_mention": "youthclub",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Newell's_Old_Boys",
    "entity1_mention": "Newell's Old Boys",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "679",
    "question": "Which country's people work in the Birdman enterprises?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/Birdman_Enterprises> . ?x <http://dbpedia.org/property/nationality> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Engineer>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/institution",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/nationality",
    "predicate2_mention": "country's",
    "type_uri": "http://dbpedia.org/ontology/Engineer",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Birdman_Enterprises",
    "entity1_mention": "Birdman enterprises",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "680",
    "question": "List the sports associated with Mariveles, Bataan?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Mariveles,_Bataan> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/city",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/sport",
    "predicate2_mention": "sports",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mariveles,_Bataan",
    "entity1_mention": "mariveles, bataan",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "681",
    "question": "Which team of Dan Shamash is also the debutant team of John Estes ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Estes> <http://dbpedia.org/ontology/debutTeam> ?uri. <http://dbpedia.org/resource/Dan_Shamash> <http://dbpedia.org/ontology/team> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/debutTeam",
    "predicate1_mention": "debutant",
    "predicate2_uri": "http://dbpedia.org/ontology/team",
    "predicate2_mention": "team",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/John_Estes",
    "entity1_mention": "John Estes",
    "entity2_uri": "http://dbpedia.org/resource/Dan_Shamash",
    "entity2_mention": "Dan Shamash"
},
{
    "id": "682",
    "question": "Who is the tenant of the home stadium of Toronto Phantoms?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Toronto_Phantoms> <http://dbpedia.org/property/arena> ?x . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/arena",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/tenant",
    "predicate2_mention": "tenant",
    "type_uri": "http://dbpedia.org/ontology/Stadium",
    "type_mention": "home stadium",
    "entity1_uri": "http://dbpedia.org/resource/Toronto_Phantoms",
    "entity1_mention": "Toronto Phantoms",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "683",
    "question": "Does the little colorado river flow in the Grand Canyon?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Little_Colorado_River> <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Grand_Canyon> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/mouthMountain",
    "predicate1_mention": "river flow in",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Little_Colorado_River",
    "entity1_mention": "little colorado river",
    "entity2_uri": "http://dbpedia.org/resource/Grand_Canyon",
    "entity2_mention": "Grand Canyon"
},
{
    "id": "684",
    "question": "Which educational institution of Jack Mcgregor is also the alma mater of Donn barber ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jack_McGregor> <http://dbpedia.org/ontology/education> ?uri. <http://dbpedia.org/resource/Donn_Barber> <http://dbpedia.org/ontology/education> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/education",
    "predicate1_mention": "educational institution",
    "predicate2_uri": "http://dbpedia.org/ontology/education",
    "predicate2_mention": "alma mater",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jack_McGregor",
    "entity1_mention": "Jack Mcgregor",
    "entity2_uri": "http://dbpedia.org/resource/Donn_Barber",
    "entity2_mention": "Donn barber"
},
{
    "id": "685",
    "question": "How many religions are followed by the people in the Royal Thai Army?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Royal_Thai_Army> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/militaryBranch",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religions",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Royal_Thai_Army",
    "entity1_mention": "royal thai army",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "686",
    "question": "What company made facebook messenger and is the platform where Words of Gold can be played?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Words_of_Gold> <http://dbpedia.org/ontology/computingPlatform> ?uri. <http://dbpedia.org/resource/Facebook_Messenger> <http://dbpedia.org/property/developer> ?uri . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "316",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/computingPlatform",
    "predicate1_mention": "platform",
    "predicate2_uri": "http://dbpedia.org/property/developer",
    "predicate2_mention": "made",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "company",
    "entity1_uri": "http://dbpedia.org/resource/Words_of_Gold",
    "entity1_mention": "Words of Gold",
    "entity2_uri": "http://dbpedia.org/resource/Facebook_Messenger",
    "entity2_mention": "facebook messenger"
},
{
    "id": "687",
    "question": "What is the common party of the Manthena Venkata Raju and  B. Shiva Rao?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Manthena_Venkata_Raju> <http://dbpedia.org/ontology/party> ?uri. <http://dbpedia.org/resource/B._Shiva_Rao> <http://dbpedia.org/property/party> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/party",
    "predicate1_mention": "party",
    "predicate2_uri": "http://dbpedia.org/property/party",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Manthena_Venkata_Raju",
    "entity1_mention": "manthena venkata raju",
    "entity2_uri": "http://dbpedia.org/resource/B._Shiva_Rao",
    "entity2_mention": "B. Shiva Rao"
},
{
    "id": "689",
    "question": "In which city is  Arsenal Cider House located ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arsenal_Cider_House> <http://dbpedia.org/property/locationCity> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/locationCity",
    "predicate1_mention": "located",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Arsenal_Cider_House",
    "entity1_mention": "Arsenal Cider House",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "690",
    "question": "From which state do the White Plum Asangas come?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/White_Plum_Asanga> . ?x <http://dbpedia.org/ontology/stateOfOrigin> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/religion",
    "predicate1_mention": "from",
    "predicate2_uri": "http://dbpedia.org/ontology/stateOfOrigin",
    "predicate2_mention": "state",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/White_Plum_Asanga",
    "entity1_mention": "White Plum Asangas",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "691",
    "question": "List the ceremonial county of East Tilbury ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/East_Tilbury> <http://dbpedia.org/ontology/ceremonialCounty> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/ceremonialCounty",
    "predicate1_mention": "ceremonial county",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/East_Tilbury",
    "entity1_mention": "East Tilbury",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "692",
    "question": "How many people are there who have relationship with Kennedy family?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Kennedy_family>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/relation",
    "predicate1_mention": "relationship",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kennedy_family",
    "entity1_mention": "kennedy family",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "693",
    "question": "Which board game can be said as a mind based game?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Board_game> . ?uri <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Mind_sport> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/genre",
    "predicate1_mention": "which",
    "predicate2_uri": "http://dbpedia.org/ontology/genre",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Board_game",
    "entity1_mention": "board game",
    "entity2_uri": "http://dbpedia.org/resource/Mind_sport",
    "entity2_mention": "mind"
},
{
    "id": "694",
    "question": "Was GM first aired in Albania?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/G\u00fcm\u00fc\u015f_(TV_series)> <http://dbpedia.org/property/firstAired> <http://dbpedia.org/resource/Albania> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/firstAired",
    "predicate1_mention": "first aired",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/G\u00fcm\u00fc\u015f_(TV_series)",
    "entity1_mention": "GM",
    "entity2_uri": "http://dbpedia.org/resource/Albania",
    "entity2_mention": "albania"
},
{
    "id": "695",
    "question": "In which ice hockey league, did the team coached by Joel Quenneville win?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headCoach> <http://dbpedia.org/resource/Joel_Quenneville> . ?uri <http://dbpedia.org/property/champion> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/IceHockeyLeague>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/headCoach",
    "predicate1_mention": "coached",
    "predicate2_uri": "http://dbpedia.org/property/champion",
    "predicate2_mention": "win",
    "type_uri": "http://dbpedia.org/ontology/IceHockeyLeague",
    "type_mention": "ice hockey league",
    "entity1_uri": "http://dbpedia.org/resource/Joel_Quenneville",
    "entity1_mention": "Joel Quenneville",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "696",
    "question": "What is the official residence of the Lula J. Davis which is also the death location of the John McTaggart (jockey) ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lula_J._Davis> <http://dbpedia.org/ontology/residence> ?uri. <http://dbpedia.org/resource/John_McTaggart_(jockey)> <http://dbpedia.org/ontology/deathPlace> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/residence",
    "predicate1_mention": "residence",
    "predicate2_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate2_mention": "death location",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lula_J._Davis",
    "entity1_mention": "Lula J. Davis",
    "entity2_uri": "http://dbpedia.org/resource/John_McTaggart_(jockey)",
    "entity2_mention": "John McTaggart (jockey)"
},
{
    "id": "697",
    "question": "How many games have a publisher based in US?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/ontology/publisher> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/location",
    "predicate1_mention": "in",
    "predicate2_uri": "http://dbpedia.org/ontology/publisher",
    "predicate2_mention": "publisher",
    "type_uri": "http://dbpedia.org/ontology/VideoGame",
    "type_mention": "games",
    "entity1_uri": "http://dbpedia.org/resource/United_States",
    "entity1_mention": "US",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "700",
    "question": "Is Julia Gillard a part of monarch of elizabeth 2?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Julia_Gillard> <http://dbpedia.org/property/monarch> <http://dbpedia.org/resource/Elizabeth_II> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/monarch",
    "predicate1_mention": "monarch",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Julia_Gillard",
    "entity1_mention": "Julia Gillard",
    "entity2_uri": "http://dbpedia.org/resource/Elizabeth_II",
    "entity2_mention": "elizabeth 2"
},
{
    "id": "701",
    "question": "Which cities come in the course of the river, into which Big Creek around Texas flows too?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/rightTributary> <http://dbpedia.org/resource/Big_Creek_(Texas_Co._Missouri)> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/rightTributary",
    "predicate1_mention": "flows",
    "predicate2_uri": "http://dbpedia.org/ontology/city",
    "predicate2_mention": "cities",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "river",
    "entity1_uri": "http://dbpedia.org/resource/Big_Creek_(Texas_Co._Missouri)",
    "entity1_mention": "Big Creek around Texas flows too",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "702",
    "question": "Where are INKAS located which is also the state of origin for Jojo Chintoh ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jojo_Chintoh> <http://dbpedia.org/ontology/stateOfOrigin> ?uri. <http://dbpedia.org/resource/INKAS> <http://dbpedia.org/property/locations> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/stateOfOrigin",
    "predicate1_mention": "state of origin",
    "predicate2_uri": "http://dbpedia.org/property/locations",
    "predicate2_mention": "located",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jojo_Chintoh",
    "entity1_mention": "Jojo Chintoh",
    "entity2_uri": "http://dbpedia.org/resource/INKAS",
    "entity2_mention": "inkas"
},
{
    "id": "703",
    "question": "Who wrote the frost king?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Frost_King> <http://dbpedia.org/ontology/author> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/author",
    "predicate1_mention": "wrote",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Frost_King",
    "entity1_mention": "the frost king",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "704",
    "question": "How many other key people are there of the non-profit organisations whose key people is Hillary Clinton ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Hillary_Clinton> . ?x <http://dbpedia.org/property/keyPeople> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/keyPeople",
    "predicate1_mention": "key people",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hillary_Clinton",
    "entity1_mention": "hillary clinton",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "705",
    "question": "How many races have the horses bred by Jacques Van't Hart participated in?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/breeder> <http://dbpedia.org/resource/Jacques_Van't_Hart> . ?x <http://dbpedia.org/property/race> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/breeder",
    "predicate1_mention": "bred",
    "predicate2_uri": "http://dbpedia.org/property/race",
    "predicate2_mention": "races",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jacques_Van't_Hart",
    "entity1_mention": "jacques van't hart",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "706",
    "question": "Who is the spouse of Daniel Gibson? ",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Daniel_Gibson>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/spouse",
    "predicate1_mention": "spouse",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Daniel_Gibson",
    "entity1_mention": "Daniel Gibson",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "707",
    "question": "Name the mouth country of Upper Neretva ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Upper_Neretva> <http://dbpedia.org/ontology/mouthCountry> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/mouthCountry",
    "predicate1_mention": "mouth country",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Upper_Neretva",
    "entity1_mention": "Upper Neretva",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "708",
    "question": "In how many regions is English American spoken?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/English_Americans> <http://dbpedia.org/property/region> ?uri  . }",
    "sparql_id": "102",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/region",
    "predicate1_mention": "regions",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/English_Americans",
    "entity1_mention": "English American",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "710",
    "question": "Which country does league of Nguendula Filipe belongs to?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Nguendula_Filipe> <http://dbpedia.org/ontology/league> ?x . ?x <http://dbpedia.org/property/country> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/league",
    "predicate1_mention": "league",
    "predicate2_uri": "http://dbpedia.org/property/country",
    "predicate2_mention": "country",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Nguendula_Filipe",
    "entity1_mention": "nguendula filipe",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "711",
    "question": "Which party does Iqbal Singh and B Shiva Rao currently belong to?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Iqbal_Singh_(politician)> <http://dbpedia.org/property/party> ?uri. <http://dbpedia.org/resource/B._Shiva_Rao> <http://dbpedia.org/property/party> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/party",
    "predicate1_mention": "party",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Iqbal_Singh_(politician)",
    "entity1_mention": "Iqbal Singh",
    "entity2_uri": "http://dbpedia.org/resource/B._Shiva_Rao",
    "entity2_mention": "B Shiva Rao"
},
{
    "id": "712",
    "question": "What is the largest city of the country to whom, the battle honours of 65th Regiment of Foot were given?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/65th_(2nd_Yorkshire,_North_Riding)_Regiment_of_Foot> <http://dbpedia.org/property/battleHonours> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/battleHonours",
    "predicate1_mention": "battle honours",
    "predicate2_uri": "http://dbpedia.org/ontology/largestCity",
    "predicate2_mention": "largest city",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/65th_(2nd_Yorkshire,_North_Riding)_Regiment_of_Foot",
    "entity1_mention": "65th Regiment of Foot",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "714",
    "question": "Is Ella Fitzgerald associated with Mickey Roker?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mickey_Roker> <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Ella_Fitzgerald> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedBand",
    "predicate1_mention": "associated",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mickey_Roker",
    "entity1_mention": "mickey roker",
    "entity2_uri": "http://dbpedia.org/resource/Ella_Fitzgerald",
    "entity2_mention": "Ella Fitzgerald"
},
{
    "id": "715",
    "question": "Name the notable work by Russell T Davis which is also the series of Doctor Who:Destiny of the Doctors ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/property/notableworks> ?uri. <http://dbpedia.org/resource/Doctor_Who:_Destiny_of_the_Doctors> <http://dbpedia.org/ontology/series> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/notableworks",
    "predicate1_mention": "notable work",
    "predicate2_uri": "http://dbpedia.org/ontology/series",
    "predicate2_mention": "series",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Russell_T_Davies",
    "entity1_mention": "Russell T Davis",
    "entity2_uri": "http://dbpedia.org/resource/Doctor_Who:_Destiny_of_the_Doctors",
    "entity2_mention": "Doctor Who:Destiny of the Doctors"
},
{
    "id": "718",
    "question": "What are the school mascots in Blytheville school district?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/district> <http://dbpedia.org/resource/Blytheville_School_District> . ?x <http://dbpedia.org/property/mascot> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/district",
    "predicate1_mention": "district",
    "predicate2_uri": "http://dbpedia.org/property/mascot",
    "predicate2_mention": "mascots",
    "type_uri": "http://dbpedia.org/ontology/School",
    "type_mention": "school",
    "entity1_uri": "http://dbpedia.org/resource/Blytheville_School_District",
    "entity1_mention": "Blytheville school district",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "719",
    "question": "What are some rivers over which there is a box girder bridge?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/design> <http://dbpedia.org/resource/Box_girder_bridge> . ?x <http://dbpedia.org/property/crosses> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/design",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/crosses",
    "predicate2_mention": "rivers",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Box_girder_bridge",
    "entity1_mention": "box girder bridge",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "720",
    "question": "How many services does the company who made Onedrive provide?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/service> <http://dbpedia.org/resource/OneDrive> . ?x <http://dbpedia.org/property/services> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/service",
    "predicate1_mention": "provide",
    "predicate2_uri": "http://dbpedia.org/property/services",
    "predicate2_mention": "services",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/OneDrive",
    "entity1_mention": "onedrive",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "721",
    "question": "Name the movie written by Monty Python and has music composer as Geoffrey Burgon ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Monty_Python> . ?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Geoffrey_Burgon>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/writer",
    "predicate1_mention": "written",
    "predicate2_uri": "http://dbpedia.org/ontology/musicComposer",
    "predicate2_mention": "music composer",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movie",
    "entity1_uri": "http://dbpedia.org/resource/Monty_Python",
    "entity1_mention": "Monty Python",
    "entity2_uri": "http://dbpedia.org/resource/Geoffrey_Burgon",
    "entity2_mention": "geoffrey burgon"
},
{
    "id": "724",
    "question": "What sports are there at the universities affiliated to the National Capital Region Athletic Association?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/affiliation> <http://dbpedia.org/resource/National_Capital_Region_Athletic_Association> . ?x <http://dbpedia.org/property/athletics> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/affiliation",
    "predicate1_mention": "affiliated",
    "predicate2_uri": "http://dbpedia.org/property/athletics",
    "predicate2_mention": "athletic",
    "type_uri": "http://dbpedia.org/ontology/University",
    "type_mention": "universities",
    "entity1_uri": "http://dbpedia.org/resource/National_Capital_Region_Athletic_Association",
    "entity1_mention": "National Capital Region Athletic Association",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "725",
    "question": "What musician is often associated with Tiffany Villarreal and wrote Same Song?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Same_Song_(Digital_Underground_song)> <http://dbpedia.org/property/writer> ?uri. <http://dbpedia.org/resource/Tiffany_Villarreal> <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/writer",
    "predicate1_mention": "wrote",
    "predicate2_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
    "predicate2_mention": "musician is often associated",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Same_Song_(Digital_Underground_song)",
    "entity1_mention": "Same Song",
    "entity2_uri": "http://dbpedia.org/resource/Tiffany_Villarreal",
    "entity2_mention": "Tiffany Villarreal"
},
{
    "id": "726",
    "question": "Name the city served by Juhu Aerodrome ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Juhu_Aerodrome> <http://dbpedia.org/property/cityServed> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/cityServed",
    "predicate1_mention": "city served",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Juhu_Aerodrome",
    "entity1_mention": "Juhu Aerodrome",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "727",
    "question": "How many ships belong to states which has Unitary as government type ?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/governmentType> <http://dbpedia.org/resource/Unitary_state> . ?uri <http://dbpedia.org/ontology/country> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Ship>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/governmentType",
    "predicate1_mention": "government type",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "states",
    "type_uri": "http://dbpedia.org/ontology/Ship",
    "type_mention": "ships",
    "entity1_uri": "http://dbpedia.org/resource/Unitary_state",
    "entity1_mention": "unitary",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "729",
    "question": "What common team are Mikhail Pashnin and Robin Kovacs expected to play for?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mikhail_Pashnin> <http://dbpedia.org/property/prospectTeam> ?uri. <http://dbpedia.org/resource/Robin_Kovacs> <http://dbpedia.org/property/prospectTeam> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/prospectTeam",
    "predicate1_mention": "expected to play for",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mikhail_Pashnin",
    "entity1_mention": "Mikhail Pashnin",
    "entity2_uri": "http://dbpedia.org/resource/Robin_Kovacs",
    "entity2_mention": "Robin Kovacs"
},
{
    "id": "730",
    "question": "Which races has the horse bred by Jacques Van't Hart participated in?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/breeder> <http://dbpedia.org/resource/Jacques_Van't_Hart> . ?x <http://dbpedia.org/property/race> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/breeder",
    "predicate1_mention": "bred",
    "predicate2_uri": "http://dbpedia.org/property/race",
    "predicate2_mention": "races",
    "type_uri": "http://dbpedia.org/ontology/Horse",
    "type_mention": "horse",
    "entity1_uri": "http://dbpedia.org/resource/Jacques_Van't_Hart",
    "entity1_mention": "jacques van't hart",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "731",
    "question": "What are the awards won by the spouse of Liv Ullmann ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Liv_Ullmann> <http://dbpedia.org/ontology/partner> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/partner",
    "predicate1_mention": "spouse",
    "predicate2_uri": "http://dbpedia.org/property/awards",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Liv_Ullmann",
    "entity1_mention": "Liv Ullmann",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "733",
    "question": "Does Gibby Haynes play the saxophone?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Gibby_Haynes> <http://dbpedia.org/property/instrument> <http://dbpedia.org/resource/Saxophone> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/instrument",
    "predicate1_mention": "play",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Gibby_Haynes",
    "entity1_mention": "Gibby Haynes",
    "entity2_uri": "http://dbpedia.org/resource/Saxophone",
    "entity2_mention": "saxophone"
},
{
    "id": "734",
    "question": "List the movies directed by Stanley Kubrick?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Stanley_Kubrick>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/director",
    "predicate1_mention": "directed",
    "predicate2_uri": "http://dbpedia.org/ontology/Film",
    "predicate2_mention": "movies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Stanley_Kubrick",
    "entity1_mention": "stanley kubrick",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "735",
    "question": "Things going to the mediterranean sea also go where?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/destinations> <http://dbpedia.org/resource/Mediterranean_Sea> . ?x <http://dbpedia.org/ontology/destination> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/destinations",
    "predicate1_mention": "go where",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mediterranean_Sea",
    "entity1_mention": "mediterranean sea",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "736",
    "question": "How many first drivers have participated when Scuderia Ferrari was a first team?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/firstTeam> <http://dbpedia.org/resource/Scuderia_Ferrari> . ?x <http://dbpedia.org/ontology/firstDriver> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/firstTeam",
    "predicate1_mention": "first team",
    "predicate2_uri": "http://dbpedia.org/ontology/firstDriver",
    "predicate2_mention": "first drivers",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Scuderia_Ferrari",
    "entity1_mention": "scuderia ferrari",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "737",
    "question": "Was Tommy Tucker's Tooth animated by Walt Disney?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Tommy_Tucker's_Tooth> <http://dbpedia.org/ontology/animator> <http://dbpedia.org/resource/Walt_Disney> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/animator",
    "predicate1_mention": "animated",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tommy_Tucker's_Tooth",
    "entity1_mention": "Tommy Tucker's Tooth",
    "entity2_uri": "http://dbpedia.org/resource/Walt_Disney",
    "entity2_mention": "Walt Disney"
},
{
    "id": "738",
    "question": "What is the religious affiliation of Wickramabahu Central College (National School) ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)> <http://dbpedia.org/property/religiousAffiliation> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/religiousAffiliation",
    "predicate1_mention": "religious affiliation",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)",
    "entity1_mention": "Wickramabahu Central College (National School)",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "739",
    "question": "What is the destinations of the airline whose headquarters is in Manchester?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Manchester> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/headquarters",
    "predicate1_mention": "headquarters",
    "predicate2_uri": "http://dbpedia.org/property/destinations",
    "predicate2_mention": "destinations",
    "type_uri": "http://dbpedia.org/ontology/Airline",
    "type_mention": "airline",
    "entity1_uri": "http://dbpedia.org/resource/Manchester",
    "entity1_mention": "manchester",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "741",
    "question": "What is the allegiance of the Albert Kwesi Ocran and state of origin of the Jojo Chintoh ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Albert_Kwesi_Ocran> <http://dbpedia.org/property/allegiance> ?uri. <http://dbpedia.org/resource/Jojo_Chintoh> <http://dbpedia.org/ontology/stateOfOrigin> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/allegiance",
    "predicate1_mention": "allegiance",
    "predicate2_uri": "http://dbpedia.org/ontology/stateOfOrigin",
    "predicate2_mention": "state of origin",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Albert_Kwesi_Ocran",
    "entity1_mention": "Albert Kwesi Ocran",
    "entity2_uri": "http://dbpedia.org/resource/Jojo_Chintoh",
    "entity2_mention": "Jojo Chintoh"
},
{
    "id": "742",
    "question": "What appliance Sony made after the success of PlayStation 2?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Sony> . ?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/PlayStation_2>  . }",
    "sparql_id": "8",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate1_mention": "appliance",
    "predicate2_uri": "http://dbpedia.org/ontology/predecessor",
    "predicate2_mention": "success",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sony",
    "entity1_mention": "sony",
    "entity2_uri": "http://dbpedia.org/resource/PlayStation_2",
    "entity2_mention": "PlayStation 2"
},
{
    "id": "743",
    "question": "Which publisher of Stone Canoe is also the university for which Michael Powell plays for ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Stone_Canoe> <http://dbpedia.org/ontology/publisher> ?uri. <http://dbpedia.org/resource/Michael_Powell_(lacrosse)> <http://dbpedia.org/ontology/team> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/publisher",
    "predicate1_mention": "publisher",
    "predicate2_uri": "http://dbpedia.org/ontology/team",
    "predicate2_mention": "plays for",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Stone_Canoe",
    "entity1_mention": "stone canoe",
    "entity2_uri": "http://dbpedia.org/resource/Michael_Powell_(lacrosse)",
    "entity2_mention": "michael powell"
},
{
    "id": "744",
    "question": "How many shows are made by the channels whose predecessor was the Comedy Channel?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/The_Comedy_Channel_(United_States)> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/predecessor",
    "predicate1_mention": "predecessor",
    "predicate2_uri": "http://dbpedia.org/property/network",
    "predicate2_mention": "channels",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "shows",
    "entity1_uri": "http://dbpedia.org/resource/The_Comedy_Channel_(United_States)",
    "entity1_mention": "the Comedy Channel",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "745",
    "question": "What are the movies directed by Joel Schumacher?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Joel_Schumacher>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/director",
    "predicate1_mention": "directed",
    "predicate2_uri": "http://dbpedia.org/ontology/Film",
    "predicate2_mention": "movies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Joel_Schumacher",
    "entity1_mention": "Joel Schumacher",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "746",
    "question": "Who is owner of the soccer club which owns the Cobham Training Centre?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cobham_Training_Centre>  <http://dbpedia.org/property/owner> ?x .  ?x <http://dbpedia.org/property/owner> ?uri . }",
    "sparql_id": "9",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/owner",
    "predicate1_mention": "owner",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Cobham_Training_Centre",
    "entity1_mention": "Cobham Training Centre",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "747",
    "question": "What is the military rank of the commanders of Regiment of Mounted Grenadiers?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Regiment_of_Mounted_Grenadiers> <http://dbpedia.org/property/notableCommanders> ?x . ?x <http://dbpedia.org/ontology/militaryRank> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/notableCommanders",
    "predicate1_mention": "commanders",
    "predicate2_uri": "http://dbpedia.org/ontology/militaryRank",
    "predicate2_mention": "military rank",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Regiment_of_Mounted_Grenadiers",
    "entity1_mention": "Regiment of Mounted Grenadiers",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "748",
    "question": "How many wars took place in Israel?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Israel>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/place",
    "predicate1_mention": "place",
    "predicate2_uri": "http://dbpedia.org/ontology/MilitaryConflict",
    "predicate2_mention": "many",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Israel",
    "entity1_mention": "israel",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "749",
    "question": "Where is Richard Stites located ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Richard_Stites> <http://dbpedia.org/ontology/birthPlace> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate1_mention": "located",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Richard_Stites",
    "entity1_mention": "richard stites",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "750",
    "question": "Semnani languages are spoken in which countries?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/languages> <http://dbpedia.org/resource/Semnani_languages>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/languages",
    "predicate1_mention": "languages",
    "predicate2_uri": "http://dbpedia.org/ontology/Country",
    "predicate2_mention": "countries",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Semnani_languages",
    "entity1_mention": "Semnani languages",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "751",
    "question": "How many companies serve the Australian region?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/regionServed> <http://dbpedia.org/resource/Australia>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/regionServed",
    "predicate1_mention": "region",
    "predicate2_uri": "http://dbpedia.org/ontology/Company",
    "predicate2_mention": "companies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Australia",
    "entity1_mention": "Australian region",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "752",
    "question": "Who wrote The Times They Are a-Changin?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)> <http://dbpedia.org/ontology/musicBy> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/musicBy",
    "predicate1_mention": "wrote",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)",
    "entity1_mention": "The Times They Are a-Changin",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "754",
    "question": "Who was the opponent of Robert Carr, 1st Earl of Somerset ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Carr,_1st_Earl_of_Somerset> <http://dbpedia.org/ontology/opponent> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/opponent",
    "predicate1_mention": "opponent",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Robert_Carr,_1st_Earl_of_Somerset",
    "entity1_mention": "Robert Carr, 1st Earl of Somerset",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "755",
    "question": "Which organisation has superintendent as Lieutenant general ( United States )?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/superintendent> <http://dbpedia.org/resource/Lieutenant_general_(United_States)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/superintendent",
    "predicate1_mention": "superintendent",
    "predicate2_uri": "http://dbpedia.org/ontology/Organisation",
    "predicate2_mention": "organisation",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lieutenant_general_(United_States)",
    "entity1_mention": "Lieutenant general ( United States )",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "756",
    "question": "Give me the total number of architect of the buildings whose one of the  architect was Louis D. Astorino?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/architect> <http://dbpedia.org/resource/Louis_D._Astorino> . ?x <http://dbpedia.org/property/architect> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/architect",
    "predicate1_mention": "architect",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Louis_D._Astorino",
    "entity1_mention": "Louis D. Astorino",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "757",
    "question": "Where can i find companies which were started in Toronto?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Toronto> . ?x <http://dbpedia.org/property/locations> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/foundationPlace",
    "predicate1_mention": "started",
    "predicate2_uri": "http://dbpedia.org/property/locations",
    "predicate2_mention": "Where",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "companies",
    "entity1_uri": "http://dbpedia.org/resource/Toronto",
    "entity1_mention": "toronto",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "758",
    "question": "List the leaders of the government agencies whose jurisdiction was German-occupied Europe.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/jurisdiction> <http://dbpedia.org/resource/German-occupied_Europe> . ?x <http://dbpedia.org/ontology/leader> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/jurisdiction",
    "predicate1_mention": "jurisdiction",
    "predicate2_uri": "http://dbpedia.org/ontology/leader",
    "predicate2_mention": "leaders",
    "type_uri": "http://dbpedia.org/ontology/GovernmentAgency",
    "type_mention": "government agencies",
    "entity1_uri": "http://dbpedia.org/resource/German-occupied_Europe",
    "entity1_mention": "German-occupied Europe",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "759",
    "question": "Which company released the software RenderMan?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/RenderMan_(software)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/products",
    "predicate1_mention": "released",
    "predicate2_uri": "http://dbpedia.org/ontology/Company",
    "predicate2_mention": "company",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/RenderMan_(software)",
    "entity1_mention": "software RenderMan",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "761",
    "question": "Which associate of Thomas bryan Martin is also the president of Carmichael ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thomas_Bryan_Martin> <http://dbpedia.org/ontology/associate> ?uri. <http://dbpedia.org/resource/William_Carmichael_(diplomat)> <http://dbpedia.org/property/president> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/associate",
    "predicate1_mention": "associate",
    "predicate2_uri": "http://dbpedia.org/property/president",
    "predicate2_mention": "president",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Thomas_Bryan_Martin",
    "entity1_mention": "Thomas bryan Martin",
    "entity2_uri": "http://dbpedia.org/resource/William_Carmichael_(diplomat)",
    "entity2_mention": "carmichael"
},
{
    "id": "763",
    "question": "Count the total number of launch site of the rockets which have been launched form Cape Canaveral Air Force Station ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station> . ?x <http://dbpedia.org/ontology/launchSite> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/launchSite",
    "predicate1_mention": "launch site",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station",
    "entity1_mention": "Cape Canaveral Air Force Station",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "764",
    "question": "How many shows are made by Larry David?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Larry_David>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/creator",
    "predicate1_mention": "are made by",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "shows",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Larry_David",
    "entity1_mention": "larry david",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "765",
    "question": "Name the home town of Cline Buckens ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/C\u00e9line_Buckens> <http://dbpedia.org/ontology/hometown> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/hometown",
    "predicate1_mention": "home town",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/C\u00e9line_Buckens",
    "entity1_mention": "Cline Buckens",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "767",
    "question": "What are the television shows whose network's sister station is BBC Two?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/sisterStation> <http://dbpedia.org/resource/BBC_Two> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/sisterStation",
    "predicate1_mention": "sister station",
    "predicate2_uri": "http://dbpedia.org/ontology/network",
    "predicate2_mention": "network's",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television",
    "entity1_uri": "http://dbpedia.org/resource/BBC_Two",
    "entity1_mention": "BBC Two",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "771",
    "question": "Is Michael Schumacher the first driver of the 1994 grand prix?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/1994_Hungarian_Grand_Prix> <http://dbpedia.org/property/firstDriver> <http://dbpedia.org/resource/Michael_Schumacher> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/firstDriver",
    "predicate1_mention": "first driver",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/1994_Hungarian_Grand_Prix",
    "entity1_mention": "the 1994 grand prix",
    "entity2_uri": "http://dbpedia.org/resource/Michael_Schumacher",
    "entity2_mention": "Michael Schumacher"
},
{
    "id": "772",
    "question": "By which companies is RENFE Class 333 designed?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/RENFE_Class_333> <http://dbpedia.org/ontology/designer> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/designer",
    "predicate1_mention": "designed",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/RENFE_Class_333",
    "entity1_mention": "renfe class 333",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "773",
    "question": "Who all have been a president of educational institutes in Paud?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Paud> . ?x <http://dbpedia.org/property/president> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/location",
    "predicate1_mention": "educational",
    "predicate2_uri": "http://dbpedia.org/property/president",
    "predicate2_mention": "president",
    "type_uri": "http://dbpedia.org/ontology/EducationalInstitution",
    "type_mention": "educational institutes",
    "entity1_uri": "http://dbpedia.org/resource/Paud",
    "entity1_mention": "paud",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "774",
    "question": "Does the asiana airlines fly into the Gimhae International Airport?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Asiana_Airlines> <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Gimhae_International_Airport> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/targetAirport",
    "predicate1_mention": "airport",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Asiana_Airlines",
    "entity1_mention": "asiana airlines",
    "entity2_uri": "http://dbpedia.org/resource/Gimhae_International_Airport",
    "entity2_mention": "Gimhae International Airport"
},
{
    "id": "776",
    "question": "In which city is the distributor of Jeevan Mrityu located ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jeevan_Mrityu> <http://dbpedia.org/property/distributor> ?x . ?x <http://dbpedia.org/ontology/locationCity> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/distributor",
    "predicate1_mention": "distributor",
    "predicate2_uri": "http://dbpedia.org/ontology/locationCity",
    "predicate2_mention": "located",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jeevan_Mrityu",
    "entity1_mention": "Jeevan Mrityu",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "777",
    "question": "What is the state of the senator whose successor is Nathaniel P. Hill ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Nathaniel_P._Hill> . ?x <http://dbpedia.org/property/state> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Senator>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "http://dbpedia.org/property/state",
    "predicate2_mention": "state",
    "type_uri": "http://dbpedia.org/ontology/Senator",
    "type_mention": "senator",
    "entity1_uri": "http://dbpedia.org/resource/Nathaniel_P._Hill",
    "entity1_mention": "Nathaniel P. Hill",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "778",
    "question": "What is the alma mater of the James Still which is also the alma mater of Tom Maniatis?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/James_Still> <http://dbpedia.org/ontology/almaMater> ?uri. <http://dbpedia.org/resource/Tom_Maniatis> <http://dbpedia.org/property/almaMater> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate1_mention": "alma mater",
    "predicate2_uri": "http://dbpedia.org/property/almaMater",
    "predicate2_mention": "alma mater",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/James_Still",
    "entity1_mention": "James Still",
    "entity2_uri": "http://dbpedia.org/resource/Tom_Maniatis",
    "entity2_mention": "Tom Maniatis"
},
{
    "id": "779",
    "question": "Count the awards given to the recepients of the Becket fund for religious liberty.",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Becket_Fund_for_Religious_Liberty> . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/award",
    "predicate1_mention": "awards",
    "predicate2_uri": "http://dbpedia.org/property/awards",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Becket_Fund_for_Religious_Liberty",
    "entity1_mention": "Becket fund for religious liberty",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "780",
    "question": "What is the president whose lieutenants are Winston Bryant and Joe Purcell?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/lieutenant> <http://dbpedia.org/resource/Winston_Bryant> . ?uri <http://dbpedia.org/ontology/lieutenant> <http://dbpedia.org/resource/Joe_Purcell> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/lieutenant",
    "predicate1_mention": "lieutenants",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/President",
    "type_mention": "president",
    "entity1_uri": "http://dbpedia.org/resource/Winston_Bryant",
    "entity1_mention": "winston bryant",
    "entity2_uri": "http://dbpedia.org/resource/Joe_Purcell",
    "entity2_mention": "Joe Purcell"
},
{
    "id": "781",
    "question": "In all the grand prixes where the first team was Scuderia Ferrari, who all were the pole drivers?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/firstTeam> <http://dbpedia.org/resource/Scuderia_Ferrari> . ?x <http://dbpedia.org/property/poleDriver> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GrandPrix>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/firstTeam",
    "predicate1_mention": "first team",
    "predicate2_uri": "http://dbpedia.org/property/poleDriver",
    "predicate2_mention": "pole drivers",
    "type_uri": "http://dbpedia.org/ontology/GrandPrix",
    "type_mention": "grand prixes",
    "entity1_uri": "http://dbpedia.org/resource/Scuderia_Ferrari",
    "entity1_mention": "Scuderia Ferrari",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "782",
    "question": "What is the layout of the automobiles designed by Olivier Boulay?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Olivier_Boulay> . ?x <http://dbpedia.org/ontology/layout> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/designer",
    "predicate1_mention": "designed",
    "predicate2_uri": "http://dbpedia.org/ontology/layout",
    "predicate2_mention": "layout",
    "type_uri": "http://dbpedia.org/ontology/Automobile",
    "type_mention": "automobiles",
    "entity1_uri": "http://dbpedia.org/resource/Olivier_Boulay",
    "entity1_mention": "olivier boulay",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "783",
    "question": "Who has written the mary poppins musical?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mary_Poppins_(musical)> <http://dbpedia.org/ontology/author> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/author",
    "predicate1_mention": "written",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mary_Poppins_(musical)",
    "entity1_mention": "mary poppins musical",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "785",
    "question": "Who maintains the stuff designed by the Brunei government?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Politics_of_Brunei> . ?x <http://dbpedia.org/ontology/maintainedBy> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/designer",
    "predicate1_mention": "designed",
    "predicate2_uri": "http://dbpedia.org/ontology/maintainedBy",
    "predicate2_mention": "maintains",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Politics_of_Brunei",
    "entity1_mention": "the Brunei government",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "786",
    "question": "Name the common current team of the Avalon biddle and John mcGuinness ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Avalon_Biddle> <http://dbpedia.org/property/currentTeam> ?uri. <http://dbpedia.org/resource/John_McGuinness_(motorcycle_racer)> <http://dbpedia.org/property/currentTeam> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/currentTeam",
    "predicate1_mention": "current team",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Avalon_Biddle",
    "entity1_mention": "Avalon biddle",
    "entity2_uri": "http://dbpedia.org/resource/John_McGuinness_(motorcycle_racer)",
    "entity2_mention": "John mcGuinness"
},
{
    "id": "787",
    "question": "List the origin of the weapons which were used in the American Revolutionary War.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/usedInWar> <http://dbpedia.org/resource/American_Revolutionary_War> . ?x <http://dbpedia.org/property/origin> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Weapon>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/usedInWar",
    "predicate1_mention": "used",
    "predicate2_uri": "http://dbpedia.org/property/origin",
    "predicate2_mention": "origin",
    "type_uri": "http://dbpedia.org/ontology/Weapon",
    "type_mention": "weapons",
    "entity1_uri": "http://dbpedia.org/resource/American_Revolutionary_War",
    "entity1_mention": "American Revolutionary War",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "788",
    "question": "To which military division does Clark Daniel Stearns belong?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Clark_Daniel_Stearns> <http://dbpedia.org/ontology/militaryBranch> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/militaryBranch",
    "predicate1_mention": "military",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Clark_Daniel_Stearns",
    "entity1_mention": "Clark Daniel Stearns",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "789",
    "question": "In which race did Coneygree the racehorse and Fergie Sutherland the horse trainer participate?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fergie_Sutherland> <http://dbpedia.org/property/race> ?uri. <http://dbpedia.org/resource/Coneygree> <http://dbpedia.org/property/race> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/race",
    "predicate1_mention": "race",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Fergie_Sutherland",
    "entity1_mention": "Fergie Sutherland",
    "entity2_uri": "http://dbpedia.org/resource/Coneygree",
    "entity2_mention": "coneygree"
},
{
    "id": "790",
    "question": "What are the resting places of the associates of John Betts a, Connecticut politician?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Betts_(Connecticut_politician)> <http://dbpedia.org/ontology/associate> ?x . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/associate",
    "predicate1_mention": "associates",
    "predicate2_uri": "http://dbpedia.org/ontology/restingPlace",
    "predicate2_mention": "resting places",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/John_Betts_(Connecticut_politician)",
    "entity1_mention": "John Betts a, Connecticut politician",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "791",
    "question": "To which educational institutes is Samuel Isham associated to?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Samuel_Isham> <http://dbpedia.org/property/education> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/education",
    "predicate1_mention": "educational institutes",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Samuel_Isham",
    "entity1_mention": "samuel isham",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "792",
    "question": "Give me a count of mammals whose family is Canidae?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Canidae>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/family",
    "predicate1_mention": "family",
    "predicate2_uri": "http://dbpedia.org/ontology/Mammal",
    "predicate2_mention": "mammals",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Canidae",
    "entity1_mention": "canidae",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "794",
    "question": "Name the origin of Henry Cluney ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Henry_Cluney> <http://dbpedia.org/property/origin> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/origin",
    "predicate1_mention": "origin",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Henry_Cluney",
    "entity1_mention": "Henry Cluney",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "795",
    "question": "Which football team is in a city where A J Clark was a builder?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/builder> <http://dbpedia.org/resource/A._James_Clark> . ?uri <http://dbpedia.org/property/city> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballTeam>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/builder",
    "predicate1_mention": "builder",
    "predicate2_uri": "http://dbpedia.org/property/city",
    "predicate2_mention": "city",
    "type_uri": "http://dbpedia.org/ontology/AmericanFootballTeam",
    "type_mention": "football team",
    "entity1_uri": "http://dbpedia.org/resource/A._James_Clark",
    "entity1_mention": "A J Clark",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "796",
    "question": "Who originally wrote the manga which was later illustrated by Tamon Ohta?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/illustrator> <http://dbpedia.org/resource/Tamon_Ohta> . ?x <http://dbpedia.org/property/author> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Manga>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/illustrator",
    "predicate1_mention": "illustrated",
    "predicate2_uri": "http://dbpedia.org/property/author",
    "predicate2_mention": "wrote",
    "type_uri": "http://dbpedia.org/ontology/Manga",
    "type_mention": "manga",
    "entity1_uri": "http://dbpedia.org/resource/Tamon_Ohta",
    "entity1_mention": "tamon ohta",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "798",
    "question": "For which team does Ramiro Pea play ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ramiro_Pe\u00f1a> <http://dbpedia.org/ontology/team> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/team",
    "predicate1_mention": "team",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ramiro_Pe\u00f1a",
    "entity1_mention": "Ramiro Pea",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "799",
    "question": "How many shows is Russell Davies known for?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/property/notableworks> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "402",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/notableworks",
    "predicate1_mention": "known for",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "shows",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Russell_T_Davies",
    "entity1_mention": "russell davies",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "800",
    "question": "What is the leader of the government agency which is the military unit of Erich Kempka ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Erich_Kempka> <http://dbpedia.org/ontology/militaryUnit> ?x . ?x <http://dbpedia.org/ontology/leader> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/militaryUnit",
    "predicate1_mention": "military unit",
    "predicate2_uri": "http://dbpedia.org/ontology/leader",
    "predicate2_mention": "leader",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Erich_Kempka",
    "entity1_mention": "Erich Kempka",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "801",
    "question": "Which offices were held by the politicians who held their allegiance to the union of american civil war?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/allegiance> <http://dbpedia.org/resource/Union_(American_Civil_War)> . ?x <http://dbpedia.org/property/office> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/allegiance",
    "predicate1_mention": "allegiance",
    "predicate2_uri": "http://dbpedia.org/property/office",
    "predicate2_mention": "offices",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "politicians",
    "entity1_uri": "http://dbpedia.org/resource/Union_(American_Civil_War)",
    "entity1_mention": "the union of american civil war",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "802",
    "question": "Which awards did the narrator of Oscar and Lucinda win?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Oscar_and_Lucinda_(film)> <http://dbpedia.org/ontology/narrator> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/narrator",
    "predicate1_mention": "narrator",
    "predicate2_uri": "http://dbpedia.org/property/awards",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Oscar_and_Lucinda_(film)",
    "entity1_mention": "Oscar and Lucinda",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "803",
    "question": "Name the serving line of Daund Junction railway station?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Daund_Junction_railway_station> <http://dbpedia.org/ontology/servingRailwayLine> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/servingRailwayLine",
    "predicate1_mention": "serving line",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Daund_Junction_railway_station",
    "entity1_mention": "Daund Junction railway station",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "805",
    "question": "Which purpose of the Maharashtra Chess Association is Abhijit kunte is also know for ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maharashtra_Chess_Association> <http://dbpedia.org/property/purpose> ?uri. <http://dbpedia.org/resource/Abhijit_Kunte> <http://dbpedia.org/property/knownFor> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/purpose",
    "predicate1_mention": "purpose",
    "predicate2_uri": "http://dbpedia.org/property/knownFor",
    "predicate2_mention": "know for",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Maharashtra_Chess_Association",
    "entity1_mention": "Maharashtra Chess Association",
    "entity2_uri": "http://dbpedia.org/resource/Abhijit_Kunte",
    "entity2_mention": "abhijit kunte"
},
{
    "id": "806",
    "question": "Which sitcom's company is Paramount Television and is located in Cheers Beacon hill ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Paramount_Television> . ?uri <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Cheers_Beacon_Hill>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/company",
    "predicate1_mention": "company",
    "predicate2_uri": "http://dbpedia.org/property/location",
    "predicate2_mention": "located",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television",
    "entity1_uri": "http://dbpedia.org/resource/Paramount_Television",
    "entity1_mention": "Paramount Television",
    "entity2_uri": "http://dbpedia.org/resource/Cheers_Beacon_Hill",
    "entity2_mention": "cheers beacon hill"
},
{
    "id": "807",
    "question": "Which leader of united states house representatives election was married to Dolley Madison ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789> <http://dbpedia.org/property/leader> ?uri. <http://dbpedia.org/resource/Dolley_Madison> <http://dbpedia.org/ontology/spouse> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/leader",
    "predicate1_mention": "leader",
    "predicate2_uri": "http://dbpedia.org/ontology/spouse",
    "predicate2_mention": "married",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789",
    "entity1_mention": "united states house representatives election",
    "entity2_uri": "http://dbpedia.org/resource/Dolley_Madison",
    "entity2_mention": "Dolley Madison"
},
{
    "id": "808",
    "question": "Name the TV shows owned by divisions of CBS?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/CBS> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/parent",
    "predicate1_mention": "owned by",
    "predicate2_uri": "http://dbpedia.org/property/company",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "TV shows",
    "entity1_uri": "http://dbpedia.org/resource/CBS",
    "entity1_mention": "cbs",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "809",
    "question": "Who was the president under whom, a governor participated in Shay's rebellion?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Shays'_Rebellion> . ?x <http://dbpedia.org/property/president> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Governor>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/battle",
    "predicate1_mention": "rebellion",
    "predicate2_uri": "http://dbpedia.org/property/president",
    "predicate2_mention": "president",
    "type_uri": "http://dbpedia.org/ontology/Governor",
    "type_mention": "governor",
    "entity1_uri": "http://dbpedia.org/resource/Shays'_Rebellion",
    "entity1_mention": "Shay's rebellion",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "810",
    "question": "What program is presented by Brian Dunkleman and has artist as Simon Fuller?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Brian_Dunkleman> . ?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/presenter",
    "predicate1_mention": "presented",
    "predicate2_uri": "http://dbpedia.org/property/creator",
    "predicate2_mention": "artist",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "program",
    "entity1_uri": "http://dbpedia.org/resource/Brian_Dunkleman",
    "entity1_mention": "Brian Dunkleman",
    "entity2_uri": "http://dbpedia.org/resource/Simon_Fuller",
    "entity2_mention": "Simon Fuller"
},
{
    "id": "811",
    "question": "Is the charat district a district in peru?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Charat_District> <http://dbpedia.org/property/settlementType> <http://dbpedia.org/resource/Districts_of_Peru> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/settlementType",
    "predicate1_mention": "district",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Charat_District",
    "entity1_mention": "charat district",
    "entity2_uri": "http://dbpedia.org/resource/Districts_of_Peru",
    "entity2_mention": "district in peru"
},
{
    "id": "812",
    "question": "Who are the people who influence the writers of Evenor ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Evenor_(collection)> <http://dbpedia.org/ontology/author> ?x . ?x <http://dbpedia.org/ontology/influenced> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/author",
    "predicate1_mention": "writers",
    "predicate2_uri": "http://dbpedia.org/ontology/influence",
    "predicate2_mention": "influence",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Evenor_(collection)",
    "entity1_mention": "evenor",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "813",
    "question": "What are some movies written by British writers?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/British_people> . ?uri <http://dbpedia.org/ontology/writer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/nationality",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/writer",
    "predicate2_mention": "writers",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/British_people",
    "entity1_mention": "british",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "816",
    "question": "What is the mascot of alma mater of John O Moseley?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_O._Moseley> <http://dbpedia.org/property/almaMater> ?x . ?x <http://dbpedia.org/property/mascot> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/almaMater",
    "predicate1_mention": "alma mater",
    "predicate2_uri": "http://dbpedia.org/property/mascot",
    "predicate2_mention": "mascot",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/John_O._Moseley",
    "entity1_mention": "John O Moseley",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "817",
    "question": "Henry McDaniel's trained horses have won which awards?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/trainer> <http://dbpedia.org/resource/Henry_McDaniel_(racehorse_trainer)> . ?x <http://dbpedia.org/ontology/honours> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/trainer",
    "predicate1_mention": "trained",
    "predicate2_uri": "http://dbpedia.org/ontology/honours",
    "predicate2_mention": "awards",
    "type_uri": "http://dbpedia.org/ontology/Horse",
    "type_mention": "horses",
    "entity1_uri": "http://dbpedia.org/resource/Henry_McDaniel_(racehorse_trainer)",
    "entity1_mention": "Henry McDaniel's",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "818",
    "question": "What are the Languages of Zabbaleen ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Zabbaleen> <http://dbpedia.org/property/languages> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/languages",
    "predicate1_mention": "languages",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Zabbaleen",
    "entity1_mention": "zabbaleen",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "819",
    "question": "List down the important people of The Elders ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Elders_(organization)> <http://dbpedia.org/property/keyPeople> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/keyPeople",
    "predicate1_mention": "important people",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Elders_(organization)",
    "entity1_mention": "elders",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "820",
    "question": "Through which label did Mel Brooks produce his movie?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Mel_Brooks> . ?x <http://dbpedia.org/property/label> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/producer",
    "predicate1_mention": "produce",
    "predicate2_uri": "http://dbpedia.org/property/label",
    "predicate2_mention": "label",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movie",
    "entity1_uri": "http://dbpedia.org/resource/Mel_Brooks",
    "entity1_mention": "Mel Brooks",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "821",
    "question": "How many scientists are known for the Manhatten Project?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/knownFor> <http://dbpedia.org/resource/Manhattan_Project>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/knownFor",
    "predicate1_mention": "known for",
    "predicate2_uri": "http://dbpedia.org/ontology/Scientist",
    "predicate2_mention": "scientists",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Manhattan_Project",
    "entity1_mention": "Manhatten Project",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "822",
    "question": "Which broadcast area of Mauritius Broadcasting Corporation is also the nationality of Michael Medor ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mauritius_Broadcasting_Corporation> <http://dbpedia.org/property/broadcastArea> ?uri. <http://dbpedia.org/resource/Michael_Medor> <http://dbpedia.org/ontology/nationality> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/broadcastArea",
    "predicate1_mention": "broadcast area",
    "predicate2_uri": "http://dbpedia.org/ontology/nationality",
    "predicate2_mention": "nationality",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mauritius_Broadcasting_Corporation",
    "entity1_mention": "Mauritius Broadcasting Corporation",
    "entity2_uri": "http://dbpedia.org/resource/Michael_Medor",
    "entity2_mention": "michael medor"
},
{
    "id": "824",
    "question": "How many people have been presenters for NBC shows?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/NBC> . ?x <http://dbpedia.org/property/presenter> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/channel",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/presenter",
    "predicate2_mention": "presenters",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/NBC",
    "entity1_mention": "nbc",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "826",
    "question": "What is the settlement whose neighboring municipalities is Lancy and mayor name is Esther Alder?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Lancy> . ?uri <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Esther_Alder>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/neighboringMunicipalities",
    "predicate1_mention": "neighboring municipalities",
    "predicate2_uri": "http://dbpedia.org/ontology/mayor",
    "predicate2_mention": "mayor",
    "type_uri": "http://dbpedia.org/ontology/Settlement",
    "type_mention": "settlement",
    "entity1_uri": "http://dbpedia.org/resource/Lancy",
    "entity1_mention": "lancy",
    "entity2_uri": "http://dbpedia.org/resource/Esther_Alder",
    "entity2_mention": "esther alder"
},
{
    "id": "828",
    "question": "Whihc alma mater of angela Trusty is also the training center of David Scherman ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/David_Scherman> <http://dbpedia.org/ontology/training> ?uri. <http://dbpedia.org/resource/Angela_Trusty> <http://dbpedia.org/ontology/almaMater> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/training",
    "predicate1_mention": "training",
    "predicate2_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate2_mention": "alma mater",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/David_Scherman",
    "entity1_mention": "David Scherman",
    "entity2_uri": "http://dbpedia.org/resource/Angela_Trusty",
    "entity2_mention": "angela Trusty"
},
{
    "id": "829",
    "question": "How many producers have worked for FremantleMedia productions?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/company> <http://dbpedia.org/resource/FremantleMedia> . ?x <http://dbpedia.org/ontology/producer> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/company",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/producer",
    "predicate2_mention": "producers",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/FremantleMedia",
    "entity1_mention": "fremantlemedia",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "831",
    "question": "Who is the spouse of Willian Menalaus?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Menelaus> <http://dbpedia.org/ontology/spouse> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/spouse",
    "predicate1_mention": "spouse",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/William_Menelaus",
    "entity1_mention": "Willian Menalaus",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "832",
    "question": "What television show is aired on channel Sirius XM Holdings?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/Sirius_XM_Holdings>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/channel",
    "predicate1_mention": "channel",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "television show",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sirius_XM_Holdings",
    "entity1_mention": "Sirius XM Holdings",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "833",
    "question": "Is Joe Schilling the trainer of Nick Diaz?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Nick_Diaz> <http://dbpedia.org/ontology/trainer> <http://dbpedia.org/resource/Joe_Schilling> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/trainer",
    "predicate1_mention": "trainer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Nick_Diaz",
    "entity1_mention": "nick diaz",
    "entity2_uri": "http://dbpedia.org/resource/Joe_Schilling",
    "entity2_mention": "Joe Schilling"
},
{
    "id": "834",
    "question": "Name the associate acts of  Martin Pugh?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Martin_Pugh> <http://dbpedia.org/property/associatedActs> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/associatedActs",
    "predicate1_mention": "associate acts",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Martin_Pugh",
    "entity1_mention": "martin pugh",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "835",
    "question": "Which domain's journals did Willard Fiske edit?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/editor> <http://dbpedia.org/resource/Willard_Fiske> . ?x <http://dbpedia.org/property/discipline> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AcademicJournal>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/editor",
    "predicate1_mention": "edit",
    "predicate2_uri": "http://dbpedia.org/property/discipline",
    "predicate2_mention": "domain's",
    "type_uri": "http://dbpedia.org/ontology/AcademicJournal",
    "type_mention": "journals",
    "entity1_uri": "http://dbpedia.org/resource/Willard_Fiske",
    "entity1_mention": "willard fiske",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "836",
    "question": "Is James Hetfield a band member of Metallica?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Metallica> <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/James_Hetfield>  . }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/bandMember",
    "predicate1_mention": "band member",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Metallica",
    "entity1_mention": "metallica",
    "entity2_uri": "http://dbpedia.org/resource/James_Hetfield",
    "entity2_mention": "James Hetfield"
},
{
    "id": "837",
    "question": "Which baseball team is managed by Bruce Bochy?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Bruce_Bochy>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballTeam>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/manager",
    "predicate1_mention": "managed",
    "predicate2_uri": "http://dbpedia.org/ontology/BaseballTeam",
    "predicate2_mention": "baseball team",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bruce_Bochy",
    "entity1_mention": "bruce bochy",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "838",
    "question": "Name the F1 racer with relative as Ralf Schumacher and has child named Mick Schumacher?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Ralf_Schumacher> . ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mick_Schumacher>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FormulaOneRacer>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/relatives",
    "predicate1_mention": "relative",
    "predicate2_uri": "http://dbpedia.org/ontology/child",
    "predicate2_mention": "child",
    "type_uri": "http://dbpedia.org/ontology/FormulaOneRacer",
    "type_mention": "F1 racer",
    "entity1_uri": "http://dbpedia.org/resource/Ralf_Schumacher",
    "entity1_mention": "Ralf Schumacher",
    "entity2_uri": "http://dbpedia.org/resource/Mick_Schumacher",
    "entity2_mention": "Mick Schumacher"
},
{
    "id": "839",
    "question": "Where is Hafthor Julius Bjornsson from?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hafth\u00f3r_J\u00fal\u00edus_Bj\u00f6rnsson> <http://dbpedia.org/ontology/stateOfOrigin> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/stateOfOrigin",
    "predicate1_mention": "from",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hafth\u00f3r_J\u00fal\u00edus_Bj\u00f6rnsson",
    "entity1_mention": "Hafthor Julius Bjornsson",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "840",
    "question": "How many islands belong to archipelagos located in the pacific?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Pacific_Ocean> . ?uri <http://dbpedia.org/property/archipelago> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Island>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/location",
    "predicate1_mention": "located",
    "predicate2_uri": "http://dbpedia.org/property/archipelago",
    "predicate2_mention": "archipelagos",
    "type_uri": "http://dbpedia.org/ontology/Island",
    "type_mention": "islands",
    "entity1_uri": "http://dbpedia.org/resource/Pacific_Ocean",
    "entity1_mention": "pacific",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "841",
    "question": "How many other important things have been written by the creator of Stuart Alan Jones?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Stuart_Alan_Jones> <http://dbpedia.org/ontology/creator> ?x . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . }",
    "sparql_id": "103",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/creator",
    "predicate1_mention": "creator",
    "predicate2_uri": "http://dbpedia.org/ontology/notableWork",
    "predicate2_mention": "important things",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Stuart_Alan_Jones",
    "entity1_mention": "Stuart Alan Jones",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "842",
    "question": "What is the person known for who is the movie director of Sleepy-Time Squirrel ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sleepy-Time_Squirrel> <http://dbpedia.org/property/director> ?x . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/director",
    "predicate1_mention": "director",
    "predicate2_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate2_mention": "known for",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "person",
    "entity1_uri": "http://dbpedia.org/resource/Sleepy-Time_Squirrel",
    "entity1_mention": "sleepy-time squirrel",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "843",
    "question": "What kind of music is produced at the record label founded by Andre Bourgeois?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Andr\u00e9_Bourgeois> . ?x <http://dbpedia.org/ontology/genre> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RecordLabel>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/founder",
    "predicate1_mention": "founded",
    "predicate2_uri": "http://dbpedia.org/ontology/genre",
    "predicate2_mention": "kind of",
    "type_uri": "http://dbpedia.org/ontology/RecordLabel",
    "type_mention": "record label",
    "entity1_uri": "http://dbpedia.org/resource/Andr\u00e9_Bourgeois",
    "entity1_mention": "Andre Bourgeois",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "844",
    "question": "Which political party of Arunachal Pradesh Legislative Assembly election, 2014 was the leader of Rishikesh ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arunachal_Pradesh_Legislative_Assembly_election,_2014> <http://dbpedia.org/property/party> ?uri. <http://dbpedia.org/resource/Rishikesh> <http://dbpedia.org/ontology/leaderName> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/party",
    "predicate1_mention": "party",
    "predicate2_uri": "http://dbpedia.org/ontology/leaderName",
    "predicate2_mention": "leader",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Arunachal_Pradesh_Legislative_Assembly_election,_2014",
    "entity1_mention": "Arunachal Pradesh Legislative Assembly election, 2014",
    "entity2_uri": "http://dbpedia.org/resource/Rishikesh",
    "entity2_mention": "rishikesh"
},
{
    "id": "845",
    "question": "What shows used to air on the channel which was earlier known as The Comedy Central?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/The_Comedy_Channel_(United_States)> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/predecessor",
    "predicate1_mention": "central",
    "predicate2_uri": "http://dbpedia.org/property/distributor",
    "predicate2_mention": "earlier",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "shows",
    "entity1_uri": "http://dbpedia.org/resource/The_Comedy_Channel_(United_States)",
    "entity1_mention": "The Comedy Central",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "847",
    "question": "Who is the cover artist of Doctor Mirabilis (novel) ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Doctor_Mirabilis_(novel)> <http://dbpedia.org/property/coverArtist> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/coverArtist",
    "predicate1_mention": "cover artist",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Doctor_Mirabilis_(novel)",
    "entity1_mention": "Doctor Mirabilis (novel)",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "849",
    "question": "Does Kirk Hammett play the Gibson Flying V?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Kirk_Hammett> <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Gibson_Flying_V> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/instrument",
    "predicate1_mention": "play",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kirk_Hammett",
    "entity1_mention": "Kirk Hammett",
    "entity2_uri": "http://dbpedia.org/resource/Gibson_Flying_V",
    "entity2_mention": "Gibson Flying V"
},
{
    "id": "850",
    "question": "Name the sport league of Hampton Roads Rhinos ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hampton_Roads_Rhinos> <http://dbpedia.org/property/league> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/league",
    "predicate1_mention": "league",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hampton_Roads_Rhinos",
    "entity1_mention": "Hampton Roads Rhinos",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "852",
    "question": "For all the senators who once studied in Sturm College of Law, give their burial place?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Sturm_College_of_Law> . ?x <http://dbpedia.org/property/restingplace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Senator>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate1_mention": "studied in",
    "predicate2_uri": "http://dbpedia.org/property/restingplace",
    "predicate2_mention": "place",
    "type_uri": "http://dbpedia.org/ontology/Senator",
    "type_mention": "senators",
    "entity1_uri": "http://dbpedia.org/resource/Sturm_College_of_Law",
    "entity1_mention": "Sturm College of Law",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "855",
    "question": "Which people are known for appearing on the television show Dragon's Den?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Dragons'_Den_(UK_TV_series)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate1_mention": "known for",
    "predicate2_uri": "http://dbpedia.org/ontology/Person",
    "predicate2_mention": "people",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Dragons'_Den_(UK_TV_series)",
    "entity1_mention": "Dragon's Den",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "856",
    "question": "How many railway lines go through the station maintained by Public transport authority of western australia?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/owningOrganisation> <http://dbpedia.org/resource/Public_Transport_Authority_(Western_Australia)> . ?x <http://dbpedia.org/ontology/servingRailwayLine> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RailwayLine>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/owningOrganisation",
    "predicate1_mention": "station",
    "predicate2_uri": "http://dbpedia.org/ontology/servingRailwayLine",
    "predicate2_mention": "maintained by",
    "type_uri": "http://dbpedia.org/ontology/RailwayLine",
    "type_mention": "railway lines",
    "entity1_uri": "http://dbpedia.org/resource/Public_Transport_Authority_(Western_Australia)",
    "entity1_mention": "Public transport authority of western australia",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "857",
    "question": "Name the university of Alexandre Tichonov ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alexandre_Tichonov> <http://dbpedia.org/property/university> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/university",
    "predicate1_mention": "university",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Alexandre_Tichonov",
    "entity1_mention": "alexandre tichonov",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "858",
    "question": "What subjects does the subsequent work of The Dragons of Eden deal with  ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Dragons_of_Eden> <http://dbpedia.org/ontology/subsequentWork> ?x . ?x <http://dbpedia.org/property/subject> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/subsequentWork",
    "predicate1_mention": "subsequent work",
    "predicate2_uri": "http://dbpedia.org/property/subject",
    "predicate2_mention": "subjects",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Dragons_of_Eden",
    "entity1_mention": "The Dragons of Eden",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "859",
    "question": "What  awards did the cast members of Gods of Egypt win?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gods_of_Egypt_(film)> <http://dbpedia.org/ontology/starring> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/starring",
    "predicate1_mention": "cast members",
    "predicate2_uri": "http://dbpedia.org/property/awards",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Gods_of_Egypt_(film)",
    "entity1_mention": "Gods of Egypt",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "861",
    "question": "Carl Sagan has penned books on how many matters?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Carl_Sagan> . ?x <http://dbpedia.org/property/subject> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/author",
    "predicate1_mention": "penned",
    "predicate2_uri": "http://dbpedia.org/property/subject",
    "predicate2_mention": "matters",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Carl_Sagan",
    "entity1_mention": "Carl Sagan",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "862",
    "question": "what are some units under the US department of navy?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_the_Navy> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/commandStructure",
    "predicate1_mention": "some units under",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_States_Department_of_the_Navy",
    "entity1_mention": "the US department of navy",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "864",
    "question": "Which city's teams have been coached by Gary Kubaik?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Gary_Kubiak> . ?x <http://dbpedia.org/ontology/locationCity> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/coach",
    "predicate1_mention": "coached",
    "predicate2_uri": "http://dbpedia.org/ontology/locationCity",
    "predicate2_mention": "city's",
    "type_uri": "http://dbpedia.org/ontology/SportsTeam",
    "type_mention": "teams",
    "entity1_uri": "http://dbpedia.org/resource/Gary_Kubiak",
    "entity1_mention": "Gary Kubaik",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "865",
    "question": "What sport has made Eric Schiller famous, and has employed Craig Van Tibury?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Craig_Van_Tilbury> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/Eric_Schiller> <http://dbpedia.org/ontology/knownFor> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/occupation",
    "predicate1_mention": "employed",
    "predicate2_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate2_mention": "famous",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Craig_Van_Tilbury",
    "entity1_mention": "Craig Van Tibury",
    "entity2_uri": "http://dbpedia.org/resource/Eric_Schiller",
    "entity2_mention": "Eric Schiller"
},
{
    "id": "866",
    "question": "Which part of the US political framework did Arthur Bagby and Thomas H hicks both serve?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arthur_P._Bagby> <http://dbpedia.org/property/order> ?uri. <http://dbpedia.org/resource/Thomas_Holliday_Hicks> <http://dbpedia.org/property/order> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/order",
    "predicate1_mention": "serve",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Arthur_P._Bagby",
    "entity1_mention": "arthur bagby",
    "entity2_uri": "http://dbpedia.org/resource/Thomas_Holliday_Hicks",
    "entity2_mention": "Thomas H hicks"
},
{
    "id": "867",
    "question": "Who gave the voice to the characters sculpted by Clamp?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Clamp_(manga_artists)> . ?x <http://dbpedia.org/ontology/voice> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/creator",
    "predicate1_mention": "sculpted by",
    "predicate2_uri": "http://dbpedia.org/ontology/voice",
    "predicate2_mention": "voice",
    "type_uri": "http://dbpedia.org/ontology/FictionalCharacter",
    "type_mention": "characters",
    "entity1_uri": "http://dbpedia.org/resource/Clamp_(manga_artists)",
    "entity1_mention": "clamp",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "868",
    "question": "What is the country whose administrative centre is Hagta Guam?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Hag\u00e5t\u00f1a,_Guam>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/capital",
    "predicate1_mention": "administrative centre",
    "predicate2_uri": "http://dbpedia.org/ontology/Country",
    "predicate2_mention": "country",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hag\u00e5t\u00f1a,_Guam",
    "entity1_mention": "Hagta Guam",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "869",
    "question": "What is the political party of the of Bengalis ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/ethnicity> <http://dbpedia.org/resource/Bengalis> . ?x <http://dbpedia.org/ontology/party> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/ethnicity",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/party",
    "predicate2_mention": "party",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bengalis",
    "entity1_mention": "bengalis",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "871",
    "question": "Was Writings and Drawings illustrated by Bob Dylan?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Writings_and_Drawings> <http://dbpedia.org/property/illustrator> <http://dbpedia.org/resource/Bob_Dylan> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/illustrator",
    "predicate1_mention": "illustrated",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Writings_and_Drawings",
    "entity1_mention": "Writings and Drawings",
    "entity2_uri": "http://dbpedia.org/resource/Bob_Dylan",
    "entity2_mention": "Bob Dylan"
},
{
    "id": "873",
    "question": "How many major shrine are there, of the saints whose beatified by Pope Pius XI ?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/beatifiedBy> <http://dbpedia.org/resource/Pope_Pius_XI> . ?x <http://dbpedia.org/ontology/majorShrine> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/beatifiedBy",
    "predicate1_mention": "beatified by",
    "predicate2_uri": "http://dbpedia.org/ontology/majorShrine",
    "predicate2_mention": "major shrine",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Pope_Pius_XI",
    "entity1_mention": "pope pius xi",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "874",
    "question": "List the guest of the show The Other Side (The Outer Limits)?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Other_Side_(The_Outer_Limits)> <http://dbpedia.org/property/guests> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/guests",
    "predicate1_mention": "guest",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Other_Side_(The_Outer_Limits)",
    "entity1_mention": "The Other Side (The Outer Limits)",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "877",
    "question": "Count all the things licensed as Software as a service.",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/license> <http://dbpedia.org/resource/Software_as_a_service>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/license",
    "predicate1_mention": "licensed",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Software_as_a_service",
    "entity1_mention": "Software as a service",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "879",
    "question": "How many different kinds of games are published by Interplay Entertainment?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Interplay_Entertainment> . ?x <http://dbpedia.org/property/genre> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/publisher",
    "predicate1_mention": "published",
    "predicate2_uri": "http://dbpedia.org/property/genre",
    "predicate2_mention": "kinds of",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Interplay_Entertainment",
    "entity1_mention": "Interplay Entertainment",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "880",
    "question": "How many different kinds of softwares have been released under the GPL license?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/license> <http://dbpedia.org/resource/GNU_General_Public_License> . ?x <http://dbpedia.org/ontology/genre> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/license",
    "predicate1_mention": "license",
    "predicate2_uri": "http://dbpedia.org/ontology/genre",
    "predicate2_mention": "kinds of",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/GNU_General_Public_License",
    "entity1_mention": "the GPL license",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "881",
    "question": "Who are the stars of the movies which are distributed by Artisan Entertainment ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Artisan_Entertainment> . ?x <http://dbpedia.org/ontology/starring> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/distributor",
    "predicate1_mention": "distributed",
    "predicate2_uri": "http://dbpedia.org/ontology/starring",
    "predicate2_mention": "stars",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Artisan_Entertainment",
    "entity1_mention": "Artisan Entertainment",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "882",
    "question": "List the schools of the athlete with Balgowan as one of the school ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/school> <http://dbpedia.org/resource/Balgowan,_KwaZulu-Natal> . ?x <http://dbpedia.org/property/school> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/school",
    "predicate1_mention": "school",
    "predicate2_uri": "http://dbpedia.org/property/school",
    "predicate2_mention": "schools",
    "type_uri": "http://dbpedia.org/ontology/Athlete",
    "type_mention": "athlete",
    "entity1_uri": "http://dbpedia.org/resource/Balgowan,_KwaZulu-Natal",
    "entity1_mention": "balgowan",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "883",
    "question": "What awards have been once awarded to Ingmar Bergman, and have employed the service of Laemmle Theatres?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ingmar_Bergman> <http://dbpedia.org/property/awards> ?uri. <http://dbpedia.org/resource/Laemmle_Theatres> <http://dbpedia.org/ontology/service> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/awards",
    "predicate1_mention": "awards",
    "predicate2_uri": "http://dbpedia.org/ontology/service",
    "predicate2_mention": "service",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ingmar_Bergman",
    "entity1_mention": "Ingmar Bergman",
    "entity2_uri": "http://dbpedia.org/resource/Laemmle_Theatres",
    "entity2_mention": "Laemmle Theatres"
},
{
    "id": "884",
    "question": "Who produced wizards vs aliens?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wizards_vs_Aliens> <http://dbpedia.org/ontology/producer> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/producer",
    "predicate1_mention": "produced",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Wizards_vs_Aliens",
    "entity1_mention": "wizards vs aliens",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "885",
    "question": "Which team did Bill Murphy and Jean Segura play for?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bill_Murphy_(baseball)> <http://dbpedia.org/ontology/debutTeam> ?uri. <http://dbpedia.org/resource/Jean_Segura> <http://dbpedia.org/ontology/team> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/debutTeam",
    "predicate1_mention": "team",
    "predicate2_uri": "http://dbpedia.org/ontology/team",
    "predicate2_mention": "team",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bill_Murphy_(baseball)",
    "entity1_mention": "Bill Murphy",
    "entity2_uri": "http://dbpedia.org/resource/Jean_Segura",
    "entity2_mention": "Jean Segura"
},
{
    "id": "886",
    "question": "What is the draft team of Gene Conley ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gene_Conley> <http://dbpedia.org/property/draftTeam> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/draftTeam",
    "predicate1_mention": "draft team",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Gene_Conley",
    "entity1_mention": "Gene Conley",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "887",
    "question": "Which coach of Marquette Golden Eagles men's basketball team is also the head coach  of Virginia Tech Hokies men's basketball team ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2014\u201315_Virginia_Tech_Hokies_men's_basketball_team> <http://dbpedia.org/property/headcoach> ?uri. <http://dbpedia.org/resource/2012\u201313_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/ontology/coach> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/headcoach",
    "predicate1_mention": "head coach",
    "predicate2_uri": "http://dbpedia.org/ontology/coach",
    "predicate2_mention": "coach",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/2014\u201315_Virginia_Tech_Hokies_men's_basketball_team",
    "entity1_mention": "Virginia Tech Hokies men's basketball team",
    "entity2_uri": "http://dbpedia.org/resource/2012\u201313_Marquette_Golden_Eagles_men's_basketball_team",
    "entity2_mention": "Marquette Golden Eagles men's basketball team"
},
{
    "id": "888",
    "question": "What location country of AH141 is also the nation of malaysia Junior hockey league ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/AH141> <http://dbpedia.org/ontology/county> ?uri. <http://dbpedia.org/resource/Malaysia_Junior_Hockey_League> <http://dbpedia.org/ontology/country> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/county",
    "predicate1_mention": "location country",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "nation",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/AH141",
    "entity1_mention": "ah141",
    "entity2_uri": "http://dbpedia.org/resource/Malaysia_Junior_Hockey_League",
    "entity2_mention": "malaysia Junior hockey league"
},
{
    "id": "889",
    "question": "On how many subjects has Random house publishers published books?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/publisher> <http://dbpedia.org/resource/Random_House> . ?x <http://dbpedia.org/property/subject> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/publisher",
    "predicate1_mention": "publishers",
    "predicate2_uri": "http://dbpedia.org/property/subject",
    "predicate2_mention": "subjects",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Random_House",
    "entity1_mention": "random house",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "890",
    "question": "What is the common nationality of Funny Face a comedian and that of Georgina Theodora Wood ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Funny_Face_(comedian)> <http://dbpedia.org/property/nationality> ?uri. <http://dbpedia.org/resource/Georgina_Theodora_Wood> <http://dbpedia.org/ontology/nationality> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/nationality",
    "predicate1_mention": "nationality",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Funny_Face_(comedian)",
    "entity1_mention": "Funny Face a comedian",
    "entity2_uri": "http://dbpedia.org/resource/Georgina_Theodora_Wood",
    "entity2_mention": "Georgina Theodora Wood"
},
{
    "id": "891",
    "question": "Where do the judge advocate general corps live?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Judge_Advocate_General's_Corps> . ?x <http://dbpedia.org/property/residence> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/rank",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/residence",
    "predicate2_mention": "live",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Judge_Advocate_General's_Corps",
    "entity1_mention": "judge advocate general corps",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "892",
    "question": "What are the things Eric Schiller known for ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eric_Schiller> <http://dbpedia.org/ontology/knownFor> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate1_mention": "known for",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Eric_Schiller",
    "entity1_mention": "Eric Schiller",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "893",
    "question": "Does Walt Disney Studio have a subsidiary called Pixar Cascadia ?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Walt_Disney_Studios_(division)> <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Pixar> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/subsidiary",
    "predicate1_mention": "subsidiary",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Walt_Disney_Studios_(division)",
    "entity1_mention": "Walt Disney Studio",
    "entity2_uri": "http://dbpedia.org/resource/Pixar",
    "entity2_mention": "Pixar Cascadia"
},
{
    "id": "896",
    "question": "What are the nearest city to the historic places whose one of the nearest city is Wisconsin?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/nearestCity> <http://dbpedia.org/resource/Wisconsin> . ?x <http://dbpedia.org/property/nearestCity> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HistoricPlace>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/nearestCity",
    "predicate1_mention": "nearest city",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/HistoricPlace",
    "type_mention": "historic places",
    "entity1_uri": "http://dbpedia.org/resource/Wisconsin",
    "entity1_mention": "wisconsin",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "897",
    "question": "Who is the leader of the Kriminalpolizei and Ordnungspolizei?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kriminalpolizei> <http://dbpedia.org/ontology/leader> ?uri. <http://dbpedia.org/resource/Ordnungspolizei> <http://dbpedia.org/ontology/leader> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/leader",
    "predicate1_mention": "leader",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kriminalpolizei",
    "entity1_mention": "kriminalpolizei",
    "entity2_uri": "http://dbpedia.org/resource/Ordnungspolizei",
    "entity2_mention": "ordnungspolizei"
},
{
    "id": "898",
    "question": "Does vance johnson play as a wide receiver?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Vance_Johnson> <http://dbpedia.org/ontology/position> <http://dbpedia.org/resource/Wide_receiver> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/position",
    "predicate1_mention": "play as",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Vance_Johnson",
    "entity1_mention": "vance johnson",
    "entity2_uri": "http://dbpedia.org/resource/Wide_receiver",
    "entity2_mention": "wide receiver"
},
{
    "id": "900",
    "question": "How many different products are there of the companies located in the US?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/product> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/location",
    "predicate1_mention": "located",
    "predicate2_uri": "http://dbpedia.org/ontology/product",
    "predicate2_mention": "products",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_States",
    "entity1_mention": "US",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "902",
    "question": "List all the former broadcast network of WMDN ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WMDN> <http://dbpedia.org/ontology/formerBroadcastNetwork> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/formerBroadcastNetwork",
    "predicate1_mention": "former broadcast network",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/WMDN",
    "entity1_mention": "wmdn",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "903",
    "question": "Which ethnicity do Linda Hogan and Riley Reid come from?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Linda_Hogan> <http://dbpedia.org/property/ethnicity> ?uri. <http://dbpedia.org/resource/Riley_Reid> <http://dbpedia.org/property/ethnicity> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/ethnicity",
    "predicate1_mention": "ethnicity",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Linda_Hogan",
    "entity1_mention": "linda hogan",
    "entity2_uri": "http://dbpedia.org/resource/Riley_Reid",
    "entity2_mention": "riley reid"
},
{
    "id": "904",
    "question": "Who are the people which were the influencer of the person, who influenced Costanzo Preve ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Costanzo_Preve> <http://dbpedia.org/ontology/influencedBy> ?x . ?x <http://dbpedia.org/ontology/influencedBy> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/influencedBy",
    "predicate1_mention": "influenced",
    "predicate2_uri": "http://dbpedia.org/ontology/influencedBy",
    "predicate2_mention": "influencer of",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "person,",
    "entity1_uri": "http://dbpedia.org/resource/Costanzo_Preve",
    "entity1_mention": "costanzo preve",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "905",
    "question": "Which city do both Arthur Ross and Edward Niesen come from?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arthur_A._Ross> <http://dbpedia.org/property/placeOfBirth> ?uri. <http://dbpedia.org/resource/Edward_Niesen> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate1_mention": "come from",
    "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate2_mention": "come from",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Arthur_A._Ross",
    "entity1_mention": "arthur ross",
    "entity2_uri": "http://dbpedia.org/resource/Edward_Niesen",
    "entity2_mention": "Edward Niesen"
},
{
    "id": "906",
    "question": "Who is married to Tony Ramo",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/partner> <http://dbpedia.org/resource/Tony_Romo>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/partner",
    "predicate1_mention": "married",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tony_Romo",
    "entity1_mention": "Tony Ramo",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "907",
    "question": "Which county of Tremont Avenue is also the birth place of Ron Galotti ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tremont_Avenue> <http://dbpedia.org/property/counties> ?uri. <http://dbpedia.org/resource/Ron_Galotti> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/counties",
    "predicate1_mention": "county",
    "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate2_mention": "birth place",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tremont_Avenue",
    "entity1_mention": "tremont avenue",
    "entity2_uri": "http://dbpedia.org/resource/Ron_Galotti",
    "entity2_mention": "Ron Galotti"
},
{
    "id": "908",
    "question": "What is the debut team of the gridiron football player who coached the 1931 Staten Island Stapletons season ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1931_Staten_Island_Stapletons_season> <http://dbpedia.org/ontology/coach> ?x . ?x <http://dbpedia.org/property/debutteam> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GridironFootballPlayer>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/coach",
    "predicate1_mention": "coached",
    "predicate2_uri": "http://dbpedia.org/property/debutteam",
    "predicate2_mention": "debut team",
    "type_uri": "http://dbpedia.org/ontology/GridironFootballPlayer",
    "type_mention": "gridiron football player",
    "entity1_uri": "http://dbpedia.org/resource/1931_Staten_Island_Stapletons_season",
    "entity1_mention": "the 1931 Staten Island Stapletons season",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "909",
    "question": "Who wrote Heroman?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Heroman> <http://dbpedia.org/property/author> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/author",
    "predicate1_mention": "wrote",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Heroman",
    "entity1_mention": "heroman",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "910",
    "question": "What is the region of the successor of Mr. Jerome B. Chaffee ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerome_B._Chaffee> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/ontology/region> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "http://dbpedia.org/ontology/region",
    "predicate2_mention": "region",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jerome_B._Chaffee",
    "entity1_mention": "Mr. Jerome B. Chaffee",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "911",
    "question": "Who appointed Joseph Clay and William Cushing to their office?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Joseph_Clay_(Georgia)> <http://dbpedia.org/ontology/appointer> ?uri. <http://dbpedia.org/resource/William_Cushing> <http://dbpedia.org/ontology/appointer> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/appointer",
    "predicate1_mention": "appointed",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Joseph_Clay_(Georgia)",
    "entity1_mention": "joseph clay",
    "entity2_uri": "http://dbpedia.org/resource/William_Cushing",
    "entity2_mention": "william cushing"
},
{
    "id": "912",
    "question": "Was Zambezi originate in the north western province of zambia?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Zambezi> <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/sourceRegion",
    "predicate1_mention": "originate in",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Zambezi",
    "entity1_mention": "zambezi",
    "entity2_uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia",
    "entity2_mention": "north western province of zambia"
},
{
    "id": "913",
    "question": "Who first ascented a mountain of Cathedral Peak ( California ) ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cathedral_Peak_(California)> <http://dbpedia.org/ontology/firstAscentPerson> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/firstAscentPerson",
    "predicate1_mention": "first ascented",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Cathedral_Peak_(California)",
    "entity1_mention": "Cathedral Peak ( California )",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "914",
    "question": "Name the licensee of the WRVU who has the affiliation of  Monroe Carell Jr. Children's Hospital at Vanderbilt ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WRVU> <http://dbpedia.org/property/licensee> ?uri. <http://dbpedia.org/resource/Monroe_Carell_Jr._Children's_Hospital_at_Vanderbilt> <http://dbpedia.org/property/affiliation> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/licensee",
    "predicate1_mention": "licensee",
    "predicate2_uri": "http://dbpedia.org/property/affiliation",
    "predicate2_mention": "affiliation",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/WRVU",
    "entity1_mention": "wrvu",
    "entity2_uri": "http://dbpedia.org/resource/Monroe_Carell_Jr._Children's_Hospital_at_Vanderbilt",
    "entity2_mention": "Monroe Carell Jr. Children's Hospital at Vanderbilt"
},
{
    "id": "915",
    "question": "What awards did the film director of The Haunted House win ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Haunted_House_(1929_film)> <http://dbpedia.org/ontology/director> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/director",
    "predicate1_mention": "director",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Haunted_House_(1929_film)",
    "entity1_mention": "The Haunted House",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "916",
    "question": "In which war did the units garrisoned at Turin fight?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/garrison> <http://dbpedia.org/resource/Turin> . ?x <http://dbpedia.org/ontology/battle> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/garrison",
    "predicate1_mention": "garrisoned",
    "predicate2_uri": "http://dbpedia.org/ontology/battle",
    "predicate2_mention": "war",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Turin",
    "entity1_mention": "turin",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "917",
    "question": "What all is produced by companies in Douglas, Isle of Man?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Douglas,_Isle_of_Man> . ?x <http://dbpedia.org/ontology/product> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/locationCity",
    "predicate1_mention": "in",
    "predicate2_uri": "http://dbpedia.org/ontology/product",
    "predicate2_mention": "produced",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "companies",
    "entity1_uri": "http://dbpedia.org/resource/Douglas,_Isle_of_Man",
    "entity1_mention": "Douglas, Isle of Man",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "920",
    "question": "Whose work is in the Musee d'orsay?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/museum> <http://dbpedia.org/resource/Mus\u00e9e_d'Orsay> . ?x <http://dbpedia.org/property/artist> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artwork>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/museum",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/artist",
    "predicate2_mention": "whose",
    "type_uri": "http://dbpedia.org/ontology/Artwork",
    "type_mention": "work",
    "entity1_uri": "http://dbpedia.org/resource/Mus\u00e9e_d'Orsay",
    "entity1_mention": "Musee d'orsay",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "921",
    "question": "Which president had lieutenants whose governor was Bill Clinton?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Bill_Clinton> . ?uri <http://dbpedia.org/ontology/lieutenant> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/governor",
    "predicate1_mention": "governor",
    "predicate2_uri": "http://dbpedia.org/ontology/lieutenant",
    "predicate2_mention": "lieutenants",
    "type_uri": "http://dbpedia.org/ontology/President",
    "type_mention": "president",
    "entity1_uri": "http://dbpedia.org/resource/Bill_Clinton",
    "entity1_mention": "Bill Clinton",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "923",
    "question": "What is the municipality of Liberty Bell ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Liberty_Bell> <http://dbpedia.org/ontology/municipality> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/municipality",
    "predicate1_mention": "municipality",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Liberty_Bell",
    "entity1_mention": "liberty bell",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "925",
    "question": "Which animator of the The Skeleton Dance is also the  cinematographer of the Mickey's Mellerdrammer?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Skeleton_Dance> <http://dbpedia.org/ontology/animator> ?uri. <http://dbpedia.org/resource/Mickey's_Mellerdrammer> <http://dbpedia.org/property/cinematography> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/animator",
    "predicate1_mention": "animator",
    "predicate2_uri": "http://dbpedia.org/property/cinematography",
    "predicate2_mention": "cinematographer",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Skeleton_Dance",
    "entity1_mention": "The Skeleton Dance",
    "entity2_uri": "http://dbpedia.org/resource/Mickey's_Mellerdrammer",
    "entity2_mention": "the Mickey's Mellerdrammer"
},
{
    "id": "926",
    "question": "Who built the stadium which was rented for the 2013 Copa Centroamericana ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/2013_Copa_Centroamericana> . ?x <http://dbpedia.org/ontology/builder> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/tenant",
    "predicate1_mention": "rented",
    "predicate2_uri": "http://dbpedia.org/ontology/builder",
    "predicate2_mention": "built",
    "type_uri": "http://dbpedia.org/ontology/Stadium",
    "type_mention": "stadium",
    "entity1_uri": "http://dbpedia.org/resource/2013_Copa_Centroamericana",
    "entity1_mention": "the 2013 Copa Centroamericana",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "927",
    "question": "Brian Dunkleman is the presenter of what TV show?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Brian_Dunkleman>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/presenter",
    "predicate1_mention": "presenter",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "TV show",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Brian_Dunkleman",
    "entity1_mention": "Brian Dunkleman",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "929",
    "question": "Which television show is the subsequent work of Frasier and the opening theme is Gary Portnoy?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Frasier> . ?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Gary_Portnoy>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/subsequentWork",
    "predicate1_mention": "subsequent work",
    "predicate2_uri": "http://dbpedia.org/ontology/openingTheme",
    "predicate2_mention": "opening theme",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television show",
    "entity1_uri": "http://dbpedia.org/resource/Frasier",
    "entity1_mention": "frasier",
    "entity2_uri": "http://dbpedia.org/resource/Gary_Portnoy",
    "entity2_mention": "Gary Portnoy"
},
{
    "id": "930",
    "question": "in which country does the river end which originates in Lebrsnik?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Lebr\u0161nik> . ?x <http://dbpedia.org/ontology/mouthCountry> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/sourcePlace",
    "predicate1_mention": "originates in",
    "predicate2_uri": "http://dbpedia.org/ontology/mouthCountry",
    "predicate2_mention": "country",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lebr\u0161nik",
    "entity1_mention": "Lebrsnik",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "931",
    "question": "Which country's largest city is Lima?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Lima> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/largestCity",
    "predicate1_mention": "largest city",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lima",
    "entity1_mention": "lima",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "932",
    "question": "List the awards given to the relatives of Gregorios Bernardakis.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gregorios_Bernardakis> <http://dbpedia.org/ontology/relative> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/relative",
    "predicate1_mention": "relatives",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Gregorios_Bernardakis",
    "entity1_mention": "Gregorios Bernardakis",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "933",
    "question": "Count all the games whose distributors are located in America",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/distributor> ?x  . }",
    "sparql_id": "106",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/country",
    "predicate1_mention": "located in",
    "predicate2_uri": "http://dbpedia.org/property/distributor",
    "predicate2_mention": "distributors",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_States",
    "entity1_mention": "America",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "934",
    "question": "What is that something which made Breann McGregor famous, and Frank Thorne received as an award?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Frank_Thorne> <http://dbpedia.org/ontology/award> ?uri. <http://dbpedia.org/resource/Breann_McGregor> <http://dbpedia.org/property/knownFor> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/award",
    "predicate1_mention": "award",
    "predicate2_uri": "http://dbpedia.org/property/knownFor",
    "predicate2_mention": "famous",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Frank_Thorne",
    "entity1_mention": "Frank Thorne",
    "entity2_uri": "http://dbpedia.org/resource/Breann_McGregor",
    "entity2_mention": "Breann McGregor"
},
{
    "id": "935",
    "question": "Which builder of Ford Straight-6 engine is also the automobile platform provider of Chiva bus ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chiva_bus> <http://dbpedia.org/ontology/automobilePlatform> ?uri. <http://dbpedia.org/resource/Ford_Straight-6_engine> <http://dbpedia.org/ontology/manufacturer> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/automobilePlatform",
    "predicate1_mention": "automobile platform",
    "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate2_mention": "provider",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Chiva_bus",
    "entity1_mention": "chiva bus",
    "entity2_uri": "http://dbpedia.org/resource/Ford_Straight-6_engine",
    "entity2_mention": "Ford Straight-6 engine"
},
{
    "id": "937",
    "question": "Which non fiction of the Thud is also the field of the Jon Speelman ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thud!> <http://dbpedia.org/ontology/nonFictionSubject> ?uri. <http://dbpedia.org/resource/Jon_Speelman> <http://dbpedia.org/ontology/field> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/nonFictionSubject",
    "predicate1_mention": "non fiction of",
    "predicate2_uri": "http://dbpedia.org/ontology/field",
    "predicate2_mention": "field",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Thud!",
    "entity1_mention": "thud",
    "entity2_uri": "http://dbpedia.org/resource/Jon_Speelman",
    "entity2_mention": "Jon Speelman"
},
{
    "id": "939",
    "question": "what are the nicknames of the people who are in Ekstraliga?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/Ekstraliga_(speedway)> . ?x <http://dbpedia.org/property/nickname> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/league",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/nickname",
    "predicate2_mention": "nicknames",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ekstraliga_(speedway)",
    "entity1_mention": "ekstraliga",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "940",
    "question": "Who is a famous relative of Aaround Van Heemstra?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Aarnoud_van_Heemstra>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/relative",
    "predicate1_mention": "relative",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "Who",
    "entity1_uri": "http://dbpedia.org/resource/Aarnoud_van_Heemstra",
    "entity1_mention": "Aaround Van Heemstra",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "941",
    "question": "List the former partner of the figure skaters whose former choreographer was Igor Shpillband.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/formerChoreographer> <http://dbpedia.org/resource/Igor_Shpillband> . ?x <http://dbpedia.org/ontology/formerPartner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FigureSkater>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/formerChoreographer",
    "predicate1_mention": "former choreographer",
    "predicate2_uri": "http://dbpedia.org/ontology/formerPartner",
    "predicate2_mention": "former partner",
    "type_uri": "http://dbpedia.org/ontology/FigureSkater",
    "type_mention": "figure skaters",
    "entity1_uri": "http://dbpedia.org/resource/Igor_Shpillband",
    "entity1_mention": "Igor Shpillband",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "942",
    "question": "List the television shows whose distributors are located at Burbank, California.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/locationCity> <http://dbpedia.org/resource/Burbank,_California> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/locationCity",
    "predicate1_mention": "located",
    "predicate2_uri": "http://dbpedia.org/property/distributor",
    "predicate2_mention": "distributors",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television shows",
    "entity1_uri": "http://dbpedia.org/resource/Burbank,_California",
    "entity1_mention": "Burbank, California",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "943",
    "question": "What is the title of Kakae ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kakae> <http://dbpedia.org/property/title> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/title",
    "predicate1_mention": "title",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kakae",
    "entity1_mention": "kakae",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "944",
    "question": "List all the line of Vadodara Junction railway station?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vadodara_Junction_railway_station> <http://dbpedia.org/property/line> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/line",
    "predicate1_mention": "line",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Vadodara_Junction_railway_station",
    "entity1_mention": "Vadodara Junction railway station",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "945",
    "question": "What is the birth city of the Salford City F.C players ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Salford_City_F.C.> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/team",
    "predicate1_mention": "players",
    "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate2_mention": "birth city",
    "type_uri": "http://dbpedia.org/ontology/SoccerPlayer",
    "type_mention": "players",
    "entity1_uri": "http://dbpedia.org/resource/Salford_City_F.C.",
    "entity1_mention": "salford city f.c",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "946",
    "question": "List the team for which Doug Acomb played ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Doug_Acomb> <http://dbpedia.org/property/playedFor> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/playedFor",
    "predicate1_mention": "played",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Doug_Acomb",
    "entity1_mention": "Doug Acomb",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "947",
    "question": "To which US states does the roads belong which meet at the East Whiteland Township in Pennsylvania?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/routeJunction> <http://dbpedia.org/resource/East_Whiteland_Township,_Chester_County,_Pennsylvania> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Road>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/routeJunction",
    "predicate1_mention": "belong",
    "predicate2_uri": "http://dbpedia.org/ontology/state",
    "predicate2_mention": "states",
    "type_uri": "http://dbpedia.org/ontology/Road",
    "type_mention": "roads",
    "entity1_uri": "http://dbpedia.org/resource/East_Whiteland_Township,_Chester_County,_Pennsylvania",
    "entity1_mention": "East Whiteland Township in Pennsylvania",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "948",
    "question": "To what other locations does the airlines have flights, who also fly to Birmingham?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Birmingham_Airport> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/targetAirport",
    "predicate1_mention": "flights",
    "predicate2_uri": "http://dbpedia.org/property/destinations",
    "predicate2_mention": "locations",
    "type_uri": "http://dbpedia.org/ontology/Airline",
    "type_mention": "airlines",
    "entity1_uri": "http://dbpedia.org/resource/Birmingham_Airport",
    "entity1_mention": "birmingham",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "949",
    "question": "How many states does the Pioneer corporation operate in?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Pioneer_Corporation> <http://dbpedia.org/property/country> ?uri  . }",
    "sparql_id": "102",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/country",
    "predicate1_mention": "states",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Pioneer_Corporation",
    "entity1_mention": "Pioneer corporation",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "952",
    "question": "Which mountain range is the one with Ponte d'Aveneyre and Le Gibloux?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pointe_d'Aveneyre> <http://dbpedia.org/ontology/mountainRange> ?uri. <http://dbpedia.org/resource/Le_Gibloux> <http://dbpedia.org/ontology/mountainRange> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/mountainRange",
    "predicate1_mention": "mountain range",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Pointe_d'Aveneyre",
    "entity1_mention": "Ponte d'Aveneyre",
    "entity2_uri": "http://dbpedia.org/resource/Le_Gibloux",
    "entity2_mention": "Le Gibloux"
},
{
    "id": "955",
    "question": "What is the military branch of John Tower ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Tower> <http://dbpedia.org/ontology/militaryBranch> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/militaryBranch",
    "predicate1_mention": "military branch",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/John_Tower",
    "entity1_mention": "John Tower",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "957",
    "question": "What is the type of Naval Station Bremerton ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Naval_Station_Bremerton> <http://dbpedia.org/property/type> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/type",
    "predicate1_mention": "type",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Naval_Station_Bremerton",
    "entity1_mention": "Naval Station Bremerton",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "958",
    "question": "Count the number of offices held by people who have their allegiances with the american civil war union?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/allegiance> <http://dbpedia.org/resource/Union_(American_Civil_War)> . ?x <http://dbpedia.org/property/office> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/allegiance",
    "predicate1_mention": "allegiances",
    "predicate2_uri": "http://dbpedia.org/property/office",
    "predicate2_mention": "offices",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Union_(American_Civil_War)",
    "entity1_mention": "the american civil war union",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "960",
    "question": "What are the other band members of the band one of current member is Robert De Niro?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Robert_De_Niro> . ?x <http://dbpedia.org/ontology/bandMember> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/currentMembers",
    "predicate1_mention": "current member",
    "predicate2_uri": "http://dbpedia.org/ontology/bandMember",
    "predicate2_mention": "band members",
    "type_uri": "http://dbpedia.org/ontology/Band",
    "type_mention": "band",
    "entity1_uri": "http://dbpedia.org/resource/Robert_De_Niro",
    "entity1_mention": "Robert De Niro",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "961",
    "question": "Who are the relatives of the character after which Quagmire's Quagmire was made?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Quagmire's_Quagmire> . ?uri <http://dbpedia.org/ontology/relative> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/subsequentWork",
    "predicate1_mention": "quagmire",
    "predicate2_uri": "http://dbpedia.org/ontology/relative",
    "predicate2_mention": "relatives",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Quagmire's_Quagmire",
    "entity1_mention": "Quagmire's Quagmire",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "962",
    "question": "Who are the tenants of MasterCard Centre?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/MasterCard_Centre> <http://dbpedia.org/property/tenants> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/tenants",
    "predicate1_mention": "tenants",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/MasterCard_Centre",
    "entity1_mention": "mastercard centre",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "963",
    "question": "Who is the President of United World College of Costa Rica ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_World_College_of_Costa_Rica> <http://dbpedia.org/property/president> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/president",
    "predicate1_mention": "president",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_World_College_of_Costa_Rica",
    "entity1_mention": "United World College of Costa Rica",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "964",
    "question": "Is nintendo in the video games industry?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Nintendo> <http://dbpedia.org/property/industry> <http://dbpedia.org/resource/Video_game> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/industry",
    "predicate1_mention": "industry",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Nintendo",
    "entity1_mention": "nintendo",
    "entity2_uri": "http://dbpedia.org/resource/Video_game",
    "entity2_mention": "video games"
},
{
    "id": "965",
    "question": "In which movies directed by Orson Welles has Bernard Herrmann as music composer ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Bernard_Herrmann> . ?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Orson_Welles>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/musicComposer",
    "predicate1_mention": "music composer",
    "predicate2_uri": "http://dbpedia.org/property/director",
    "predicate2_mention": "directed",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Bernard_Herrmann",
    "entity1_mention": "Bernard Herrmann",
    "entity2_uri": "http://dbpedia.org/resource/Orson_Welles",
    "entity2_mention": "Orson Welles"
},
{
    "id": "967",
    "question": "Who all play for the teams performing in the united center?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/arena> <http://dbpedia.org/resource/United_Center> . ?uri <http://dbpedia.org/property/team> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/arena",
    "predicate1_mention": "performing in",
    "predicate2_uri": "http://dbpedia.org/property/team",
    "predicate2_mention": "teams",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_Center",
    "entity1_mention": "united center",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "968",
    "question": "Where is the gold coast football club located?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gold_Coast_Football_Club> <http://dbpedia.org/property/location> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/location",
    "predicate1_mention": "located",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Gold_Coast_Football_Club",
    "entity1_mention": "gold coast football club",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "969",
    "question": "Which award that has been given to James F Obrien, had used Laemmle Theatres for some service?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Laemmle_Theatres> <http://dbpedia.org/ontology/service> ?uri. <http://dbpedia.org/resource/James_F._O'Brien> <http://dbpedia.org/ontology/award> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/service",
    "predicate1_mention": "service",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "award",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Laemmle_Theatres",
    "entity1_mention": "Laemmle Theatres",
    "entity2_uri": "http://dbpedia.org/resource/James_F._O'Brien",
    "entity2_mention": "James F Obrien"
},
{
    "id": "970",
    "question": "Where are the Dinamo Krasnodar players born?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/club> <http://dbpedia.org/resource/Dinamo_Krasnodar> . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/club",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate2_mention": "born",
    "type_uri": "http://dbpedia.org/ontology/Athlete",
    "type_mention": "players",
    "entity1_uri": "http://dbpedia.org/resource/Dinamo_Krasnodar",
    "entity1_mention": "Dinamo Krasnodar",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "972",
    "question": "Who is the founder of Wuropean School, Karlsruhe ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/European_School,_Karlsruhe> <http://dbpedia.org/property/founder> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/founder",
    "predicate1_mention": "founder",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/European_School,_Karlsruhe",
    "entity1_mention": "Wuropean School, Karlsruhe",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "973",
    "question": "Does the croton river flow into the hudson?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hudson_River> <http://dbpedia.org/ontology/leftTributary> <http://dbpedia.org/resource/Croton_River> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/leftTributary",
    "predicate1_mention": "flow into",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hudson_River",
    "entity1_mention": "hudson",
    "entity2_uri": "http://dbpedia.org/resource/Croton_River",
    "entity2_mention": "croton river"
},
{
    "id": "974",
    "question": "List the program genres of the sister stations of 97.1 WASH FM?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WASH_(FM)> <http://dbpedia.org/property/sisterStations> ?x . ?x <http://dbpedia.org/ontology/programmeFormat> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/sisterStations",
    "predicate1_mention": "sister stations",
    "predicate2_uri": "http://dbpedia.org/ontology/programmeFormat",
    "predicate2_mention": "program genres of",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/WASH_(FM)",
    "entity1_mention": "97.1 WASH FM",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "976",
    "question": "Count all the band members who are in Bands which have signed up with Entertainment One Music?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Entertainment_One_Music> . ?x <http://dbpedia.org/ontology/bandMember> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/label",
    "predicate1_mention": "signed up",
    "predicate2_uri": "http://dbpedia.org/ontology/bandMember",
    "predicate2_mention": "band members",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Entertainment_One_Music",
    "entity1_mention": "Entertainment One Music",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "977",
    "question": " Erik Jendresen is the writer of which television show?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Erik_Jendresen>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/writer",
    "predicate1_mention": "writer",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "television show",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Erik_Jendresen",
    "entity1_mention": "Erik Jendresen",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "978",
    "question": "Who is the editor of Hearth and Home ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hearth_and_Home> <http://dbpedia.org/ontology/editor> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/editor",
    "predicate1_mention": "editor",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hearth_and_Home",
    "entity1_mention": "Hearth and Home",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "979",
    "question": "Mike Shinoda is in which band?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mike_Shinoda> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/bandMember",
    "predicate1_mention": "band",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mike_Shinoda",
    "entity1_mention": "Mike Shinoda",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "981",
    "question": "How many tenants are there in the Mercedes Benz Superdome?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Mercedes-Benz_Superdome> <http://dbpedia.org/ontology/tenant> ?uri  . }",
    "sparql_id": "102",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/tenant",
    "predicate1_mention": "tenants",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mercedes-Benz_Superdome",
    "entity1_mention": "Mercedes Benz Superdome",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "982",
    "question": "What is the religion of the successor of Chatumongol Sonakul?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chatumongol_Sonakul> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religion",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Chatumongol_Sonakul",
    "entity1_mention": "chatumongol sonakul",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "983",
    "question": "Which associated band of the Teddy Riley is also the performer of the Before I Let You Go?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Teddy_Riley> <http://dbpedia.org/ontology/associatedBand> ?uri. <http://dbpedia.org/resource/Before_I_Let_You_Go> <http://dbpedia.org/ontology/musicalArtist> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedBand",
    "predicate1_mention": "associated band",
    "predicate2_uri": "http://dbpedia.org/ontology/musicalArtist",
    "predicate2_mention": "performer",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Teddy_Riley",
    "entity1_mention": "teddy riley",
    "entity2_uri": "http://dbpedia.org/resource/Before_I_Let_You_Go",
    "entity2_mention": "Before I Let You Go"
},
{
    "id": "985",
    "question": "How many developers have worked on games of the Oddworld series?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/series> <http://dbpedia.org/resource/Oddworld> . ?x <http://dbpedia.org/ontology/developer> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/series",
    "predicate1_mention": "series",
    "predicate2_uri": "http://dbpedia.org/ontology/developer",
    "predicate2_mention": "developers",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Oddworld",
    "entity1_mention": "oddworld",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "986",
    "question": "Count everyone who was in a youthclub chaired by Josep Maria Bartomeu ?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/chairman> <http://dbpedia.org/resource/Josep_Maria_Bartomeu> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . }",
    "sparql_id": "106",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/chairman",
    "predicate1_mention": "chaired",
    "predicate2_uri": "http://dbpedia.org/property/youthclubs",
    "predicate2_mention": "youthclub",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Josep_Maria_Bartomeu",
    "entity1_mention": "Josep Maria Bartomeu",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "988",
    "question": "Name a river starting from arequipa region?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/Arequipa_Region>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/sourceRegion",
    "predicate1_mention": "starting from",
    "predicate2_uri": "http://dbpedia.org/ontology/River",
    "predicate2_mention": "river",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Arequipa_Region",
    "entity1_mention": "arequipa region",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "990",
    "question": "How many local authorities manage mixed gender schools?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/gender> <http://dbpedia.org/resource/Mixed-sex_education> . ?x <http://dbpedia.org/ontology/localAuthority> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/gender",
    "predicate1_mention": "gender",
    "predicate2_uri": "http://dbpedia.org/ontology/localAuthority",
    "predicate2_mention": "local authorities",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mixed-sex_education",
    "entity1_mention": "mixed gender schools",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "993",
    "question": "What organisations purpose is Peace?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/purpose> <http://dbpedia.org/resource/Peace>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/purpose",
    "predicate1_mention": "purpose",
    "predicate2_uri": "http://dbpedia.org/ontology/Organisation",
    "predicate2_mention": "organisations",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Peace",
    "entity1_mention": "peace",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "994",
    "question": "name the mountain range of Le Gibloux ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Le_Gibloux> <http://dbpedia.org/ontology/mountainRange> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/mountainRange",
    "predicate1_mention": "mountain range",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Le_Gibloux",
    "entity1_mention": "Le Gibloux",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "996",
    "question": "Is Peter Crouch currently in the Stoke City FC?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Peter_Crouch> <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/Stoke_City_F.C.> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/currentclub",
    "predicate1_mention": "currently",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Peter_Crouch",
    "entity1_mention": "Peter Crouch",
    "entity2_uri": "http://dbpedia.org/resource/Stoke_City_F.C.",
    "entity2_mention": "Stoke City FC"
},
{
    "id": "997",
    "question": "Is Lloyd Nosler the editor of The Temptress?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Temptress> <http://dbpedia.org/ontology/editing> <http://dbpedia.org/resource/Lloyd_Nosler> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/editing",
    "predicate1_mention": "editor",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Temptress",
    "entity1_mention": "The Temptress",
    "entity2_uri": "http://dbpedia.org/resource/Lloyd_Nosler",
    "entity2_mention": "Lloyd Nosler"
},
{
    "id": "998",
    "question": "Which relative of ralf schumacher is a famous formula one racer?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Ralf_Schumacher>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FormulaOneRacer>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/relatives",
    "predicate1_mention": "relative",
    "predicate2_uri": "http://dbpedia.org/ontology/FormulaOneRacer",
    "predicate2_mention": "formula one racer",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ralf_Schumacher",
    "entity1_mention": "ralf schumacher",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "999",
    "question": "List the awards won by the spouse of Harriet Andersson?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Harriet_Andersson> <http://dbpedia.org/ontology/partner> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/partner",
    "predicate1_mention": "andersson",
    "predicate2_uri": "http://dbpedia.org/property/awards",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Harriet_Andersson",
    "entity1_mention": "Harriet Andersson",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1000",
    "question": "How many Thesaban towns are there?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/settlementType> <http://dbpedia.org/resource/Thesaban>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/settlementType",
    "predicate1_mention": "towns",
    "predicate2_uri": "http://dbpedia.org/ontology/Town",
    "predicate2_mention": "towns",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Thesaban",
    "entity1_mention": "thesaban",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1001",
    "question": "List the judges of Rising Star which is also the artist of Brad Paisley discography ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rising_Star_(U.S._TV_series)> <http://dbpedia.org/property/judges> ?uri. <http://dbpedia.org/resource/Brad_Paisley_discography> <http://dbpedia.org/property/artist> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/judges",
    "predicate1_mention": "judges",
    "predicate2_uri": "http://dbpedia.org/property/artist",
    "predicate2_mention": "artist",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Rising_Star_(U.S._TV_series)",
    "entity1_mention": "Rising Star",
    "entity2_uri": "http://dbpedia.org/resource/Brad_Paisley_discography",
    "entity2_mention": "Brad Paisley discography"
},
{
    "id": "1003",
    "question": "Did Oliver Sacks study at the Columbia University?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Oliver_Sacks> <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/Columbia_University> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/institution",
    "predicate1_mention": "study at",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Oliver_Sacks",
    "entity1_mention": "oliver sacks",
    "entity2_uri": "http://dbpedia.org/resource/Columbia_University",
    "entity2_mention": "Columbia University"
},
{
    "id": "1004",
    "question": "How many other genere are there of the radio stations whose one of the genre  is Classic rock ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/programmeFormat> <http://dbpedia.org/resource/Classic_rock> . ?x <http://dbpedia.org/ontology/programmeFormat> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/programmeFormat",
    "predicate1_mention": "genre",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Classic_rock",
    "entity1_mention": "classic rock",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1005",
    "question": "What is the alma mater of the author of Letter to a Christian Nation ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Letter_to_a_Christian_Nation> <http://dbpedia.org/ontology/author> ?x . ?x <http://dbpedia.org/property/almaMater> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/author",
    "predicate1_mention": "author",
    "predicate2_uri": "http://dbpedia.org/property/almaMater",
    "predicate2_mention": "alma mater",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Letter_to_a_Christian_Nation",
    "entity1_mention": "Letter to a Christian Nation",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1006",
    "question": "name the races where bobby beasley took part ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bobby_Beasley> <http://dbpedia.org/ontology/race> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/race",
    "predicate1_mention": "races",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bobby_Beasley",
    "entity1_mention": "bobby beasley",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1007",
    "question": "What is the content license of Darcs ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Darcs> <http://dbpedia.org/ontology/license> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/license",
    "predicate1_mention": "license",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Darcs",
    "entity1_mention": "darcs",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1008",
    "question": "Who was the narrator in the point?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Point!> <http://dbpedia.org/property/narrated> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/narrated",
    "predicate1_mention": "narrator",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Point!",
    "entity1_mention": "the point",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1009",
    "question": "How many items belong to the Science Fiction genre?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/genre> <http://dbpedia.org/resource/Science_fiction>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/genre",
    "predicate1_mention": "genre",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Science_fiction",
    "entity1_mention": "science fiction",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1010",
    "question": "Which basketball team's president studied in the Brockport Golden Eagles?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/college> <http://dbpedia.org/resource/Brockport_Golden_Eagles> . ?uri <http://dbpedia.org/property/president> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballTeam>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/college",
    "predicate1_mention": "studied",
    "predicate2_uri": "http://dbpedia.org/property/president",
    "predicate2_mention": "president",
    "type_uri": "http://dbpedia.org/ontology/BasketballTeam",
    "type_mention": "basketball team's",
    "entity1_uri": "http://dbpedia.org/resource/Brockport_Golden_Eagles",
    "entity1_mention": "brockport golden eagles",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1011",
    "question": "Who is the developer of the software which serves the platform for King's Quest VI?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/King's_Quest_VI> <http://dbpedia.org/ontology/computingPlatform> ?x . ?x <http://dbpedia.org/property/developer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/computingPlatform",
    "predicate1_mention": "serves the platform",
    "predicate2_uri": "http://dbpedia.org/property/developer",
    "predicate2_mention": "developer",
    "type_uri": "http://dbpedia.org/ontology/Software",
    "type_mention": "software",
    "entity1_uri": "http://dbpedia.org/resource/King's_Quest_VI",
    "entity1_mention": "King's Quest VI",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1013",
    "question": "Count the cities whihch are on the same sea as that of Miami ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Miami> . ?x <http://dbpedia.org/property/cities> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/cities",
    "predicate1_mention": "cities",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Miami",
    "entity1_mention": "miami",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1014",
    "question": "How many scientist became famous for the battle of Occupation of Japan?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Occupation_of_Japan> . ?uri <http://dbpedia.org/property/knownFor> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/battle",
    "predicate1_mention": "battle",
    "predicate2_uri": "http://dbpedia.org/property/knownFor",
    "predicate2_mention": "became famous for",
    "type_uri": "http://dbpedia.org/ontology/Scientist",
    "type_mention": "scientist",
    "entity1_uri": "http://dbpedia.org/resource/Occupation_of_Japan",
    "entity1_mention": "Occupation of Japan",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1017",
    "question": "In how many countries does the Zurich Affoltern am Albis Zug line go?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/line> <http://dbpedia.org/resource/Z\u00fcrich\u2013Affoltern_am_Albis\u2013Zug_railway_line> . ?x <http://dbpedia.org/ontology/country> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/line",
    "predicate1_mention": "line",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "countries",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Z\u00fcrich\u2013Affoltern_am_Albis\u2013Zug_railway_line",
    "entity1_mention": "Zurich Affoltern am Albis Zug line go",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1018",
    "question": "Give me the count of all people who ascented a peak in California?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/California> . ?x <http://dbpedia.org/ontology/firstAscentPerson> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/locatedInArea",
    "predicate1_mention": "in",
    "predicate2_uri": "http://dbpedia.org/ontology/firstAscentPerson",
    "predicate2_mention": "ascented",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/California",
    "entity1_mention": "california",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1019",
    "question": "What people are known to work for Johnny Cash?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Johnny_Cash>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/associatedActs",
    "predicate1_mention": "work for",
    "predicate2_uri": "http://dbpedia.org/ontology/Person",
    "predicate2_mention": "people",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Johnny_Cash",
    "entity1_mention": "johnny cash",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1020",
    "question": "What is the official residence of the Helen Getachew which is also the place of death of the Haile Selassie Gugsa ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Helen_Getachew> <http://dbpedia.org/ontology/residence> ?uri. <http://dbpedia.org/resource/Haile_Selassie_Gugsa> <http://dbpedia.org/property/placeOfDeath> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/residence",
    "predicate1_mention": "residence",
    "predicate2_uri": "http://dbpedia.org/property/placeOfDeath",
    "predicate2_mention": "place of death",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Helen_Getachew",
    "entity1_mention": "Helen Getachew",
    "entity2_uri": "http://dbpedia.org/resource/Haile_Selassie_Gugsa",
    "entity2_mention": "Haile Selassie Gugsa"
},
{
    "id": "1022",
    "question": "What is the nationality of the J. T. Krogh which is also the  sovereign state of the Camilla Martin",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/J._T._Krogh> <http://dbpedia.org/ontology/nationality> ?uri. <http://dbpedia.org/resource/Camilla_Martin> <http://dbpedia.org/ontology/country> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/nationality",
    "predicate1_mention": "nationality",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "sovereign state",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/J._T._Krogh",
    "entity1_mention": "J. T. Krogh",
    "entity2_uri": "http://dbpedia.org/resource/Camilla_Martin",
    "entity2_mention": "camilla martin"
},
{
    "id": "1023",
    "question": "What's the religion of the winner of china election of 2008?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Republic_of_China_legislative_election,_2008> <http://dbpedia.org/property/leader> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/leader",
    "predicate1_mention": "winner",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religion",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Republic_of_China_legislative_election,_2008",
    "entity1_mention": "china election of 2008",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1024",
    "question": "Name the saint whose major shrine is in Canada and was canonized by Pope Benedict XVI?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/majorShrine> <http://dbpedia.org/resource/Canada> . ?uri <http://dbpedia.org/property/canonizedBy> <http://dbpedia.org/resource/Pope_Benedict_XVI>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Saint>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/majorShrine",
    "predicate1_mention": "major shrine",
    "predicate2_uri": "http://dbpedia.org/property/canonizedBy",
    "predicate2_mention": "canonized by",
    "type_uri": "http://dbpedia.org/ontology/Saint",
    "type_mention": "saint",
    "entity1_uri": "http://dbpedia.org/resource/Canada",
    "entity1_mention": "canada",
    "entity2_uri": "http://dbpedia.org/resource/Pope_Benedict_XVI",
    "entity2_mention": "Pope Benedict XVI"
},
{
    "id": "1025",
    "question": "What is the television show whose sculptor is C. E. Webber and composed by Murray Gold?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/C._E._Webber> . ?uri <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/Murray_Gold>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/creator",
    "predicate1_mention": "sculptor",
    "predicate2_uri": "http://dbpedia.org/ontology/composer",
    "predicate2_mention": "composed by",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television show",
    "entity1_uri": "http://dbpedia.org/resource/C._E._Webber",
    "entity1_mention": "C. E. Webber",
    "entity2_uri": "http://dbpedia.org/resource/Murray_Gold",
    "entity2_mention": "murray gold"
},
{
    "id": "1026",
    "question": "What is the constituency of the people who died in Lampedusa?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Lampedusa> . ?x <http://dbpedia.org/property/constituency> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/deathPlace",
    "predicate1_mention": "died in",
    "predicate2_uri": "http://dbpedia.org/property/constituency",
    "predicate2_mention": "constituency",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Lampedusa",
    "entity1_mention": "lampedusa",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1027",
    "question": "Where else did the graduates of the university of west indies study?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/University_of_the_West_Indies> . ?x <http://dbpedia.org/property/almaMater> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/institution",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/almaMater",
    "predicate2_mention": "study",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/University_of_the_West_Indies",
    "entity1_mention": "university of west indies",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1029",
    "question": "Which statesman is married to Dolley Madison?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Dolley_Madison>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/spouse",
    "predicate1_mention": "married",
    "predicate2_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "predicate2_mention": "statesman",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Dolley_Madison",
    "entity1_mention": "Dolley Madison",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1030",
    "question": "What is the title of the Kakae and also the district of the Robert William Wilcox ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kakae> <http://dbpedia.org/property/title> ?uri. <http://dbpedia.org/resource/Robert_William_Wilcox> <http://dbpedia.org/property/district> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/title",
    "predicate1_mention": "title",
    "predicate2_uri": "http://dbpedia.org/property/district",
    "predicate2_mention": "district",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kakae",
    "entity1_mention": "kakae",
    "entity2_uri": "http://dbpedia.org/resource/Robert_William_Wilcox",
    "entity2_mention": "Robert William Wilcox"
},
{
    "id": "1031",
    "question": "How many groups have fought in wars where Richard Taylor fought too?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Richard_Taylor_(colonel)> <http://dbpedia.org/property/battles> ?x . ?x <http://dbpedia.org/property/combatant> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "sparql_id": "403",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/battles",
    "predicate1_mention": "fought",
    "predicate2_uri": "http://dbpedia.org/property/combatant",
    "predicate2_mention": "groups",
    "type_uri": "http://dbpedia.org/ontology/MilitaryConflict",
    "type_mention": "wars",
    "entity1_uri": "http://dbpedia.org/resource/Richard_Taylor_(colonel)",
    "entity1_mention": "richard taylor",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1032",
    "question": "Is Halyna Kukhar the former coach of Stanislav Morozov?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Stanislav_Morozov> <http://dbpedia.org/ontology/formerCoach> <http://dbpedia.org/resource/Halyna_Kukhar> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/formerCoach",
    "predicate1_mention": "former coach",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Stanislav_Morozov",
    "entity1_mention": "stanislav morozov",
    "entity2_uri": "http://dbpedia.org/resource/Halyna_Kukhar",
    "entity2_mention": "Halyna Kukhar"
},
{
    "id": "1033",
    "question": "Who directed the haunted house and alice in wonderland?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alice's_Wonderland> <http://dbpedia.org/ontology/director> ?uri. <http://dbpedia.org/resource/The_Haunted_House_(1929_film)> <http://dbpedia.org/ontology/director> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/director",
    "predicate1_mention": "directed",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Alice's_Wonderland",
    "entity1_mention": "alice in wonderland",
    "entity2_uri": "http://dbpedia.org/resource/The_Haunted_House_(1929_film)",
    "entity2_mention": "haunted house"
},
{
    "id": "1034",
    "question": "What is the origin of the musical artist whose associated band is Ziggi Recado ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Ziggi_Recado> . ?x <http://dbpedia.org/property/origin> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedBand",
    "predicate1_mention": "associated band",
    "predicate2_uri": "http://dbpedia.org/property/origin",
    "predicate2_mention": "origin",
    "type_uri": "http://dbpedia.org/ontology/MusicalArtist",
    "type_mention": "musical artist",
    "entity1_uri": "http://dbpedia.org/resource/Ziggi_Recado",
    "entity1_mention": "Ziggi Recado",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1035",
    "question": "Count the sports played at universities located in Urban Areas?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Urban_area> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/campus",
    "predicate1_mention": "count",
    "predicate2_uri": "http://dbpedia.org/ontology/sport",
    "predicate2_mention": "sports",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Urban_area",
    "entity1_mention": "Urban Areas",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1036",
    "question": "Where the club of Kiki Cutter located?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kiki_Cutter> <http://dbpedia.org/property/club> ?x . ?x <http://dbpedia.org/ontology/location> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/club",
    "predicate1_mention": "club",
    "predicate2_uri": "http://dbpedia.org/ontology/location",
    "predicate2_mention": "located",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kiki_Cutter",
    "entity1_mention": "Kiki Cutter",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1037",
    "question": "Who penned Emma and Jane Austen in Manhatten?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jane_Austen_in_Manhattan> <http://dbpedia.org/ontology/writer> ?uri. <http://dbpedia.org/resource/Emma_(novel)> <http://dbpedia.org/property/author> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/writer",
    "predicate1_mention": "penned",
    "predicate2_uri": "http://dbpedia.org/property/author",
    "predicate2_mention": "penned",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jane_Austen_in_Manhattan",
    "entity1_mention": "Jane Austen in Manhatten",
    "entity2_uri": "http://dbpedia.org/resource/Emma_(novel)",
    "entity2_mention": "emma"
},
{
    "id": "1038",
    "question": "Which wars were fought by the commander whose deputy was Robert T. Herres?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deputy> <http://dbpedia.org/resource/Robert_T._Herres> . ?uri <http://dbpedia.org/ontology/commander> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/deputy",
    "predicate1_mention": "deputy",
    "predicate2_uri": "http://dbpedia.org/ontology/commander",
    "predicate2_mention": "commander",
    "type_uri": "http://dbpedia.org/ontology/MilitaryConflict",
    "type_mention": "wars",
    "entity1_uri": "http://dbpedia.org/resource/Robert_T._Herres",
    "entity1_mention": "Robert T. Herres",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1039",
    "question": "Is the Bucyrus MT6300AC assembled in north america?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Bucyrus_MT6300AC> <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/North_America> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/assembly",
    "predicate1_mention": "assembled",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bucyrus_MT6300AC",
    "entity1_mention": "Bucyrus MT6300AC",
    "entity2_uri": "http://dbpedia.org/resource/North_America",
    "entity2_mention": "north america"
},
{
    "id": "1040",
    "question": "What are all the religions in which Jacob and Abraham are important?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jacob> <http://dbpedia.org/property/veneratedIn> ?uri. <http://dbpedia.org/resource/Abraham> <http://dbpedia.org/property/veneratedIn> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/veneratedIn",
    "predicate1_mention": "religions",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jacob",
    "entity1_mention": "jacob",
    "entity2_uri": "http://dbpedia.org/resource/Abraham",
    "entity2_mention": "abraham"
},
{
    "id": "1041",
    "question": "What is the game platform of Google Cloud Connect ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Google_Cloud_Connect> <http://dbpedia.org/ontology/computingPlatform> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/computingPlatform",
    "predicate1_mention": "platform",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Google_Cloud_Connect",
    "entity1_mention": "Google Cloud Connect",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1042",
    "question": "Which city's mayor is married to Jean Marc Germain?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Jean-Marc_Germain> . ?uri <http://dbpedia.org/property/mayor> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/spouse",
    "predicate1_mention": "married to",
    "predicate2_uri": "http://dbpedia.org/property/mayor",
    "predicate2_mention": "mayor",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jean-Marc_Germain",
    "entity1_mention": "Jean Marc Germain",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1043",
    "question": "Name the company which provides Outlook.com as service and also has a product named Microsoft Azure ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Outlook.com> . ?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Microsoft_Azure>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/services",
    "predicate1_mention": "service",
    "predicate2_uri": "http://dbpedia.org/ontology/product",
    "predicate2_mention": "product",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "company",
    "entity1_uri": "http://dbpedia.org/resource/Outlook.com",
    "entity1_mention": "outlook.com",
    "entity2_uri": "http://dbpedia.org/resource/Microsoft_Azure",
    "entity2_mention": "microsoft azure"
},
{
    "id": "1044",
    "question": "What is the common award won by geoffrey Rush and Laemmle Theatres ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Geoffrey_Rush> <http://dbpedia.org/property/awards> ?uri. <http://dbpedia.org/resource/Laemmle_Theatres> <http://dbpedia.org/ontology/service> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/awards",
    "predicate1_mention": "award",
    "predicate2_uri": "http://dbpedia.org/ontology/service",
    "predicate2_mention": "theatres",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Geoffrey_Rush",
    "entity1_mention": "geoffrey rush",
    "entity2_uri": "http://dbpedia.org/resource/Laemmle_Theatres",
    "entity2_mention": "Laemmle Theatres"
},
{
    "id": "1046",
    "question": "To which persons is Ron Cyrus a relative?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Ron_Cyrus>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/relatives",
    "predicate1_mention": "relative",
    "predicate2_uri": "http://dbpedia.org/ontology/Person",
    "predicate2_mention": "persons",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ron_Cyrus",
    "entity1_mention": "Ron Cyrus",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1047",
    "question": "In which country is the Chapelle Saint-Louis de Carthage located ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chapelle_Saint-Louis_de_Carthage> <http://dbpedia.org/ontology/location> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/location",
    "predicate1_mention": "located",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "country",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Chapelle_Saint-Louis_de_Carthage",
    "entity1_mention": "Chapelle Saint-Louis de Carthage",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1048",
    "question": "Name the scientist who was awarded a position in Royal Society and has academic advisor as Franz Brentano?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Society> . ?uri <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/Franz_Brentano>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/awards",
    "predicate1_mention": "awarded",
    "predicate2_uri": "http://dbpedia.org/ontology/academicAdvisor",
    "predicate2_mention": "academic advisor",
    "type_uri": "http://dbpedia.org/ontology/Scientist",
    "type_mention": "scientist",
    "entity1_uri": "http://dbpedia.org/resource/Royal_Society",
    "entity1_mention": "Royal Society",
    "entity2_uri": "http://dbpedia.org/resource/Franz_Brentano",
    "entity2_mention": "Franz Brentano"
},
{
    "id": "1049",
    "question": "In how many places can I find tombs of people who fought in the Norwalk Trainband?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/Norwalk_Trainband> . ?x <http://dbpedia.org/property/restingplace> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/militaryUnit",
    "predicate1_mention": "many",
    "predicate2_uri": "http://dbpedia.org/property/restingplace",
    "predicate2_mention": "places",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Norwalk_Trainband",
    "entity1_mention": "Norwalk Trainband",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1050",
    "question": "Which nationality of Newin Chidchob is also the nationality of Ajahn Sao Kantaslo ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Newin_Chidchob> <http://dbpedia.org/property/nationality> ?uri. <http://dbpedia.org/resource/Ajahn_Sao_Kantas\u012blo> <http://dbpedia.org/ontology/nationality> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/nationality",
    "predicate1_mention": "nationality",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Newin_Chidchob",
    "entity1_mention": "chidchob",
    "entity2_uri": "http://dbpedia.org/resource/Ajahn_Sao_Kantas\u012blo",
    "entity2_mention": "Ajahn Sao Kantaslo"
},
{
    "id": "1051",
    "question": "Which movies' composers have won a BAFTA for film music?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/BAFTA_Award_for_Best_Film_Music> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/award",
    "predicate1_mention": "bafta",
    "predicate2_uri": "http://dbpedia.org/ontology/musicComposer",
    "predicate2_mention": "composers",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "film",
    "entity1_uri": "http://dbpedia.org/resource/BAFTA_Award_for_Best_Film_Music",
    "entity1_mention": " BAFTA for film music",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1052",
    "question": "Is Microsoft office written in C++",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Microsoft_Office> <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/C++> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/programmingLanguage",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Microsoft_Office",
    "entity1_mention": "microsoft office",
    "entity2_uri": "http://dbpedia.org/resource/C++",
    "entity2_mention": "c++"
},
{
    "id": "1053",
    "question": "Was the altazor drawn by Picasso?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Altazor> <http://dbpedia.org/property/illustrator> <http://dbpedia.org/resource/Pablo_Picasso> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/illustrator",
    "predicate1_mention": "drawn by",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Altazor",
    "entity1_mention": "altazor",
    "entity2_uri": "http://dbpedia.org/resource/Pablo_Picasso",
    "entity2_mention": "picasso"
},
{
    "id": "1054",
    "question": "How many people used to play for Toronto Argonauts?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Toronto_Argonauts>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/formerTeam",
    "predicate1_mention": "used to play",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Toronto_Argonauts",
    "entity1_mention": "Toronto Argonauts",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1055",
    "question": "What is the allegiance of John Kotelawala ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Kotelawala> <http://dbpedia.org/property/allegiance> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/allegiance",
    "predicate1_mention": "allegiance",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/John_Kotelawala",
    "entity1_mention": "John Kotelawala",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1056",
    "question": "In how many languages did Marika Gombitova sing?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Marika_Gombitov\u00e1> . ?x <http://dbpedia.org/property/language> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/artist",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/language",
    "predicate2_mention": "languages",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Marika_Gombitov\u00e1",
    "entity1_mention": "Marika Gombitova",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1057",
    "question": "What is the common party of Chandra Shekhar and Govinda  ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chandra_Shekhar> <http://dbpedia.org/ontology/otherParty> ?uri. <http://dbpedia.org/resource/Govinda_(actor)> <http://dbpedia.org/ontology/party> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/otherParty",
    "predicate1_mention": "party",
    "predicate2_uri": "http://dbpedia.org/ontology/party",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Chandra_Shekhar",
    "entity1_mention": "Chandra Shekhar",
    "entity2_uri": "http://dbpedia.org/resource/Govinda_(actor)",
    "entity2_mention": "govinda"
},
{
    "id": "1058",
    "question": "What is the official residence of the Christopher Daz Figuero which is also the  state of the Cruce a Nado Internacional",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Christopher_D\u00edaz_Figueroa> <http://dbpedia.org/property/residence> ?uri. <http://dbpedia.org/resource/Cruce_a_Nado_Internacional> <http://dbpedia.org/ontology/country> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/residence",
    "predicate1_mention": "residence",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "state",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Christopher_D\u00edaz_Figueroa",
    "entity1_mention": "Christopher Daz Figuero",
    "entity2_uri": "http://dbpedia.org/resource/Cruce_a_Nado_Internacional",
    "entity2_mention": "Cruce a Nado Internacional"
},
{
    "id": "1061",
    "question": "Which university of Alexandre Tichonov is the place of death of Valentin Muratov ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alexandre_Tichonov> <http://dbpedia.org/property/university> ?uri. <http://dbpedia.org/resource/Valentin_Muratov> <http://dbpedia.org/property/placeOfDeath> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/university",
    "predicate1_mention": "university",
    "predicate2_uri": "http://dbpedia.org/property/placeOfDeath",
    "predicate2_mention": "place of death",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Alexandre_Tichonov",
    "entity1_mention": "university of Alexandre Tichonov",
    "entity2_uri": "http://dbpedia.org/resource/Valentin_Muratov",
    "entity2_mention": "valentin muratov"
},
{
    "id": "1064",
    "question": "What is the common military branch of the Thomas Darden and that of Edwin F. Hunter",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thomas_Darden> <http://dbpedia.org/ontology/militaryBranch> ?uri. <http://dbpedia.org/resource/Edwin_F._Hunter> <http://dbpedia.org/property/branch> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/militaryBranch",
    "predicate1_mention": "military branch",
    "predicate2_uri": "http://dbpedia.org/property/branch",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Thomas_Darden",
    "entity1_mention": "thomas darden",
    "entity2_uri": "http://dbpedia.org/resource/Edwin_F._Hunter",
    "entity2_mention": "Edwin F. Hunter"
},
{
    "id": "1067",
    "question": "Which fictional character's portrayer was edited by Roger Barton?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Roger_Barton_(film_editor)> . ?uri <http://dbpedia.org/ontology/portrayer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/editing",
    "predicate1_mention": "edited",
    "predicate2_uri": "http://dbpedia.org/ontology/portrayer",
    "predicate2_mention": "portrayer",
    "type_uri": "http://dbpedia.org/ontology/FictionalCharacter",
    "type_mention": "fictional character's",
    "entity1_uri": "http://dbpedia.org/resource/Roger_Barton_(film_editor)",
    "entity1_mention": "Roger Barton",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1068",
    "question": "Which country does the current team of Darren McNamara belong to?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Darren_McNamara> <http://dbpedia.org/property/currentTeam> ?x . ?x <http://dbpedia.org/ontology/locationCountry> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/currentTeam",
    "predicate1_mention": "current team",
    "predicate2_uri": "http://dbpedia.org/ontology/locationCountry",
    "predicate2_mention": "country",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Darren_McNamara",
    "entity1_mention": "Darren McNamara",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1070",
    "question": "Which is the common nation of Louisa Hill and American Football Wellington from?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Louisa_Hill> <http://dbpedia.org/ontology/country> ?uri. <http://dbpedia.org/resource/American_Football_Wellington> <http://dbpedia.org/ontology/country> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/country",
    "predicate1_mention": "nation",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Louisa_Hill",
    "entity1_mention": "louisa hill",
    "entity2_uri": "http://dbpedia.org/resource/American_Football_Wellington",
    "entity2_mention": "American Football Wellington"
},
{
    "id": "1071",
    "question": "Was robert sarvis a nominee of the US Senate?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Robert_Sarvis> <http://dbpedia.org/ontology/nominee> <http://dbpedia.org/resource/United_States_Senate> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/nominee",
    "predicate1_mention": "nominee",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Robert_Sarvis",
    "entity1_mention": "robert sarvis",
    "entity2_uri": "http://dbpedia.org/resource/United_States_Senate",
    "entity2_mention": "US Senate"
},
{
    "id": "1072",
    "question": "Name the TV show which has judge as harry Connick and is broadcasted on Fox Broadcasting Company ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company> . ?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Harry_Connick,_Jr.>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/channel",
    "predicate1_mention": "broadcasted",
    "predicate2_uri": "http://dbpedia.org/property/judges",
    "predicate2_mention": "judge",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "TV show",
    "entity1_uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company",
    "entity1_mention": "Fox Broadcasting Company",
    "entity2_uri": "http://dbpedia.org/resource/Harry_Connick,_Jr.",
    "entity2_mention": "harry Connick"
},
{
    "id": "1073",
    "question": "What company brought Riddim Ribbon to the market, and developed the batch monitor?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Batch_Monitor> <http://dbpedia.org/property/developer> ?uri. <http://dbpedia.org/resource/Riddim_Ribbon_feat._The_Black_Eyed_Peas> <http://dbpedia.org/property/distributor> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/developer",
    "predicate1_mention": "developed",
    "predicate2_uri": "http://dbpedia.org/property/distributor",
    "predicate2_mention": "brought",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Batch_Monitor",
    "entity1_mention": "batch monitor",
    "entity2_uri": "http://dbpedia.org/resource/Riddim_Ribbon_feat._The_Black_Eyed_Peas",
    "entity2_mention": "Riddim Ribbon to the market"
},
{
    "id": "1074",
    "question": "Who is the successor of McDonnell Douglas ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/McDonnell_Douglas> <http://dbpedia.org/property/successor> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/McDonnell_Douglas",
    "entity1_mention": "mcdonnell douglas",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1075",
    "question": "where did Boga originate?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Boga_(soft_drink)> <http://dbpedia.org/property/origin> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/origin",
    "predicate1_mention": "originate",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Boga_(soft_drink)",
    "entity1_mention": "boga",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1078",
    "question": "Who is the builder of Estadio Nacional de Costa Rica and also location of Xianren Cave ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Estadio_Nacional_de_Costa_Rica_(2011)> <http://dbpedia.org/ontology/builder> ?uri. <http://dbpedia.org/resource/Xianren_Cave> <http://dbpedia.org/ontology/country> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/builder",
    "predicate1_mention": "builder",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "location",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Estadio_Nacional_de_Costa_Rica_(2011)",
    "entity1_mention": "Estadio Nacional de Costa Rica",
    "entity2_uri": "http://dbpedia.org/resource/Xianren_Cave",
    "entity2_mention": "xianren cave"
},
{
    "id": "1079",
    "question": "what does the cahora bassa flow into?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cahora_Bassa> <http://dbpedia.org/property/inflow> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/inflow",
    "predicate1_mention": "flow into",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Cahora_Bassa",
    "entity1_mention": "cahora bassa",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1080",
    "question": "What awards have been given to the anyone who raced in the Lawrence Realization Stakes?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/race> <http://dbpedia.org/resource/Lawrence_Realization_Stakes> . ?x <http://dbpedia.org/ontology/honours> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/race",
    "predicate1_mention": "raced",
    "predicate2_uri": "http://dbpedia.org/ontology/honours",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lawrence_Realization_Stakes",
    "entity1_mention": "Lawrence Realization Stakes",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1083",
    "question": "Erik Jendresen is writer and Play tone is company of which TV show ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Erik_Jendresen> . ?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Playtone>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/writer",
    "predicate1_mention": "writer",
    "predicate2_uri": "http://dbpedia.org/property/company",
    "predicate2_mention": "company",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "TV show",
    "entity1_uri": "http://dbpedia.org/resource/Erik_Jendresen",
    "entity1_mention": "Erik Jendresen",
    "entity2_uri": "http://dbpedia.org/resource/Playtone",
    "entity2_mention": "Play tone"
},
{
    "id": "1084",
    "question": "Name the resting place of Charles Edward Magoon ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charles_Edward_Magoon> <http://dbpedia.org/property/restingplace> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/restingplace",
    "predicate1_mention": "resting place",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Charles_Edward_Magoon",
    "entity1_mention": "Charles Edward Magoon",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1085",
    "question": "Where is the residence of the governor of Bangkok ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bangkok> <http://dbpedia.org/ontology/leaderName> ?x . ?x <http://dbpedia.org/property/residence> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/leaderName",
    "predicate1_mention": "governor",
    "predicate2_uri": "http://dbpedia.org/property/residence",
    "predicate2_mention": "residence",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bangkok",
    "entity1_mention": "bangkok",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1087",
    "question": "who all play for of the american football players at  Quarterback position?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Quarterback> . ?x <http://dbpedia.org/ontology/team> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/position",
    "predicate1_mention": "position",
    "predicate2_uri": "http://dbpedia.org/ontology/team",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
    "type_mention": "american football players",
    "entity1_uri": "http://dbpedia.org/resource/Quarterback",
    "entity1_mention": "quarterback",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1088",
    "question": "In which region was political figure Wayne Allard elected?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wayne_Allard> <http://dbpedia.org/ontology/region> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/region",
    "predicate1_mention": "region",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Wayne_Allard",
    "entity1_mention": "Wayne Allard",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1089",
    "question": "Which party of Rishang Keishing is the leader at Manendragarh ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Manendragarh> <http://dbpedia.org/ontology/leaderName> ?uri. <http://dbpedia.org/resource/Rishang_Keishing> <http://dbpedia.org/property/party> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/leaderName",
    "predicate1_mention": "leader",
    "predicate2_uri": "http://dbpedia.org/property/party",
    "predicate2_mention": "party",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Manendragarh",
    "entity1_mention": "manendragarh",
    "entity2_uri": "http://dbpedia.org/resource/Rishang_Keishing",
    "entity2_mention": "Rishang Keishing"
},
{
    "id": "1090",
    "question": "Where is Emmett Hughes from?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Emmett_Hughes> <http://dbpedia.org/ontology/nationality> ?uri  . }",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/nationality",
    "predicate1_mention": "from",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Emmett_Hughes",
    "entity1_mention": "Emmett Hughes",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1091",
    "question": "Name the district of Robert William Wilcox ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_William_Wilcox> <http://dbpedia.org/property/district> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/district",
    "predicate1_mention": "district",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Robert_William_Wilcox",
    "entity1_mention": "Robert William Wilcox",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1092",
    "question": "Who is the author of Karakuri Dji Ultimo ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Karakuri_D\u00f4ji_Ultimo> <http://dbpedia.org/property/author> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/author",
    "predicate1_mention": "author",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Karakuri_D\u00f4ji_Ultimo",
    "entity1_mention": "Karakuri Dji Ultimo",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1093",
    "question": "Name the movies in which music is give by  Laurie Johnson and edited by Anthony Harvey ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Laurie_Johnson> . ?uri <http://dbpedia.org/ontology/editing> <http://dbpedia.org/resource/Anthony_Harvey>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/music",
    "predicate1_mention": "music",
    "predicate2_uri": "http://dbpedia.org/ontology/editing",
    "predicate2_mention": "edited",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Laurie_Johnson",
    "entity1_mention": "Laurie Johnson",
    "entity2_uri": "http://dbpedia.org/resource/Anthony_Harvey",
    "entity2_mention": "anthony harvey"
},
{
    "id": "1094",
    "question": "What are some districts in the Tendring borough?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/borough> <http://dbpedia.org/resource/Tendring> . ?x <http://dbpedia.org/ontology/district> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/borough",
    "predicate1_mention": "borough",
    "predicate2_uri": "http://dbpedia.org/ontology/district",
    "predicate2_mention": "districts",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tendring",
    "entity1_mention": "tendring",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1095",
    "question": "What are the television shows which are in NTSC and 5.1 surround sound?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/format> <http://dbpedia.org/resource/NTSC> . ?uri <http://dbpedia.org/ontology/format> <http://dbpedia.org/resource/5.1_surround_sound> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/format",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/format",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television shows",
    "entity1_uri": "http://dbpedia.org/resource/NTSC",
    "entity1_mention": "ntsc",
    "entity2_uri": "http://dbpedia.org/resource/5.1_surround_sound",
    "entity2_mention": "5.1 surround sound"
},
{
    "id": "1096",
    "question": "Give me a count of bacterias which belongs to Bacilli class?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/class> <http://dbpedia.org/resource/Bacilli>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bacteria>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/class",
    "predicate1_mention": "class",
    "predicate2_uri": "http://dbpedia.org/ontology/Bacteria",
    "predicate2_mention": "bacterias",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bacilli",
    "entity1_mention": "bacilli",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1097",
    "question": " Name the city whose province is Metropolitan City of Venice and has leader as Luigi Brugnaro ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/province> <http://dbpedia.org/resource/Metropolitan_City_of_Venice> . ?uri <http://dbpedia.org/ontology/leaderName> <http://dbpedia.org/resource/Luigi_Brugnaro>  . }",
    "sparql_id": "8",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/province",
    "predicate1_mention": "province",
    "predicate2_uri": "http://dbpedia.org/ontology/leaderName",
    "predicate2_mention": "leader",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Metropolitan_City_of_Venice",
    "entity1_mention": "Metropolitan City of Venice",
    "entity2_uri": "http://dbpedia.org/resource/Luigi_Brugnaro",
    "entity2_mention": "Luigi Brugnaro"
},
{
    "id": "1098",
    "question": "In which sects was the aristocrat venerated, whose parent is Thelred the Unready?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/\u00c6thelred_the_Unready> . ?x <http://dbpedia.org/property/veneratedIn> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/parent",
    "predicate1_mention": "parent",
    "predicate2_uri": "http://dbpedia.org/property/veneratedIn",
    "predicate2_mention": "venerated,",
    "type_uri": "http://dbpedia.org/ontology/Royalty",
    "type_mention": "unready",
    "entity1_uri": "http://dbpedia.org/resource/\u00c6thelred_the_Unready",
    "entity1_mention": "Thelred the Unready",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1099",
    "question": "Name the television show whose voice is given by April Stewart and it's distributor is Broadcast syndication?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/April_Stewart> . ?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Broadcast_syndication>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/voices",
    "predicate1_mention": "voice",
    "predicate2_uri": "http://dbpedia.org/ontology/distributor",
    "predicate2_mention": "distributor",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television show",
    "entity1_uri": "http://dbpedia.org/resource/April_Stewart",
    "entity1_mention": "April Stewart",
    "entity2_uri": "http://dbpedia.org/resource/Broadcast_syndication",
    "entity2_mention": "Broadcast syndication"
},
{
    "id": "1100",
    "question": "What is the appliance build jointly by Sony and Asus?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Sony> . ?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Asus> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate1_mention": "build jointly by",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/InformationAppliance",
    "type_mention": "appliance",
    "entity1_uri": "http://dbpedia.org/resource/Sony",
    "entity1_mention": "sony",
    "entity2_uri": "http://dbpedia.org/resource/Asus",
    "entity2_mention": "asus"
},
{
    "id": "1101",
    "question": "What games are played at institutions affiliated with the international association of universities?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/International_Association_of_Universities> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/affiliations",
    "predicate1_mention": "affiliated",
    "predicate2_uri": "http://dbpedia.org/ontology/sport",
    "predicate2_mention": "association",
    "type_uri": "http://dbpedia.org/ontology/EducationalInstitution",
    "type_mention": "institutions",
    "entity1_uri": "http://dbpedia.org/resource/International_Association_of_Universities",
    "entity1_mention": "international association of universities",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1102",
    "question": "Whose units are responsible for close air support?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/role> <http://dbpedia.org/resource/Close_air_support> . ?uri <http://dbpedia.org/ontology/militaryUnit> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/role",
    "predicate1_mention": "are",
    "predicate2_uri": "http://dbpedia.org/ontology/militaryUnit", 
    "predicate2_mention": "units",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Close_air_support",
    "entity1_mention": "close air support",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1103",
    "question": "Which work of Craig van Tilbury is close to the area of The Chess Monthyl ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Chess_Monthly> <http://dbpedia.org/property/discipline> ?uri. <http://dbpedia.org/resource/Craig_Van_Tilbury> <http://dbpedia.org/ontology/occupation> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/discipline",
    "predicate1_mention": "close",
    "predicate2_uri": "http://dbpedia.org/ontology/occupation",
    "predicate2_mention": "craig",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Chess_Monthly",
    "entity1_mention": "The Chess Monthyl",
    "entity2_uri": "http://dbpedia.org/resource/Craig_Van_Tilbury",
    "entity2_mention": "Craig van Tilbury"
},
{
    "id": "1104",
    "question": " Count the participants of the NBA.",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/National_Basketball_Association>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/league",
    "predicate1_mention": "participants",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/National_Basketball_Association",
    "entity1_mention": "NBA",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1105",
    "question": "How many politicians are in the US Senate?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/order> <http://dbpedia.org/resource/United_States_Senate>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/order",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "predicate2_mention": "politicians",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_States_Senate",
    "entity1_mention": " the US Senate",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1106",
    "question": "How many players participated in the 2004-05 FC Barcelona season?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/2004\u201305_FC_Barcelona_season> <http://dbpedia.org/property/name> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>}",
    "sparql_id": "402",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/name",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/SoccerPlayer",
    "predicate2_mention": "players",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/2004\u201305_FC_Barcelona_season",
    "entity1_mention": "the 2004-05 FC Barcelona season",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1108",
    "question": "Which source of broad creek is the Audenried tunnel located ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Broad_Creek_(Susquehanna_River)> <http://dbpedia.org/ontology/source> ?uri. <http://dbpedia.org/resource/Audenried_Tunnel> <http://dbpedia.org/ontology/location> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/source",
    "predicate1_mention": "source",
    "predicate2_uri": "http://dbpedia.org/ontology/location",
    "predicate2_mention": "located",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Broad_Creek_(Susquehanna_River)",
    "entity1_mention": "broad creek",
    "entity2_uri": "http://dbpedia.org/resource/Audenried_Tunnel",
    "entity2_mention": "audenried tunnel"
},
{
    "id": "1109",
    "question": "Count me the number of people whose military unit is involved with Close air support ?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/role> <http://dbpedia.org/resource/Close_air_support> . ?uri <http://dbpedia.org/ontology/militaryUnit> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/role",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/militaryUnit",
    "predicate2_mention": "military unit",
    "type_uri": "http://dbpedia.org/ontology/MilitaryPerson",
    "type_mention": "military",
    "entity1_uri": "http://dbpedia.org/resource/Close_air_support",
    "entity1_mention": "Close air support",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1110",
    "question": "Who were fighting the war where the QF Hotchkiss was used?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/QF_6-pounder_Hotchkiss> <http://dbpedia.org/ontology/usedInWar> ?x . ?x <http://dbpedia.org/ontology/territory> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "sparql_id": "403",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/usedInWar",
    "predicate1_mention": "war",
    "predicate2_uri": "http://dbpedia.org/ontology/territory",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/MilitaryConflict",
    "type_mention": "war",
    "entity1_uri": "http://dbpedia.org/resource/QF_6-pounder_Hotchkiss",
    "entity1_mention": "QF Hotchkiss",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1111",
    "question": "What awards have been given to the artists coming out of the university of Melbourne, faculty of VCA and MCM?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/training> <http://dbpedia.org/resource/University_of_Melbourne_Faculty_of_VCA_and_MCM> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/training",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "awards",
    "type_uri": "http://dbpedia.org/ontology/Artist",
    "type_mention": "artists",
    "entity1_uri": "http://dbpedia.org/resource/University_of_Melbourne_Faculty_of_VCA_and_MCM",
    "entity1_mention": "university of Melbourne, faculty of VCA and MCM",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1112",
    "question": "Which universities are alma mater to Charles Plosser?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charles_Plosser> <http://dbpedia.org/property/almaMater> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/almaMater",
    "predicate1_mention": "alma mater",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Charles_Plosser",
    "entity1_mention": "Charles Plosser",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1113",
    "question": "Where was the Temptation Waits recorded?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Temptation_Waits> <http://dbpedia.org/ontology/recordedIn> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/recordedIn",
    "predicate1_mention": "recorded",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Temptation_Waits",
    "entity1_mention": "temptation waits",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1114",
    "question": "Name the species of Panthera leo fossilis ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Panthera_leo_fossilis> <http://dbpedia.org/ontology/species> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/species",
    "predicate1_mention": "species",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Panthera_leo_fossilis",
    "entity1_mention": "Panthera leo fossilis",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1115",
    "question": "What is the associated band of the musical artist who is the producer of The Trumpet Kings Meet Joe Turner ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Trumpet_Kings_Meet_Joe_Turner> <http://dbpedia.org/property/producer> ?x . ?x <http://dbpedia.org/ontology/associatedBand> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/producer",
    "predicate1_mention": "producer",
    "predicate2_uri": "http://dbpedia.org/ontology/associatedBand",
    "predicate2_mention": "associated band",
    "type_uri": "http://dbpedia.org/ontology/MusicalArtist",
    "type_mention": "musical artist",
    "entity1_uri": "http://dbpedia.org/resource/The_Trumpet_Kings_Meet_Joe_Turner",
    "entity1_mention": "The Trumpet Kings Meet Joe Turner",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1116",
    "question": "Name the driver who had a pole finish in 1989 Portuguese Grand Prix ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1989_Portuguese_Grand_Prix> <http://dbpedia.org/ontology/poleDriver> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/poleDriver",
    "predicate1_mention": "driver who had a pole",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/1989_Portuguese_Grand_Prix",
    "entity1_mention": "1989 Portuguese Grand Prix",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1117",
    "question": "what are some common surnames of female people?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/gender> <http://dbpedia.org/resource/Female> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/gender",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Female",
    "entity1_mention": "female",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1119",
    "question": "Who is the builder of the bridge owned by Tabriz ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Tabriz> . ?x <http://dbpedia.org/ontology/builder> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/owner",
    "predicate1_mention": "owned",
    "predicate2_uri": "http://dbpedia.org/ontology/builder",
    "predicate2_mention": "builder",
    "type_uri": "http://dbpedia.org/ontology/Bridge",
    "type_mention": "bridge",
    "entity1_uri": "http://dbpedia.org/resource/Tabriz",
    "entity1_mention": "tabriz",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1121",
    "question": "Which city's governing body is led by Bruce Harrell?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Bruce_Harrell> . ?uri <http://dbpedia.org/property/governingBody> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/leader",
    "predicate1_mention": "led",
    "predicate2_uri": "http://dbpedia.org/property/governingBody",
    "predicate2_mention": "governing body",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bruce_Harrell",
    "entity1_mention": "Bruce Harrell",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1123",
    "question": "Give the total number of places to which airlines go, who also go to Glasgow?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Glasgow_Airport> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/targetAirport",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/destinations",
    "predicate2_mention": "airlines",
    "type_uri": "http://dbpedia.org/ontology/Place",
    "type_mention": "places",
    "entity1_uri": "http://dbpedia.org/resource/Glasgow_Airport",
    "entity1_mention": "glasgow",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1124",
    "question": "Where does the rail route, which ends at the Moskovsky station, begins?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/routeEnd> <http://dbpedia.org/resource/Moskovsky_railway_station_(Saint_Petersburg)> . ?x <http://dbpedia.org/ontology/routeStart> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/routeEnd",
    "predicate1_mention": "route,",
    "predicate2_uri": "http://dbpedia.org/ontology/routeStart",
    "predicate2_mention": "begins",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Moskovsky_railway_station_(Saint_Petersburg)",
    "entity1_mention": "Moskovsky station, begins",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1125",
    "question": "What are the television shows whose writers did notable work for Band of Brothers ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/Band_of_Brothers_(miniseries)> . ?uri <http://dbpedia.org/property/writer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/notableWork",
    "predicate1_mention": "notable work",
    "predicate2_uri": "http://dbpedia.org/property/writer",
    "predicate2_mention": "writers",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television shows",
    "entity1_uri": "http://dbpedia.org/resource/Band_of_Brothers_(miniseries)",
    "entity1_mention": "Band of Brothers",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1126",
    "question": "Was 12th Field Artillery Regiment garrisoned at colorado?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/12th_Field_Artillery_Regiment> <http://dbpedia.org/ontology/garrison> <http://dbpedia.org/resource/Colorado> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/garrison",
    "predicate1_mention": "garrisoned",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/12th_Field_Artillery_Regiment",
    "entity1_mention": "12th Field Artillery Regiment",
    "entity2_uri": "http://dbpedia.org/resource/Colorado",
    "entity2_mention": "colorado"
},
{
    "id": "1127",
    "question": "Who is the common prime minster of William Deaner and mark Latham ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Deane> <http://dbpedia.org/ontology/primeMinister> ?uri. <http://dbpedia.org/resource/Mark_Latham> <http://dbpedia.org/property/primeminister> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/primeMinister",
    "predicate1_mention": "prime minster",
    "predicate2_uri": "",
    "predicate2_mention": "r",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/William_Deane",
    "entity1_mention": "William Deaner",
    "entity2_uri": "http://dbpedia.org/resource/Mark_Latham",
    "entity2_mention": "mark Latham"
},
{
    "id": "1128",
    "question": "What is the genre of the Band whose home town is County Westmeath?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/County_Westmeath> . ?x <http://dbpedia.org/property/genre> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/hometown",
    "predicate1_mention": "home town",
    "predicate2_uri": "http://dbpedia.org/property/genre",
    "predicate2_mention": "genre",
    "type_uri": "http://dbpedia.org/ontology/Band",
    "type_mention": "band",
    "entity1_uri": "http://dbpedia.org/resource/County_Westmeath",
    "entity1_mention": "County Westmeath",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1129",
    "question": "What is the municipality of Patterson Houses ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Patterson_Houses> <http://dbpedia.org/ontology/municipality> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/municipality",
    "predicate1_mention": "municipality",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Patterson_Houses",
    "entity1_mention": "patterson houses",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1130",
    "question": "What is the successor of the governors whose child is Levi Lincoln, Jr.?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Levi_Lincoln,_Jr.> . ?x <http://dbpedia.org/property/successor> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Governor>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/children",
    "predicate1_mention": "child",
    "predicate2_uri": "http://dbpedia.org/property/successor",
    "predicate2_mention": "successor",
    "type_uri": "http://dbpedia.org/ontology/Governor",
    "type_mention": "governors",
    "entity1_uri": "http://dbpedia.org/resource/Levi_Lincoln,_Jr.",
    "entity1_mention": "Levi Lincoln, Jr.",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1131",
    "question": "Was Gareth Southgate a manager of Middlesbrough F.C.?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Gareth_Southgate> <http://dbpedia.org/property/managerclubs> <http://dbpedia.org/resource/Middlesbrough_F.C.> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/managerclubs",
    "predicate1_mention": "manager",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Gareth_Southgate",
    "entity1_mention": "Gareth Southgate",
    "entity2_uri": "http://dbpedia.org/resource/Middlesbrough_F.C.",
    "entity2_mention": "middlesbrough f.c."
},
{
    "id": "1132",
    "question": "In which city is the building, whose part is the Martin AN/FSG1 anti aircraft system?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/part> <http://dbpedia.org/resource/Martin_AN/FSG-1_Antiaircraft_Defense_System> . ?x <http://dbpedia.org/property/district> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/part",
    "predicate1_mention": "part",
    "predicate2_uri": "http://dbpedia.org/property/district",
    "predicate2_mention": "city",
    "type_uri": "http://dbpedia.org/ontology/Building",
    "type_mention": "building,",
    "entity1_uri": "http://dbpedia.org/resource/Martin_AN/FSG-1_Antiaircraft_Defense_System",
    "entity1_mention": "Martin AN/FSG1 anti aircraft system",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1133",
    "question": "Count the number of sports played by the universities whihc also plays Volleyball ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/athletics> <http://dbpedia.org/resource/Volleyball> . ?x <http://dbpedia.org/property/athletics> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/athletics",
    "predicate1_mention": "sports",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Volleyball",
    "entity1_mention": "volleyball",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1134",
    "question": "In which religions are both Pope Gregory 1 and Edwin of northumbria reverred?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pope_Gregory_I> <http://dbpedia.org/property/veneratedIn> ?uri. <http://dbpedia.org/resource/Edwin_of_Northumbria> <http://dbpedia.org/property/veneratedIn> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/veneratedIn",
    "predicate1_mention": "reverred",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Pope_Gregory_I",
    "entity1_mention": "Pope Gregory 1",
    "entity2_uri": "http://dbpedia.org/resource/Edwin_of_Northumbria",
    "entity2_mention": "Edwin of northumbria"
},
{
    "id": "1135",
    "question": "Which wine region of Bogdanua is the Croatian Inline hockey team part of ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bogdanu\u0161a> <http://dbpedia.org/ontology/wineRegion> ?uri. <http://dbpedia.org/resource/Croatian_Inline_Hockey_League> <http://dbpedia.org/ontology/country> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/wineRegion",
    "predicate1_mention": "wine region",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bogdanu\u0161a",
    "entity1_mention": "Bogdanua",
    "entity2_uri": "http://dbpedia.org/resource/Croatian_Inline_Hockey_League",
    "entity2_mention": "croatian inline hockey"
},
{
    "id": "1137",
    "question": "Count the number of religions followed by Janta Dal members.",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/party> <http://dbpedia.org/resource/Janata_Dal> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/party",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religions",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Janata_Dal",
    "entity1_mention": "Janta Dal",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1138",
    "question": "Does Lousana lie at the end of Alberta Highway 42?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Alberta_Highway_42> <http://dbpedia.org/ontology/routeEnd> <http://dbpedia.org/resource/Lousana>  . }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/routeEnd",
    "predicate1_mention": "end",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Alberta_Highway_42",
    "entity1_mention": "Alberta Highway 42",
    "entity2_uri": "http://dbpedia.org/resource/Lousana",
    "entity2_mention": "lousana"
},
{
    "id": "1140",
    "question": "Where are the tombs of kings and queens who have died in England?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/England> . ?x <http://dbpedia.org/property/placeOfBurial> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/placeOfDeath",
    "predicate1_mention": "died in",
    "predicate2_uri": "http://dbpedia.org/property/placeOfBurial",
    "predicate2_mention": "tombs",
    "type_uri": "http://dbpedia.org/ontology/Royalty",
    "type_mention": "kings and queens",
    "entity1_uri": "http://dbpedia.org/resource/England",
    "entity1_mention": "england",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1142",
    "question": "Greek writers have won which award?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/ethnicity> <http://dbpedia.org/resource/Greeks> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/ethnicity",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "award",
    "type_uri": "http://dbpedia.org/ontology/Writer",
    "type_mention": "writers",
    "entity1_uri": "http://dbpedia.org/resource/Greeks",
    "entity1_mention": "greek",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1143",
    "question": "Give me a count of movies whose producer is Larry J. Franco?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Larry_J._Franco>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/producer",
    "predicate1_mention": "producer",
    "predicate2_uri": "http://dbpedia.org/ontology/Film",
    "predicate2_mention": "movies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Larry_J._Franco",
    "entity1_mention": "Larry J. Franco",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1144",
    "question": "Who authored the works published in the Jump Square Magazine?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/magazine> <http://dbpedia.org/resource/Jump_Square> . ?x <http://dbpedia.org/property/author> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/magazine",
    "predicate1_mention": "magazine",
    "predicate2_uri": "http://dbpedia.org/property/author",
    "predicate2_mention": "authored",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jump_Square",
    "entity1_mention": "Jump Square",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1146",
    "question": "What is the TV Show whose theme is composed by someone signed up with Prawn Song Records?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/Prawn_Song_Records> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/recordLabel",
    "predicate1_mention": "records",
    "predicate2_uri": "http://dbpedia.org/property/themeMusicComposer",
    "predicate2_mention": "composed",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "TV Show",
    "entity1_uri": "http://dbpedia.org/resource/Prawn_Song_Records",
    "entity1_mention": "Prawn Song Records",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1149",
    "question": "Where does Dennis DeConcini and Scott Berkun both live?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Scott_Berkun> <http://dbpedia.org/property/residence> ?uri. <http://dbpedia.org/resource/Dennis_DeConcini> <http://dbpedia.org/property/residence> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/residence",
    "predicate1_mention": "live",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Scott_Berkun",
    "entity1_mention": "Scott Berkun",
    "entity2_uri": "http://dbpedia.org/resource/Dennis_DeConcini",
    "entity2_mention": "Dennis DeConcini"
},
{
    "id": "1151",
    "question": "What is the location town of First Church of Christ, Scientist ( Pittsburgh )  ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/First_Church_of_Christ,_Scientist_(Pittsburgh)> <http://dbpedia.org/property/locationTown> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/locationTown",
    "predicate1_mention": "location town",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/First_Church_of_Christ,_Scientist_(Pittsburgh)",
    "entity1_mention": "First Church of Christ, Scientist ( Pittsburgh )",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1152",
    "question": "Whose commanders are Colin Powell and Jaber Al-Ahmad Al-Sabah?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Colin_Powell> . ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Jaber_Al-Ahmad_Al-Sabah> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/commander",
    "predicate1_mention": "commanders",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Colin_Powell",
    "entity1_mention": "Colin Powell",
    "entity2_uri": "http://dbpedia.org/resource/Jaber_Al-Ahmad_Al-Sabah",
    "entity2_mention": "Jaber Al-Ahmad Al-Sabah"
},
{
    "id": "1153",
    "question": "Where was MacKenzie Miller born?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/MacKenzie_Miller> <http://dbpedia.org/property/birthPlace> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/birthPlace",
    "predicate1_mention": "born",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/MacKenzie_Miller",
    "entity1_mention": "mackenzie miller",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1157",
    "question": "List the shows whose company's successor is Amblin Television.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Amblin_Television> . ?uri <http://dbpedia.org/ontology/company> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "http://dbpedia.org/ontology/company",
    "predicate2_mention": "company's",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "shows",
    "entity1_uri": "http://dbpedia.org/resource/Amblin_Television",
    "entity1_mention": "Amblin Television",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1158",
    "question": "Count the total number of battles fought by the military people which fought in Levant ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Levant> . ?x <http://dbpedia.org/property/battles> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/battles",
    "predicate1_mention": "battles",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Levant",
    "entity1_mention": "levant",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1159",
    "question": "List the graves of the royalities which have been buried at Beeleigh Abbey ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Beeleigh_Abbey> . ?x <http://dbpedia.org/property/placeOfBurial> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/placeOfBurial",
    "predicate1_mention": "buried",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Royalty",
    "type_mention": "royalities",
    "entity1_uri": "http://dbpedia.org/resource/Beeleigh_Abbey",
    "entity1_mention": "beeleigh abbey",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1161",
    "question": "Which genre of books does the writer of The Many Hands write?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Many_Hands> <http://dbpedia.org/property/author> ?x . ?x <http://dbpedia.org/ontology/genre> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/author",
    "predicate1_mention": "writer",
    "predicate2_uri": "http://dbpedia.org/ontology/genre",
    "predicate2_mention": "genre",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Many_Hands",
    "entity1_mention": "The Many Hands",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1162",
    "question": "Name the sports played by Jamiatu Muslim Mindanao?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao> <http://dbpedia.org/ontology/athletics> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/athletics",
    "predicate1_mention": "sports",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao",
    "entity1_mention": "Jamiatu Muslim Mindanao",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1163",
    "question": "Laozi has authored which books ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Laozi>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/author",
    "predicate1_mention": "authored",
    "predicate2_uri": "http://dbpedia.org/ontology/Book",
    "predicate2_mention": "books",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Laozi",
    "entity1_mention": "laozi",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1164",
    "question": "Which person naratted The Incredible Hulk and also the writer of Tales of Suspense ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)> <http://dbpedia.org/property/narrated> ?uri. <http://dbpedia.org/resource/Tales_of_Suspense> <http://dbpedia.org/property/writers> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/narrated",
    "predicate1_mention": "naratted",
    "predicate2_uri": "http://dbpedia.org/property/writers",
    "predicate2_mention": "writer",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)",
    "entity1_mention": "incredible hulk",
    "entity2_uri": "http://dbpedia.org/resource/Tales_of_Suspense",
    "entity2_mention": "Tales of Suspense"
},
{
    "id": "1165",
    "question": "What is the television show whose opening theme is Te Deum ( Charpentier )?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Te_Deum_(Charpentier)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/openingTheme",
    "predicate1_mention": "opening theme",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "television show",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Te_Deum_(Charpentier)",
    "entity1_mention": "Te Deum ( Charpentier )",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1168",
    "question": "Name the river passing through Reading Berkshire and has mouth place at Essex ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Reading,_Berkshire> . ?uri <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/Essex>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/city",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/mouthPlace",
    "predicate2_mention": "mouth place",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "river",
    "entity1_uri": "http://dbpedia.org/resource/Reading,_Berkshire",
    "entity1_mention": "reading berkshire",
    "entity2_uri": "http://dbpedia.org/resource/Essex",
    "entity2_mention": "essex"
},
{
    "id": "1170",
    "question": "Who all play for the Ivory Coast football team?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Ivory_Coast_national_football_team> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/nationalteam",
    "predicate1_mention": "team",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ivory_Coast_national_football_team",
    "entity1_mention": "Ivory Coast football team",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1171",
    "question": "Which party has come in power at both Balangir and Amaravila in india?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Balangir_district> <http://dbpedia.org/ontology/leaderName> ?uri. <http://dbpedia.org/resource/Amaravila> <http://dbpedia.org/ontology/leaderName> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/leaderName",
    "predicate1_mention": "party",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Balangir_district",
    "entity1_mention": "balangir",
    "entity2_uri": "http://dbpedia.org/resource/Amaravila",
    "entity2_mention": "amaravila"
},
{
    "id": "1172",
    "question": "What are some common games played in PATTS college of aeronautics and Jamiatu muslim mindanao?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/PATTS_College_of_Aeronautics> <http://dbpedia.org/property/athletics> ?uri. <http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao> <http://dbpedia.org/property/athletics> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/athletics",
    "predicate1_mention": "aeronautics",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/PATTS_College_of_Aeronautics",
    "entity1_mention": "PATTS college of aeronautics",
    "entity2_uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao",
    "entity2_mention": "Jamiatu muslim mindanao"
},
{
    "id": "1173",
    "question": "List the total number of executive producer of TV show which have one of the executiive producer as Steven Moffat ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Steven_Moffat> . ?x <http://dbpedia.org/property/executiveProducer> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/executiveProducer",
    "predicate1_mention": "executive producer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Steven_Moffat",
    "entity1_mention": "steven moffat",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1174",
    "question": "What is the nation of the Major All Stars Season 1 and Pioneer Corporation ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Major_All_Stars_Season_1> <http://dbpedia.org/property/country> ?uri. <http://dbpedia.org/resource/Pioneer_Corporation> <http://dbpedia.org/property/country> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/country",
    "predicate1_mention": "nation",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Major_All_Stars_Season_1",
    "entity1_mention": "Major All Stars Season 1",
    "entity2_uri": "http://dbpedia.org/resource/Pioneer_Corporation",
    "entity2_mention": "Pioneer Corporation"
},
{
    "id": "1175",
    "question": "How many things belong to a division of plant kingdom?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/kingdom> <http://dbpedia.org/resource/Plant> . ?uri <http://dbpedia.org/ontology/division> ?x  . }",
    "sparql_id": "106",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/kingdom",
    "predicate1_mention": "kingdom",
    "predicate2_uri": "http://dbpedia.org/ontology/division",
    "predicate2_mention": "division",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Plant",
    "entity1_mention": "plant",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1176",
    "question": "Where is Semnani and Assyrian Neo-Aramaic spoken ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/languages> <http://dbpedia.org/resource/Semnani_languages> . ?uri <http://dbpedia.org/ontology/language> <http://dbpedia.org/resource/Assyrian_Neo-Aramaic>  . }",
    "sparql_id": "8",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/languages",
    "predicate1_mention": "spoken",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Semnani_languages",
    "entity1_mention": "semnani",
    "entity2_uri": "http://dbpedia.org/resource/Assyrian_Neo-Aramaic",
    "entity2_mention": "Assyrian Neo-Aramaic"
},
{
    "id": "1177",
    "question": "Does Massimo Liverani play for Abarth?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Massimo_Liverani> <http://dbpedia.org/property/currentTeam> <http://dbpedia.org/resource/Abarth> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/currentTeam",
    "predicate1_mention": "play for",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Massimo_Liverani",
    "entity1_mention": "Massimo Liverani",
    "entity2_uri": "http://dbpedia.org/resource/Abarth",
    "entity2_mention": "abarth"
},
{
    "id": "1178",
    "question": "What is the fictional character which has Clan McDuck and Ludwig Von Draken as relatives?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Clan_McDuck> . ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Ludwig_Von_Drake> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/relatives",
    "predicate1_mention": "relatives",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/FictionalCharacter",
    "type_mention": "fictional character",
    "entity1_uri": "http://dbpedia.org/resource/Clan_McDuck",
    "entity1_mention": "Clan McDuck",
    "entity2_uri": "http://dbpedia.org/resource/Ludwig_Von_Drake",
    "entity2_mention": "Ludwig Von Draken"
},
{
    "id": "1179",
    "question": "Name the appliance produced by Foxconn and its OS is provided by PlayStation 3 system software ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Foxconn> . ?uri <http://dbpedia.org/property/os> <http://dbpedia.org/resource/PlayStation_3_system_software>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate1_mention": "software",
    "predicate2_uri": "http://dbpedia.org/property/os",
    "predicate2_mention": "os",
    "type_uri": "http://dbpedia.org/ontology/InformationAppliance",
    "type_mention": "appliance",
    "entity1_uri": "http://dbpedia.org/resource/Foxconn",
    "entity1_mention": "foxconn",
    "entity2_uri": "http://dbpedia.org/resource/PlayStation_3_system_software",
    "entity2_mention": "PlayStation 3 system software"
},
{
    "id": "1180",
    "question": "Name the source Island of Bayou ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Island_Bayou_(Oklahoma)> <http://dbpedia.org/ontology/source> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/source",
    "predicate1_mention": "source",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Island_Bayou_(Oklahoma)",
    "entity1_mention": "Island of Bayou",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1181",
    "question": "Did Alexander Magleby study at the Dartmouth College?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Alexander_Magleby> <http://dbpedia.org/ontology/university> <http://dbpedia.org/resource/Dartmouth_College> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/university",
    "predicate1_mention": "study at",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Alexander_Magleby",
    "entity1_mention": "alexander magleby",
    "entity2_uri": "http://dbpedia.org/resource/Dartmouth_College",
    "entity2_mention": "dartmouth college"
},
{
    "id": "1182",
    "question": "Where was Thomy Bourdelle born?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thomy_Bourdelle> <http://dbpedia.org/property/placeOfBirth> ?uri  . }",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate1_mention": "born",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Thomy_Bourdelle",
    "entity1_mention": "Thomy Bourdelle",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1183",
    "question": "Companies headquartered in Geneva own which TV Shows?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Geneva> . ?uri <http://dbpedia.org/property/company> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/headquarter",
    "predicate1_mention": "headquartered",
    "predicate2_uri": "http://dbpedia.org/property/company",
    "predicate2_mention": "companies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Geneva",
    "entity1_mention": "geneva",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1185",
    "question": "In which city is the sister station of WCSE-LP located ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WCSE-LP> <http://dbpedia.org/property/sisterStations> ?x . ?x <http://dbpedia.org/property/city> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/sisterStations",
    "predicate1_mention": "sister station",
    "predicate2_uri": "http://dbpedia.org/property/city",
    "predicate2_mention": "city",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/WCSE-LP",
    "entity1_mention": "wcse-lp",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1186",
    "question": "What is the total number of relgions followed by people born in Bangkok?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Bangkok> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/birthPlace",
    "predicate1_mention": " born in",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "relgions",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bangkok",
    "entity1_mention": "bangkok",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1187",
    "question": "Twin cities 400 is operated by what city, which is the birthplace of Leona Baumgarter?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Twin_Cities_400> <http://dbpedia.org/ontology/operatedBy> ?uri. <http://dbpedia.org/resource/Leona_Baumgartner> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/operatedBy",
    "predicate1_mention": "operated by",
    "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate2_mention": "birthplace",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Twin_Cities_400",
    "entity1_mention": "Twin cities 400",
    "entity2_uri": "http://dbpedia.org/resource/Leona_Baumgartner",
    "entity2_mention": "Leona Baumgarter"
},
{
    "id": "1188",
    "question": "Where are the homestadiums of the seasons chaired by Merritt Paulson?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Merritt_Paulson> . ?x <http://dbpedia.org/ontology/homeStadium> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/chairman",
    "predicate1_mention": "chaired",
    "predicate2_uri": "http://dbpedia.org/ontology/homeStadium",
    "predicate2_mention": "homestadiums",
    "type_uri": "http://dbpedia.org/ontology/SoccerClubSeason",
    "type_mention": "seasons",
    "entity1_uri": "http://dbpedia.org/resource/Merritt_Paulson",
    "entity1_mention": "Merritt Paulson",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1189",
    "question": "What is the products of the BBC Multimedia and series of the The Last Resort (Doctor Who)",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/BBC_Multimedia> <http://dbpedia.org/property/products> ?uri. <http://dbpedia.org/resource/The_Last_Resort_(Doctor_Who)> <http://dbpedia.org/ontology/series> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/products",
    "predicate1_mention": "products",
    "predicate2_uri": "http://dbpedia.org/ontology/series",
    "predicate2_mention": "series",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/BBC_Multimedia",
    "entity1_mention": "BBC Multimedia",
    "entity2_uri": "http://dbpedia.org/resource/The_Last_Resort_(Doctor_Who)",
    "entity2_mention": "The Last Resort (Doctor Who)"
},
{
    "id": "1190",
    "question": "What are the gadgets whose manufacturing company is founded by Terry Gou?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Terry_Gou> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Device>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/founder",
    "predicate1_mention": "founded",
    "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate2_mention": "manufacturing",
    "type_uri": "http://dbpedia.org/ontology/Device",
    "type_mention": "gadgets",
    "entity1_uri": "http://dbpedia.org/resource/Terry_Gou",
    "entity1_mention": "terry gou",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1192",
    "question": "List softwares written in C++ and runs on Mac OS ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Mac_OS> . ?uri <http://dbpedia.org/ontology/programmingLanguage> <http://dbpedia.org/resource/C++>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/operatingSystem",
    "predicate1_mention": "OS",
    "predicate2_uri": "http://dbpedia.org/ontology/programmingLanguage",
    "predicate2_mention": "written",
    "type_uri": "http://dbpedia.org/ontology/Software",
    "type_mention": "softwares",
    "entity1_uri": "http://dbpedia.org/resource/Mac_OS",
    "entity1_mention": "mac os",
    "entity2_uri": "http://dbpedia.org/resource/C++",
    "entity2_mention": "c++"
},
{
    "id": "1193",
    "question": "What are the home stadiums of the things Leonid Fedun has been the chairman of?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Leonid_Fedun> . ?x <http://dbpedia.org/ontology/homeStadium> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/chairman",
    "predicate1_mention": "chairman",
    "predicate2_uri": "http://dbpedia.org/ontology/homeStadium",
    "predicate2_mention": "stadiums",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Leonid_Fedun",
    "entity1_mention": "leonid fedun",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1194",
    "question": "For which team does hunter pence play for?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hunter_Pence> <http://dbpedia.org/ontology/team> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/team",
    "predicate1_mention": "team",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hunter_Pence",
    "entity1_mention": "hunter pence",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1195",
    "question": "How many have former teams as Indianapolis Colts and Carolina Panthers?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Indianapolis_Colts> . ?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Carolina_Panthers>} ",
    "sparql_id": "107",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/formerTeam",
    "predicate1_mention": "former teams",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Indianapolis_Colts",
    "entity1_mention": "indianapolis colts",
    "entity2_uri": "http://dbpedia.org/resource/Carolina_Panthers",
    "entity2_mention": "Carolina Panthers"
},
{
    "id": "1196",
    "question": "Of what all has David Ian Salter been an editor of?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/David_Ian_Salter> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/editing",
    "predicate1_mention": "editor",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/David_Ian_Salter",
    "entity1_mention": "David Ian Salter",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1197",
    "question": "Who owns Ivanpah Solar Power Facility?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ivanpah_Solar_Power_Facility> <http://dbpedia.org/ontology/owner> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/owner",
    "predicate1_mention": "owns",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ivanpah_Solar_Power_Facility",
    "entity1_mention": "Ivanpah Solar Power Facility",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1198",
    "question": "Where are ethnic group located which speak Nebraskan?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Nebraska> <http://dbpedia.org/ontology/language> ?x . ?x <http://dbpedia.org/property/region> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/language",
    "predicate1_mention": "speak",
    "predicate2_uri": "http://dbpedia.org/property/region",
    "predicate2_mention": "located",
    "type_uri": "http://dbpedia.org/ontology/EthnicGroup",
    "type_mention": "ethnic group",
    "entity1_uri": "http://dbpedia.org/resource/Nebraska",
    "entity1_mention": "Nebraskan",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1199",
    "question": "Name the sharehoders of The National Herald ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_National_Herald_(India)> <http://dbpedia.org/ontology/owner> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/owner",
    "predicate1_mention": "sharehoders",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_National_Herald_(India)",
    "entity1_mention": "national herald",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1200",
    "question": "List some things that Swedish people have become famous for?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/stateOfOrigin> <http://dbpedia.org/resource/Sweden> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/stateOfOrigin",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate2_mention": "become famous for",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sweden",
    "entity1_mention": "Swedish",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1201",
    "question": "Which  governing body of the Oahu Railway and Land Company is also the military branch of the Jimmy Quillen ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Oahu_Railway_and_Land_Company> <http://dbpedia.org/property/governingBody> ?uri. <http://dbpedia.org/resource/Jimmy_Quillen> <http://dbpedia.org/ontology/militaryBranch> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/governingBody",
    "predicate1_mention": "governing body",
    "predicate2_uri": "http://dbpedia.org/ontology/militaryBranch",
    "predicate2_mention": "military branch",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Oahu_Railway_and_Land_Company",
    "entity1_mention": "Oahu Railway and Land Company",
    "entity2_uri": "http://dbpedia.org/resource/Jimmy_Quillen",
    "entity2_mention": "Jimmy Quillen"
},
{
    "id": "1204",
    "question": "What is the place of death of the royalties one of whose parents was Adam Ludwik Czartoryski?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Adam_Ludwik_Czartoryski> . ?x <http://dbpedia.org/property/deathPlace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/parent",
    "predicate1_mention": "parents",
    "predicate2_uri": "http://dbpedia.org/property/deathPlace",
    "predicate2_mention": "place of death",
    "type_uri": "http://dbpedia.org/ontology/Royalty",
    "type_mention": "royalties",
    "entity1_uri": "http://dbpedia.org/resource/Adam_Ludwik_Czartoryski",
    "entity1_mention": "Adam Ludwik Czartoryski",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1206",
    "question": "What actor starred in Splash and is married to Rita Wilson?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Splash_(film)> <http://dbpedia.org/property/starring> ?uri. <http://dbpedia.org/resource/Rita_Wilson> <http://dbpedia.org/property/spouse> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/starring",
    "predicate1_mention": "starred",
    "predicate2_uri": "http://dbpedia.org/property/spouse",
    "predicate2_mention": "married",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Splash_(film)",
    "entity1_mention": "splash",
    "entity2_uri": "http://dbpedia.org/resource/Rita_Wilson",
    "entity2_mention": "Rita Wilson"
},
{
    "id": "1207",
    "question": "Is lion an animal?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Lion> <http://dbpedia.org/ontology/kingdom> <http://dbpedia.org/resource/Animal> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/kingdom",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lion",
    "entity1_mention": "lion",
    "entity2_uri": "http://dbpedia.org/resource/Animal",
    "entity2_mention": "animal"
},
{
    "id": "1208",
    "question": "Which players have represented Los Angeles Angels of Anaheim?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Los_Angeles_Angels_of_Anaheim>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballPlayer>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/team",
    "predicate1_mention": "represented",
    "predicate2_uri": "http://dbpedia.org/ontology/BaseballPlayer",
    "predicate2_mention": "players",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Los_Angeles_Angels_of_Anaheim",
    "entity1_mention": "Los Angeles Angels of Anaheim",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1209",
    "question": "What are the movies whose distributor's headquarters is New York?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/New_York> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/headquarters",
    "predicate1_mention": "headquarters",
    "predicate2_uri": "http://dbpedia.org/property/distributor",
    "predicate2_mention": "distributor's",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/New_York",
    "entity1_mention": "New York",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1210",
    "question": "List the shows whose network is run by BBC.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/BBC> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/owningCompany",
    "predicate1_mention": "run by",
    "predicate2_uri": "http://dbpedia.org/ontology/network",
    "predicate2_mention": "network",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "shows",
    "entity1_uri": "http://dbpedia.org/resource/BBC",
    "entity1_mention": "BBC",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1211",
    "question": "What is the religion of the political party which is an international party of Hamas?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hamas> <http://dbpedia.org/property/international> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/international",
    "predicate1_mention": "international",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religion",
    "type_uri": "http://dbpedia.org/ontology/PoliticalParty",
    "type_mention": "political party",
    "entity1_uri": "http://dbpedia.org/resource/Hamas",
    "entity1_mention": "hamas",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1212",
    "question": "What are some games availible on nintendo's virtual console?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Virtual_Console>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/computingPlatform",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/VideoGame",
    "predicate2_mention": "games",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Virtual_Console",
    "entity1_mention": "virtual console",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1213",
    "question": "For which party's PM did Chidambaram Subramaniam serve?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chidambaram_Subramaniam> <http://dbpedia.org/property/primeminister> ?x . ?x <http://dbpedia.org/ontology/party> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/primeminister",
    "predicate1_mention": "PM",
    "predicate2_uri": "http://dbpedia.org/ontology/party",
    "predicate2_mention": "party's",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Chidambaram_Subramaniam",
    "entity1_mention": "Chidambaram Subramaniam",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1215",
    "question": "Who was the prime minister of Victor Hope, 2nd Marquess of Linlithgow and also the editor of British Gazette ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Victor_Hope,_2nd_Marquess_of_Linlithgow> <http://dbpedia.org/property/primeminister> ?uri. <http://dbpedia.org/resource/British_Gazette> <http://dbpedia.org/property/editor> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/primeminister",
    "predicate1_mention": "prime minister",
    "predicate2_uri": "http://dbpedia.org/property/editor",
    "predicate2_mention": "editor",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Victor_Hope,_2nd_Marquess_of_Linlithgow",
    "entity1_mention": "Victor Hope, 2nd Marquess of Linlithgow",
    "entity2_uri": "http://dbpedia.org/resource/British_Gazette",
    "entity2_mention": "British Gazette"
},
{
    "id": "1216",
    "question": "Is the magnolia place of the greek revival architectural style?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Magnolia_Place> <http://dbpedia.org/ontology/architecturalStyle> <http://dbpedia.org/resource/Greek_Revival_architecture> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/architecturalStyle",
    "predicate1_mention": "architectural style",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Magnolia_Place",
    "entity1_mention": "magnolia place",
    "entity2_uri": "http://dbpedia.org/resource/Greek_Revival_architecture",
    "entity2_mention": "greek revival architectural"
},
{
    "id": "1219",
    "question": "Name the movies distributed by Warner Bros. and directed by Ridley Scott ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Warner_Bros.> . ?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Ridley_Scott>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/distributor",
    "predicate1_mention": "distributed",
    "predicate2_uri": "http://dbpedia.org/property/director",
    "predicate2_mention": "directed",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Warner_Bros.",
    "entity1_mention": "warner bros.",
    "entity2_uri": "http://dbpedia.org/resource/Ridley_Scott",
    "entity2_mention": "ridley scott"
},
{
    "id": "1220",
    "question": "Which recognized title of Frank Thorne is also the product of Playboy Enterprise ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Playboy_Enterprises> <http://dbpedia.org/property/products> ?uri. <http://dbpedia.org/resource/Frank_Thorne> <http://dbpedia.org/ontology/award> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/products",
    "predicate1_mention": "product",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "recognized title",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Playboy_Enterprises",
    "entity1_mention": "Playboy Enterprise",
    "entity2_uri": "http://dbpedia.org/resource/Frank_Thorne",
    "entity2_mention": "Frank Thorne"
},
{
    "id": "1221",
    "question": "Who is the publisher of the comic, one of whose authors is Kentaro Takekuma ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/writers> <http://dbpedia.org/resource/Kentaro_Takekuma> . ?x <http://dbpedia.org/property/publisher> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Comic>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/writers",
    "predicate1_mention": "authors",
    "predicate2_uri": "http://dbpedia.org/property/publisher",
    "predicate2_mention": "publisher",
    "type_uri": "http://dbpedia.org/ontology/Comic",
    "type_mention": "comic,",
    "entity1_uri": "http://dbpedia.org/resource/Kentaro_Takekuma",
    "entity1_mention": "Kentaro Takekuma",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1222",
    "question": "What was the result of Operation Autumn Clouds ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Operation_Autumn_Clouds> <http://dbpedia.org/property/result> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/result",
    "predicate1_mention": "result",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Operation_Autumn_Clouds",
    "entity1_mention": "Operation Autumn Clouds",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1223",
    "question": "List the significant building of the architect who also designed  Kiev?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/significantBuilding> <http://dbpedia.org/resource/Kiev> . ?x <http://dbpedia.org/ontology/significantBuilding> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/significantBuilding",
    "predicate1_mention": "significant building",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Architect",
    "type_mention": "architect",
    "entity1_uri": "http://dbpedia.org/resource/Kiev",
    "entity1_mention": "kiev",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1224",
    "question": "Was George Washington on the rank of general?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/George_Washington> <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/General_(United_States)> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/militaryRank",
    "predicate1_mention": "rank",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/George_Washington",
    "entity1_mention": "George Washington",
    "entity2_uri": "http://dbpedia.org/resource/General_(United_States)",
    "entity2_mention": "general"
},
{
    "id": "1225",
    "question": "What softwares were created by Apple Productivity Experience Group ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Apple_Productivity_Experience_Group> <http://dbpedia.org/ontology/product> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/product",
    "predicate1_mention": "created",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Apple_Productivity_Experience_Group",
    "entity1_mention": "Apple Productivity Experience Group",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1226",
    "question": "Count the number of judges who've come on CTV network shows.",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/CTV_Television_Network> . ?x <http://dbpedia.org/property/judges> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/network",
    "predicate1_mention": "network",
    "predicate2_uri": "http://dbpedia.org/property/judges",
    "predicate2_mention": "judges",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/CTV_Television_Network",
    "entity1_mention": "CTV network shows",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1227",
    "question": "What are the shows whose creator has worked as a screenwriter?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Screenwriting> . ?uri <http://dbpedia.org/ontology/creator> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/occupation",
    "predicate1_mention": "worked as",
    "predicate2_uri": "http://dbpedia.org/ontology/creator",
    "predicate2_mention": "creator",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "shows",
    "entity1_uri": "http://dbpedia.org/resource/Screenwriting",
    "entity1_mention": "screenwriter",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1228",
    "question": "Who is the person whose opponent's father is Newman Haynes Clanton?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Newman_Haynes_Clanton> . ?uri <http://dbpedia.org/ontology/opponent> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/parent",
    "predicate1_mention": "father",
    "predicate2_uri": "http://dbpedia.org/ontology/opponent",
    "predicate2_mention": "opponent's",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Newman_Haynes_Clanton",
    "entity1_mention": "Newman Haynes Clanton",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1229",
    "question": "What is the mountain whose parent mountain peak is Nevado de Toluca?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/parentMountainPeak> <http://dbpedia.org/resource/Nevado_de_Toluca>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/parentMountainPeak",
    "predicate1_mention": "parent mountain peak",
    "predicate2_uri": "http://dbpedia.org/ontology/Mountain",
    "predicate2_mention": "mountain",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Nevado_de_Toluca",
    "entity1_mention": "Nevado de Toluca",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1230",
    "question": "Which religions are practiced in India?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/India> . ?x <http://dbpedia.org/property/religion> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/hometown",
    "predicate1_mention": "in",
    "predicate2_uri": "http://dbpedia.org/property/religion",
    "predicate2_mention": "religions",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/India",
    "entity1_mention": "india",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1231",
    "question": "What is the Recorded of the Kaptaan is also the headquarters of the Orient News ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kaptaan> <http://dbpedia.org/property/recorded> ?uri. <http://dbpedia.org/resource/Orient_News> <http://dbpedia.org/property/headquarters> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/recorded",
    "predicate1_mention": "recorded",
    "predicate2_uri": "http://dbpedia.org/property/headquarters",
    "predicate2_mention": "headquarters",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kaptaan",
    "entity1_mention": "kaptaan",
    "entity2_uri": "http://dbpedia.org/resource/Orient_News",
    "entity2_mention": "orient news"
},
{
    "id": "1232",
    "question": "Is Gaza Strip the result of Operation Autumn Clouds?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Operation_Autumn_Clouds> <http://dbpedia.org/property/result> <http://dbpedia.org/resource/Gaza_Strip> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/result",
    "predicate1_mention": "result",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Operation_Autumn_Clouds",
    "entity1_mention": "Operation Autumn Clouds",
    "entity2_uri": "http://dbpedia.org/resource/Gaza_Strip",
    "entity2_mention": "Gaza Strip"
},
{
    "id": "1233",
    "question": "Name the office holder whose predecessor is Henry E. Catto, Jr. and successor is Adrian A. Basora?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Henry_E._Catto,_Jr.> . ?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Adrian_A._Basora>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/predecessor",
    "predicate1_mention": "predecessor",
    "predicate2_uri": "http://dbpedia.org/property/successor",
    "predicate2_mention": "successor",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "office holder",
    "entity1_uri": "http://dbpedia.org/resource/Henry_E._Catto,_Jr.",
    "entity1_mention": "Henry E. Catto, Jr.",
    "entity2_uri": "http://dbpedia.org/resource/Adrian_A._Basora",
    "entity2_mention": "Adrian A. Basora"
},
{
    "id": "1234",
    "question": "?What are the airline hubs of Cascade Airways",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cascade_Airways> <http://dbpedia.org/property/hubs> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/hubs",
    "predicate1_mention": "hubs",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Cascade_Airways",
    "entity1_mention": "cascade airways",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1235",
    "question": "Is the Frank R Lillie House has the Chicago architecture?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Frank_R._Lillie_House> <http://dbpedia.org/ontology/architecturalStyle> <http://dbpedia.org/resource/Chicago> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/architecturalStyle",
    "predicate1_mention": "architecture",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Frank_R._Lillie_House",
    "entity1_mention": "Frank R Lillie House",
    "entity2_uri": "http://dbpedia.org/resource/Chicago",
    "entity2_mention": "chicago"
},
{
    "id": "1236",
    "question": "Grey gppse and eristoff is produced by which company?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Grey_Goose_(vodka)> <http://dbpedia.org/property/manufacturer> ?uri. <http://dbpedia.org/resource/Eristoff> <http://dbpedia.org/property/manufacturer> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/manufacturer",
    "predicate1_mention": "company",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Grey_Goose_(vodka)",
    "entity1_mention": "Grey gppse",
    "entity2_uri": "http://dbpedia.org/resource/Eristoff",
    "entity2_mention": "eristoff"
},
{
    "id": "1237",
    "question": "Which politician's constituency is led by the SF Board of Supervisors?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leaderTitle> <http://dbpedia.org/resource/San_Francisco_Board_of_Supervisors> . ?uri <http://dbpedia.org/property/constituency> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/leaderTitle",
    "predicate1_mention": "led",
    "predicate2_uri": "http://dbpedia.org/property/constituency",
    "predicate2_mention": "constituency",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "politician's",
    "entity1_uri": "http://dbpedia.org/resource/San_Francisco_Board_of_Supervisors",
    "entity1_mention": "SF Board of Supervisors",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1238",
    "question": "Name the common musical band of Take Me There and Tonight's the Night ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Take_Me_There_(Blackstreet_&_M\u00fda_song)> <http://dbpedia.org/ontology/musicalBand> ?uri. <http://dbpedia.org/resource/Tonight's_the_Night_(Blackstreet_song)> <http://dbpedia.org/ontology/musicalBand> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/musicalBand",
    "predicate1_mention": "musical band",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Take_Me_There_(Blackstreet_&_M\u00fda_song)",
    "entity1_mention": "Take Me There",
    "entity2_uri": "http://dbpedia.org/resource/Tonight's_the_Night_(Blackstreet_song)",
    "entity2_mention": "Tonight's the Night"
},
{
    "id": "1239",
    "question": "What are the county seats of the region which operates the Boeing Field?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Boeing_Field> <http://dbpedia.org/ontology/operator> ?x . ?x <http://dbpedia.org/ontology/countySeat> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/operator",
    "predicate1_mention": "operates",
    "predicate2_uri": "http://dbpedia.org/ontology/countySeat",
    "predicate2_mention": "county seats",
    "type_uri": "http://dbpedia.org/ontology/Region",
    "type_mention": "region",
    "entity1_uri": "http://dbpedia.org/resource/Boeing_Field",
    "entity1_mention": "boeing field",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1240",
    "question": "What is the university whose campus are Indiana and Iowa?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Indiana> . ?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Iowa> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/campus",
    "predicate1_mention": "campus",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/University",
    "type_mention": "university",
    "entity1_uri": "http://dbpedia.org/resource/Indiana",
    "entity1_mention": "indiana",
    "entity2_uri": "http://dbpedia.org/resource/Iowa",
    "entity2_mention": "iowa"
},
{
    "id": "1241",
    "question": "To which political party does the writer of In the Bazaars of Hyderabad belong?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/In_the_Bazaars_of_Hyderabad> <http://dbpedia.org/property/writer> ?x . ?x <http://dbpedia.org/ontology/party> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/writer",
    "predicate1_mention": "writer",
    "predicate2_uri": "http://dbpedia.org/ontology/party",
    "predicate2_mention": "party",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/In_the_Bazaars_of_Hyderabad",
    "entity1_mention": "In the Bazaars of Hyderabad",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1242",
    "question": "List the other members of the band of which Juelz Santana is a part?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Juelz_Santana> . ?x <http://dbpedia.org/ontology/bandMember> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/currentMembers",
    "predicate1_mention": "members",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Band",
    "type_mention": "band",
    "entity1_uri": "http://dbpedia.org/resource/Juelz_Santana",
    "entity1_mention": "Juelz Santana",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1244",
    "question": "What is the style of architecture of Pontiac Building ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pontiac_Building> <http://dbpedia.org/ontology/architecturalStyle> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/architecturalStyle",
    "predicate1_mention": "style of architecture",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Pontiac_Building",
    "entity1_mention": "Pontiac Building",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1245",
    "question": "Name some people working at someplace owned by News Corp.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/owners> <http://dbpedia.org/resource/News_Corp> . ?uri <http://dbpedia.org/ontology/employer> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/owners",
    "predicate1_mention": "owned",
    "predicate2_uri": "http://dbpedia.org/ontology/employer",
    "predicate2_mention": "people working",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/News_Corp",
    "entity1_mention": "News Corp",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1246",
    "question": "Name the constituency of Jonas Gahr Stre ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jonas_Gahr_St\u00f8re> <http://dbpedia.org/property/constituency> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/constituency",
    "predicate1_mention": "constituency",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jonas_Gahr_St\u00f8re",
    "entity1_mention": "Jonas Gahr Stre ",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1247",
    "question": "What is the mascot of military in Quezon city?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/garrison> <http://dbpedia.org/resource/Quezon_City> . ?x <http://dbpedia.org/property/mascot> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/garrison",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/mascot",
    "predicate2_mention": "mascot",
    "type_uri": "http://dbpedia.org/ontology/MilitaryUnit",
    "type_mention": "military",
    "entity1_uri": "http://dbpedia.org/resource/Quezon_City",
    "entity1_mention": "quezon city",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1249",
    "question": "Who was the president at the time when the opponent of Benjamin Spock held office?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/Benjamin_Spock> . ?x <http://dbpedia.org/property/incumbent> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/opponent",
    "predicate1_mention": "opponent",
    "predicate2_uri": "http://dbpedia.org/property/incumbent",
    "predicate2_mention": "held office",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Benjamin_Spock",
    "entity1_mention": "benjamin spock",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1251",
    "question": "What are some products of the company whose parent is BBC?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/BBC> . ?x <http://dbpedia.org/property/products> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/parent",
    "predicate1_mention": "parent",
    "predicate2_uri": "http://dbpedia.org/property/products",
    "predicate2_mention": "products",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "company",
    "entity1_uri": "http://dbpedia.org/resource/BBC",
    "entity1_mention": "bbc",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1253",
    "question": "How many sports are played in maharashtran schools?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/state> <http://dbpedia.org/resource/Maharashtra> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sport>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/state",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/sport",
    "predicate2_mention": "sports",
    "type_uri": "http://dbpedia.org/ontology/Sport",
    "type_mention": "sports",
    "entity1_uri": "http://dbpedia.org/resource/Maharashtra",
    "entity1_mention": "maharashtran",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1255",
    "question": "Whose famous works have been illustrated by E W Kemble?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/illustrator> <http://dbpedia.org/resource/E._W._Kemble> . ?uri <http://dbpedia.org/ontology/notableWork> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/illustrator",
    "predicate1_mention": "illustrated",
    "predicate2_uri": "http://dbpedia.org/ontology/notableWork",
    "predicate2_mention": "works",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/E._W._Kemble",
    "entity1_mention": "E W Kemble",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1257",
    "question": "List down the commanders of Battle of Fort stephenson ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Battle_of_Fort_Stephenson> <http://dbpedia.org/ontology/commander> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/commander",
    "predicate1_mention": "commanders",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Battle_of_Fort_Stephenson",
    "entity1_mention": "Battle of Fort stephenson",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1258",
    "question": "Which cities of the American Mediterranean Sea has Nickname Entronque de Herradura?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/American_Mediterranean_Sea> <http://dbpedia.org/property/cities> ?uri. <http://dbpedia.org/resource/Entronque_de_Herradura> <http://dbpedia.org/property/nickname> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/cities",
    "predicate1_mention": "cities",
    "predicate2_uri": "http://dbpedia.org/property/nickname",
    "predicate2_mention": "nickname",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/American_Mediterranean_Sea",
    "entity1_mention": "American Mediterranean Sea",
    "entity2_uri": "http://dbpedia.org/resource/Entronque_de_Herradura",
    "entity2_mention": "Entronque de Herradura"
},
{
    "id": "1259",
    "question": "What is the municipality of the Brown's Corners, Toronto and also the  place of birth of the George Karrys",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brown's_Corners,_Toronto> <http://dbpedia.org/ontology/municipality> ?uri. <http://dbpedia.org/resource/George_Karrys> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/municipality",
    "predicate1_mention": "municipality",
    "predicate2_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate2_mention": "place of birth",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Brown's_Corners,_Toronto",
    "entity1_mention": "Brown's Corners, Toronto",
    "entity2_uri": "http://dbpedia.org/resource/George_Karrys",
    "entity2_mention": "George Karrys"
},
{
    "id": "1260",
    "question": "List the books whose authors are in Alcal de Henares.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Alcal\u00e1_de_Henares> . ?uri <http://dbpedia.org/ontology/author> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/author",
    "predicate2_mention": "authors",
    "type_uri": "http://dbpedia.org/ontology/Book",
    "type_mention": "books",
    "entity1_uri": "http://dbpedia.org/resource/Alcal\u00e1_de_Henares",
    "entity1_mention": "Alcal de Henares",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1261",
    "question": "Is Guatemala a unitary state?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Guatemala> <http://dbpedia.org/ontology/governmentType> <http://dbpedia.org/resource/Unitary_state> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/governmentType",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Guatemala",
    "entity1_mention": "guatemala",
    "entity2_uri": "http://dbpedia.org/resource/Unitary_state",
    "entity2_mention": "unitary state"
},
{
    "id": "1262",
    "question": "what are some journals of academic Philosophy",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/discipline> <http://dbpedia.org/resource/Philosophy> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/discipline",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Philosophy",
    "entity1_mention": "philosophy",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1263",
    "question": "By which member of parliament was Provisional Government of Saskatchewan led?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/order> <http://dbpedia.org/resource/Provisional_Government_of_Saskatchewan>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MemberOfParliament>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/order",
    "predicate1_mention": "government",
    "predicate2_uri": "http://dbpedia.org/ontology/MemberOfParliament",
    "predicate2_mention": "member of parliament",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Provisional_Government_of_Saskatchewan",
    "entity1_mention": "Provisional Government of Saskatchewan",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1264",
    "question": "Did taylor swift do the theme song of The Farmer Wants a Wife?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Farmer_Wants_a_Wife_(Australian_TV_series)> <http://dbpedia.org/property/opentheme> <http://dbpedia.org/resource/Taylor_Swift> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/opentheme",
    "predicate1_mention": "theme",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Farmer_Wants_a_Wife_(Australian_TV_series)",
    "entity1_mention": "The Farmer Wants a Wife",
    "entity2_uri": "http://dbpedia.org/resource/Taylor_Swift",
    "entity2_mention": "taylor swift"
},
{
    "id": "1265",
    "question": "Where does the Kentucky cycle take place?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Kentucky_Cycle> <http://dbpedia.org/property/place> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/place",
    "predicate1_mention": "where",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Kentucky_Cycle",
    "entity1_mention": "the Kentucky cycle",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1266",
    "question": "Which drinks have emerged from the US?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/origin> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/property/locationCity> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Beverage>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/origin",
    "predicate1_mention": "drinks",
    "predicate2_uri": "http://dbpedia.org/property/locationCity",
    "predicate2_mention": "from",
    "type_uri": "http://dbpedia.org/ontology/Beverage",
    "type_mention": "emerged",
    "entity1_uri": "http://dbpedia.org/resource/United_States",
    "entity1_mention": "US",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1268",
    "question": "Name the college of Jon Curran ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jon_Curran> <http://dbpedia.org/property/college> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/college",
    "predicate1_mention": "college",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jon_Curran",
    "entity1_mention": "Jon Curran",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1269",
    "question": "Where is Vietnam Airlines located ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vietnam_Airlines> <http://dbpedia.org/ontology/location> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/location",
    "predicate1_mention": "located",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Vietnam_Airlines",
    "entity1_mention": "Vietnam Airlines",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1270",
    "question": "Who is the chancellor of the university which affiliates the Dartington College of Arts?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Dartington_College_of_Arts> . ?x <http://dbpedia.org/property/chancellor> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/affiliations",
    "predicate1_mention": "affiliates",
    "predicate2_uri": "http://dbpedia.org/property/chancellor",
    "predicate2_mention": "chancellor",
    "type_uri": "http://dbpedia.org/ontology/University",
    "type_mention": "university",
    "entity1_uri": "http://dbpedia.org/resource/Dartington_College_of_Arts",
    "entity1_mention": "Dartington College of Arts",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1271",
    "question": "How many sitcoms are there whose theme music is composed by a New Yorker?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/New_York> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/hometown",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/themeMusicComposer",
    "predicate2_mention": "composed by",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "sitcoms",
    "entity1_uri": "http://dbpedia.org/resource/New_York",
    "entity1_mention": "New Yorker",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1272",
    "question": "Comcast SportsNet is broadcasted in what area, which also has the Michigan Renaissance Festival?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michigan_Renaissance_Festival> <http://dbpedia.org/property/location> ?uri. <http://dbpedia.org/resource/Comcast_SportsNet_Chicago> <http://dbpedia.org/ontology/broadcastArea> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/location",
    "predicate1_mention": "comcast",
    "predicate2_uri": "http://dbpedia.org/ontology/broadcastArea",
    "predicate2_mention": "broadcasted in what area",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Michigan_Renaissance_Festival",
    "entity1_mention": "Michigan Renaissance Festival",
    "entity2_uri": "http://dbpedia.org/resource/Comcast_SportsNet_Chicago",
    "entity2_mention": "Comcast SportsNet"
},
{
    "id": "1273",
    "question": "List all the tenants of the stadium where the WWF Summer Slam 2004 took place.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/SummerSlam_(2004)> <http://dbpedia.org/property/venue> ?x . ?x <http://dbpedia.org/ontology/tenant> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/venue",
    "predicate1_mention": "where",
    "predicate2_uri": "http://dbpedia.org/ontology/tenant",
    "predicate2_mention": "tenants",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/SummerSlam_(2004)",
    "entity1_mention": "summer slam 2004",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1274",
    "question": "Which writer of A streetcar Named Desire is also the author of The Catastrophe of Success ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/A_Streetcar_Named_Desire_(play)> <http://dbpedia.org/property/writer> ?uri. <http://dbpedia.org/resource/The_Catastrophe_of_Success> <http://dbpedia.org/ontology/author> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/writer",
    "predicate1_mention": "writer",
    "predicate2_uri": "http://dbpedia.org/ontology/author",
    "predicate2_mention": "author",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/A_Streetcar_Named_Desire_(play)",
    "entity1_mention": "A streetcar Named Desire",
    "entity2_uri": "http://dbpedia.org/resource/The_Catastrophe_of_Success",
    "entity2_mention": "The Catastrophe of Success"
},
{
    "id": "1277",
    "question": "Who is the appointer of William Cushing ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Cushing> <http://dbpedia.org/ontology/appointer> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/appointer",
    "predicate1_mention": "appointer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/William_Cushing",
    "entity1_mention": "william cushing",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1278",
    "question": "Where is the origin of Filbert's Old Time Root Beer ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Filbert's_Old_Time_Root_Beer> <http://dbpedia.org/ontology/origin> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/origin",
    "predicate1_mention": "origin",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Filbert's_Old_Time_Root_Beer",
    "entity1_mention": "Filbert's Old Time Root Beer",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1279",
    "question": "Name the TV show with theme music by Primus and broadcasted on Comedy Central ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/Comedy_Central> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Primus_(band)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/network",
    "predicate1_mention": "central",
    "predicate2_uri": "http://dbpedia.org/property/themeMusicComposer",
    "predicate2_mention": "theme music",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "TV show",
    "entity1_uri": "http://dbpedia.org/resource/Comedy_Central",
    "entity1_mention": "Comedy Central",
    "entity2_uri": "http://dbpedia.org/resource/Primus_(band)",
    "entity2_mention": "Primus and broadcasted"
},
{
    "id": "1280",
    "question": "Name the musical band of Written in the Stars ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Written_in_the_Stars_(Elton_John_and_LeAnn_Rimes_song)> <http://dbpedia.org/ontology/musicalBand> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/musicalBand",
    "predicate1_mention": "musical band",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Written_in_the_Stars_(Elton_John_and_LeAnn_Rimes_song)",
    "entity1_mention": "Written in the Stars",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1281",
    "question": "List down all the associcated musical artist of the artist of In a Word or 2 ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/In_a_Word_or_2> <http://dbpedia.org/property/artist> ?x . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/artist",
    "predicate1_mention": "artist",
    "predicate2_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
    "predicate2_mention": "associcated musical artist",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/In_a_Word_or_2",
    "entity1_mention": "In a Word or 2",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1283",
    "question": "Hugh Hefner is editor of which magazine?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/editor> <http://dbpedia.org/resource/Hugh_Hefner>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/editor",
    "predicate1_mention": "editor",
    "predicate2_uri": "http://dbpedia.org/ontology/Magazine",
    "predicate2_mention": "magazine",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hugh_Hefner",
    "entity1_mention": "Hugh Hefner",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1284",
    "question": "Which are the previous broadcast networks of sister channels of WGBC?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WGBC_(DT2)> <http://dbpedia.org/property/sisterStations> ?x . ?x <http://dbpedia.org/ontology/formerBroadcastNetwork> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/sisterStations",
    "predicate1_mention": "sister channels",
    "predicate2_uri": "http://dbpedia.org/ontology/formerBroadcastNetwork",
    "predicate2_mention": "previous broadcast networks",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/WGBC_(DT2)",
    "entity1_mention": "wgbc",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1285",
    "question": "On which subjects does the author of the novel Thud! delve?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thud!> <http://dbpedia.org/ontology/nonFictionSubject> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/nonFictionSubject",
    "predicate1_mention": "subjects",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Thud!",
    "entity1_mention": "thud!",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1286",
    "question": "Is Lancy a city close to Geneva?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Geneva> <http://dbpedia.org/ontology/neighboringMunicipality> <http://dbpedia.org/resource/Lancy> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/neighboringMunicipality",
    "predicate1_mention": "city close",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Geneva",
    "entity1_mention": "geneva",
    "entity2_uri": "http://dbpedia.org/resource/Lancy",
    "entity2_mention": "lancy"
},
{
    "id": "1287",
    "question": "Which awards have been given to the horse who sired Triplicate ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Triplicate> <http://dbpedia.org/property/sire> ?x . ?x <http://dbpedia.org/ontology/honours> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/sire",
    "predicate1_mention": "sired",
    "predicate2_uri": "http://dbpedia.org/ontology/honours",
    "predicate2_mention": "horse",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Triplicate",
    "entity1_mention": "triplicate",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1288",
    "question": "Who is the american football player whose highschool is Ringgold High School ( Pennsylvania )?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/highschool> <http://dbpedia.org/resource/Ringgold_High_School_(Pennsylvania)> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/highschool",
    "predicate1_mention": "highschool",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ringgold_High_School_(Pennsylvania)",
    "entity1_mention": "Ringgold High School ( Pennsylvania )",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1289",
    "question": "Give me some organizations working for Environmentalism",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/purpose> <http://dbpedia.org/resource/Environmentalism>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/purpose",
    "predicate1_mention": "working for",
    "predicate2_uri": "http://dbpedia.org/ontology/Organisation",
    "predicate2_mention": "organizations",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Environmentalism",
    "entity1_mention": "environmentalism",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1290",
    "question": "List books authored by Miguel de Cervantes and published by Francisco de Robles ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Miguel_de_Cervantes> . ?uri <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Francisco_de_Robles>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/author",
    "predicate1_mention": "authored",
    "predicate2_uri": "http://dbpedia.org/ontology/publisher",
    "predicate2_mention": "published",
    "type_uri": "http://dbpedia.org/ontology/Book",
    "type_mention": "books",
    "entity1_uri": "http://dbpedia.org/resource/Miguel_de_Cervantes",
    "entity1_mention": "Miguel de Cervantes",
    "entity2_uri": "http://dbpedia.org/resource/Francisco_de_Robles",
    "entity2_mention": "Francisco de Robles"
},
{
    "id": "1292",
    "question": "Is Wahoo! the previous work of Honeybuns?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Honeybuns> <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/Wahoo!> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/previousWork",
    "predicate1_mention": "previous work",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Honeybuns",
    "entity1_mention": "honeybuns",
    "entity2_uri": "http://dbpedia.org/resource/Wahoo!",
    "entity2_mention": "wahoo!"
},
{
    "id": "1293",
    "question": "List the awards given to the race horses bred by Willis Sharpe Kilmer.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/breeder> <http://dbpedia.org/resource/Willis_Sharpe_Kilmer> . ?x <http://dbpedia.org/ontology/honours> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RaceHorse>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/breeder",
    "predicate1_mention": "bred",
    "predicate2_uri": "http://dbpedia.org/ontology/honours",
    "predicate2_mention": "awards",
    "type_uri": "http://dbpedia.org/ontology/RaceHorse",
    "type_mention": "horses",
    "entity1_uri": "http://dbpedia.org/resource/Willis_Sharpe_Kilmer",
    "entity1_mention": "Willis Sharpe Kilmer",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1294",
    "question": "What is the constituency of the leader of Labour Party (Norway)?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Labour_Party_(Norway)> <http://dbpedia.org/property/leader> ?x . ?x <http://dbpedia.org/property/constituency> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/leader",
    "predicate1_mention": "leader",
    "predicate2_uri": "http://dbpedia.org/property/constituency",
    "predicate2_mention": "constituency",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Labour_Party_(Norway)",
    "entity1_mention": "Labour Party (Norway)",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1295",
    "question": "List the tomb of the royalties whose burial place is Little Easton ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Little_Easton> . ?x <http://dbpedia.org/property/placeOfBurial> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/placeOfBurial",
    "predicate1_mention": "burial place",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Royalty",
    "type_mention": "royalties",
    "entity1_uri": "http://dbpedia.org/resource/Little_Easton",
    "entity1_mention": "little easton",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1297",
    "question": "What games can be played in schools founded by Fr. Orlando?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Fr._Orlando> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/foundedBy",
    "predicate1_mention": "founded by",
    "predicate2_uri": "http://dbpedia.org/ontology/sport",
    "predicate2_mention": "games",
    "type_uri": "http://dbpedia.org/ontology/School",
    "type_mention": "schools",
    "entity1_uri": "http://dbpedia.org/resource/Fr._Orlando",
    "entity1_mention": "Fr. Orlando",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1298",
    "question": "What are the television shows whose voices is given by  Mona Marshall?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Mona_Marshall>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/voices",
    "predicate1_mention": "voices",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "television shows",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mona_Marshall",
    "entity1_mention": "Mona Marshall",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1299",
    "question": "Which TV show distributed by Warner Bros. has Christopher Franke as one of the artist ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Warner_Bros._Television> . ?uri <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Christopher_Franke>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/distributor",
    "predicate1_mention": "distributed",
    "predicate2_uri": "http://dbpedia.org/property/artist",
    "predicate2_mention": "artist",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "TV show",
    "entity1_uri": "http://dbpedia.org/resource/Warner_Bros._Television",
    "entity1_mention": "warner bros.",
    "entity2_uri": "http://dbpedia.org/resource/Christopher_Franke",
    "entity2_mention": "christopher franke"
},
{
    "id": "1301",
    "question": "Is Frontaccounting licensed under GNU license?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Frontaccounting> <http://dbpedia.org/ontology/license> <http://dbpedia.org/resource/GNU> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/license",
    "predicate1_mention": "license",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Frontaccounting",
    "entity1_mention": "frontaccounting",
    "entity2_uri": "http://dbpedia.org/resource/GNU",
    "entity2_mention": "gnu"
},
{
    "id": "1302",
    "question": "Who is the employer of Ralph flanders ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ralph_Flanders> <http://dbpedia.org/property/occupation> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/occupation",
    "predicate1_mention": "employer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ralph_Flanders",
    "entity1_mention": "Ralph flanders",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1303",
    "question": "What is an airport inside ontario?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/cityServed> <http://dbpedia.org/resource/Ontario,_California>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airport>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/cityServed",
    "predicate1_mention": "inside",
    "predicate2_uri": "http://dbpedia.org/ontology/Airport",
    "predicate2_mention": "airport",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ontario,_California",
    "entity1_mention": "ontario",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1304",
    "question": "What sports are played by school which owns Fr. Agnel Stadium ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fr._Agnel_Stadium> <http://dbpedia.org/property/owner> ?x . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/owner",
    "predicate1_mention": "owns",
    "predicate2_uri": "http://dbpedia.org/ontology/sport",
    "predicate2_mention": "sports",
    "type_uri": "http://dbpedia.org/ontology/School",
    "type_mention": "school",
    "entity1_uri": "http://dbpedia.org/resource/Fr._Agnel_Stadium",
    "entity1_mention": "Fr. Agnel Stadium",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1305",
    "question": "Which things have been made by artists who died in Midhurst?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Midhurst> . ?uri <http://dbpedia.org/ontology/creator> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate1_mention": "died in",
    "predicate2_uri": "http://dbpedia.org/ontology/creator",
    "predicate2_mention": "artists",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Midhurst",
    "entity1_mention": "midhurst",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1307",
    "question": "What is the citizenship of the Sarah Kazemy and land of the Cervelle de canut",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sarah_Kazemy> <http://dbpedia.org/ontology/citizenship> ?uri. <http://dbpedia.org/resource/Cervelle_de_canut> <http://dbpedia.org/ontology/country> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/citizenship",
    "predicate1_mention": "citizenship",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "citizenship",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sarah_Kazemy",
    "entity1_mention": "Sarah Kazemy",
    "entity2_uri": "http://dbpedia.org/resource/Cervelle_de_canut",
    "entity2_mention": "Cervelle de canut"
},
{
    "id": "1308",
    "question": "From which team did Marv McFadden played ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marv_McFadden> <http://dbpedia.org/property/pastteams> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/pastteams",
    "predicate1_mention": "team",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Marv_McFadden",
    "entity1_mention": "Marv McFadden",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1309",
    "question": "What is the city whose mayor is Anne Hidalgo?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mayor> <http://dbpedia.org/resource/Anne_Hidalgo>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/mayor",
    "predicate1_mention": "mayor",
    "predicate2_uri": "http://dbpedia.org/ontology/Settlement",
    "predicate2_mention": "city",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Anne_Hidalgo",
    "entity1_mention": "Anne Hidalgo",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1310",
    "question": "Name some dishes made with flowering plants.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/division> <http://dbpedia.org/resource/Flowering_plant> . ?uri <http://dbpedia.org/ontology/ingredient> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Food>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/division",
    "predicate1_mention": "dishes",
    "predicate2_uri": "http://dbpedia.org/ontology/ingredient",
    "predicate2_mention": "made with",
    "type_uri": "http://dbpedia.org/ontology/Food",
    "type_mention": "flowering",
    "entity1_uri": "http://dbpedia.org/resource/Flowering_plant",
    "entity1_mention": "flowering plants",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1311",
    "question": "Which nation's engineers have graduated in Poland?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/education> <http://dbpedia.org/resource/Poland> . ?x <http://dbpedia.org/property/nationality> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Engineer>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/education",
    "predicate1_mention": "graduated in",
    "predicate2_uri": "http://dbpedia.org/property/nationality",
    "predicate2_mention": "nation's",
    "type_uri": "http://dbpedia.org/ontology/Engineer",
    "type_mention": "engineers",
    "entity1_uri": "http://dbpedia.org/resource/Poland",
    "entity1_mention": "poland",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1313",
    "question": "What is the draft team of Bob MacMillan ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bob_MacMillan> <http://dbpedia.org/property/draftTeam> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/draftTeam",
    "predicate1_mention": "draft team",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bob_MacMillan",
    "entity1_mention": "Bob MacMillan",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1315",
    "question": "Which author inspired Susanna Clarke, and wrote Northanger Abbey?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Northanger_Abbey> <http://dbpedia.org/property/author> ?uri. <http://dbpedia.org/resource/Susanna_Clarke> <http://dbpedia.org/property/influences> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/author",
    "predicate1_mention": "author",
    "predicate2_uri": "http://dbpedia.org/property/influences",
    "predicate2_mention": "inspired",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Northanger_Abbey",
    "entity1_mention": "northanger abbey",
    "entity2_uri": "http://dbpedia.org/resource/Susanna_Clarke",
    "entity2_mention": "Susanna Clarke"
},
{
    "id": "1316",
    "question": "List the races of Fergie Sutherland?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fergie_Sutherland> <http://dbpedia.org/property/race> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/race",
    "predicate1_mention": "races",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Fergie_Sutherland",
    "entity1_mention": "Fergie Sutherland",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1317",
    "question": "Where is the  assembly of Caterpillar 797 ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Caterpillar_797> <http://dbpedia.org/ontology/assembly> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/assembly",
    "predicate1_mention": "assembly",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Caterpillar_797",
    "entity1_mention": "caterpillar 797",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1319",
    "question": "Which things are Breann McGregor known for ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Breann_McGregor> <http://dbpedia.org/property/knownFor> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/knownFor",
    "predicate1_mention": "known for",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Breann_McGregor",
    "entity1_mention": "Breann McGregor",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1320",
    "question": "Who is the Pole driver of 1992 Canadian Grand Prix ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1992_Canadian_Grand_Prix> <http://dbpedia.org/property/poleDriver> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/poleDriver",
    "predicate1_mention": "Pole driver",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/1992_Canadian_Grand_Prix",
    "entity1_mention": "1992 Canadian Grand Prix",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1321",
    "question": "List everything governed by the Democratic Party of US?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/leaderName> <http://dbpedia.org/resource/Democratic_Party_(United_States)> . ?uri <http://dbpedia.org/ontology/location> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/leaderName",
    "predicate1_mention": "governed by",
    "predicate2_uri": "http://dbpedia.org/ontology/location",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Democratic_Party_(United_States)",
    "entity1_mention": "Democratic Party of US",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1322",
    "question": "Sentinel High School  team is known as ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sentinel_High_School> <http://dbpedia.org/property/teamName> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/teamName",
    "predicate1_mention": "team",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sentinel_High_School",
    "entity1_mention": "Sentinel High School",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1323",
    "question": "Of all the teams that Andrew Economos played for, which one did Jerrel Jackson play his first game for?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerrell_Jackson> <http://dbpedia.org/ontology/debutTeam> ?uri. <http://dbpedia.org/resource/Andrew_Economos> <http://dbpedia.org/ontology/formerTeam> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/debutTeam",
    "predicate1_mention": "teams",
    "predicate2_uri": "http://dbpedia.org/ontology/formerTeam",
    "predicate2_mention": "teams",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jerrell_Jackson",
    "entity1_mention": "jerrel jackson",
    "entity2_uri": "http://dbpedia.org/resource/Andrew_Economos",
    "entity2_mention": "Andrew Economos"
},
{
    "id": "1325",
    "question": "Name the movies written by the group Monty Python ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Monty_Python>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/writer",
    "predicate1_mention": "written",
    "predicate2_uri": "http://dbpedia.org/ontology/Film",
    "predicate2_mention": "movies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Monty_Python",
    "entity1_mention": "Monty Python",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1326",
    "question": "Where did some of the matches take place where Columbus Crew SC played?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Columbus_Crew_SC> . ?x <http://dbpedia.org/ontology/location> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballMatch>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/team",
    "predicate1_mention": "played",
    "predicate2_uri": "http://dbpedia.org/ontology/location",
    "predicate2_mention": "place",
    "type_uri": "http://dbpedia.org/ontology/FootballMatch",
    "type_mention": "matches",
    "entity1_uri": "http://dbpedia.org/resource/Columbus_Crew_SC",
    "entity1_mention": "Columbus Crew SC",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1327",
    "question": "How many shows belong to the networks one of whose sister station is BBC News?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/sisterNames> <http://dbpedia.org/resource/BBC_News_(TV_channel)> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/sisterNames",
    "predicate1_mention": "sister",
    "predicate2_uri": "http://dbpedia.org/ontology/network",
    "predicate2_mention": "networks",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "shows",
    "entity1_uri": "http://dbpedia.org/resource/BBC_News_(TV_channel)",
    "entity1_mention": "BBC News",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1328",
    "question": "What are some shareholders of the bridge maintained by the Massachusetts department of transportation?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/maintainedBy> <http://dbpedia.org/resource/Massachusetts_Department_of_Transportation> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/maintainedBy",
    "predicate1_mention": "maintained by",
    "predicate2_uri": "http://dbpedia.org/property/owner",
    "predicate2_mention": "shareholders",
    "type_uri": "http://dbpedia.org/ontology/Bridge",
    "type_mention": "bridge",
    "entity1_uri": "http://dbpedia.org/resource/Massachusetts_Department_of_Transportation",
    "entity1_mention": "Massachusetts department of transportation",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1330",
    "question": "Which creator of Theme Time Radio Hour has also given the  musical score of the The Times They Are a-Changin' (musical)?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Theme_Time_Radio_Hour> <http://dbpedia.org/property/creator> ?uri. <http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)> <http://dbpedia.org/ontology/musicBy> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/creator",
    "predicate1_mention": "creator",
    "predicate2_uri": "http://dbpedia.org/ontology/musicBy",
    "predicate2_mention": "musical",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Theme_Time_Radio_Hour",
    "entity1_mention": "Theme Time Radio Hour",
    "entity2_uri": "http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)",
    "entity2_mention": "The Times They Are a-Changin' (musical)"
},
{
    "id": "1333",
    "question": "People from how many political parties exist in Maharashtra?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Maharashtra> . ?x <http://dbpedia.org/ontology/party> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/party",
    "predicate2_mention": "parties",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Maharashtra",
    "entity1_mention": "maharashtra",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1334",
    "question": "Among the universities having Gyrfalcon as mascot which have Michelle D. Johnson as superintendent ? ",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/superintendent> <http://dbpedia.org/resource/Michelle_D._Johnson> . ?uri <http://dbpedia.org/property/mascot> <http://dbpedia.org/resource/Gyrfalcon>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/superintendent",
    "predicate1_mention": "superintendent",
    "predicate2_uri": "http://dbpedia.org/property/mascot",
    "predicate2_mention": "mascot",
    "type_uri": "http://dbpedia.org/ontology/University",
    "type_mention": "universities",
    "entity1_uri": "http://dbpedia.org/resource/Michelle_D._Johnson",
    "entity1_mention": "Michelle D. Johnson",
    "entity2_uri": "http://dbpedia.org/resource/Gyrfalcon",
    "entity2_mention": "gyrfalcon"
},
{
    "id": "1335",
    "question": "Whose opponents are Ike Clanton and Billy Clanton?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/Ike_Clanton> . ?uri <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/Billy_Clanton> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/opponent",
    "predicate1_mention": "opponents",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ike_Clanton",
    "entity1_mention": "Ike Clanton",
    "entity2_uri": "http://dbpedia.org/resource/Billy_Clanton",
    "entity2_mention": "Billy Clanton"
},
{
    "id": "1336",
    "question": "Which moto of american Classical League is also the academic discipline of Probus ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/American_Classical_League> <http://dbpedia.org/property/motto> ?uri. <http://dbpedia.org/resource/Probus_(journal)> <http://dbpedia.org/ontology/academicDiscipline> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/motto",
    "predicate1_mention": "moto",
    "predicate2_uri": "http://dbpedia.org/ontology/academicDiscipline",
    "predicate2_mention": "academic discipline",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/American_Classical_League",
    "entity1_mention": "american Classical League",
    "entity2_uri": "http://dbpedia.org/resource/Probus_(journal)",
    "entity2_mention": "probus"
},
{
    "id": "1337",
    "question": "Who are the people whose alumna is a part of the National Collegiate Athletic Association?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/athletics> <http://dbpedia.org/resource/National_Collegiate_Athletic_Association> . ?uri <http://dbpedia.org/property/education> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/athletics",
    "predicate1_mention": "athletic",
    "predicate2_uri": "http://dbpedia.org/property/education",
    "predicate2_mention": "alumna",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/National_Collegiate_Athletic_Association",
    "entity1_mention": "National Collegiate Athletic Association",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1338",
    "question": "To which religion does the commander of South Thailand insurgency belong?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Thailand_insurgency> <http://dbpedia.org/ontology/commander> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/commander",
    "predicate1_mention": "commander",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religion",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/South_Thailand_insurgency",
    "entity1_mention": "South Thailand insurgency",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1339",
    "question": "What is the parent company of Edsel?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Edsel> <http://dbpedia.org/property/parent> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/parent",
    "predicate1_mention": "parent",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Edsel",
    "entity1_mention": "edsel",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1340",
    "question": "Give me a count of everything owned by the network whose sister name is The CW?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/sisterNames> <http://dbpedia.org/resource/The_CW> . ?uri <http://dbpedia.org/property/network> ?x  . }",
    "sparql_id": "106",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/sisterNames",
    "predicate1_mention": "sister name",
    "predicate2_uri": "http://dbpedia.org/property/network",
    "predicate2_mention": "network",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_CW",
    "entity1_mention": "the cw",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1341",
    "question": "In which state does the valley bordering the Modoc plateau lie?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/border> <http://dbpedia.org/resource/Modoc_Plateau> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Valley>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/border",
    "predicate1_mention": "bordering",
    "predicate2_uri": "http://dbpedia.org/ontology/state",
    "predicate2_mention": "state",
    "type_uri": "http://dbpedia.org/ontology/Valley",
    "type_mention": "valley",
    "entity1_uri": "http://dbpedia.org/resource/Modoc_Plateau",
    "entity1_mention": "Modoc plateau",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1343",
    "question": "Which famous writer was married to Jill Krementz and had a son named Edith Vonnegut ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Jill_Krementz> . ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edith_Vonnegut>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/spouse",
    "predicate1_mention": "married to",
    "predicate2_uri": "http://dbpedia.org/ontology/child",
    "predicate2_mention": "son",
    "type_uri": "http://dbpedia.org/ontology/Writer",
    "type_mention": "writer",
    "entity1_uri": "http://dbpedia.org/resource/Jill_Krementz",
    "entity1_mention": "Jill Krementz",
    "entity2_uri": "http://dbpedia.org/resource/Edith_Vonnegut",
    "entity2_mention": "Edith Vonnegut"
},
{
    "id": "1344",
    "question": "What did the people buried in Toronto die of?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Toronto> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/restingPlace",
    "predicate1_mention": "buried in",
    "predicate2_uri": "http://dbpedia.org/ontology/deathCause",
    "predicate2_mention": "die of",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Toronto",
    "entity1_mention": "toronto",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1345",
    "question": "Which are the races in which Martin Molony participated?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Martin_Molony> <http://dbpedia.org/ontology/race> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/race",
    "predicate1_mention": "races",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Martin_Molony",
    "entity1_mention": "Martin Molony",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1346",
    "question": "What is the main common interests of the Philip Novak and Timothy Morton?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Philip_Novak> <http://dbpedia.org/property/mainInterests> ?uri. <http://dbpedia.org/resource/Timothy_Morton> <http://dbpedia.org/property/mainInterests> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/mainInterests",
    "predicate1_mention": "main common interests",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Philip_Novak",
    "entity1_mention": "philip novak",
    "entity2_uri": "http://dbpedia.org/resource/Timothy_Morton",
    "entity2_mention": "timothy morton"
},
{
    "id": "1347",
    "question": "Was Yabanc Damat first aired in UAE?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Yabanc\u0131_Damat> <http://dbpedia.org/property/firstAired> <http://dbpedia.org/resource/United_Arab_Emirates> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/firstAired",
    "predicate1_mention": "first aired",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Yabanc\u0131_Damat",
    "entity1_mention": "yabanc damat",
    "entity2_uri": "http://dbpedia.org/resource/United_Arab_Emirates",
    "entity2_mention": "UAE"
},
{
    "id": "1349",
    "question": "list the organisation with motive for peace and environmentalism?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/purpose> <http://dbpedia.org/resource/Peace> . ?uri <http://dbpedia.org/property/purpose> <http://dbpedia.org/resource/Environmentalism> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/purpose",
    "predicate1_mention": "motive for",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Organisation",
    "type_mention": "organisation",
    "entity1_uri": "http://dbpedia.org/resource/Peace",
    "entity1_mention": "peace",
    "entity2_uri": "http://dbpedia.org/resource/Environmentalism",
    "entity2_mention": "environmentalism"
},
{
    "id": "1350",
    "question": "What is the company which has Raymond Conner and Dennis Muilenburg as key person?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Raymond_Conner> . ?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Dennis_Muilenburg> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/keyPeople",
    "predicate1_mention": "key person",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "company",
    "entity1_uri": "http://dbpedia.org/resource/Raymond_Conner",
    "entity1_mention": "raymond conner",
    "entity2_uri": "http://dbpedia.org/resource/Dennis_Muilenburg",
    "entity2_mention": "Dennis Muilenburg"
},
{
    "id": "1351",
    "question": "What is the field of the Jon Speelman and occupation of the Karen Grigorian?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jon_Speelman> <http://dbpedia.org/ontology/field> ?uri. <http://dbpedia.org/resource/Karen_Grigorian> <http://dbpedia.org/ontology/occupation> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/field",
    "predicate1_mention": "field",
    "predicate2_uri": "http://dbpedia.org/ontology/occupation",
    "predicate2_mention": "occupation",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jon_Speelman",
    "entity1_mention": "Jon Speelman",
    "entity2_uri": "http://dbpedia.org/resource/Karen_Grigorian",
    "entity2_mention": "Karen Grigorian"
},
{
    "id": "1352",
    "question": "List the maintainers of Pandaruan Bridge?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pandaruan_Bridge> <http://dbpedia.org/ontology/maintainedBy> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/maintainedBy",
    "predicate1_mention": "maintainers",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Pandaruan_Bridge",
    "entity1_mention": "pandaruan bridge",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1354",
    "question": "Who were the producers of the tenderfoot?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Tenderfoot_(miniseries)> <http://dbpedia.org/ontology/producer> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/producer",
    "predicate1_mention": "producers",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Tenderfoot_(miniseries)",
    "entity1_mention": "tenderfoot",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1355",
    "question": "Which former team of Franois Beauchemin does the Nathan Dempsey played for ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Nathan_Dempsey> <http://dbpedia.org/property/playedFor> ?uri. <http://dbpedia.org/resource/Fran\u00e7ois_Beauchemin> <http://dbpedia.org/ontology/formerTeam> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/playedFor",
    "predicate1_mention": "played for",
    "predicate2_uri": "http://dbpedia.org/ontology/formerTeam",
    "predicate2_mention": "former team",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Nathan_Dempsey",
    "entity1_mention": "Nathan Dempsey",
    "entity2_uri": "http://dbpedia.org/resource/Fran\u00e7ois_Beauchemin",
    "entity2_mention": "Franois Beauchemin"
},
{
    "id": "1356",
    "question": "Is coffee a main ingredient of Hopje?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hopje> <http://dbpedia.org/property/mainIngredient> <http://dbpedia.org/resource/Coffee> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/mainIngredient",
    "predicate1_mention": "main ingredient",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hopje",
    "entity1_mention": "hopje",
    "entity2_uri": "http://dbpedia.org/resource/Coffee",
    "entity2_mention": "coffee"
},
{
    "id": "1357",
    "question": "Who has Saint Joseph and Mary as parents ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saint_Joseph> . ?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_(mother_of_Jesus)> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/parent",
    "predicate1_mention": "parents",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Saint_Joseph",
    "entity1_mention": "Saint Joseph",
    "entity2_uri": "http://dbpedia.org/resource/Mary_(mother_of_Jesus)",
    "entity2_mention": "mary"
},
{
    "id": "1359",
    "question": "How many sitcoms were produced by the company whose predecessor was the Desilu Productions",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Desilu_Productions> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/predecessor",
    "predicate1_mention": "predecessor",
    "predicate2_uri": "http://dbpedia.org/property/company",
    "predicate2_mention": "company",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "productions",
    "entity1_uri": "http://dbpedia.org/resource/Desilu_Productions",
    "entity1_mention": "Desilu Productions",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1360",
    "question": "Which engine's successor's predecessor is BMW M10?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/BMW_M10> . ?uri <http://dbpedia.org/ontology/successor> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Engine>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/predecessor",
    "predicate1_mention": "predecessor",
    "predicate2_uri": "http://dbpedia.org/ontology/successor",
    "predicate2_mention": "successor's",
    "type_uri": "http://dbpedia.org/ontology/Engine",
    "type_mention": "engine's",
    "entity1_uri": "http://dbpedia.org/resource/BMW_M10",
    "entity1_mention": "BMW M10",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1361",
    "question": "Which person's successor is Samsu iluna?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Samsu-iluna>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "http://dbpedia.org/ontology/Person",
    "predicate2_mention": "person's",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Samsu-iluna",
    "entity1_mention": "samsu iluna",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1362",
    "question": "To which region does the Miluk language belong?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Miluk_language> <http://dbpedia.org/property/region> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/region",
    "predicate1_mention": "region",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Miluk_language",
    "entity1_mention": "Miluk language",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1364",
    "question": "In which municipalities does the NYC housing authority own buildings?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/owningOrganisation> <http://dbpedia.org/resource/New_York_City_Housing_Authority> . ?x <http://dbpedia.org/ontology/municipality> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/owningOrganisation",
    "predicate1_mention": "own buildings",
    "predicate2_uri": "http://dbpedia.org/ontology/municipality",
    "predicate2_mention": "municipalities",
    "type_uri": "http://dbpedia.org/ontology/Building",
    "type_mention": "buildings",
    "entity1_uri": "http://dbpedia.org/resource/New_York_City_Housing_Authority",
    "entity1_mention": "NYC housing authority",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1366",
    "question": "Was andy worhol the director of the san diego surf?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/San_Diego_Surf_(film)> <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Andy_Warhol> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/cinematography",
    "predicate1_mention": "director",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/San_Diego_Surf_(film)",
    "entity1_mention": "san diego surf",
    "entity2_uri": "http://dbpedia.org/resource/Andy_Warhol",
    "entity2_mention": "andy worhol"
},
{
    "id": "1367",
    "question": "Name a person who was educated in Humes High School ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/education> <http://dbpedia.org/resource/Humes_High_School>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/education",
    "predicate1_mention": "educated",
    "predicate2_uri": "http://dbpedia.org/ontology/Person",
    "predicate2_mention": "person",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Humes_High_School",
    "entity1_mention": "Humes High School",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1368",
    "question": "Count the number of places where alumini of Edinburgh university have died?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/education> <http://dbpedia.org/resource/University_of_Edinburgh> . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/education",
    "predicate1_mention": "edinburgh",
    "predicate2_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate2_mention": "died",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/University_of_Edinburgh",
    "entity1_mention": "Edinburgh university",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1370",
    "question": "List the awards won by the writer of Face to Face ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Face_to_Face_(1976_film)> <http://dbpedia.org/property/writer> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/writer",
    "predicate1_mention": "writer",
    "predicate2_uri": "http://dbpedia.org/property/awards",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Face_to_Face_(1976_film)",
    "entity1_mention": "Face to Face",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1371",
    "question": "Whose tomb is in cities under Dane County of Wisconsin?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/territory> <http://dbpedia.org/resource/Dane_County,_Wisconsin> . ?uri <http://dbpedia.org/ontology/restingPlace> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/territory",
    "predicate1_mention": "cities",
    "predicate2_uri": "http://dbpedia.org/ontology/restingPlace",
    "predicate2_mention": "tomb",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Dane_County,_Wisconsin",
    "entity1_mention": "Dane County of Wisconsin",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1372",
    "question": "Does the Sicklefin lemon shark belong in the animal kingdom?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Sicklefin_lemon_shark> <http://dbpedia.org/ontology/kingdom> <http://dbpedia.org/resource/Animal> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/kingdom",
    "predicate1_mention": "kingdom",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sicklefin_lemon_shark",
    "entity1_mention": "Sicklefin lemon shark",
    "entity2_uri": "http://dbpedia.org/resource/Animal",
    "entity2_mention": "animal"
},
{
    "id": "1373",
    "question": "What is the local authority of Liverpool Institute High School for Boys ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Liverpool_Institute_High_School_for_Boys> <http://dbpedia.org/ontology/localAuthority> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/localAuthority",
    "predicate1_mention": "local authority",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Liverpool_Institute_High_School_for_Boys",
    "entity1_mention": "Liverpool Institute High School for Boys",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1374",
    "question": "What is the place of birth of the Kira Plastinina and Sergey Ryazansky",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kira_Plastinina> <http://dbpedia.org/property/placeOfBirth> ?uri. <http://dbpedia.org/resource/Sergey_Ryazansky> <http://dbpedia.org/property/placeOfBirth> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate1_mention": "place of birth",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kira_Plastinina",
    "entity1_mention": "Kira Plastinina",
    "entity2_uri": "http://dbpedia.org/resource/Sergey_Ryazansky",
    "entity2_mention": "Sergey Ryazansky"
},
{
    "id": "1375",
    "question": "Which of the continents that Digitalb worked in, was christine rolfes born in?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Digit-Alb> <http://dbpedia.org/ontology/regionServed> ?uri. <http://dbpedia.org/resource/Christine_Rolfes> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/regionServed",
    "predicate1_mention": "worked in",
    "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate2_mention": "born in",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Digit-Alb",
    "entity1_mention": "Digitalb",
    "entity2_uri": "http://dbpedia.org/resource/Christine_Rolfes",
    "entity2_mention": "christine rolfes"
},
{
    "id": "1376",
    "question": "Give me the places where people who worked in Church of England died in ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Church_of_England> . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/occupation",
    "predicate1_mention": "worked in",
    "predicate2_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate2_mention": "died in",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Church_of_England",
    "entity1_mention": "Church of England",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1377",
    "question": "What famous musicians play the remo?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Remo>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/instrument",
    "predicate1_mention": "play",
    "predicate2_uri": "http://dbpedia.org/ontology/MusicalArtist",
    "predicate2_mention": "musicians",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Remo",
    "entity1_mention": "remo",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1378",
    "question": "What belongs to the families of Buccinidae and Buccinoidea?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Buccinidae> . ?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Buccinoidea> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/family",
    "predicate1_mention": "families",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Buccinidae",
    "entity1_mention": "buccinidae",
    "entity2_uri": "http://dbpedia.org/resource/Buccinoidea",
    "entity2_mention": "buccinoidea"
},
{
    "id": "1379",
    "question": "List the television shows whose network's executive officer is Steve Burke.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Steve_Burke_(businessman)> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/keyPerson",
    "predicate1_mention": "executive officer",
    "predicate2_uri": "http://dbpedia.org/ontology/network",
    "predicate2_mention": "network's",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television",
    "entity1_uri": "http://dbpedia.org/resource/Steve_Burke_(businessman)",
    "entity1_mention": "Steve Burke",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1380",
    "question": "List down all notable works of Neil Cross ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Neil_Cross> <http://dbpedia.org/ontology/notableWork> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/notableWork",
    "predicate1_mention": "notable works",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Neil_Cross",
    "entity1_mention": "Neil Cross",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1381",
    "question": "What is the largest city of the country which have an assembly of Plymouth Savoy?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Plymouth_Savoy> <http://dbpedia.org/ontology/assembly> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/assembly",
    "predicate1_mention": "assembly",
    "predicate2_uri": "http://dbpedia.org/ontology/largestCity",
    "predicate2_mention": "largest city",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Plymouth_Savoy",
    "entity1_mention": "plymouth savoy",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1382",
    "question": "Does nintendo have a division called Nintendo Entertainment Planning & Development?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Nintendo> <http://dbpedia.org/property/divisions> <http://dbpedia.org/resource/Nintendo_Entertainment_Planning_&_Development> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/divisions",
    "predicate1_mention": "division",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Nintendo",
    "entity1_mention": "nintendo",
    "entity2_uri": "http://dbpedia.org/resource/Nintendo_Entertainment_Planning_&_Development",
    "entity2_mention": "Nintendo Entertainment Planning & Development"
},
{
    "id": "1385",
    "question": "Was the Model K designed by Herny Ford?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ford_Model_K> <http://dbpedia.org/ontology/designCompany> <http://dbpedia.org/resource/Henry_Ford> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/designCompany",
    "predicate1_mention": "designed",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ford_Model_K",
    "entity1_mention": "the Model K",
    "entity2_uri": "http://dbpedia.org/resource/Henry_Ford",
    "entity2_mention": "Herny Ford"
},
{
    "id": "1386",
    "question": "Which local authority of Buckhurst Hill County High School is the palce of burial of Elizabeth Rhuddlan ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elizabeth_of_Rhuddlan> <http://dbpedia.org/property/placeOfBurial> ?uri. <http://dbpedia.org/resource/Buckhurst_Hill_County_High_School> <http://dbpedia.org/ontology/localAuthority> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/placeOfBurial",
    "predicate1_mention": "palce of burial",
    "predicate2_uri": "http://dbpedia.org/ontology/localAuthority",
    "predicate2_mention": "local authority",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Elizabeth_of_Rhuddlan",
    "entity1_mention": "elizabeth rhuddlan",
    "entity2_uri": "http://dbpedia.org/resource/Buckhurst_Hill_County_High_School",
    "entity2_mention": "Buckhurst Hill County High School"
},
{
    "id": "1387",
    "question": "Is Queen Latifah the narrator of Arctic Tale?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Arctic_Tale> <http://dbpedia.org/property/narrator> <http://dbpedia.org/resource/Queen_Latifah> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/narrator",
    "predicate1_mention": "narrator",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Arctic_Tale",
    "entity1_mention": "arctic tale",
    "entity2_uri": "http://dbpedia.org/resource/Queen_Latifah",
    "entity2_mention": "Queen Latifah"
},
{
    "id": "1389",
    "question": "List the outflows of the lake whose one of the outflows is Benu river ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/outflow> <http://dbpedia.org/resource/Benu\u00e9_River> . ?x <http://dbpedia.org/ontology/outflow> ?uri  . }",
    "sparql_id": "11",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/outflow",
    "predicate1_mention": "outflows",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Benu\u00e9_River",
    "entity1_mention": "Benu river",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1390",
    "question": "List the major shrines of the saints whose one of the shrine is St. Takla Haymanot's Church ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/majorShrine> <http://dbpedia.org/resource/St._Takla_Haymanot's_Church_(Alexandria)> . ?x <http://dbpedia.org/ontology/majorShrine> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Saint>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/majorShrine",
    "predicate1_mention": "major shrines",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Saint",
    "type_mention": "saints",
    "entity1_uri": "http://dbpedia.org/resource/St._Takla_Haymanot's_Church_(Alexandria)",
    "entity1_mention": "St. Takla Haymanot's Church",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1391",
    "question": "How many companies were founded in Dallas?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/Dallas>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/foundation",
    "predicate1_mention": "founded",
    "predicate2_uri": "http://dbpedia.org/ontology/Company",
    "predicate2_mention": "companies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Dallas",
    "entity1_mention": "dallas",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1392",
    "question": "What are the mammals whose phylum is Chordate?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/phylum> <http://dbpedia.org/resource/Chordate>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/phylum",
    "predicate1_mention": "phylum",
    "predicate2_uri": "http://dbpedia.org/ontology/Mammal",
    "predicate2_mention": "mammals",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Chordate",
    "entity1_mention": "chordate",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1393",
    "question": "What is the denomination of S. H. Kapadia ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/S._H._Kapadia> <http://dbpedia.org/property/religion> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/religion",
    "predicate1_mention": "denomination",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/S._H._Kapadia",
    "entity1_mention": "S. H. Kapadia",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1395",
    "question": "Charles Willing Byrd was the governor under which politician?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Charles_Willing_Byrd> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/governor",
    "predicate1_mention": "governor",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Charles_Willing_Byrd",
    "entity1_mention": "Charles Willing Byrd",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1397",
    "question": "Which state's largest city is Omaha?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Omaha,_Nebraska>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/largestCity",
    "predicate1_mention": "largest city",
    "predicate2_uri": "http://dbpedia.org/ontology/AdministrativeRegion",
    "predicate2_mention": "state's",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Omaha,_Nebraska",
    "entity1_mention": "omaha",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1398",
    "question": "In which wars has Steven Palazzo fought?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Steven_Palazzo> <http://dbpedia.org/property/battles> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/battles",
    "predicate1_mention": "wars",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Steven_Palazzo",
    "entity1_mention": "Steven Palazzo",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1399",
    "question": "Who all have been judges on CTV Network's shows?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/CTV_Television_Network> . ?x <http://dbpedia.org/property/judges> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/network",
    "predicate1_mention": "network's",
    "predicate2_uri": "http://dbpedia.org/property/judges",
    "predicate2_mention": "judges",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "shows",
    "entity1_uri": "http://dbpedia.org/resource/CTV_Television_Network",
    "entity1_mention": "CTV Network's",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1400",
    "question": "Which training center of William Anthony has also alumni named Philip W Pillsbury ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Anthony_(artist)> <http://dbpedia.org/property/training> ?uri. <http://dbpedia.org/resource/Philip_W._Pillsbury> <http://dbpedia.org/property/education> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/training",
    "predicate1_mention": "training",
    "predicate2_uri": "http://dbpedia.org/property/education",
    "predicate2_mention": "alumni",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/William_Anthony_(artist)",
    "entity1_mention": "william anthony",
    "entity2_uri": "http://dbpedia.org/resource/Philip_W._Pillsbury",
    "entity2_mention": "Philip W Pillsbury"
},
{
    "id": "1401",
    "question": "Which rivers end in Old Saybrook, Connecticut?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Old_Saybrook,_Connecticut> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/mouthMountain",
    "predicate1_mention": "rivers end in",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Old_Saybrook,_Connecticut",
    "entity1_mention": "Old Saybrook, Connecticut",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1402",
    "question": "List all the nicknames of the city which has Toru gingerbread as one of it ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Toru\u0144_gingerbread> . ?x <http://dbpedia.org/property/nickname> ?uri  . }",
    "sparql_id": "11",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/nickname",
    "predicate1_mention": "nicknames",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Toru\u0144_gingerbread",
    "entity1_mention": "Toru gingerbread",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1403",
    "question": "Which TV show's executive producer is Douglas Netter and composed by Stewart Copeland ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Douglas_Netter> . ?uri <http://dbpedia.org/property/composer> <http://dbpedia.org/resource/Stewart_Copeland>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/executiveProducer",
    "predicate1_mention": "executive producer",
    "predicate2_uri": "http://dbpedia.org/property/composer",
    "predicate2_mention": "composed",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "show's",
    "entity1_uri": "http://dbpedia.org/resource/Douglas_Netter",
    "entity1_mention": "douglas netter",
    "entity2_uri": "http://dbpedia.org/resource/Stewart_Copeland",
    "entity2_mention": "Stewart Copeland"
},
{
    "id": "1404",
    "question": "Name the television show whose network is TNT (TV channel) and Prime Time Entertainment Network?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/TNT_(TV_channel)> . ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/Prime_Time_Entertainment_Network>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/network",
    "predicate1_mention": "network",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television show",
    "entity1_uri": "http://dbpedia.org/resource/TNT_(TV_channel)",
    "entity1_mention": "TNT (TV channel)",
    "entity2_uri": "http://dbpedia.org/resource/Prime_Time_Entertainment_Network",
    "entity2_mention": "Prime Time Entertainment Network"
},
{
    "id": "1405",
    "question": "Where is the arena of WPC Dynamo Moscow situated?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WPC_Dynamo_Moscow> <http://dbpedia.org/property/arena> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/arena",
    "predicate1_mention": "arena",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/WPC_Dynamo_Moscow",
    "entity1_mention": "WPC Dynamo Moscow",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1406",
    "question": "Who was the writer of the novel Maniac Magee?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Maniac_Magee>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/notableworks",
    "predicate1_mention": "novel",
    "predicate2_uri": "http://dbpedia.org/ontology/Writer",
    "predicate2_mention": "writer",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Maniac_Magee",
    "entity1_mention": "maniac magee",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1407",
    "question": "Name the founders of the record labels whose one of the founders is Frank Rogers ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Frank_Rogers_(record_producer)> . ?x <http://dbpedia.org/property/founder> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RecordLabel>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/founder",
    "predicate1_mention": "founders",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/RecordLabel",
    "type_mention": "record",
    "entity1_uri": "http://dbpedia.org/resource/Frank_Rogers_(record_producer)",
    "entity1_mention": "Frank Rogers",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1408",
    "question": "What are some movies whose distributer's CEO is Ted Hartley?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Ted_Hartley> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/keyPeople",
    "predicate1_mention": "ceo",
    "predicate2_uri": "http://dbpedia.org/property/distributor",
    "predicate2_mention": "distributer's",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Ted_Hartley",
    "entity1_mention": "Ted Hartley",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1410",
    "question": "List the military branch of  Henry Hyde ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Henry_Hyde> <http://dbpedia.org/ontology/militaryBranch> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/militaryBranch",
    "predicate1_mention": "military branch",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Henry_Hyde",
    "entity1_mention": "henry hyde",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1411",
    "question": "Who is the developer of Montecito Inn ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Montecito_Inn> <http://dbpedia.org/property/developer> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/developer",
    "predicate1_mention": "developer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Montecito_Inn",
    "entity1_mention": "montecito inn",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1412",
    "question": "How many artists' works are in Muse d'Orsay?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/museum> <http://dbpedia.org/resource/Mus\u00e9e_d'Orsay> . ?x <http://dbpedia.org/property/artist> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/museum",
    "predicate1_mention": "muse",
    "predicate2_uri": "http://dbpedia.org/property/artist",
    "predicate2_mention": "artists'",
    "type_uri": "http://dbpedia.org/ontology/Artist",
    "type_mention": "artists'",
    "entity1_uri": "http://dbpedia.org/resource/Mus\u00e9e_d'Orsay",
    "entity1_mention": "Muse d'Orsay",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1413",
    "question": "In how many different places does Canal and River Trust own its assets?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/owner> <http://dbpedia.org/resource/Canal_&_River_Trust> . ?x <http://dbpedia.org/ontology/location> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/owner",
    "predicate1_mention": "own",
    "predicate2_uri": "http://dbpedia.org/ontology/location",
    "predicate2_mention": "places",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Canal_&_River_Trust",
    "entity1_mention": "Canal and River Trust",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1414",
    "question": "which planet was discovered by Urbain Le Verrier?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/discoverer> <http://dbpedia.org/resource/Urbain_Le_Verrier> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/discoverer",
    "predicate1_mention": "discovered",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Urbain_Le_Verrier",
    "entity1_mention": "Urbain Le Verrier",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1415",
    "question": "Where is the stadium of west Papus football team ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/West_Papua_football_team> <http://dbpedia.org/ontology/stadium> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/stadium",
    "predicate1_mention": "stadium",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/West_Papua_football_team",
    "entity1_mention": "west papus football team",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1416",
    "question": "Who are some authoritative persons on the matter of Megabalanus concinnus?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Megabalanus_concinnus> <http://dbpedia.org/ontology/binomialAuthority> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/binomialAuthority",
    "predicate1_mention": "authoritative",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Megabalanus_concinnus",
    "entity1_mention": "megabalanus concinnus",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1417",
    "question": "Who is the father of Barbara Ann Crancer?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Barbara_Ann_Crancer>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/child",
    "predicate1_mention": "father",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Barbara_Ann_Crancer",
    "entity1_mention": "Barbara Ann Crancer",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1418",
    "question": "Whose music composer is signed up with Sony Music Entertainment?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Sony_Music_Entertainment> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/label",
    "predicate1_mention": "signed up",
    "predicate2_uri": "http://dbpedia.org/ontology/musicComposer",
    "predicate2_mention": "music composer",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sony_Music_Entertainment",
    "entity1_mention": "Sony Music Entertainment",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1419",
    "question": "What are some given names for males?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/gender> <http://dbpedia.org/resource/Male> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/gender",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Male",
    "entity1_mention": "males",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1420",
    "question": "Which famous person is born in Marlboro Township, New Jersey?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/homeTown> <http://dbpedia.org/resource/Marlboro_Township,_New_Jersey>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/homeTown",
    "predicate1_mention": "is born in",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Marlboro_Township,_New_Jersey",
    "entity1_mention": "Marlboro Township, New Jersey",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1421",
    "question": "Name the parent company of Ford Falcon Cobra ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Falcon_Cobra> <http://dbpedia.org/ontology/parentCompany> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/parentCompany",
    "predicate1_mention": "parent company",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ford_Falcon_Cobra",
    "entity1_mention": "Ford Falcon Cobra",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1422",
    "question": "Saores de costa built a bridge over which river?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/builder> <http://dbpedia.org/resource/Soares_da_Costa> . ?x <http://dbpedia.org/ontology/crosses> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/builder",
    "predicate1_mention": "built",
    "predicate2_uri": "http://dbpedia.org/ontology/crosses",
    "predicate2_mention": "costa",
    "type_uri": "http://dbpedia.org/ontology/Bridge",
    "type_mention": "bridge",
    "entity1_uri": "http://dbpedia.org/resource/Soares_da_Costa",
    "entity1_mention": "Saores de costa",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1423",
    "question": "Where is the radio broadcasted in, whose sister station is CKFM-FM?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/sisterStation> <http://dbpedia.org/resource/CKFM-FM> . ?x <http://dbpedia.org/ontology/broadcastArea> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/sisterStation",
    "predicate1_mention": "sister station",
    "predicate2_uri": "http://dbpedia.org/ontology/broadcastArea",
    "predicate2_mention": "broadcasted",
    "type_uri": "http://dbpedia.org/ontology/RadioStation",
    "type_mention": "radio broadcasted",
    "entity1_uri": "http://dbpedia.org/resource/CKFM-FM",
    "entity1_mention": "ckfm-fm",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1424",
    "question": "Does A foreign policy of freedom belong to the genre Politics?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/A_Foreign_Policy_of_Freedom> <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Politics> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/literaryGenre",
    "predicate1_mention": "genre",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/A_Foreign_Policy_of_Freedom",
    "entity1_mention": "A foreign policy of freedom",
    "entity2_uri": "http://dbpedia.org/resource/Politics",
    "entity2_mention": "politics"
},
{
    "id": "1425",
    "question": "Chestnut colored horses have won which races?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/colour> <http://dbpedia.org/resource/Chestnut_(coat)> . ?x <http://dbpedia.org/ontology/honours> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/colour",
    "predicate1_mention": "colored",
    "predicate2_uri": "http://dbpedia.org/ontology/honours",
    "predicate2_mention": "won",
    "type_uri": "http://dbpedia.org/ontology/Horse",
    "type_mention": "horses",
    "entity1_uri": "http://dbpedia.org/resource/Chestnut_(coat)",
    "entity1_mention": "chestnut",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1426",
    "question": "For which common president did Jim Sasser and Mike McCurry work?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jim_Sasser> <http://dbpedia.org/ontology/president> ?uri. <http://dbpedia.org/resource/Mike_McCurry_(press_secretary)> <http://dbpedia.org/ontology/president> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/president",
    "predicate1_mention": "president",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jim_Sasser",
    "entity1_mention": "Jim Sasser",
    "entity2_uri": "http://dbpedia.org/resource/Mike_McCurry_(press_secretary)",
    "entity2_mention": "Mike McCurry"
},
{
    "id": "1427",
    "question": "Of how many battles is Chickasaw Campaign of 1736 consisted?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chickasaw_Campaign_of_1736> <http://dbpedia.org/property/combatant> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/combatant",
    "predicate1_mention": "battles",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Chickasaw_Campaign_of_1736",
    "entity1_mention": "Chickasaw Campaign of 1736",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1428",
    "question": "Jerry Bock's musicals has been adapted from how many things?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Jerry_Bock> . ?x <http://dbpedia.org/ontology/basedOn> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/music",
    "predicate1_mention": "musicals",
    "predicate2_uri": "http://dbpedia.org/ontology/basedOn",
    "predicate2_mention": "been",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jerry_Bock",
    "entity1_mention": "Jerry Bock's",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1429",
    "question": "In what group Joe Jonas and Kevin Jonas were previously involved?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Joe_Jonas> . ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Kevin_Jonas> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/pastMembers",
    "predicate1_mention": "previously",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Group",
    "type_mention": "group",
    "entity1_uri": "http://dbpedia.org/resource/Joe_Jonas",
    "entity1_mention": "Joe Jonas",
    "entity2_uri": "http://dbpedia.org/resource/Kevin_Jonas",
    "entity2_mention": "kevin jonas"
},
{
    "id": "1430",
    "question": "What is the birth place of the children of Miguel Garca Granados ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Miguel_Garc\u00eda_Granados> <http://dbpedia.org/property/children> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/children",
    "predicate1_mention": "children",
    "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate2_mention": "birth place",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Miguel_Garc\u00eda_Granados",
    "entity1_mention": "Miguel Garca Granados",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1431",
    "question": "Titus software publishes which genre of games?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/publisher> <http://dbpedia.org/resource/Titus_Software> . ?x <http://dbpedia.org/ontology/genre> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/publisher",
    "predicate1_mention": "publishes",
    "predicate2_uri": "http://dbpedia.org/ontology/genre",
    "predicate2_mention": "genre",
    "type_uri": "http://dbpedia.org/ontology/VideoGame",
    "type_mention": "games",
    "entity1_uri": "http://dbpedia.org/resource/Titus_Software",
    "entity1_mention": "Titus software",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1432",
    "question": "Who are the spouse of the parents of Kimberly Stewart?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kimberly_Stewart> <http://dbpedia.org/ontology/parent> ?x . ?x <http://dbpedia.org/ontology/spouse> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/parent",
    "predicate1_mention": "parents",
    "predicate2_uri": "http://dbpedia.org/ontology/spouse",
    "predicate2_mention": "spouse",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kimberly_Stewart",
    "entity1_mention": "kimberly stewart",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1433",
    "question": "What academic discipline of the Journal of Cerebral Blood Flow & Metabolism is also the record label of the Double Diamond (album)?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_&_Metabolism> <http://dbpedia.org/ontology/academicDiscipline> ?uri. <http://dbpedia.org/resource/Double_Diamond_(album)> <http://dbpedia.org/ontology/recordLabel> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/academicDiscipline",
    "predicate1_mention": "academic discipline",
    "predicate2_uri": "http://dbpedia.org/ontology/recordLabel",
    "predicate2_mention": "record label",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_&_Metabolism",
    "entity1_mention": "Journal of Cerebral Blood Flow & Metabolism",
    "entity2_uri": "http://dbpedia.org/resource/Double_Diamond_(album)",
    "entity2_mention": "Double Diamond (album)"
},
{
    "id": "1434",
    "question": "Where were Micheal Santos and Wendy Jaquet born?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_G._Santos> <http://dbpedia.org/ontology/birthPlace> ?uri. <http://dbpedia.org/resource/Wendy_Jaquet> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate1_mention": "born",
    "predicate2_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate2_mention": "Where",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Michael_G._Santos",
    "entity1_mention": "Micheal Santos",
    "entity2_uri": "http://dbpedia.org/resource/Wendy_Jaquet",
    "entity2_mention": "Wendy Jaquet"
},
{
    "id": "1435",
    "question": "Count the number of fileds of the scientist whose one of the interest is Chinese poetry ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/fields> <http://dbpedia.org/resource/Chinese_poetry> . ?x <http://dbpedia.org/property/fields> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/fields",
    "predicate1_mention": "fileds",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Chinese_poetry",
    "entity1_mention": "chinese poetry",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1436",
    "question": "What are the houses of Parliament Security Services ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Parliament_Security_Services> <http://dbpedia.org/property/houses> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/houses",
    "predicate1_mention": "houses",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Parliament_Security_Services",
    "entity1_mention": "Parliament Security Services",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1437",
    "question": "Who is the governor of Carl McCall ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Carl_McCall> <http://dbpedia.org/ontology/governor> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/governor",
    "predicate1_mention": "governor",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Carl_McCall",
    "entity1_mention": "Carl McCall",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1438",
    "question": "What is the nickname of the city where Tuba Dei lives?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tuba_Dei> <http://dbpedia.org/property/city> ?x . ?x <http://dbpedia.org/property/nickname> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/city",
    "predicate1_mention": "city",
    "predicate2_uri": "http://dbpedia.org/property/nickname",
    "predicate2_mention": "nickname",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tuba_Dei",
    "entity1_mention": "tuba dei",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1439",
    "question": "What borders the valley which falls under Lake County, Oregon?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/municipality> <http://dbpedia.org/resource/Lake_County,_Oregon> . ?x <http://dbpedia.org/ontology/border> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Valley>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/municipality",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/border",
    "predicate2_mention": "borders",
    "type_uri": "http://dbpedia.org/ontology/Valley",
    "type_mention": "valley",
    "entity1_uri": "http://dbpedia.org/resource/Lake_County,_Oregon",
    "entity1_mention": "Lake County, Oregon",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1440",
    "question": "Name the television show created by CE Webber and also has actor named Companion?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Companion_(Doctor_Who)> . ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/C._E._Webber>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/starring",
    "predicate1_mention": "actor",
    "predicate2_uri": "http://dbpedia.org/ontology/creator",
    "predicate2_mention": "created by",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television show",
    "entity1_uri": "http://dbpedia.org/resource/Companion_(Doctor_Who)",
    "entity1_mention": "companion",
    "entity2_uri": "http://dbpedia.org/resource/C._E._Webber",
    "entity2_mention": "CE Webber"
},
{
    "id": "1441",
    "question": "Which company founded in New Mexico manufactures Visual Studio ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/New_Mexico> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Microsoft_Visual_Studio>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/foundation",
    "predicate1_mention": "founded",
    "predicate2_uri": "http://dbpedia.org/property/products",
    "predicate2_mention": "manufactures",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "company",
    "entity1_uri": "http://dbpedia.org/resource/New_Mexico",
    "entity1_mention": "New Mexico",
    "entity2_uri": "http://dbpedia.org/resource/Microsoft_Visual_Studio",
    "entity2_mention": "visual studio"
},
{
    "id": "1442",
    "question": "List the mascot of the universities which are a part of  National Collegiate Athletic Association.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/athletics> <http://dbpedia.org/resource/National_Collegiate_Athletic_Association> . ?x <http://dbpedia.org/property/mascot> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/athletics",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/mascot",
    "predicate2_mention": "mascot",
    "type_uri": "http://dbpedia.org/ontology/University",
    "type_mention": "universities",
    "entity1_uri": "http://dbpedia.org/resource/National_Collegiate_Athletic_Association",
    "entity1_mention": "National Collegiate Athletic Association",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1443",
    "question": "Which developer of Go was also the predecssor of X compnay ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Go_(programming_language)> <http://dbpedia.org/ontology/developer> ?uri. <http://dbpedia.org/resource/X_(company)> <http://dbpedia.org/property/predecessor> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/developer",
    "predicate1_mention": "developer",
    "predicate2_uri": "http://dbpedia.org/property/predecessor",
    "predicate2_mention": "predecssor",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Go_(programming_language)",
    "entity1_mention": "Go",
    "entity2_uri": "http://dbpedia.org/resource/X_(company)",
    "entity2_mention": "X compnay"
},
{
    "id": "1444",
    "question": "What sports are played at universities affiliated by States Colleges and Universities athletic association?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/affiliation> <http://dbpedia.org/resource/State_Colleges_and_Universities_Athletic_Association> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/affiliation",
    "predicate1_mention": "affiliated",
    "predicate2_uri": "http://dbpedia.org/ontology/sport",
    "predicate2_mention": "sports",
    "type_uri": "http://dbpedia.org/ontology/University",
    "type_mention": "universities",
    "entity1_uri": "http://dbpedia.org/resource/State_Colleges_and_Universities_Athletic_Association",
    "entity1_mention": "States Colleges and Universities athletic association",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1446",
    "question": "What is that river whose source gets water from the Shannon cave?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/inflow> <http://dbpedia.org/resource/Shannon_Cave> . ?uri <http://dbpedia.org/ontology/source> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/inflow",
    "predicate1_mention": "gets water from",
    "predicate2_uri": "http://dbpedia.org/ontology/source",
    "predicate2_mention": "source",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "river",
    "entity1_uri": "http://dbpedia.org/resource/Shannon_Cave",
    "entity1_mention": "shannon cave",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1447",
    "question": "What is the official residence of Fergus McMaster ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fergus_McMaster> <http://dbpedia.org/ontology/residence> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/residence",
    "predicate1_mention": "official residence",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Fergus_McMaster",
    "entity1_mention": "Fergus McMaster",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1448",
    "question": "Which university has chancellor as Nicholas S. Zeppos?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/chancellor> <http://dbpedia.org/resource/Nicholas_S._Zeppos>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/chancellor",
    "predicate1_mention": "chancellor",
    "predicate2_uri": "http://dbpedia.org/ontology/University",
    "predicate2_mention": "university",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Nicholas_S._Zeppos",
    "entity1_mention": "Nicholas S. Zeppos",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1449",
    "question": "What is the total number of  builder of the military structures whose builder is also United States?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/builder> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/builder> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/builder",
    "predicate1_mention": "builder",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_States",
    "entity1_mention": "united states",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1450",
    "question": "How many countries have people participated in the Excelsior Stakes?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/race> <http://dbpedia.org/resource/Excelsior_Stakes> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/race",
    "predicate1_mention": "participated",
    "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Excelsior_Stakes",
    "entity1_mention": "excelsior stakes",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1451",
    "question": "List the associated musical artist of the current members of Al Bano and Romina Power?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Al_Bano_and_Romina_Power> <http://dbpedia.org/property/currentMembers> ?x . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/currentMembers",
    "predicate1_mention": "current members",
    "predicate2_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
    "predicate2_mention": "associated musical artist",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Al_Bano_and_Romina_Power",
    "entity1_mention": "Al Bano and Romina Power",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1452",
    "question": "List some people who were opponents of someone who was died by hanging? ",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/deathCause> <http://dbpedia.org/resource/Hanging> . ?x <http://dbpedia.org/ontology/opponent> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/deathCause",
    "predicate1_mention": "died by",
    "predicate2_uri": "http://dbpedia.org/ontology/opponent",
    "predicate2_mention": "opponents",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Hanging",
    "entity1_mention": "hanging",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1453",
    "question": "What team does John McGeever play for, which also employed Ben Dreith at some time?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ben_Dreith> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/John_McGeever> <http://dbpedia.org/ontology/team> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/occupation",
    "predicate1_mention": "employed",
    "predicate2_uri": "http://dbpedia.org/ontology/team",
    "predicate2_mention": "team",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ben_Dreith",
    "entity1_mention": "Ben Dreith",
    "entity2_uri": "http://dbpedia.org/resource/John_McGeever",
    "entity2_mention": "John McGeever"
},
{
    "id": "1454",
    "question": "Name the company which produces Marionette and has key person as Edwin catmull ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Marionette_(software)> . ?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Edwin_Catmull>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/products",
    "predicate1_mention": "produces",
    "predicate2_uri": "http://dbpedia.org/property/keyPeople",
    "predicate2_mention": "key person",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "company",
    "entity1_uri": "http://dbpedia.org/resource/Marionette_(software)",
    "entity1_mention": "marionette",
    "entity2_uri": "http://dbpedia.org/resource/Edwin_Catmull",
    "entity2_mention": "Edwin catmull"
},
{
    "id": "1455",
    "question": "What is the total number of guests on the show whose theme music is Let me be your star?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Let_Me_Be_Your_Star> . ?x <http://dbpedia.org/property/guests> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/music",
    "predicate1_mention": "theme music",
    "predicate2_uri": "http://dbpedia.org/property/guests",
    "predicate2_mention": "guests",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Let_Me_Be_Your_Star",
    "entity1_mention": "Let me be your star",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1456",
    "question": "Name the home town of Rolando Gomez ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rolando_Gomez> <http://dbpedia.org/property/homeTown> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/homeTown",
    "predicate1_mention": "home town",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Rolando_Gomez",
    "entity1_mention": "rolando gomez",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1457",
    "question": "Was Noko a band member of Luxuria?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Luxuria_(band)> <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Noko> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/formerBandMember",
    "predicate1_mention": "band member",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Luxuria_(band)",
    "entity1_mention": "luxuria",
    "entity2_uri": "http://dbpedia.org/resource/Noko",
    "entity2_mention": "noko"
},
{
    "id": "1458",
    "question": "In which cities can i find drinks similar to the IBC root beer?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/IBC_Root_Beer> . ?x <http://dbpedia.org/property/locationCity> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Beverage>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/related",
    "predicate1_mention": "similar to",
    "predicate2_uri": "http://dbpedia.org/property/locationCity",
    "predicate2_mention": "cities",
    "type_uri": "http://dbpedia.org/ontology/Beverage",
    "type_mention": "drinks",
    "entity1_uri": "http://dbpedia.org/resource/IBC_Root_Beer",
    "entity1_mention": "IBC root beer",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1459",
    "question": "Name some basketball players whose team is coached by Fred Hoiberg?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Fred_Hoiberg> . ?uri <http://dbpedia.org/property/team> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/coach",
    "predicate1_mention": "coached by",
    "predicate2_uri": "http://dbpedia.org/property/team",
    "predicate2_mention": "team",
    "type_uri": "http://dbpedia.org/ontology/BasketballPlayer",
    "type_mention": "basketball players",
    "entity1_uri": "http://dbpedia.org/resource/Fred_Hoiberg",
    "entity1_mention": "Fred Hoiberg",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1461",
    "question": "Who is the prime minister that Michael Jeffery served?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Jeffery> <http://dbpedia.org/property/primeminister> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/primeminister",
    "predicate1_mention": "prime minister",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Michael_Jeffery",
    "entity1_mention": "michael jeffery",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1462",
    "question": "What are the movies whose music is composed by Vangelis?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Vangelis>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/musicComposer",
    "predicate1_mention": "composed by",
    "predicate2_uri": "http://dbpedia.org/ontology/Film",
    "predicate2_mention": "movies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Vangelis",
    "entity1_mention": "vangelis",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1463",
    "question": "Was Walt Disney the cinematographer of Mickey's Mellerdrammer?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mickey's_Mellerdrammer> <http://dbpedia.org/property/cinematography> <http://dbpedia.org/resource/Walt_Disney> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/cinematography",
    "predicate1_mention": "cinematographer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mickey's_Mellerdrammer",
    "entity1_mention": "Mickey's Mellerdrammer",
    "entity2_uri": "http://dbpedia.org/resource/Walt_Disney",
    "entity2_mention": "Walt Disney"
},
{
    "id": "1464",
    "question": "Who is the operator of Rainbow Warrior (1955) ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rainbow_Warrior_(1955)> <http://dbpedia.org/ontology/operator> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/operator",
    "predicate1_mention": "operator",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Rainbow_Warrior_(1955)",
    "entity1_mention": "Rainbow Warrior (1955)",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1465",
    "question": "To which sports team is Aubie the mascot?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mascot> <http://dbpedia.org/resource/Aubie>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/mascot",
    "predicate1_mention": "mascot",
    "predicate2_uri": "http://dbpedia.org/ontology/SportsTeam",
    "predicate2_mention": "sports team",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Aubie",
    "entity1_mention": "aubie",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1466",
    "question": "Which series are Lennier and Londo Mollari both from?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lennier> <http://dbpedia.org/ontology/series> ?uri. <http://dbpedia.org/resource/Londo_Mollari> <http://dbpedia.org/ontology/series> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/series",
    "predicate1_mention": "series",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lennier",
    "entity1_mention": "lennier",
    "entity2_uri": "http://dbpedia.org/resource/Londo_Mollari",
    "entity2_mention": "Londo Mollari"
},
{
    "id": "1467",
    "question": "Who acted in the movies whose music is composed by Walter Scharf?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Walter_Scharf> . ?x <http://dbpedia.org/property/artist> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/musicComposer",
    "predicate1_mention": "composed by",
    "predicate2_uri": "http://dbpedia.org/property/artist",
    "predicate2_mention": "acted",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Walter_Scharf",
    "entity1_mention": "walter scharf",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1468",
    "question": "Graduates of Somerville College have been in how many political parties?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Somerville_College,_Oxford> . ?x <http://dbpedia.org/ontology/party> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate1_mention": "graduates",
    "predicate2_uri": "http://dbpedia.org/ontology/party",
    "predicate2_mention": "parties",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Somerville_College,_Oxford",
    "entity1_mention": "somerville college",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1469",
    "question": "What are some primates?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Primate>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/order",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Primate",
    "entity1_mention": "primates",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1471",
    "question": "How many companies were founded in Denton, texas?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/part> <http://dbpedia.org/resource/Denton_County,_Texas> . ?uri <http://dbpedia.org/ontology/foundationPlace> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/part",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/foundationPlace",
    "predicate2_mention": "founded in",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "companies",
    "entity1_uri": "http://dbpedia.org/resource/Denton_County,_Texas",
    "entity1_mention": "Denton, texas",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1472",
    "question": "Count the different causes of death of Christians.",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Christianity> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/religion",
    "predicate1_mention": ".",
    "predicate2_uri": "http://dbpedia.org/ontology/deathCause",
    "predicate2_mention": "causes of death",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Christianity",
    "entity1_mention": "Christians",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1473",
    "question": "List all the teams which have someone who played their first game for the Yankees?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/debutteam> <http://dbpedia.org/resource/New_York_Yankees> . ?x <http://dbpedia.org/ontology/team> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/debutteam",
    "predicate1_mention": "played their first game for",
    "predicate2_uri": "http://dbpedia.org/ontology/team",
    "predicate2_mention": "teams",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/New_York_Yankees",
    "entity1_mention": "yankees",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1474",
    "question": "Who is the office holder whose deputy was Andrew Peacock and predecessor was Alexander Downer?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Andrew_Peacock> . ?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Alexander_Downer>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/deputy",
    "predicate1_mention": "deputy",
    "predicate2_uri": "http://dbpedia.org/ontology/predecessor",
    "predicate2_mention": "predecessor",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "office holder",
    "entity1_uri": "http://dbpedia.org/resource/Andrew_Peacock",
    "entity1_mention": "Andrew Peacock",
    "entity2_uri": "http://dbpedia.org/resource/Alexander_Downer",
    "entity2_mention": "alexander downer"
},
{
    "id": "1475",
    "question": "Who was the editor of the newspaper owned by the the UK government?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/owners> <http://dbpedia.org/resource/Government_of_the_United_Kingdom> . ?x <http://dbpedia.org/property/editor> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/owners",
    "predicate1_mention": "owned",
    "predicate2_uri": "http://dbpedia.org/property/editor",
    "predicate2_mention": "editor",
    "type_uri": "http://dbpedia.org/ontology/Newspaper",
    "type_mention": "newspaper",
    "entity1_uri": "http://dbpedia.org/resource/Government_of_the_United_Kingdom",
    "entity1_mention": "the the UK government",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1476",
    "question": "Name the TV show whose cast member is Companion (Doctor Who) and is related to The Sarah Jane Adventures?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Companion_(Doctor_Who)> . ?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/The_Sarah_Jane_Adventures>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/starring",
    "predicate1_mention": "cast member",
    "predicate2_uri": "http://dbpedia.org/ontology/related",
    "predicate2_mention": "related",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "TV show",
    "entity1_uri": "http://dbpedia.org/resource/Companion_(Doctor_Who)",
    "entity1_mention": "companion (doctor who)",
    "entity2_uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures",
    "entity2_mention": "The Sarah Jane Adventures"
},
{
    "id": "1477",
    "question": "List all the collaborators of the artist which has collaborated with sanremo Music Festival ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sanremo_Music_Festival> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
    "predicate1_mention": "collaborators of the artist",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Artist",
    "type_mention": "artist",
    "entity1_uri": "http://dbpedia.org/resource/Sanremo_Music_Festival",
    "entity1_mention": "sanremo Music Festival",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1479",
    "question": "In which sects were the aristocrats included, who were buried in Westminister abbey?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/majorShrine> <http://dbpedia.org/resource/Westminster_Abbey> . ?x <http://dbpedia.org/property/veneratedIn> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/majorShrine",
    "predicate1_mention": "sects",
    "predicate2_uri": "http://dbpedia.org/property/veneratedIn",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Royalty",
    "type_mention": "aristocrats",
    "entity1_uri": "http://dbpedia.org/resource/Westminster_Abbey",
    "entity1_mention": "Westminister abbey",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1480",
    "question": "Which baseball team is owned by Robert Nutting?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Robert_Nutting>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballTeam>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/owner",
    "predicate1_mention": "owned",
    "predicate2_uri": "http://dbpedia.org/ontology/BaseballTeam",
    "predicate2_mention": "baseball team",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Robert_Nutting",
    "entity1_mention": "Robert Nutting",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1481",
    "question": "Which sports are played typically in private schools?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/schooltype> <http://dbpedia.org/resource/Private_school> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/schooltype",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/sport",
    "predicate2_mention": "sports",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Private_school",
    "entity1_mention": "private schools",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1482",
    "question": "Name the  people whose residence is Beverly Hills, California?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Beverly_Hills,_California>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/residence",
    "predicate1_mention": "residence",
    "predicate2_uri": "http://dbpedia.org/ontology/Person",
    "predicate2_mention": "people",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Beverly_Hills,_California",
    "entity1_mention": "Beverly Hills, California",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1483",
    "question": "Was Marie Curie a doctoral student of Henri Becquerel?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Henri_Becquerel> <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/Marie_Curie> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/doctoralStudent",
    "predicate1_mention": "doctoral student",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Henri_Becquerel",
    "entity1_mention": "Henri Becquerel",
    "entity2_uri": "http://dbpedia.org/resource/Marie_Curie",
    "entity2_mention": "marie curie"
},
{
    "id": "1485",
    "question": "What are some other services of the company whose service is Onedrive?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/service> <http://dbpedia.org/resource/OneDrive> . ?x <http://dbpedia.org/property/services> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/service",
    "predicate1_mention": "service",
    "predicate2_uri": "http://dbpedia.org/property/services",
    "predicate2_mention": "services",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "company",
    "entity1_uri": "http://dbpedia.org/resource/OneDrive",
    "entity1_mention": "onedrive",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1486",
    "question": "Where does the railway tracks start, which ends in Kazan?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/routeEnd> <http://dbpedia.org/resource/Kazan> . ?x <http://dbpedia.org/ontology/routeStart> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RailwayLine>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/routeEnd",
    "predicate1_mention": "ends",
    "predicate2_uri": "http://dbpedia.org/ontology/routeStart",
    "predicate2_mention": "start",
    "type_uri": "http://dbpedia.org/ontology/RailwayLine",
    "type_mention": "railway",
    "entity1_uri": "http://dbpedia.org/resource/Kazan",
    "entity1_mention": "kazan",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1487",
    "question": "Give me a count of all ice hockey players whose teams are headcoached by John Tortorella?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/headCoach> <http://dbpedia.org/resource/John_Tortorella> . ?uri <http://dbpedia.org/ontology/team> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/IceHockeyPlayer>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/headCoach",
    "predicate1_mention": "headcoached",
    "predicate2_uri": "http://dbpedia.org/ontology/team",
    "predicate2_mention": "teams",
    "type_uri": "http://dbpedia.org/ontology/IceHockeyPlayer",
    "type_mention": "ice hockey players",
    "entity1_uri": "http://dbpedia.org/resource/John_Tortorella",
    "entity1_mention": "John Tortorella",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1488",
    "question": "What are some important people in NGOs headed by Donna Shalala?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Donna_Shalala> . ?x <http://dbpedia.org/property/keyPeople> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Non-ProfitOrganisation>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/keyPerson",
    "predicate1_mention": "important people",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Non-ProfitOrganisation",
    "type_mention": "NGOs",
    "entity1_uri": "http://dbpedia.org/resource/Donna_Shalala",
    "entity1_mention": "Donna Shalala",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1489",
    "question": "Name all the venues of the convention which has also been hosted in San Diego Convention ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/venue> <http://dbpedia.org/resource/San_Diego_Convention_Center> . ?x <http://dbpedia.org/property/venue> ?uri  . }",
    "sparql_id": "11",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/venue",
    "predicate1_mention": "venues",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/San_Diego_Convention_Center",
    "entity1_mention": "san diego convention",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1490",
    "question": "Where is the county seat of King County, Washington?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/King_County,_Washington> <http://dbpedia.org/ontology/countySeat> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/countySeat",
    "predicate1_mention": "county seat",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/King_County,_Washington",
    "entity1_mention": "King County, Washington",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1491",
    "question": "How many relatives are there of the people who died in Germany?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Germany> . ?x <http://dbpedia.org/ontology/relation> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/placeOfDeath",
    "predicate1_mention": "died in",
    "predicate2_uri": "http://dbpedia.org/ontology/relation",
    "predicate2_mention": "relatives",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Germany",
    "entity1_mention": "germany",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1494",
    "question": "What band had  Nick Jonas and Kevin Jonas as former members ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Nick_Jonas> . ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Kevin_Jonas> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/pastMembers",
    "predicate1_mention": "former members",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Band",
    "type_mention": "band",
    "entity1_uri": "http://dbpedia.org/resource/Nick_Jonas",
    "entity1_mention": "Nick Jonas",
    "entity2_uri": "http://dbpedia.org/resource/Kevin_Jonas",
    "entity2_mention": "kevin jonas"
},
{
    "id": "1496",
    "question": "Give me the characters who last appeared in Star Wars Episode 3",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/last> <http://dbpedia.org/resource/Star_Wars:_Episode_III_\u2013_Revenge_of_the_Sith> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/last",
    "predicate1_mention": "last",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Star_Wars:_Episode_III_\u2013_Revenge_of_the_Sith",
    "entity1_mention": "star wars episode 3",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1497",
    "question": "List of people who were the first one to ascend a mountain in the Cathedral range?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/mountainRange> <http://dbpedia.org/resource/Cathedral_Range> . ?x <http://dbpedia.org/ontology/firstAscentPerson> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/mountainRange",
    "predicate1_mention": "mountain",
    "predicate2_uri": "http://dbpedia.org/ontology/firstAscentPerson",
    "predicate2_mention": "first one to ascend",
    "type_uri": "http://dbpedia.org/ontology/Mountain",
    "type_mention": "mountain",
    "entity1_uri": "http://dbpedia.org/resource/Cathedral_Range",
    "entity1_mention": "cathedral range",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1498",
    "question": "What is the city nearest to the islands in the Northwestern Hawaiian Islands?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/archipelago> <http://dbpedia.org/resource/Northwestern_Hawaiian_Islands> . ?x <http://dbpedia.org/property/nearestCity> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Island>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/archipelago",
    "predicate1_mention": "islands",
    "predicate2_uri": "http://dbpedia.org/property/nearestCity",
    "predicate2_mention": "city nearest",
    "type_uri": "http://dbpedia.org/ontology/Island",
    "type_mention": "islands",
    "entity1_uri": "http://dbpedia.org/resource/Northwestern_Hawaiian_Islands",
    "entity1_mention": "northwestern hawaiian islands",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1499",
    "question": "Employees of Ottawa Citizen have come from which towns?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/Ottawa_Citizen> . ?x <http://dbpedia.org/property/homeTown> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/employer",
    "predicate1_mention": "employees",
    "predicate2_uri": "http://dbpedia.org/property/homeTown",
    "predicate2_mention": "towns",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ottawa_Citizen",
    "entity1_mention": "Ottawa Citizen",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1501",
    "question": "How many movies did Stanley Kubrick direct?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Stanley_Kubrick>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/director",
    "predicate1_mention": "direct",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Stanley_Kubrick",
    "entity1_mention": "stanley kubrick",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1502",
    "question": "Name the televesion show which has artist named Christopher Franke ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Christopher_Franke>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/artist",
    "predicate1_mention": "artist",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "televesion show",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Christopher_Franke",
    "entity1_mention": "christopher franke",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1503",
    "question": "Where are the philosophers from, whose main work is on the matter of feminism in Canada?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/mainInterest> <http://dbpedia.org/resource/Feminism_in_Canada> . ?x <http://dbpedia.org/property/region> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Philosopher>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/mainInterest",
    "predicate1_mention": "main work",
    "predicate2_uri": "http://dbpedia.org/property/region",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Philosopher",
    "type_mention": "philosophers",
    "entity1_uri": "http://dbpedia.org/resource/Feminism_in_Canada",
    "entity1_mention": "feminism in Canada",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1504",
    "question": "In how many different places can I find Modern Architectural buildings?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/architecturalStyle> <http://dbpedia.org/resource/Modern_architecture> . ?x <http://dbpedia.org/property/address> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/architecturalStyle",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/address",
    "predicate2_mention": "places",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Modern_architecture",
    "entity1_mention": "Modern Architectural",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1505",
    "question": "Who is the President of the United World College of Costa Rica and United World Colleges ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_World_College_of_Costa_Rica> <http://dbpedia.org/property/president> ?uri. <http://dbpedia.org/resource/United_World_Colleges> <http://dbpedia.org/property/president> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/president",
    "predicate1_mention": "president",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_World_College_of_Costa_Rica",
    "entity1_mention": "United World College of Costa Rica",
    "entity2_uri": "http://dbpedia.org/resource/United_World_Colleges",
    "entity2_mention": "United World Colleges"
},
{
    "id": "1506",
    "question": "Which movie produced by Michael Deeley was distributed by Warner Bros ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Warner_Bros.> . ?uri <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Michael_Deeley>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/distributor",
    "predicate1_mention": "distributed by",
    "predicate2_uri": "http://dbpedia.org/property/producer",
    "predicate2_mention": "produced by",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movie",
    "entity1_uri": "http://dbpedia.org/resource/Warner_Bros.",
    "entity1_mention": "warner bros",
    "entity2_uri": "http://dbpedia.org/resource/Michael_Deeley",
    "entity2_mention": "michael deeley"
},
{
    "id": "1507",
    "question": "What are some musicians who have worked with Dean Ambrose?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dean_Ambrose>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
    "predicate1_mention": "musicians",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/MusicalArtist",
    "type_mention": "musicians",
    "entity1_uri": "http://dbpedia.org/resource/Dean_Ambrose",
    "entity1_mention": "Dean Ambrose",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1508",
    "question": "Who has had been the tenant of the stadium built by PCL construction firm?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/builder> <http://dbpedia.org/resource/PCL_Construction> . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/builder",
    "predicate1_mention": "built",
    "predicate2_uri": "http://dbpedia.org/ontology/tenant",
    "predicate2_mention": "tenant",
    "type_uri": "http://dbpedia.org/ontology/Stadium",
    "type_mention": "stadium",
    "entity1_uri": "http://dbpedia.org/resource/PCL_Construction",
    "entity1_mention": "PCL construction",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1509",
    "question": "For which team did Cam Plante and Doug Acomb both play atleast once?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cam_Plante> <http://dbpedia.org/property/playedFor> ?uri. <http://dbpedia.org/resource/Doug_Acomb> <http://dbpedia.org/property/playedFor> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/playedFor",
    "predicate1_mention": "play",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Cam_Plante",
    "entity1_mention": "Cam Plante",
    "entity2_uri": "http://dbpedia.org/resource/Doug_Acomb",
    "entity2_mention": "Doug Acomb"
},
{
    "id": "1510",
    "question": "What is the type of Vesak ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vesak> <http://dbpedia.org/ontology/type> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/type",
    "predicate1_mention": "type",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Vesak",
    "entity1_mention": "vesak",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1511",
    "question": "Which military personnel belong to the branch of Continental Army?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Continental_Army> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/militaryBranch",
    "predicate1_mention": "military",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Continental_Army",
    "entity1_mention": " continental army",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1512",
    "question": "Where did the president study, whose VP was Emilio Nez?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/vicePresident> <http://dbpedia.org/resource/Emilio_N\u00fa\u00f1ez> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/vicePresident",
    "predicate1_mention": "president",
    "predicate2_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate2_mention": "study",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Emilio_N\u00fa\u00f1ez",
    "entity1_mention": "Emilio Nez",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1513",
    "question": "What is the title of the successor of Kaulahea I ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kaulahea_I> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/property/title> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "http://dbpedia.org/property/title",
    "predicate2_mention": "title",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kaulahea_I",
    "entity1_mention": "Kaulahea I",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1514",
    "question": "In how many different places were the people born who are members of National Museum of Racing and Hall of Fame?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/honours> <http://dbpedia.org/resource/National_Museum_of_Racing_and_Hall_of_Fame> . ?x <http://dbpedia.org/property/birthPlace> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/honours",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/birthPlace",
    "predicate2_mention": "born",
    "type_uri": "http://dbpedia.org/ontology/Place",
    "type_mention": "places",
    "entity1_uri": "http://dbpedia.org/resource/National_Museum_of_Racing_and_Hall_of_Fame",
    "entity1_mention": "National Museum of Racing and Hall of Fame",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1515",
    "question": "Which military commander fought his battle at Fort Gadsen?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Fort_Gadsden>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/battle",
    "predicate1_mention": "battle",
    "predicate2_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "predicate2_mention": "military commander",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Fort_Gadsden",
    "entity1_mention": "Fort Gadsen",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1517",
    "question": "Which rivers start at the Brower's Spring?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Brower's_Spring> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/sourceMountain",
    "predicate1_mention": "start",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Brower's_Spring",
    "entity1_mention": "brower's spring",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1518",
    "question": "For which reasons have the ones born in Edinburgh, died?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Edinburgh> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate1_mention": "born in",
    "predicate2_uri": "http://dbpedia.org/ontology/deathCause",
    "predicate2_mention": "died",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Edinburgh",
    "entity1_mention": "Edinburgh",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1519",
    "question": "What games are played in Protestant schools?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/schooltype> <http://dbpedia.org/resource/Protestantism> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/schooltype",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/sport",
    "predicate2_mention": "games",
    "type_uri": "http://dbpedia.org/ontology/School",
    "type_mention": "schools",
    "entity1_uri": "http://dbpedia.org/resource/Protestantism",
    "entity1_mention": "protestant",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1520",
    "question": "Which religion is followed by people in the family of Meadow Sopranos?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/family> <http://dbpedia.org/resource/Meadow_Soprano> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/family",
    "predicate1_mention": "family",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religion",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Meadow_Soprano",
    "entity1_mention": "Meadow Sopranos",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1521",
    "question": "List the notable works of the writer of The Tony Randall Show ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Tony_Randall_Show> <http://dbpedia.org/property/writer> ?x . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/writer",
    "predicate1_mention": "writer",
    "predicate2_uri": "http://dbpedia.org/ontology/notableWork",
    "predicate2_mention": "notable works",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Tony_Randall_Show",
    "entity1_mention": "The Tony Randall Show",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1522",
    "question": "Which software uses windows as it's operating system and is written in C++ ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows> . ?uri <http://dbpedia.org/ontology/programmingLanguage> <http://dbpedia.org/resource/C++>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/operatingSystem",
    "predicate1_mention": "operating system",
    "predicate2_uri": "http://dbpedia.org/ontology/programmingLanguage",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Software",
    "type_mention": "software",
    "entity1_uri": "http://dbpedia.org/resource/Microsoft_Windows",
    "entity1_mention": "windows",
    "entity2_uri": "http://dbpedia.org/resource/C++",
    "entity2_mention": "c++"
},
{
    "id": "1523",
    "question": "Which draft team od Dale Mitchell is also the tenant of Master Card center ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dale_Mitchell_(ice_hockey)> <http://dbpedia.org/ontology/draftTeam> ?uri. <http://dbpedia.org/resource/MasterCard_Centre> <http://dbpedia.org/property/tenants> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/draftTeam",
    "predicate1_mention": "draft team",
    "predicate2_uri": "http://dbpedia.org/property/tenants",
    "predicate2_mention": "tenant",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Dale_Mitchell_(ice_hockey)",
    "entity1_mention": "Dale Mitchell",
    "entity2_uri": "http://dbpedia.org/resource/MasterCard_Centre",
    "entity2_mention": "Master Card center"
},
{
    "id": "1524",
    "question": "What prizes have been awarded to the relatives of Linn Ullmann?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Linn_Ullmann> <http://dbpedia.org/property/relatives> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/relatives",
    "predicate1_mention": "relatives",
    "predicate2_uri": "http://dbpedia.org/property/awards",
    "predicate2_mention": "awarded",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Linn_Ullmann",
    "entity1_mention": "Linn Ullmann",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1525",
    "question": "Who is the scientist whose academic advisor was Karl Ewald Hasse?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/Karl_Ewald_Hasse>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/academicAdvisor",
    "predicate1_mention": "academic advisor",
    "predicate2_uri": "http://dbpedia.org/ontology/Scientist",
    "predicate2_mention": "scientist",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Karl_Ewald_Hasse",
    "entity1_mention": "Karl Ewald Hasse",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1526",
    "question": "Paris Sisters singles are of which language?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/musicalBand> <http://dbpedia.org/resource/The_Paris_Sisters> . ?x <http://dbpedia.org/property/language> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/musicalBand",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/language",
    "predicate2_mention": "language",
    "type_uri": "http://dbpedia.org/ontology/Single",
    "type_mention": "singles",
    "entity1_uri": "http://dbpedia.org/resource/The_Paris_Sisters",
    "entity1_mention": "Paris Sisters",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1530",
    "question": "Count the awards received by the ones who fought the battle of france?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_France> . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/battle",
    "predicate1_mention": "fought",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Battle_of_France",
    "entity1_mention": "battle of france",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1532",
    "question": "Which cities are located around the sea into which the ionian flows?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ionian_Sea> <http://dbpedia.org/ontology/outflow> ?x . ?x <http://dbpedia.org/property/cities> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/outflow",
    "predicate1_mention": "flows",
    "predicate2_uri": "http://dbpedia.org/property/cities",
    "predicate2_mention": "cities",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ionian_Sea",
    "entity1_mention": "ionian",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1533",
    "question": "By what person of which political party is Balangir district led?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Balangir_district> <http://dbpedia.org/ontology/leaderName> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/leaderName",
    "predicate1_mention": "led",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Balangir_district",
    "entity1_mention": "balangir district",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1534",
    "question": "What team were the people drafted to, which are in the National Hockey League?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/National_Hockey_League> . ?x <http://dbpedia.org/property/draftTeam> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/league",
    "predicate1_mention": "league",
    "predicate2_uri": "http://dbpedia.org/property/draftTeam",
    "predicate2_mention": "drafted",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/National_Hockey_League",
    "entity1_mention": "National Hockey League",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1535",
    "question": "What is the owner of Ivanpah Solar Power Facility and the original developer of Dart?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ivanpah_Solar_Power_Facility> <http://dbpedia.org/ontology/owner> ?uri. <http://dbpedia.org/resource/Dart_(programming_language)> <http://dbpedia.org/ontology/developer> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/owner",
    "predicate1_mention": "owner",
    "predicate2_uri": "http://dbpedia.org/ontology/developer",
    "predicate2_mention": "developer",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ivanpah_Solar_Power_Facility",
    "entity1_mention": "Ivanpah Solar Power Facility",
    "entity2_uri": "http://dbpedia.org/resource/Dart_(programming_language)",
    "entity2_mention": "Dart"
},
{
    "id": "1536",
    "question": "Who all are buried in Arlington national cementary?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/Arlington_National_Cemetery> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/placeofburial",
    "predicate1_mention": "buried in",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Arlington_National_Cemetery",
    "entity1_mention": "Arlington national cementary",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1537",
    "question": "Where did Jerry Tagge do his elementary schooling?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerry_Tagge> <http://dbpedia.org/property/highSchool> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/highSchool",
    "predicate1_mention": "schooling",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jerry_Tagge",
    "entity1_mention": "Jerry Tagge",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1538",
    "question": "who manufactures the SHO V8?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_SHO_V8_engine> <http://dbpedia.org/ontology/manufacturer> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate1_mention": "manufactures",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ford_SHO_V8_engine",
    "entity1_mention": "sho v8",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1539",
    "question": "Which source of Water resources management in El Salvador is also the nation of the Sierra del Merendn?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Water_resources_management_in_El_Salvador> <http://dbpedia.org/property/sourceCountry> ?uri. <http://dbpedia.org/resource/Sierra_del_Merend\u00f3n> <http://dbpedia.org/ontology/country> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/sourceCountry",
    "predicate1_mention": "source",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "nation",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Water_resources_management_in_El_Salvador",
    "entity1_mention": "Water resources management in El Salvador",
    "entity2_uri": "http://dbpedia.org/resource/Sierra_del_Merend\u00f3n",
    "entity2_mention": "Sierra del Merendn"
},
{
    "id": "1541",
    "question": "Which shows had their painters born in England?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/England> . ?uri <http://dbpedia.org/ontology/creator> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/birthPlace",
    "predicate1_mention": "born in",
    "predicate2_uri": "http://dbpedia.org/ontology/creator",
    "predicate2_mention": "painters",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "shows",
    "entity1_uri": "http://dbpedia.org/resource/England",
    "entity1_mention": "england",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1543",
    "question": "What is the former team of the american football players whose position is Running back?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/position> <http://dbpedia.org/resource/Running_back> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/position",
    "predicate1_mention": "position",
    "predicate2_uri": "http://dbpedia.org/ontology/formerTeam",
    "predicate2_mention": "former team",
    "type_uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
    "type_mention": "american football players",
    "entity1_uri": "http://dbpedia.org/resource/Running_back",
    "entity1_mention": "running back",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1705",
    "question": "Which political party got elected in First Legislative Assembly of Uttar Pradesh ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/First_Legislative_Assembly_of_Uttar_Pradesh> <http://dbpedia.org/property/party> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/party",
    "predicate1_mention": "political party",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/First_Legislative_Assembly_of_Uttar_Pradesh",
    "entity1_mention": "First Legislative Assembly of Uttar Pradesh",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1545",
    "question": "In which areas can we find the networks owned by the govt of Mauritius?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/Government_of_Mauritius> . ?x <http://dbpedia.org/property/broadcastArea> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BroadcastNetwork>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/owningCompany",
    "predicate1_mention": "owned by",
    "predicate2_uri": "http://dbpedia.org/property/broadcastArea",
    "predicate2_mention": "areas",
    "type_uri": "http://dbpedia.org/ontology/BroadcastNetwork",
    "type_mention": "networks",
    "entity1_uri": "http://dbpedia.org/resource/Government_of_Mauritius",
    "entity1_mention": "the govt of Mauritius",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1546",
    "question": "Which current players once played for Toronto argonauts?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Toronto_Argonauts>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/formerTeam",
    "predicate1_mention": "played for",
    "predicate2_uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
    "predicate2_mention": "players",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Toronto_Argonauts",
    "entity1_mention": "Toronto argonauts",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1547",
    "question": "Which company builds Microsoft Azure and Microsoft Surface?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Microsoft_Azure> . ?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Microsoft_Surface> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/product",
    "predicate1_mention": "builds",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "company",
    "entity1_uri": "http://dbpedia.org/resource/Microsoft_Azure",
    "entity1_mention": "microsoft azure",
    "entity2_uri": "http://dbpedia.org/resource/Microsoft_Surface",
    "entity2_mention": "microsoft surface"
},
{
    "id": "1548",
    "question": "Which contnet license provider of Microsoft Office Picture Manager is also the game platform of Google Clud Connect ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Microsoft_Office_Picture_Manager> <http://dbpedia.org/ontology/license> ?uri. <http://dbpedia.org/resource/Google_Cloud_Connect> <http://dbpedia.org/ontology/computingPlatform> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/license",
    "predicate1_mention": "license",
    "predicate2_uri": "http://dbpedia.org/ontology/computingPlatform",
    "predicate2_mention": "platform",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Microsoft_Office_Picture_Manager",
    "entity1_mention": "Microsoft Office Picture Manager",
    "entity2_uri": "http://dbpedia.org/resource/Google_Cloud_Connect",
    "entity2_mention": "Google Clud Connect"
},
{
    "id": "1549",
    "question": "Did Stan Lee create the Iceman comics?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Iceman_(comics)> <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Stan_Lee> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/creators",
    "predicate1_mention": "create",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Iceman_(comics)",
    "entity1_mention": "iceman comics",
    "entity2_uri": "http://dbpedia.org/resource/Stan_Lee",
    "entity2_mention": "stan lee"
},
{
    "id": "1550",
    "question": "What are the movies whose director's daughter is Luke Scott?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Luke_Scott_(director)> . ?uri <http://dbpedia.org/property/director> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/child",
    "predicate1_mention": "daughter",
    "predicate2_uri": "http://dbpedia.org/property/director",
    "predicate2_mention": "director's",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Luke_Scott_(director)",
    "entity1_mention": "Luke Scott",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1551",
    "question": "Whihc party of the Mizoram Legislative Assembly is the government type of kumta ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kumta> <http://dbpedia.org/ontology/governmentType> ?uri. <http://dbpedia.org/resource/Mizoram_Legislative_Assembly> <http://dbpedia.org/property/party> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/governmentType",
    "predicate1_mention": "government type",
    "predicate2_uri": "http://dbpedia.org/property/party",
    "predicate2_mention": "party",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kumta",
    "entity1_mention": "kumta",
    "entity2_uri": "http://dbpedia.org/resource/Mizoram_Legislative_Assembly",
    "entity2_mention": "Mizoram Legislative Assembly"
},
{
    "id": "1552",
    "question": "Who has rented the stadiums owned by Toronto?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Toronto> . ?x <http://dbpedia.org/property/tenants> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/owner",
    "predicate1_mention": "owned",
    "predicate2_uri": "http://dbpedia.org/property/tenants",
    "predicate2_mention": "rented",
    "type_uri": "http://dbpedia.org/ontology/Stadium",
    "type_mention": "stadiums",
    "entity1_uri": "http://dbpedia.org/resource/Toronto",
    "entity1_mention": "toronto",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1553",
    "question": "Who won a Norbert Wiener Award for Social and Professional Responsibility?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/prizes",
    "predicate1_mention": "Award",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility",
    "entity1_mention": "Norbert Wiener Award for Social and Professional Responsibility",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1554",
    "question": "Who is the mfr. of the engine used in Ford Transit ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Transit> <http://dbpedia.org/property/engine> ?x . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Engine>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/engine",
    "predicate1_mention": "engine",
    "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate2_mention": "mfr.",
    "type_uri": "http://dbpedia.org/ontology/Engine",
    "type_mention": "engine",
    "entity1_uri": "http://dbpedia.org/resource/Ford_Transit",
    "entity1_mention": "Ford Transit",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1555",
    "question": "What is the birthplace of the Ferrel Harris which is also resting palce of  Green Wix Unthank?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ferrel_Harris> <http://dbpedia.org/property/birthplace> ?uri. <http://dbpedia.org/resource/Green_Wix_Unthank> <http://dbpedia.org/ontology/restingPlace> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/birthplace",
    "predicate1_mention": "birthplace",
    "predicate2_uri": "http://dbpedia.org/ontology/restingPlace",
    "predicate2_mention": "resting",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ferrel_Harris",
    "entity1_mention": "Ferrel Harris",
    "entity2_uri": "http://dbpedia.org/resource/Green_Wix_Unthank",
    "entity2_mention": "Green Wix Unthank"
},
{
    "id": "1556",
    "question": "What currencies are circulated in the countries where people speak French?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/French_language> . ?x <http://dbpedia.org/ontology/currency> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/officialLanguage",
    "predicate1_mention": "circulated",
    "predicate2_uri": "http://dbpedia.org/ontology/currency",
    "predicate2_mention": "currencies",
    "type_uri": "http://dbpedia.org/ontology/Location",
    "type_mention": "where",
    "entity1_uri": "http://dbpedia.org/resource/French_language",
    "entity1_mention": "french",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1557",
    "question": "Which division of Serbia national team is also the region of Dobinsk Ice Cave ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Serbia_national_American_football_team> <http://dbpedia.org/ontology/division> ?uri. <http://dbpedia.org/resource/Dob\u0161insk\u00e1_Ice_Cave> <http://dbpedia.org/ontology/region> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/division",
    "predicate1_mention": "division",
    "predicate2_uri": "http://dbpedia.org/ontology/region",
    "predicate2_mention": "region",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Serbia_national_American_football_team",
    "entity1_mention": "Serbia national team",
    "entity2_uri": "http://dbpedia.org/resource/Dob\u0161insk\u00e1_Ice_Cave",
    "entity2_mention": "Dobinsk Ice Cave"
},
{
    "id": "1558",
    "question": "Name the common current team of the Shaun Thong and Kaannder ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Shaun_Thong> <http://dbpedia.org/property/currentTeam> ?uri. <http://dbpedia.org/resource/Kaan_\u00d6nder> <http://dbpedia.org/property/currentTeam> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/currentTeam",
    "predicate1_mention": "current team",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Shaun_Thong",
    "entity1_mention": "Shaun Thong",
    "entity2_uri": "http://dbpedia.org/resource/Kaan_\u00d6nder",
    "entity2_mention": "Kaannder"
},
{
    "id": "1559",
    "question": "What is the television show which has cast member as Jason Carter and network is TNT (TV channel)?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jason_Carter_(actor)> . ?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/TNT_(TV_channel)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/starring",
    "predicate1_mention": "carter",
    "predicate2_uri": "http://dbpedia.org/property/network",
    "predicate2_mention": "network",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television show",
    "entity1_uri": "http://dbpedia.org/resource/Jason_Carter_(actor)",
    "entity1_mention": "Jason Carter",
    "entity2_uri": "http://dbpedia.org/resource/TNT_(TV_channel)",
    "entity2_mention": "TNT (TV channel)"
},
{
    "id": "1560",
    "question": "Who hold stocks in the bank which is located at 731 Lexington Avenue?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/731_Lexington_Avenue> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/locationCity",
    "predicate1_mention": "located",
    "predicate2_uri": "http://dbpedia.org/property/owner",
    "predicate2_mention": "hold stocks",
    "type_uri": "http://dbpedia.org/ontology/Bank",
    "type_mention": "bank",
    "entity1_uri": "http://dbpedia.org/resource/731_Lexington_Avenue",
    "entity1_mention": "731 Lexington Avenue",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1561",
    "question": "Who rented the stadium where the UFC 152 take place?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/UFC_152> <http://dbpedia.org/property/venue> ?x . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/venue",
    "predicate1_mention": "take place",
    "predicate2_uri": "http://dbpedia.org/ontology/tenant",
    "predicate2_mention": "rented",
    "type_uri": "http://dbpedia.org/ontology/Stadium",
    "type_mention": "stadium",
    "entity1_uri": "http://dbpedia.org/resource/UFC_152",
    "entity1_mention": "ufc 152",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1562",
    "question": "Which company's cars are assembled in Iran?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Iran> . ?x <http://dbpedia.org/property/parentCompany> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/assembly",
    "predicate1_mention": "assembled",
    "predicate2_uri": "http://dbpedia.org/property/parentCompany",
    "predicate2_mention": "company's",
    "type_uri": "http://dbpedia.org/ontology/Automobile",
    "type_mention": "assembled",
    "entity1_uri": "http://dbpedia.org/resource/Iran",
    "entity1_mention": "iran",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1563",
    "question": "Under which president was timothy l. woodruff a lieutenant?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/lieutenant> <http://dbpedia.org/resource/Timothy_L._Woodruff> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/lieutenant",
    "predicate1_mention": "lieutenant",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Timothy_L._Woodruff",
    "entity1_mention": "timothy l. woodruff",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1564",
    "question": "Which first driver of  European Grand Prix 1993 is also finished first in 1985 Portuguese Grand Prix ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1993_European_Grand_Prix> <http://dbpedia.org/property/firstDriver> ?uri. <http://dbpedia.org/resource/1985_Portuguese_Grand_Prix> <http://dbpedia.org/property/firstDriver> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/firstDriver",
    "predicate1_mention": "first driver",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/1993_European_Grand_Prix",
    "entity1_mention": "European Grand Prix 1993",
    "entity2_uri": "http://dbpedia.org/resource/1985_Portuguese_Grand_Prix",
    "entity2_mention": "1985 Portuguese Grand Prix"
},
{
    "id": "1565",
    "question": "What place is the birthplace of Vijay Chavan where Eka Lagnachi Teesri Goshta is located as well?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eka_Lagnachi_Teesri_Goshta> <http://dbpedia.org/property/location> ?uri. <http://dbpedia.org/resource/Vijay_Chavan> <http://dbpedia.org/property/placeOfBirth> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/location",
    "predicate1_mention": "located",
    "predicate2_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate2_mention": "birthplace",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Eka_Lagnachi_Teesri_Goshta",
    "entity1_mention": "Eka Lagnachi Teesri Goshta",
    "entity2_uri": "http://dbpedia.org/resource/Vijay_Chavan",
    "entity2_mention": "Vijay Chavan"
},
{
    "id": "1566",
    "question": "In which fields are both Paul Demiville and Sylvain levi experts?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Paul_Demi\u00e9ville> <http://dbpedia.org/property/fields> ?uri. <http://dbpedia.org/resource/Sylvain_L\u00e9vi> <http://dbpedia.org/property/fields> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/fields",
    "predicate1_mention": "fields",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Paul_Demi\u00e9ville",
    "entity1_mention": "Paul Demiville",
    "entity2_uri": "http://dbpedia.org/resource/Sylvain_L\u00e9vi",
    "entity2_mention": "Sylvain levi"
},
{
    "id": "1567",
    "question": "Ernest Rutherford was the advisor of how many people?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Ernest_Rutherford>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/doctoralAdvisor",
    "predicate1_mention": "advisor",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ernest_Rutherford",
    "entity1_mention": "Ernest Rutherford",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1569",
    "question": "Where were some people associated with Steve Winwood employed at?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Steve_Winwood> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
    "predicate1_mention": "associated",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Steve_Winwood",
    "entity1_mention": "Steve Winwood",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1572",
    "question": "Does the river shannon originate from Dowra?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/River_Shannon> <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Dowra> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/sourceMountain",
    "predicate1_mention": "originate",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/River_Shannon",
    "entity1_mention": "river shannon",
    "entity2_uri": "http://dbpedia.org/resource/Dowra",
    "entity2_mention": "dowra"
},
{
    "id": "1575",
    "question": "In how many nations is Coconut a common food ingredient?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Coconut> . ?x <http://dbpedia.org/property/country> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/ingredient",
    "predicate1_mention": "ingredient",
    "predicate2_uri": "http://dbpedia.org/property/country",
    "predicate2_mention": "nations",
    "type_uri": "http://dbpedia.org/ontology/Country",
    "type_mention": "nations",
    "entity1_uri": "http://dbpedia.org/resource/Coconut",
    "entity1_mention": "coconut",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1576",
    "question": "Name the show whose jury consist of Jennifer Lopez and Randy Jackson?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Jennifer_Lopez> . ?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Randy_Jackson> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/judges",
    "predicate1_mention": "jury",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "show",
    "entity1_uri": "http://dbpedia.org/resource/Jennifer_Lopez",
    "entity1_mention": "jennifer lopez",
    "entity2_uri": "http://dbpedia.org/resource/Randy_Jackson",
    "entity2_mention": "Randy Jackson"
},
{
    "id": "1577",
    "question": "Is tahiti in the Society Islands achipelago?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Tahiti> <http://dbpedia.org/property/archipelago> <http://dbpedia.org/resource/Society_Islands> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/archipelago",
    "predicate1_mention": "achipelago",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tahiti",
    "entity1_mention": "tahiti",
    "entity2_uri": "http://dbpedia.org/resource/Society_Islands",
    "entity2_mention": "society islands"
},
{
    "id": "1578",
    "question": "How many games have been composed by Hirokazu Tanaka?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/composer> <http://dbpedia.org/resource/Hirokazu_Tanaka>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/composer",
    "predicate1_mention": "composed",
    "predicate2_uri": "http://dbpedia.org/ontology/VideoGame",
    "predicate2_mention": "games",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hirokazu_Tanaka",
    "entity1_mention": "hirokazu tanaka",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1579",
    "question": "Where did the fashion designer study who died at the Stony Brook University Hospital?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Stony_Brook_University_Hospital> . ?x <http://dbpedia.org/property/education> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FashionDesigner>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate1_mention": "died",
    "predicate2_uri": "http://dbpedia.org/property/education",
    "predicate2_mention": "fashion",
    "type_uri": "http://dbpedia.org/ontology/FashionDesigner",
    "type_mention": "fashion designer",
    "entity1_uri": "http://dbpedia.org/resource/Stony_Brook_University_Hospital",
    "entity1_mention": "Stony Brook University Hospital",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1580",
    "question": "Name few television shows's anchored by Ryan Seacrest?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Ryan_Seacrest>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/presenter",
    "predicate1_mention": "seacrest",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "television shows's",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ryan_Seacrest",
    "entity1_mention": "ryan seacrest",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1582",
    "question": "Give me some shows related to the ones created by Russell Davies",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Russell_T_Davies> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/creator",
    "predicate1_mention": "created",
    "predicate2_uri": "http://dbpedia.org/ontology/related",
    "predicate2_mention": "related",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "shows",
    "entity1_uri": "http://dbpedia.org/resource/Russell_T_Davies",
    "entity1_mention": "russell davies",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1583",
    "question": "List the total number of regions of the building whose are located in Grand Forks Air Force Base?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/region> <http://dbpedia.org/resource/Grand_Forks_Air_Force_Base> . ?x <http://dbpedia.org/ontology/region> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/region",
    "predicate1_mention": "regions",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Grand_Forks_Air_Force_Base",
    "entity1_mention": "Grand Forks Air Force Base",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1584",
    "question": "Where is the headquarters of the company which runs the Metro Blue Line in minnesota?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Metro_Blue_Line_(Minnesota)> <http://dbpedia.org/property/operator> ?x . ?x <http://dbpedia.org/property/headquarters> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/operator",
    "predicate1_mention": "metro",
    "predicate2_uri": "http://dbpedia.org/property/headquarters",
    "predicate2_mention": "headquarters",
    "type_uri": "http://dbpedia.org/ontology/Organisation",
    "type_mention": "runs",
    "entity1_uri": "http://dbpedia.org/resource/Metro_Blue_Line_(Minnesota)",
    "entity1_mention": "Metro Blue Line in minnesota",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1586",
    "question": "Which religion's people are member of BJP?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/party> <http://dbpedia.org/resource/Bharatiya_Janata_Party> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/party",
    "predicate1_mention": "member",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religion's",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Bharatiya_Janata_Party",
    "entity1_mention": "BJP",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1587",
    "question": "Count the different alma maters of people employed by the CNN",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/CNN> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/employer",
    "predicate1_mention": "employed",
    "predicate2_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate2_mention": "alma maters",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/CNN",
    "entity1_mention": "cnn",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1588",
    "question": "How many dishes are made with an ingredient belonging to the flowering plant species?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/division> <http://dbpedia.org/resource/Flowering_plant> . ?uri <http://dbpedia.org/ontology/ingredient> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Food>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/division",
    "predicate1_mention": "dishes",
    "predicate2_uri": "http://dbpedia.org/ontology/ingredient",
    "predicate2_mention": "ingredient",
    "type_uri": "http://dbpedia.org/ontology/Food",
    "type_mention": "dishes",
    "entity1_uri": "http://dbpedia.org/resource/Flowering_plant",
    "entity1_mention": "flowering plant",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1589",
    "question": "What is the common governing body of the Naval Air Facility Adak and Oahu Railway and Land Company?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Naval_Air_Facility_Adak> <http://dbpedia.org/property/governingBody> ?uri. <http://dbpedia.org/resource/Oahu_Railway_and_Land_Company> <http://dbpedia.org/property/governingBody> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/governingBody",
    "predicate1_mention": "governing body",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Naval_Air_Facility_Adak",
    "entity1_mention": "Naval Air Facility Adak",
    "entity2_uri": "http://dbpedia.org/resource/Oahu_Railway_and_Land_Company",
    "entity2_mention": "Oahu Railway and Land Company"
},
{
    "id": "1590",
    "question": "Whose band members are known to play a PRS guitar?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/PRS_Guitars> . ?uri <http://dbpedia.org/property/currentMembers> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/notableInstruments",
    "predicate1_mention": "known",
    "predicate2_uri": "http://dbpedia.org/property/currentMembers",
    "predicate2_mention": "members",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/PRS_Guitars",
    "entity1_mention": "PRS guitar",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1591",
    "question": "Was the Funky Lab Rat released in North America?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Funky_Lab_Rat> <http://dbpedia.org/property/released> <http://dbpedia.org/resource/North_America> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/released",
    "predicate1_mention": "released",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Funky_Lab_Rat",
    "entity1_mention": "Funky Lab Rat",
    "entity2_uri": "http://dbpedia.org/resource/North_America",
    "entity2_mention": "North America"
},
{
    "id": "1592",
    "question": "Which nation is the origin of Dornier Aerodyne ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dornier_Aerodyne> <http://dbpedia.org/property/nationalOrigin> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/nationalOrigin",
    "predicate1_mention": "nation is the origin",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Dornier_Aerodyne",
    "entity1_mention": "Dornier Aerodyne",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1593",
    "question": "Where is the rival school of Somerset Berkeley Regional High school?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/rival> <http://dbpedia.org/resource/Somerset_Berkley_Regional_High_School> . ?x <http://dbpedia.org/ontology/region> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/rival",
    "predicate1_mention": "rival",
    "predicate2_uri": "http://dbpedia.org/ontology/region",
    "predicate2_mention": "regional",
    "type_uri": "http://dbpedia.org/ontology/School",
    "type_mention": "school",
    "entity1_uri": "http://dbpedia.org/resource/Somerset_Berkley_Regional_High_School",
    "entity1_mention": "Somerset Berkeley Regional High school",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1594",
    "question": "Which is the city closest to both the Lodaiska site and the home of David w brown?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/LoDaisKa_Site> <http://dbpedia.org/ontology/nearestCity> ?uri. <http://dbpedia.org/resource/David_W._Brown_House> <http://dbpedia.org/ontology/nearestCity> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/nearestCity",
    "predicate1_mention": "city closest",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/LoDaisKa_Site",
    "entity1_mention": "lodaiska site",
    "entity2_uri": "http://dbpedia.org/resource/David_W._Brown_House",
    "entity2_mention": "David w brown"
},
{
    "id": "1595",
    "question": "What is the state of the settlement, which is the sub assembly of Mohamedia, Tunisia ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mohamedia,_Tunisia> <http://dbpedia.org/ontology/isPartOf> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/isPartOf",
    "predicate1_mention": "the state of",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "tunisia",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mohamedia,_Tunisia",
    "entity1_mention": "Mohamedia, Tunisia",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1596",
    "question": "Name the television show whose company is HBO and Playtone?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/HBO> . ?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Playtone>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/company",
    "predicate1_mention": "company",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television show",
    "entity1_uri": "http://dbpedia.org/resource/HBO",
    "entity1_mention": "hbo",
    "entity2_uri": "http://dbpedia.org/resource/Playtone",
    "entity2_mention": "playtone"
},
{
    "id": "1598",
    "question": "What television show are distributed by Broadcast syndication?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Broadcast_syndication>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/distributor",
    "predicate1_mention": "distributed",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "television show",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Broadcast_syndication",
    "entity1_mention": "Broadcast syndication",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1599",
    "question": "Who is the common parent of Gettv and hypnotize mind ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/GetTV> <http://dbpedia.org/ontology/parentOrganisation> ?uri. <http://dbpedia.org/resource/Hypnotize_Minds> <http://dbpedia.org/property/parent> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/parentOrganisation",
    "predicate1_mention": "parent",
    "predicate2_uri": "http://dbpedia.org/property/parent",
    "predicate2_mention": "parent",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/GetTV",
    "entity1_mention": "gettv",
    "entity2_uri": "http://dbpedia.org/resource/Hypnotize_Minds",
    "entity2_mention": "hypnotize mind"
},
{
    "id": "1600",
    "question": "Name the mascot of Austin College ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Austin_College> <http://dbpedia.org/property/mascot> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/mascot",
    "predicate1_mention": "mascot",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Austin_College",
    "entity1_mention": "Austin College",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1601",
    "question": "What is the birth city of trainer of Leallah?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Leallah> <http://dbpedia.org/property/trainer> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/trainer",
    "predicate1_mention": "trainer",
    "predicate2_uri": "http://dbpedia.org/property/birthPlace",
    "predicate2_mention": "birth city",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Leallah",
    "entity1_mention": "leallah",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1602",
    "question": "Name the person with opponents Ike Clanton and Tom McLaury?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/Ike_Clanton> . ?uri <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/Tom_McLaury> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/opponent",
    "predicate1_mention": "opponents",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "person",
    "entity1_uri": "http://dbpedia.org/resource/Ike_Clanton",
    "entity1_mention": "Ike Clanton",
    "entity2_uri": "http://dbpedia.org/resource/Tom_McLaury",
    "entity2_mention": "Tom McLaury"
},
{
    "id": "1606",
    "question": "Name the companies which are in cities under Denzil Minnan Wong?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Denzil_Minnan-Wong> . ?uri <http://dbpedia.org/ontology/locationCity> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/leaderName",
    "predicate1_mention": "name",
    "predicate2_uri": "http://dbpedia.org/ontology/locationCity",
    "predicate2_mention": "cities",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "companies",
    "entity1_uri": "http://dbpedia.org/resource/Denzil_Minnan-Wong",
    "entity1_mention": "Denzil Minnan Wong",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1607",
    "question": "Which city was founded by  George Washington and John Forbes (British Army officer)?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/George_Washington> . ?uri <http://dbpedia.org/ontology/founder> <http://dbpedia.org/resource/John_Forbes_(British_Army_officer)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/founder",
    "predicate1_mention": "founded",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/City",
    "type_mention": "city",
    "entity1_uri": "http://dbpedia.org/resource/George_Washington",
    "entity1_mention": "George Washington",
    "entity2_uri": "http://dbpedia.org/resource/John_Forbes_(British_Army_officer)",
    "entity2_mention": "John Forbes (British Army officer)"
},
{
    "id": "1608",
    "question": "List the country of Tokaj wine region ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tokaj_wine_region> <http://dbpedia.org/property/country> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/country",
    "predicate1_mention": "country",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tokaj_wine_region",
    "entity1_mention": "Tokaj wine region",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1609",
    "question": "Who are the golf players whose college is Arizona State Sun Devils?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/college> <http://dbpedia.org/resource/Arizona_State_Sun_Devils>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/college",
    "predicate1_mention": "college",
    "predicate2_uri": "http://dbpedia.org/ontology/GolfPlayer",
    "predicate2_mention": "golf players",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Arizona_State_Sun_Devils",
    "entity1_mention": "Arizona State Sun Devils",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1610",
    "question": "Where is the successor of john waldo from?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/John_B._Waldo> . ?x <http://dbpedia.org/property/state> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "http://dbpedia.org/property/state",
    "predicate2_mention": "Where",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/John_B._Waldo",
    "entity1_mention": "john waldo",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1611",
    "question": "Which home town of Cline Buckens is the place of Death of Richard heron ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/C\u00e9line_Buckens> <http://dbpedia.org/ontology/hometown> ?uri. <http://dbpedia.org/resource/Richard_Heron> <http://dbpedia.org/property/placeOfDeath> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/hometown",
    "predicate1_mention": "home town",
    "predicate2_uri": "http://dbpedia.org/property/placeOfDeath",
    "predicate2_mention": "place of Death",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/C\u00e9line_Buckens",
    "entity1_mention": "Cline Buckens",
    "entity2_uri": "http://dbpedia.org/resource/Richard_Heron",
    "entity2_mention": "richard heron"
},
{
    "id": "1612",
    "question": "Name some cars similar to the ones which are assembled at the Jefferson North Assembly?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Jefferson_North_Assembly> . ?x <http://dbpedia.org/property/related> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/assembly",
    "predicate1_mention": "assembled at",
    "predicate2_uri": "http://dbpedia.org/property/related",
    "predicate2_mention": "similar to",
    "type_uri": "http://dbpedia.org/ontology/Automobile",
    "type_mention": "cars",
    "entity1_uri": "http://dbpedia.org/resource/Jefferson_North_Assembly",
    "entity1_mention": "Jefferson North Assembly",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1613",
    "question": "Which awards are presented by the committee located in Stockholm?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Stockholm> . ?uri <http://dbpedia.org/ontology/presenter> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/headquarters",
    "predicate1_mention": "awards",
    "predicate2_uri": "http://dbpedia.org/ontology/presenter",
    "predicate2_mention": "presented",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Stockholm",
    "entity1_mention": "stockholm",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1614",
    "question": "Which school did Robbie Diack attend?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robbie_Diack> <http://dbpedia.org/property/school> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/school",
    "predicate1_mention": "school",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Robbie_Diack",
    "entity1_mention": "robbie diack",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1615",
    "question": "Who is the film star of On Air with Ryan Seacrest ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/On_Air_with_Ryan_Seacrest> <http://dbpedia.org/ontology/starring> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/starring",
    "predicate1_mention": "star",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/On_Air_with_Ryan_Seacrest",
    "entity1_mention": "On Air with Ryan Seacrest",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1616",
    "question": "List everything in which saxophone players have been casted.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Saxophone> . ?uri <http://dbpedia.org/property/starring> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/instrument",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/starring",
    "predicate2_mention": "casted",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Saxophone",
    "entity1_mention": "saxophone",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1617",
    "question": "Who wrote Catch My soul ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Catch_My_Soul_(UK_stage_version)> <http://dbpedia.org/ontology/author> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/author",
    "predicate1_mention": "wrote",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Catch_My_Soul_(UK_stage_version)",
    "entity1_mention": "Catch My soul",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1618",
    "question": "Who is the builder of Atamurat Kerkichi Bridge ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Atamurat-Kerkichi_Bridge> <http://dbpedia.org/property/builder> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/builder",
    "predicate1_mention": "builder",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Atamurat-Kerkichi_Bridge",
    "entity1_mention": "atamurat kerkichi bridge",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1620",
    "question": "Where did the president study, who's the president of Besiktas JK?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Be\u015fikta\u015f_JK_(wheelchair_basketball)> <http://dbpedia.org/ontology/president> ?x . ?x <http://dbpedia.org/property/almaMater> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/president",
    "predicate1_mention": "president",
    "predicate2_uri": "http://dbpedia.org/property/almaMater",
    "predicate2_mention": "study",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Be\u015fikta\u015f_JK_(wheelchair_basketball)",
    "entity1_mention": "Besiktas JK",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1621",
    "question": "To which destinations does Air 2000 fly?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Air_2000> <http://dbpedia.org/property/destinations> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/destinations",
    "predicate1_mention": "destinations",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Air_2000",
    "entity1_mention": "Air 2000",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1622",
    "question": "In which places can we find the people won the Project Runaway Canada?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Project_Runway_Canada> . ?x <http://dbpedia.org/ontology/residence> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/award",
    "predicate1_mention": "won",
    "predicate2_uri": "http://dbpedia.org/ontology/residence",
    "predicate2_mention": "places",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "places",
    "entity1_uri": "http://dbpedia.org/resource/Project_Runway_Canada",
    "entity1_mention": "project runaway canada",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1623",
    "question": "How many factions were fighting in the wars where Blue Jacket was a commander?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Blue_Jacket> . ?x <http://dbpedia.org/property/combatant> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/commander",
    "predicate1_mention": "commander",
    "predicate2_uri": "http://dbpedia.org/property/combatant",
    "predicate2_mention": "factions",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Blue_Jacket",
    "entity1_mention": "Blue Jacket",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1624",
    "question": "Did Stan Lee write the Daredevils?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Daredevils> <http://dbpedia.org/property/writers> <http://dbpedia.org/resource/Stan_Lee> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/writers",
    "predicate1_mention": "write",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Daredevils",
    "entity1_mention": "the Daredevils",
    "entity2_uri": "http://dbpedia.org/resource/Stan_Lee",
    "entity2_mention": "stan lee"
},
{
    "id": "1626",
    "question": "Where was the person born whose successor was Le Hong Phong?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/L\u00ea_H\u1ed3ng_Phong> . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "http://dbpedia.org/property/birthPlace",
    "predicate2_mention": "born",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/L\u00ea_H\u1ed3ng_Phong",
    "entity1_mention": "Le Hong Phong",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1627",
    "question": "To what region is Sukhumbhand Paribatra, a leader?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/leaderName> <http://dbpedia.org/resource/Sukhumbhand_Paribatra>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/leaderName",
    "predicate1_mention": "leader",
    "predicate2_uri": "http://dbpedia.org/ontology/Region",
    "predicate2_mention": "region",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sukhumbhand_Paribatra",
    "entity1_mention": "Sukhumbhand Paribatra",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1628",
    "question": "Where was Picasso Last Words recorded ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Picasso's_Last_Words_(Drink_to_Me)> <http://dbpedia.org/property/recorded> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/recorded",
    "predicate1_mention": "recorded",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Picasso's_Last_Words_(Drink_to_Me)",
    "entity1_mention": "Picasso Last Words recorded",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1629",
    "question": "What is the largest city of the birthplace of Pat Kirkwood?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pat_Kirkwood_(racing_driver)> <http://dbpedia.org/property/birthplace> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/birthplace",
    "predicate1_mention": "birthplace",
    "predicate2_uri": "http://dbpedia.org/ontology/largestCity",
    "predicate2_mention": "largest city",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Pat_Kirkwood_(racing_driver)",
    "entity1_mention": "kirkwood",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1630",
    "question": "For how many movies have the music composer composed music, who have collaborated with Yes ?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Yes_(band)> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
    "predicate1_mention": "music",
    "predicate2_uri": "http://dbpedia.org/ontology/musicComposer",
    "predicate2_mention": "music composer",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Yes_(band)",
    "entity1_mention": "yes",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1632",
    "question": "What is the former team of the Athens borned basketball players ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Athens> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/birthPlace",
    "predicate1_mention": "borned",
    "predicate2_uri": "http://dbpedia.org/ontology/formerTeam",
    "predicate2_mention": "former team",
    "type_uri": "http://dbpedia.org/ontology/BasketballPlayer",
    "type_mention": "basketball",
    "entity1_uri": "http://dbpedia.org/resource/Athens",
    "entity1_mention": "athens",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1634",
    "question": "What is the total number of other nearest countries to the lakes whose nearest countries is Uganda?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/nearestCity> <http://dbpedia.org/resource/Uganda> . ?x <http://dbpedia.org/ontology/nearestCity> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/nearestCity",
    "predicate1_mention": "nearest countries",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Uganda",
    "entity1_mention": "uganda",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1637",
    "question": "Name the shows whose theme was composed by a band in which Jay Lane used to be?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Jay_Lane> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/formerBandMember",
    "predicate1_mention": "band",
    "predicate2_uri": "http://dbpedia.org/property/themeMusicComposer",
    "predicate2_mention": "composed by",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "shows",
    "entity1_uri": "http://dbpedia.org/resource/Jay_Lane",
    "entity1_mention": "Jay Lane",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1638",
    "question": "Where do the rivers from greater London flow into?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/Greater_London> . ?x <http://dbpedia.org/property/mouthLocation> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/sourceRegion",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/mouthLocation",
    "predicate2_mention": "flow into",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "rivers",
    "entity1_uri": "http://dbpedia.org/resource/Greater_London",
    "entity1_mention": "greater london",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1640",
    "question": "Was Buzz Williams the headcoach of the Marquette Golden Eagles mens team?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/2013\u201314_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/property/headcoach> <http://dbpedia.org/resource/Buzz_Williams> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/headcoach",
    "predicate1_mention": "headcoach",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/2013\u201314_Marquette_Golden_Eagles_men's_basketball_team",
    "entity1_mention": "Marquette Golden Eagles mens team",
    "entity2_uri": "http://dbpedia.org/resource/Buzz_Williams",
    "entity2_mention": "Buzz Williams"
},
{
    "id": "1641",
    "question": "How many units follow the US Navy Department's command structure?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_the_Navy>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/commandStructure",
    "predicate1_mention": "command structure",
    "predicate2_uri": "http://dbpedia.org/ontology/MilitaryUnit",
    "predicate2_mention": "units",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_States_Department_of_the_Navy",
    "entity1_mention": "us navy department's command structure",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1642",
    "question": "Under which US president was a politician in opposition of John G Schmitz?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/opponent> <http://dbpedia.org/resource/John_G._Schmitz> . ?x <http://dbpedia.org/ontology/incumbent> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/opponent",
    "predicate1_mention": "opposition",
    "predicate2_uri": "http://dbpedia.org/ontology/incumbent",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Politician",
    "type_mention": "politician",
    "entity1_uri": "http://dbpedia.org/resource/John_G._Schmitz",
    "entity1_mention": "John G Schmitz",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1643",
    "question": "Whcih creator of Theme Time Radio Hour also created subsequent work of Moondoc Matinee ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moondog_Matinee> <http://dbpedia.org/ontology/subsequentWork> ?uri. <http://dbpedia.org/resource/Theme_Time_Radio_Hour> <http://dbpedia.org/property/creator> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/subsequentWork",
    "predicate1_mention": "subsequent work",
    "predicate2_uri": "http://dbpedia.org/property/creator",
    "predicate2_mention": "creator",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Moondog_Matinee",
    "entity1_mention": "Moondoc Matinee",
    "entity2_uri": "http://dbpedia.org/resource/Theme_Time_Radio_Hour",
    "entity2_mention": "Theme Time Radio Hour"
},
{
    "id": "1644",
    "question": "Which education institute of Duncan U. Fletcher is also the university of Vanderbilt Commodores ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Duncan_U._Fletcher> <http://dbpedia.org/ontology/almaMater> ?uri. <http://dbpedia.org/resource/Vanderbilt_Commodores> <http://dbpedia.org/ontology/university> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate1_mention": "education institute",
    "predicate2_uri": "http://dbpedia.org/ontology/university",
    "predicate2_mention": "university",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Duncan_U._Fletcher",
    "entity1_mention": "Duncan U. Fletcher",
    "entity2_uri": "http://dbpedia.org/resource/Vanderbilt_Commodores",
    "entity2_mention": "vanderbilt commodores"
},
{
    "id": "1647",
    "question": "Who built the Ford Y-block engine ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Y-block_engine> <http://dbpedia.org/ontology/manufacturer> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate1_mention": "built",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ford_Y-block_engine",
    "entity1_mention": "Ford Y-block engine",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1649",
    "question": "Is Plymouth High School for Girls in Devon county?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Plymouth_High_School_for_Girls> <http://dbpedia.org/ontology/county> <http://dbpedia.org/resource/Devon> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/county",
    "predicate1_mention": "county",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Plymouth_High_School_for_Girls",
    "entity1_mention": "Plymouth High School for Girls",
    "entity2_uri": "http://dbpedia.org/resource/Devon",
    "entity2_mention": "devon"
},
{
    "id": "1650",
    "question": "In which city is the hub airport of Club One Air?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Club_One_Air> <http://dbpedia.org/ontology/hubAirport> ?x . ?x <http://dbpedia.org/property/cityServed> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/hubAirport",
    "predicate1_mention": "hub airport",
    "predicate2_uri": "http://dbpedia.org/property/cityServed",
    "predicate2_mention": "city",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Club_One_Air",
    "entity1_mention": "club one air",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1651",
    "question": "List the first drivers of Grand Prixes where Mika Hakkinen was a pole driver.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/poleDriver> <http://dbpedia.org/resource/Mika_H\u00e4kkinen> . ?x <http://dbpedia.org/ontology/firstDriver> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GrandPrix>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/poleDriver",
    "predicate1_mention": "pole driver",
    "predicate2_uri": "http://dbpedia.org/ontology/firstDriver",
    "predicate2_mention": "first drivers",
    "type_uri": "http://dbpedia.org/ontology/GrandPrix",
    "type_mention": "Grand Prixes",
    "entity1_uri": "http://dbpedia.org/resource/Mika_H\u00e4kkinen",
    "entity1_mention": "Mika Hakkinen",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1652",
    "question": "Who produced the Pixar Image Computer?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Pixar_Image_Computer>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/product",
    "predicate1_mention": "produced",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Pixar_Image_Computer",
    "entity1_mention": "Pixar Image Computer",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1653",
    "question": "Name the royalty whose daughter was Cleopatra V and was married to Ptolemy XIV of Egypt?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Cleopatra_V_of_Egypt> . ?uri <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ptolemy_XIV_of_Egypt>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/mother",
    "predicate1_mention": "daughter",
    "predicate2_uri": "http://dbpedia.org/ontology/spouse",
    "predicate2_mention": "married",
    "type_uri": "http://dbpedia.org/ontology/Royalty",
    "type_mention": "royalty",
    "entity1_uri": "http://dbpedia.org/resource/Cleopatra_V_of_Egypt",
    "entity1_mention": "Cleopatra V",
    "entity2_uri": "http://dbpedia.org/resource/Ptolemy_XIV_of_Egypt",
    "entity2_mention": "Ptolemy XIV of Egypt"
},
{
    "id": "1654",
    "question": "What are some islands in the bahamas?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/archipelago> <http://dbpedia.org/resource/The_Bahamas>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Island>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/archipelago",
    "predicate1_mention": "islands",
    "predicate2_uri": "http://dbpedia.org/ontology/Island",
    "predicate2_mention": "islands",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Bahamas",
    "entity1_mention": "the bahamas",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1655",
    "question": "Was mother teresa beatified by John Paul the second?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mother_Teresa> <http://dbpedia.org/property/beatifiedBy> <http://dbpedia.org/resource/Pope_John_Paul_II> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/beatifiedBy",
    "predicate1_mention": "beatified by",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mother_Teresa",
    "entity1_mention": "mother teresa",
    "entity2_uri": "http://dbpedia.org/resource/Pope_John_Paul_II",
    "entity2_mention": "John Paul the second"
},
{
    "id": "1656",
    "question": "Who is the designer of Saleen S5S Raptor ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Saleen_S5S_Raptor> <http://dbpedia.org/property/designer> ?uri  . }",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/designer",
    "predicate1_mention": "designer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Saleen_S5S_Raptor",
    "entity1_mention": "Saleen S5S Raptor",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1657",
    "question": "Name some TV shows whose theme is made by a band associated with Buckethead?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Buckethead> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "906",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedBand",
    "predicate1_mention": "band associated",
    "predicate2_uri": "http://dbpedia.org/property/themeMusicComposer",
    "predicate2_mention": "theme is made by",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "TV shows",
    "entity1_uri": "http://dbpedia.org/resource/Buckethead",
    "entity1_mention": "buckethead",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1658",
    "question": "How many different people hold authority over the members of Balanidae family?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Balanidae> . ?x <http://dbpedia.org/ontology/binomialAuthority> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/family",
    "predicate1_mention": "family",
    "predicate2_uri": "http://dbpedia.org/ontology/binomialAuthority",
    "predicate2_mention": "authority",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Balanidae",
    "entity1_mention": "balanidae",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1659",
    "question": "Which fields' academic journals are found in the US?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/property/discipline> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/country",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/discipline",
    "predicate2_mention": "fields'",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_States",
    "entity1_mention": "US",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1660",
    "question": "Which  municipality is neighbored by Cologny and Chne-Bougeries?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Cologny> . ?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Ch\u00eane-Bougeries> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/neighboringMunicipalities",
    "predicate1_mention": "municipality is neighbored",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Cologny",
    "entity1_mention": "cologny",
    "entity2_uri": "http://dbpedia.org/resource/Ch\u00eane-Bougeries",
    "entity2_mention": "Chne-Bougeries"
},
{
    "id": "1661",
    "question": "Which basketball team's coach is Kurt Rambis?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Kurt_Rambis> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/coach",
    "predicate1_mention": "coach",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kurt_Rambis",
    "entity1_mention": "Kurt Rambis",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1662",
    "question": "How many other region served are there of the companies which serves  Pacific Ocean ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/regionServed> <http://dbpedia.org/resource/Pacific_Ocean> . ?x <http://dbpedia.org/ontology/regionServed> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/regionServed",
    "predicate1_mention": "region served",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Pacific_Ocean",
    "entity1_mention": "pacific ocean",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1665",
    "question": "Where does the Giannis Alafouzos originate?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Giannis_Alafouzos> <http://dbpedia.org/ontology/stateOfOrigin> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/stateOfOrigin",
    "predicate1_mention": "originate",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Giannis_Alafouzos",
    "entity1_mention": "Giannis Alafouzos",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1666",
    "question": "Whose constituency is Duboce Triangle ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/constituency",
    "predicate1_mention": "constituency",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco",
    "entity1_mention": "Duboce Triangle",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1667",
    "question": "Name the office holder with predecessor as Mark Latham and partner Tim Mathieson ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Mark_Latham> . ?uri <http://dbpedia.org/ontology/partner> <http://dbpedia.org/resource/Tim_Mathieson>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/predecessor",
    "predicate1_mention": "predecessor",
    "predicate2_uri": "http://dbpedia.org/ontology/partner",
    "predicate2_mention": "partner",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "office holder",
    "entity1_uri": "http://dbpedia.org/resource/Mark_Latham",
    "entity1_mention": "Mark Latham",
    "entity2_uri": "http://dbpedia.org/resource/Tim_Mathieson",
    "entity2_mention": "Tim Mathieson"
},
{
    "id": "1669",
    "question": "What awards have been given to Screenwriters?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Screenwriter> . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/occupation",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/awards",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Screenwriter",
    "entity1_mention": "Screenwriters",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1670",
    "question": "What is the location city of the Denver Broncos which is also  place of birth of the William C. Cramer ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Denver_Broncos> <http://dbpedia.org/ontology/locationCity> ?uri. <http://dbpedia.org/resource/William_C._Cramer> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/locationCity",
    "predicate1_mention": "location city",
    "predicate2_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate2_mention": "place of birth",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Denver_Broncos",
    "entity1_mention": "Denver Broncos",
    "entity2_uri": "http://dbpedia.org/resource/William_C._Cramer",
    "entity2_mention": "William C. Cramer"
},
{
    "id": "1671",
    "question": "What companies are located in toronto?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Toronto>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/locationCity",
    "predicate1_mention": "located",
    "predicate2_uri": "http://dbpedia.org/ontology/Company",
    "predicate2_mention": "companies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Toronto",
    "entity1_mention": "toronto",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1672",
    "question": "Which video game's artist is Hiroji Kiyotake and computing platform is Virtual Console?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Hiroji_Kiyotake> . ?uri <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Virtual_Console>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/artist",
    "predicate1_mention": "artist",
    "predicate2_uri": "http://dbpedia.org/ontology/computingPlatform",
    "predicate2_mention": "computing platform",
    "type_uri": "http://dbpedia.org/ontology/VideoGame",
    "type_mention": "video game's",
    "entity1_uri": "http://dbpedia.org/resource/Hiroji_Kiyotake",
    "entity1_mention": "Hiroji Kiyotake",
    "entity2_uri": "http://dbpedia.org/resource/Virtual_Console",
    "entity2_mention": "virtual console"
},
{
    "id": "1674",
    "question": "Which Harris County based company is a subsidiary of Tandem Computers?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Harris_County,_Texas> . ?uri <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Tandem_Computers>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/locationCity",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/subsidiary",
    "predicate2_mention": "subsidiary",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "company",
    "entity1_uri": "http://dbpedia.org/resource/Harris_County,_Texas",
    "entity1_mention": "harris county",
    "entity2_uri": "http://dbpedia.org/resource/Tandem_Computers",
    "entity2_mention": "Tandem Computers"
},
{
    "id": "1675",
    "question": "List the characters of Lysistrata ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lysistrata> <http://dbpedia.org/property/characters> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/characters",
    "predicate1_mention": "characters",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lysistrata",
    "entity1_mention": "lysistrata",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1676",
    "question": "Where is the office of P Elmo Futrell Jr?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/P._Elmo_Futrell,_Jr.> <http://dbpedia.org/property/office> ?uri  . }",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/office",
    "predicate1_mention": "office",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/P._Elmo_Futrell,_Jr.",
    "entity1_mention": "P Elmo Futrell Jr",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1677",
    "question": "Which spouse of Ptolemy XIV had a mother named Ptolemy XII auletes ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ptolemy_XII_Auletes> . ?uri <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ptolemy_XIV_of_Egypt>  . }",
    "sparql_id": "8",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/parent",
    "predicate1_mention": "auletes",
    "predicate2_uri": "http://dbpedia.org/ontology/spouse",
    "predicate2_mention": "spouse",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ptolemy_XII_Auletes",
    "entity1_mention": "Ptolemy XIV",
    "entity2_uri": "http://dbpedia.org/resource/Ptolemy_XIV_of_Egypt",
    "entity2_mention": "Ptolemy XII auletes"
},
{
    "id": "1681",
    "question": "How many corporations were founded in Texas?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Texas>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/foundationPlace",
    "predicate1_mention": "founded",
    "predicate2_uri": "http://dbpedia.org/ontology/Company",
    "predicate2_mention": "corporations",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Texas",
    "entity1_mention": "texas",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1683",
    "question": "In which state is Red Willow Creek?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Red_Willow_Creek> <http://dbpedia.org/ontology/state> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/state",
    "predicate1_mention": "state",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Red_Willow_Creek",
    "entity1_mention": "Red Willow Creek",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1684",
    "question": "Where does Manu cornet work?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Manu_Cornet> <http://dbpedia.org/property/employer> ?uri  . }",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/employer",
    "predicate1_mention": "work",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Manu_Cornet",
    "entity1_mention": "Manu cornet",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1688",
    "question": "Count all the places where companies located in Ontario operate.",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Ontario> . ?x <http://dbpedia.org/property/locations> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/locationCity",
    "predicate1_mention": "located",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ontario",
    "entity1_mention": "ontario",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1689",
    "question": "What is the famous relative of Mrunalini Kunte known for?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Mrunalini_Kunte> . ?x <http://dbpedia.org/property/knownFor> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/relatives",
    "predicate1_mention": "relative",
    "predicate2_uri": "http://dbpedia.org/property/knownFor",
    "predicate2_mention": "known for",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mrunalini_Kunte",
    "entity1_mention": "mrunalini kunte",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1690",
    "question": "What is the resting place of the person who is the successor of James W. Hyatt ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/James_W._Hyatt> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "http://dbpedia.org/ontology/restingPlace",
    "predicate2_mention": "resting place",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "person",
    "entity1_uri": "http://dbpedia.org/resource/James_W._Hyatt",
    "entity1_mention": "James W. Hyatt",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1691",
    "question": "What politician's partner is Diana Taylor ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/partner> <http://dbpedia.org/resource/Diana_Taylor_(superintendent)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/partner",
    "predicate1_mention": "partner",
    "predicate2_uri": "http://dbpedia.org/ontology/Politician",
    "predicate2_mention": "politician's",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Diana_Taylor_(superintendent)",
    "entity1_mention": "Diana Taylor",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1692",
    "question": "Who was the architect of the stadium currently run by Brandenton?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/Bradenton,_Florida> . ?x <http://dbpedia.org/property/architect> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/operator",
    "predicate1_mention": "brandenton",
    "predicate2_uri": "http://dbpedia.org/property/architect",
    "predicate2_mention": "architect",
    "type_uri": "http://dbpedia.org/ontology/Stadium",
    "type_mention": "stadium",
    "entity1_uri": "http://dbpedia.org/resource/Bradenton,_Florida",
    "entity1_mention": "Brandenton",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1694",
    "question": "What is the academic journal whose editor is Stephen Law?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/editor> <http://dbpedia.org/resource/Stephen_Law>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AcademicJournal>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/editor",
    "predicate1_mention": "editor",
    "predicate2_uri": "http://dbpedia.org/ontology/AcademicJournal",
    "predicate2_mention": "academic journal",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Stephen_Law",
    "entity1_mention": "Stephen Law",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1695",
    "question": "Does Jean Louis Arcand work for Geneva?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jean-Louis_Arcand> <http://dbpedia.org/property/institution> <http://dbpedia.org/resource/Geneva> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/institution",
    "predicate1_mention": "work for",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jean-Louis_Arcand",
    "entity1_mention": "Jean Louis Arcand",
    "entity2_uri": "http://dbpedia.org/resource/Geneva",
    "entity2_mention": "geneva"
},
{
    "id": "1697",
    "question": "List the people died in Hyderabad and are a member of political party ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Hyderabad> . ?x <http://dbpedia.org/ontology/party> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate1_mention": "died in",
    "predicate2_uri": "http://dbpedia.org/ontology/party",
    "predicate2_mention": "party",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hyderabad",
    "entity1_mention": "hyderabad",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1698",
    "question": "What kind of buildings were designed by Pyusawhti?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Pyusawhti> . ?x <http://dbpedia.org/ontology/type> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/architect",
    "predicate1_mention": "designed",
    "predicate2_uri": "http://dbpedia.org/ontology/type",
    "predicate2_mention": "kind of",
    "type_uri": "http://dbpedia.org/ontology/Building",
    "type_mention": "buildings",
    "entity1_uri": "http://dbpedia.org/resource/Pyusawhti",
    "entity1_mention": "pyusawhti",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1699",
    "question": "Is Esther Alder the mayor of Geneva?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Geneva> <http://dbpedia.org/property/mayor> <http://dbpedia.org/resource/Esther_Alder> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/mayor",
    "predicate1_mention": "mayor",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Geneva",
    "entity1_mention": "geneva",
    "entity2_uri": "http://dbpedia.org/resource/Esther_Alder",
    "entity2_mention": "esther alder"
},
{
    "id": "1700",
    "question": "What are the baseball players who played for San Francisco Giants?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/San_Francisco_Giants>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballPlayer>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/team",
    "predicate1_mention": "played for",
    "predicate2_uri": "http://dbpedia.org/ontology/BaseballPlayer",
    "predicate2_mention": "baseball players",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/San_Francisco_Giants",
    "entity1_mention": "San Francisco Giants",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1702",
    "question": "Which ship builder built the USS Camp and Sturtevant ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/USS_Camp_(DE-251)> <http://dbpedia.org/property/shipBuilder> ?uri. <http://dbpedia.org/resource/USS_Sturtevant_(DE-239)> <http://dbpedia.org/property/shipBuilder> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/shipBuilder",
    "predicate1_mention": "ship builder",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/USS_Camp_(DE-251)",
    "entity1_mention": "USS Camp",
    "entity2_uri": "http://dbpedia.org/resource/USS_Sturtevant_(DE-239)",
    "entity2_mention": "sturtevant"
},
{
    "id": "1703",
    "question": "Where does the Jerusalem Institute of Justice render their services?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerusalem_Institute_of_Justice> <http://dbpedia.org/ontology/service> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/service",
    "predicate1_mention": "services",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jerusalem_Institute_of_Justice",
    "entity1_mention": "Jerusalem Institute of Justice",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1704",
    "question": "What are some movies whose score is composed by relatives of Bodhi Elfman?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Bodhi_Elfman> . ?uri <http://dbpedia.org/property/music> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/relatives",
    "predicate1_mention": "relatives",
    "predicate2_uri": "http://dbpedia.org/property/music",
    "predicate2_mention": "composed",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Bodhi_Elfman",
    "entity1_mention": "Bodhi Elfman",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1705",
    "question": "Which political party got elected in First Legislative Assembly of Uttar Pradesh ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/First_Legislative_Assembly_of_Uttar_Pradesh> <http://dbpedia.org/property/party> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/party",
    "predicate1_mention": "party",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/First_Legislative_Assembly_of_Uttar_Pradesh",
    "entity1_mention": "First Legislative Assembly of Uttar Pradesh",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1706",
    "question": "How many companies were founded in Menlo Park, California?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/Menlo_Park,_California>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/foundation",
    "predicate1_mention": "founded",
    "predicate2_uri": "http://dbpedia.org/ontology/Company",
    "predicate2_mention": "companies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Menlo_Park,_California",
    "entity1_mention": "Menlo Park, California",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1708",
    "question": "Which bands are associated to David Paton?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedBand> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedBand",
    "predicate1_mention": "associated",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/David_Paton",
    "entity1_mention": "David Paton",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1709",
    "question": "Who wrote a streetcar named desire?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/A_Streetcar_Named_Desire_(play)> <http://dbpedia.org/property/writer> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/writer",
    "predicate1_mention": "wrote",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/A_Streetcar_Named_Desire_(play)",
    "entity1_mention": "streetcar named desire",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1710",
    "question": "What sports can be played at universities in Metro Manila?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/state> <http://dbpedia.org/resource/Metro_Manila> . ?x <http://dbpedia.org/property/athletics> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/state",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/athletics",
    "predicate2_mention": "played",
    "type_uri": "http://dbpedia.org/ontology/University",
    "type_mention": "universities",
    "entity1_uri": "http://dbpedia.org/resource/Metro_Manila",
    "entity1_mention": "Metro Manila",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1711",
    "question": "Where does Kafue and Shire river flow into?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kafue_River> <http://dbpedia.org/ontology/riverMouth> ?uri. <http://dbpedia.org/resource/Shire_River> <http://dbpedia.org/ontology/riverMouth> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/riverMouth",
    "predicate1_mention": "river flow into",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kafue_River",
    "entity1_mention": "kafue",
    "entity2_uri": "http://dbpedia.org/resource/Shire_River",
    "entity2_mention": "shire river"
},
{
    "id": "1712",
    "question": "Which US state gave  us Brian Deegan and Harold Lyold?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brian_Deegan_(rider)> <http://dbpedia.org/property/birthPlace> ?uri. <http://dbpedia.org/resource/Harold_Lloyd> <http://dbpedia.org/property/birthPlace> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/birthPlace",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/birthPlace",
    "predicate2_mention": "gave",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Brian_Deegan_(rider)",
    "entity1_mention": "Brian Deegan",
    "entity2_uri": "http://dbpedia.org/resource/Harold_Lloyd",
    "entity2_mention": "Harold Lyold"
},
{
    "id": "1713",
    "question": "Who is the president when Loretta Ucelli used to work for Democratic party?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Loretta_Ucelli> <http://dbpedia.org/ontology/president> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/president",
    "predicate1_mention": "president",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Loretta_Ucelli",
    "entity1_mention": "loretta ucelli",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1714",
    "question": "was Charlemagne canonized by antipope pachal 3?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Charlemagne> <http://dbpedia.org/property/canonizedBy> <http://dbpedia.org/resource/Antipope_Paschal_III> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/canonizedBy",
    "predicate1_mention": "canonized by",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Charlemagne",
    "entity1_mention": "charlemagne",
    "entity2_uri": "http://dbpedia.org/resource/Antipope_Paschal_III",
    "entity2_mention": "antipope pachal 3"
},
{
    "id": "1716",
    "question": "Is Akan spoken in Ghana?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ghana> <http://dbpedia.org/property/languages> <http://dbpedia.org/resource/Akan_language> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/languages",
    "predicate1_mention": "spoken in",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ghana",
    "entity1_mention": "ghana",
    "entity2_uri": "http://dbpedia.org/resource/Akan_language",
    "entity2_mention": "akan"
},
{
    "id": "1717",
    "question": "How many basketball players studied in the Midland College?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/college> <http://dbpedia.org/resource/Midland_College>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/college",
    "predicate1_mention": "college",
    "predicate2_uri": "http://dbpedia.org/ontology/BasketballPlayer",
    "predicate2_mention": "basketball players",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Midland_College",
    "entity1_mention": "midland college",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1718",
    "question": "Rickenbacker is a musical instrument played by which artists?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Rickenbacker>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/instrument",
    "predicate1_mention": "instrument",
    "predicate2_uri": "http://dbpedia.org/ontology/MusicalArtist",
    "predicate2_mention": "musical",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Rickenbacker",
    "entity1_mention": "rickenbacker",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1720",
    "question": "Is Liang Chow the headcoach of Shawn Johnson?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Shawn_Johnson> <http://dbpedia.org/property/headcoach> <http://dbpedia.org/resource/Liang_Chow> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/headcoach",
    "predicate1_mention": "headcoach",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Shawn_Johnson",
    "entity1_mention": "Shawn Johnson",
    "entity2_uri": "http://dbpedia.org/resource/Liang_Chow",
    "entity2_mention": "liang chow"
},
{
    "id": "1721",
    "question": "List the work institute of the medicians who has also worked at University of Miami ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/workInstitutions> <http://dbpedia.org/resource/University_of_Miami> . ?x <http://dbpedia.org/property/workInstitutions> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Medician>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/workInstitutions",
    "predicate1_mention": "work institute",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Medician",
    "type_mention": "medicians",
    "entity1_uri": "http://dbpedia.org/resource/University_of_Miami",
    "entity1_mention": "University of Miami",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1723",
    "question": "In which television shows has Eliza Schneider given her voice?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Eliza_Schneider>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/voices",
    "predicate1_mention": "voice",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "television shows",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Eliza_Schneider",
    "entity1_mention": "Eliza Schneider",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1725",
    "question": "From which country is Lawrence Okoye's nationality ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lawrence_Okoye> <http://dbpedia.org/property/nationality> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/nationality",
    "predicate1_mention": "nationality",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lawrence_Okoye",
    "entity1_mention": "Lawrence Okoye's",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1726",
    "question": "Which american football players currently plays for Michigan Wolverines?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentteam> <http://dbpedia.org/resource/Michigan_Wolverines>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/currentteam",
    "predicate1_mention": "currently plays for",
    "predicate2_uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
    "predicate2_mention": "american football players",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Michigan_Wolverines",
    "entity1_mention": "Michigan Wolverines",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1727",
    "question": "What is the location of the Walter Evans Edge office which is also the place of birth of henry Miller ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Walter_Evans_Edge> <http://dbpedia.org/property/office> ?uri. <http://dbpedia.org/resource/Henry_Miller_Shreve> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/office",
    "predicate1_mention": "office",
    "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate2_mention": "place of birth",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Walter_Evans_Edge",
    "entity1_mention": "walter evans edge",
    "entity2_uri": "http://dbpedia.org/resource/Henry_Miller_Shreve",
    "entity2_mention": "henry Miller"
},
{
    "id": "1728",
    "question": "What is the base currency of Benelux ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Benelux> <http://dbpedia.org/property/currency> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/currency",
    "predicate1_mention": "currency",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Benelux",
    "entity1_mention": "benelux",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1729",
    "question": "What other destinations do airlines go to, whose flights also come to Glasgow?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Glasgow_Airport> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/targetAirport",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/destinations",
    "predicate2_mention": "destinations",
    "type_uri": "http://dbpedia.org/ontology/Airline",
    "type_mention": "airlines",
    "entity1_uri": "http://dbpedia.org/resource/Glasgow_Airport",
    "entity1_mention": "glasgow",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1730",
    "question": "List down the common sports played by PATTS College of Aeronautics and lytechnic University of the Philippines Taguig ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/PATTS_College_of_Aeronautics> <http://dbpedia.org/property/athletics> ?uri. <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig> <http://dbpedia.org/ontology/sport> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/athletics",
    "predicate1_mention": "aeronautics",
    "predicate2_uri": "http://dbpedia.org/ontology/sport",
    "predicate2_mention": "sports",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/PATTS_College_of_Aeronautics",
    "entity1_mention": "PATTS College of Aeronautics",
    "entity2_uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig",
    "entity2_mention": "lytechnic University of the Philippines Taguig"
},
{
    "id": "1731",
    "question": "Where did Steve Romeo dies ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Steve_Romeo> <http://dbpedia.org/ontology/deathPlace> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate1_mention": "dies",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Steve_Romeo",
    "entity1_mention": "steve romeo",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1732",
    "question": "Of the sports commonly played at Islamic Azad Uni, tehran, which one does Jon Speelman play?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jon_Speelman> <http://dbpedia.org/ontology/field> ?uri. <http://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch> <http://dbpedia.org/ontology/sport> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/field",
    "predicate1_mention": "played",
    "predicate2_uri": "http://dbpedia.org/ontology/sport",
    "predicate2_mention": "sports",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jon_Speelman",
    "entity1_mention": "Jon Speelman",
    "entity2_uri": "http://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch",
    "entity2_mention": "Islamic Azad Uni, tehran, "
},
{
    "id": "1735",
    "question": "What is the birth location of the pope who was canonized by Agatha of Sicily?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Agatha_of_Sicily> <http://dbpedia.org/ontology/canonizedBy> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Pope>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/canonizedBy",
    "predicate1_mention": "canonized by",
    "predicate2_uri": "http://dbpedia.org/property/birthPlace",
    "predicate2_mention": "birth location",
    "type_uri": "http://dbpedia.org/ontology/Pope",
    "type_mention": "pope",
    "entity1_uri": "http://dbpedia.org/resource/Agatha_of_Sicily",
    "entity1_mention": "Agatha of Sicily",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1736",
    "question": "Who have become famous by movies produced by Laurence Mark?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Laurence_Mark> . ?uri <http://dbpedia.org/ontology/knownFor> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/producer",
    "predicate1_mention": "produced",
    "predicate2_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate2_mention": "famous",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Laurence_Mark",
    "entity1_mention": "laurence mark",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1737",
    "question": "What is the common country of Ganz UV and Balaton wine region ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ganz_UV> <http://dbpedia.org/ontology/operator> ?uri. <http://dbpedia.org/resource/Balaton_wine_region> <http://dbpedia.org/ontology/location> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/operator",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/location",
    "predicate2_mention": "country",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ganz_UV",
    "entity1_mention": "ganz uv",
    "entity2_uri": "http://dbpedia.org/resource/Balaton_wine_region",
    "entity2_mention": "Balaton wine region"
},
{
    "id": "1738",
    "question": "What organization is the parent of Greenpeace Nordic?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Greenpeace_Nordic> <http://dbpedia.org/ontology/parentOrganisation> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/parentOrganisation",
    "predicate1_mention": "organization is the parent",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Greenpeace_Nordic",
    "entity1_mention": "greenpeace nordic",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1739",
    "question": "Give me some softwares which run on mac os",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Mac_OS>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/operatingSystem",
    "predicate1_mention": "os",
    "predicate2_uri": "http://dbpedia.org/ontology/Software",
    "predicate2_mention": "softwares",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mac_OS",
    "entity1_mention": "mac os",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1740",
    "question": "Which destination of the Novair International Airways is also the  predecessor of the Chevrolet Caprice?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Novair_International_Airways> <http://dbpedia.org/ontology/destination> ?uri. <http://dbpedia.org/resource/Chevrolet_Caprice> <http://dbpedia.org/ontology/predecessor> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/destination",
    "predicate1_mention": "destination",
    "predicate2_uri": "http://dbpedia.org/ontology/predecessor",
    "predicate2_mention": "predecessor",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Novair_International_Airways",
    "entity1_mention": "Novair International Airways",
    "entity2_uri": "http://dbpedia.org/resource/Chevrolet_Caprice",
    "entity2_mention": "chevrolet caprice"
},
{
    "id": "1741",
    "question": "What are some scientists who have stateless citizenship?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/citizenship> <http://dbpedia.org/resource/Statelessness>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/citizenship",
    "predicate1_mention": "citizenship",
    "predicate2_uri": "http://dbpedia.org/ontology/Scientist",
    "predicate2_mention": "scientists",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Statelessness",
    "entity1_mention": "stateless",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1742",
    "question": "List the doctoral students of Harry Harlow ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Harry_Harlow> <http://dbpedia.org/property/doctoralStudents> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/doctoralStudents",
    "predicate1_mention": "doctoral students",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Harry_Harlow",
    "entity1_mention": "Harry Harlow",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1743",
    "question": "Panthera leo fossils and Liger belong to which species?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Panthera_leo_fossilis> <http://dbpedia.org/ontology/species> ?uri. <http://dbpedia.org/resource/Liger> <http://dbpedia.org/ontology/species> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/species",
    "predicate1_mention": "species",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Panthera_leo_fossilis",
    "entity1_mention": "Panthera leo fossils",
    "entity2_uri": "http://dbpedia.org/resource/Liger",
    "entity2_mention": "liger"
},
{
    "id": "1744",
    "question": "which awards have been given to people who fought in the Battle of France?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_France> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/battle",
    "predicate1_mention": "battle",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "awards",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Battle_of_France",
    "entity1_mention": "Battle of France",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1745",
    "question": "How many people have been trained in an institute located in California?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/California> . ?uri <http://dbpedia.org/property/training> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/city",
    "predicate1_mention": "located",
    "predicate2_uri": "http://dbpedia.org/property/training",
    "predicate2_mention": "trained",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/California",
    "entity1_mention": "california",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1746",
    "question": "Which composer subsequent work of Moondog Matinee and also composed The TImes They are A changin ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)> <http://dbpedia.org/ontology/musicBy> ?uri. <http://dbpedia.org/resource/Moondog_Matinee> <http://dbpedia.org/ontology/subsequentWork> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/musicBy",
    "predicate1_mention": "composed",
    "predicate2_uri": "http://dbpedia.org/ontology/subsequentWork",
    "predicate2_mention": "subsequent work",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)",
    "entity1_mention": "The TImes They are A changin",
    "entity2_uri": "http://dbpedia.org/resource/Moondog_Matinee",
    "entity2_mention": "moondog matinee"
},
{
    "id": "1747",
    "question": "Name whose youth club was FC Barcelona ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/youthclubs> <http://dbpedia.org/resource/FC_Barcelona>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/youthclubs",
    "predicate1_mention": "youth club",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/FC_Barcelona",
    "entity1_mention": "FC Barcelona",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1748",
    "question": "Which religion does the leader of Church and Wellesley follow?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Church_and_Wellesley> <http://dbpedia.org/property/leaderName> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/leaderName",
    "predicate1_mention": "leader",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religion",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Church_and_Wellesley",
    "entity1_mention": "Church and Wellesley",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1749",
    "question": "What is the citizenship of Erastus Wiman ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Erastus_Wiman> <http://dbpedia.org/ontology/citizenship> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/citizenship",
    "predicate1_mention": "citizenship",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Erastus_Wiman",
    "entity1_mention": "erastus wiman",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1750",
    "question": "Does the Amazon River start in Arequipa Region?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Amazon_River> <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/Arequipa_Region> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/sourceRegion",
    "predicate1_mention": "region",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Amazon_River",
    "entity1_mention": "amazon river",
    "entity2_uri": "http://dbpedia.org/resource/Arequipa_Region",
    "entity2_mention": "arequipa region"
},
{
    "id": "1751",
    "question": "Which is the nearest city to Elliott Bay ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elliott_Bay> <http://dbpedia.org/ontology/nearestCity> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/nearestCity",
    "predicate1_mention": "nearest city",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Elliott_Bay",
    "entity1_mention": "elliott bay",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1752",
    "question": "What magazine is Marritt Cabal known for which has Lucifer Hammer as publisher ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Merritt_Cabal> <http://dbpedia.org/ontology/knownFor> ?uri. <http://dbpedia.org/resource/Lucifer's_Hammer> <http://dbpedia.org/ontology/publisher> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate1_mention": "known for",
    "predicate2_uri": "http://dbpedia.org/ontology/publisher",
    "predicate2_mention": "publisher",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Merritt_Cabal",
    "entity1_mention": "Marritt Cabal",
    "entity2_uri": "http://dbpedia.org/resource/Lucifer's_Hammer",
    "entity2_mention": "lucifer hammer"
},
{
    "id": "1754",
    "question": "List the movie whose music was given by Geoffrey Burgon and distributed by Cinema International Corporation?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Geoffrey_Burgon> . ?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Cinema_International_Corporation>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/musicComposer",
    "predicate1_mention": "music",
    "predicate2_uri": "http://dbpedia.org/ontology/distributor",
    "predicate2_mention": "distributed",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movie",
    "entity1_uri": "http://dbpedia.org/resource/Geoffrey_Burgon",
    "entity1_mention": "geoffrey burgon",
    "entity2_uri": "http://dbpedia.org/resource/Cinema_International_Corporation",
    "entity2_mention": "Cinema International Corporation"
},
{
    "id": "1755",
    "question": "Which series has an episode called The lost special and also a character named Sherlock Holmes ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Lost_Special> <http://dbpedia.org/property/series> ?uri. <http://dbpedia.org/resource/Sherlock_Holmes_(play)> <http://dbpedia.org/property/characters> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/series",
    "predicate1_mention": "series",
    "predicate2_uri": "http://dbpedia.org/property/characters",
    "predicate2_mention": "character",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Lost_Special",
    "entity1_mention": "The lost special",
    "entity2_uri": "http://dbpedia.org/resource/Sherlock_Holmes_(play)",
    "entity2_mention": "sherlock holmes"
},
{
    "id": "1756",
    "question": "Which football teams is Shahid Khan proprietor to?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/owner> <http://dbpedia.org/resource/Shahid_Khan> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/owner",
    "predicate1_mention": "proprietor",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Shahid_Khan",
    "entity1_mention": "shahid khan",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1758",
    "question": "Which football players currently have their contracts with Stoke City F.C.?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/Stoke_City_F.C.> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/currentclub",
    "predicate1_mention": "currently",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Stoke_City_F.C.",
    "entity1_mention": "Stoke City F.C.",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1760",
    "question": "What are all the prizes won by the writer of A Grand Day Out?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/A_Grand_Day_Out> <http://dbpedia.org/ontology/writer> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/writer",
    "predicate1_mention": "writer",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "prizes",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/A_Grand_Day_Out",
    "entity1_mention": "A Grand Day Out",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1762",
    "question": "Which magazine has publisher as Jann Wenner?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Jann_Wenner>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/publisher",
    "predicate1_mention": "publisher",
    "predicate2_uri": "http://dbpedia.org/ontology/Magazine",
    "predicate2_mention": "magazine",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jann_Wenner",
    "entity1_mention": "Jann Wenner",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1763",
    "question": "Where are Thomas Franois Burgers and Johannes Gerhardus Strijdom buried?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thomas_Fran\u00e7ois_Burgers> <http://dbpedia.org/property/restingplace> ?uri. <http://dbpedia.org/resource/Johannes_Gerhardus_Strijdom> <http://dbpedia.org/property/restingplace> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/restingplace",
    "predicate1_mention": "buried",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Thomas_Fran\u00e7ois_Burgers",
    "entity1_mention": "Thomas Franois Burgers",
    "entity2_uri": "http://dbpedia.org/resource/Johannes_Gerhardus_Strijdom",
    "entity2_mention": "Johannes Gerhardus Strijdom"
},
{
    "id": "1764",
    "question": "where are renaissance centers located?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Renaissance_Center> <http://dbpedia.org/property/address> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/address",
    "predicate1_mention": "located",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Renaissance_Center",
    "entity1_mention": "renaissance centers",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1765",
    "question": "What are the broadcast areas of Mauritius Broadcasting Corporation?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mauritius_Broadcasting_Corporation> <http://dbpedia.org/property/broadcastArea> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/broadcastArea",
    "predicate1_mention": "broadcast areas",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mauritius_Broadcasting_Corporation",
    "entity1_mention": "Mauritius Broadcasting Corporation",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1766",
    "question": "Where is the ground of the soccer club, which has Alan Kusov as a team member ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alan_Kusov__11> <http://dbpedia.org/ontology/team> ?x . ?x <http://dbpedia.org/ontology/ground> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/team",
    "predicate1_mention": "team",
    "predicate2_uri": "http://dbpedia.org/ontology/ground",
    "predicate2_mention": "ground",
    "type_uri": "http://dbpedia.org/ontology/SoccerClub",
    "type_mention": "soccer club",
    "entity1_uri": "http://dbpedia.org/resource/Alan_Kusov__11",
    "entity1_mention": "Alan Kusov",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1767",
    "question": "which president was served by Joseph Stiglitz?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Joseph_Stiglitz> <http://dbpedia.org/property/president> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/president",
    "predicate1_mention": "president",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Joseph_Stiglitz",
    "entity1_mention": "Joseph Stiglitz",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1768",
    "question": "What is the nickname of the club managed by Piotr baron?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Piotr_Baron> . ?x <http://dbpedia.org/property/nickname> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/manager",
    "predicate1_mention": "managed",
    "predicate2_uri": "http://dbpedia.org/property/nickname",
    "predicate2_mention": "nickname",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Piotr_Baron",
    "entity1_mention": "piotr baron",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1769",
    "question": "Give the name of the river with source place as Australian Alps and has mouth place as Goolwa , a place in Siyuth Australia ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Australian_Alps> . ?uri <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/Goolwa,_South_Australia>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/sourcePlace",
    "predicate1_mention": "source place",
    "predicate2_uri": "http://dbpedia.org/ontology/mouthPlace",
    "predicate2_mention": "mouth place",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "river",
    "entity1_uri": "http://dbpedia.org/resource/Australian_Alps",
    "entity1_mention": "australian alps",
    "entity2_uri": "http://dbpedia.org/resource/Goolwa,_South_Australia",
    "entity2_mention": "Goolwa , a place in Siyuth Australia"
},
{
    "id": "1770",
    "question": "Did Trish Stratus train Christina Crawford?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Christina_Crawford_(wrestler)> <http://dbpedia.org/property/trainer> <http://dbpedia.org/resource/Trish_Stratus> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/trainer",
    "predicate1_mention": "train",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Christina_Crawford_(wrestler)",
    "entity1_mention": "christina crawford",
    "entity2_uri": "http://dbpedia.org/resource/Trish_Stratus",
    "entity2_mention": "Trish Stratus"
},
{
    "id": "1771",
    "question": "Who is the writer of the Cavalcade of America and The United States Steel Hour ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cavalcade_of_America> <http://dbpedia.org/ontology/writer> ?uri. <http://dbpedia.org/resource/The_United_States_Steel_Hour> <http://dbpedia.org/ontology/writer> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/writer",
    "predicate1_mention": "writer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Cavalcade_of_America",
    "entity1_mention": "Cavalcade of America",
    "entity2_uri": "http://dbpedia.org/resource/The_United_States_Steel_Hour",
    "entity2_mention": "united states steel hour"
},
{
    "id": "1772",
    "question": "To what nation do Victor Gunasekara and Anuruddha Ratwatte owe their allegiance?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Victor_Gunasekara> <http://dbpedia.org/property/allegiance> ?uri. <http://dbpedia.org/resource/Anuruddha_Ratwatte> <http://dbpedia.org/property/allegiance> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/allegiance",
    "predicate1_mention": "allegiance",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Victor_Gunasekara",
    "entity1_mention": "Victor Gunasekara",
    "entity2_uri": "http://dbpedia.org/resource/Anuruddha_Ratwatte",
    "entity2_mention": "anuruddha ratwatte"
},
{
    "id": "1773",
    "question": "Which artists have co-starred with Kris Kristofferson?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Kris_Kristofferson>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/associatedActs",
    "predicate1_mention": "co-starred with",
    "predicate2_uri": "http://dbpedia.org/ontology/Artist",
    "predicate2_mention": "artists",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kris_Kristofferson",
    "entity1_mention": "Kris Kristofferson",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1774",
    "question": "Count the total religions followed by the ones living in England.",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/England> . ?x <http://dbpedia.org/property/religion> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/residence",
    "predicate1_mention": "living in",
    "predicate2_uri": "http://dbpedia.org/property/religion",
    "predicate2_mention": "religions",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/England",
    "entity1_mention": "England",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1775",
    "question": "Which club of Michael Springer is also the parent organization of Syracuse University press ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Springer> <http://dbpedia.org/property/team> ?uri. <http://dbpedia.org/resource/Syracuse_University_Press> <http://dbpedia.org/property/parent> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/team",
    "predicate1_mention": "club",
    "predicate2_uri": "http://dbpedia.org/property/parent",
    "predicate2_mention": "parent",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Michael_Springer",
    "entity1_mention": "Michael Springer",
    "entity2_uri": "http://dbpedia.org/resource/Syracuse_University_Press",
    "entity2_mention": "Syracuse University press"
},
{
    "id": "1776",
    "question": "Name the cover artist of the adventure of Tom sawyer ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer> <http://dbpedia.org/ontology/coverArtist> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/coverArtist",
    "predicate1_mention": "cover artist",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer",
    "entity1_mention": "the adventure of Tom sawyer",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1777",
    "question": "Which river flows through both eastern and western washington?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eastern_Washington> <http://dbpedia.org/ontology/river> ?uri. <http://dbpedia.org/resource/Central_Washington> <http://dbpedia.org/ontology/river> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/river",
    "predicate1_mention": "river",
    "predicate2_uri": "http://dbpedia.org/ontology/river",
    "predicate2_mention": "river",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Eastern_Washington",
    "entity1_mention": "eastern",
    "entity2_uri": "http://dbpedia.org/resource/Central_Washington",
    "entity2_mention": "western washington"
},
{
    "id": "1778",
    "question": "What is the nationality of the golf player who won the 2002 Players Championship ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2002_Players_Championship> <http://dbpedia.org/ontology/champion> ?x . ?x <http://dbpedia.org/ontology/nationality> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/champion",
    "predicate1_mention": "championship",
    "predicate2_uri": "http://dbpedia.org/ontology/nationality",
    "predicate2_mention": "nationality",
    "type_uri": "http://dbpedia.org/ontology/GolfPlayer",
    "type_mention": "golf player",
    "entity1_uri": "http://dbpedia.org/resource/2002_Players_Championship",
    "entity1_mention": "the 2002 Players Championship",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1779",
    "question": "Who was the president under which people won the United States House of Representatives elections in 1790 ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1790> <http://dbpedia.org/property/leader> ?x . ?x <http://dbpedia.org/property/president> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/leader",
    "predicate1_mention": "under",
    "predicate2_uri": "http://dbpedia.org/property/president",
    "predicate2_mention": "president",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "president",
    "entity1_uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1790",
    "entity1_mention": "United States House of Representatives elections in 1790",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1780",
    "question": "Which companies are founded in the city of which Collin County Texas is a part?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/part> <http://dbpedia.org/resource/Collin_County,_Texas> . ?uri <http://dbpedia.org/ontology/foundationPlace> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/part",
    "predicate1_mention": "part",
    "predicate2_uri": "http://dbpedia.org/ontology/foundationPlace",
    "predicate2_mention": "founded",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "companies",
    "entity1_uri": "http://dbpedia.org/resource/Collin_County,_Texas",
    "entity1_mention": "Collin County Texas",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1781",
    "question": "Terminal Station at Chattanooga is made by architects from which University?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/knownFor> <http://dbpedia.org/resource/Terminal_Station_(Chattanooga)> . ?x <http://dbpedia.org/property/education> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/knownFor",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/education",
    "predicate2_mention": "university",
    "type_uri": "http://dbpedia.org/ontology/Architect",
    "type_mention": "architects",
    "entity1_uri": "http://dbpedia.org/resource/Terminal_Station_(Chattanooga)",
    "entity1_mention": "Terminal Station at Chattanooga",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1782",
    "question": "Which home stadium of 2011-12 FC Spartak Moscow season is also the location of birth of the Svetlana Gounkina ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2011\u201312_FC_Spartak_Moscow_season> <http://dbpedia.org/ontology/homeStadium> ?uri. <http://dbpedia.org/resource/Svetlana_Gounkina> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/homeStadium",
    "predicate1_mention": "home stadium",
    "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate2_mention": "the location of birth",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/2011\u201312_FC_Spartak_Moscow_season",
    "entity1_mention": "2011-12 FC Spartak Moscow season",
    "entity2_uri": "http://dbpedia.org/resource/Svetlana_Gounkina",
    "entity2_mention": "svetlana gounkina"
},
{
    "id": "1783",
    "question": "Who is the former partner of Chris Knierim ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chris_Knierim> <http://dbpedia.org/ontology/formerPartner> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/formerPartner",
    "predicate1_mention": "former partner",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Chris_Knierim",
    "entity1_mention": "Chris Knierim",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1784",
    "question": "What is the predecessor of BMW M40 ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/BMW_M40> <http://dbpedia.org/property/predecessor> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/predecessor",
    "predicate1_mention": "predecessor",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/BMW_M40",
    "entity1_mention": "BMW M40",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1785",
    "question": "How many different pole drivers are there, of the GPs when Renault was the first team?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/firstTeam> <http://dbpedia.org/resource/Renault_in_Formula_One> . ?x <http://dbpedia.org/ontology/poleDriver> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FormulaOneRacer>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/firstTeam",
    "predicate1_mention": "first team",
    "predicate2_uri": "http://dbpedia.org/ontology/poleDriver",
    "predicate2_mention": "pole drivers",
    "type_uri": "http://dbpedia.org/ontology/FormulaOneRacer",
    "type_mention": "different",
    "entity1_uri": "http://dbpedia.org/resource/Renault_in_Formula_One",
    "entity1_mention": "Renault was the first team",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1786",
    "question": "What is the former team of the football player who is the coach of 2006 Oakland Raiders season ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2006_Oakland_Raiders_season> <http://dbpedia.org/property/coach> ?x . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/coach",
    "predicate1_mention": "coach",
    "predicate2_uri": "http://dbpedia.org/ontology/formerTeam",
    "predicate2_mention": "former team",
    "type_uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
    "type_mention": "football player",
    "entity1_uri": "http://dbpedia.org/resource/2006_Oakland_Raiders_season",
    "entity1_mention": "2006 Oakland Raiders season",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1787",
    "question": "Amongst the winner of Lovelace medal, who has John Robert as doctoral supervisor ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/John_Robert_Woodyard> . ?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Lovelace_Medal>  . }",
    "sparql_id": "8",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/doctoralAdvisor",
    "predicate1_mention": "doctoral supervisor",
    "predicate2_uri": "http://dbpedia.org/property/prizes",
    "predicate2_mention": "winner",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/John_Robert_Woodyard",
    "entity1_mention": "John Robert",
    "entity2_uri": "http://dbpedia.org/resource/Lovelace_Medal",
    "entity2_mention": "Lovelace medal"
},
{
    "id": "1788",
    "question": "who was the australian flagbearer of 2008 Summer Olympics?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Australia_at_the_2008_Summer_Olympics> <http://dbpedia.org/property/flagbearer> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/flagbearer",
    "predicate1_mention": "flagbearer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Australia_at_the_2008_Summer_Olympics",
    "entity1_mention": "australian flagbearer of 2008 Summer Olympics",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1789",
    "question": "Whose mam is Bertrada of Laon?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Bertrada_of_Laon> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/mother",
    "predicate1_mention": "mam",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bertrada_of_Laon",
    "entity1_mention": "Bertrada of Laon",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1790",
    "question": "List the leaders of all the cities through which the Ganga river flows ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ganges> <http://dbpedia.org/property/city> ?x . ?x <http://dbpedia.org/ontology/leaderName> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/city",
    "predicate1_mention": "cities",
    "predicate2_uri": "http://dbpedia.org/ontology/leaderName",
    "predicate2_mention": "leaders",
    "type_uri": "http://dbpedia.org/ontology/City",
    "type_mention": "cities",
    "entity1_uri": "http://dbpedia.org/resource/Ganges",
    "entity1_mention": "Ganga",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1791",
    "question": "What is the common citizenship between JSM Hopoer and Robert Valentine ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/J._S._M._Hooper> <http://dbpedia.org/ontology/citizenship> ?uri. <http://dbpedia.org/resource/Robert_Valentine_(composer)> <http://dbpedia.org/ontology/country> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/citizenship",
    "predicate1_mention": "citizenship",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/J._S._M._Hooper",
    "entity1_mention": "JSM Hopoer",
    "entity2_uri": "http://dbpedia.org/resource/Robert_Valentine_(composer)",
    "entity2_mention": "Robert Valentine"
},
{
    "id": "1793",
    "question": "What are all the TV shows which are related to the ones produced by Julie Gardner?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Julie_Gardner> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/executiveProducer",
    "predicate1_mention": "produced",
    "predicate2_uri": "http://dbpedia.org/ontology/related",
    "predicate2_mention": "related",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "TV shows",
    "entity1_uri": "http://dbpedia.org/resource/Julie_Gardner",
    "entity1_mention": "Julie Gardner",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1795",
    "question": "Which football teams are in a city where Oakland Athletics were the tenants?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Oakland_Athletics> . ?uri <http://dbpedia.org/ontology/locationCity> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballTeam>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/tenant",
    "predicate1_mention": "tenants",
    "predicate2_uri": "http://dbpedia.org/ontology/locationCity",
    "predicate2_mention": "city",
    "type_uri": "http://dbpedia.org/ontology/AmericanFootballTeam",
    "type_mention": "football",
    "entity1_uri": "http://dbpedia.org/resource/Oakland_Athletics",
    "entity1_mention": "Oakland Athletics",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1796",
    "question": "How many people have worked in the band one of whose current member is Hynief?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Hynief> . ?x <http://dbpedia.org/ontology/bandMember> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/currentMembers",
    "predicate1_mention": "current member",
    "predicate2_uri": "http://dbpedia.org/ontology/bandMember",
    "predicate2_mention": "member",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Hynief",
    "entity1_mention": "hynief",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1797",
    "question": "What is the residence of the bronze medalist of Alpine skiing at the women's downhill competition at the 1972 Winter Olympics?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alpine_skiing_at_the_1972_Winter_Olympics_\u2013_Women's_downhill> <http://dbpedia.org/ontology/bronzeMedalist> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/bronzeMedalist",
    "predicate1_mention": "bronze medalist",
    "predicate2_uri": "http://dbpedia.org/property/birthPlace",
    "predicate2_mention": "residence",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Alpine_skiing_at_the_1972_Winter_Olympics_\u2013_Women's_downhill",
    "entity1_mention": "Alpine skiing at the women's downhill competition at the 1972 Winter Olympics",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1798",
    "question": "Does Mt St. Peter Churt follow the architectural style of art deco?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mount_St._Peter_Church> <http://dbpedia.org/property/architecture> <http://dbpedia.org/resource/Art_Deco> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/architecture",
    "predicate1_mention": "architectural",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mount_St._Peter_Church",
    "entity1_mention": "Mt St. Peter Churt",
    "entity2_uri": "http://dbpedia.org/resource/Art_Deco",
    "entity2_mention": "art deco"
},
{
    "id": "1799",
    "question": "Which companies published Super Mario Adventures?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Super_Mario_Adventures> <http://dbpedia.org/property/publisher> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/publisher",
    "predicate1_mention": "published",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Super_Mario_Adventures",
    "entity1_mention": "Super Mario Adventures",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1800",
    "question": "King crimson has been recorded in which places?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/King_Crimson> . ?x <http://dbpedia.org/ontology/recordedIn> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/artist",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/recordedIn",
    "predicate2_mention": "recorded in",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/King_Crimson",
    "entity1_mention": "King crimson",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1801",
    "question": "Is william doyle the chairman of Georgetown university?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Georgetown_University> <http://dbpedia.org/property/chairman> <http://dbpedia.org/resource/William_Doyle_(businessman)> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/chairman",
    "predicate1_mention": "chairman",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Georgetown_University",
    "entity1_mention": "Georgetown university",
    "entity2_uri": "http://dbpedia.org/resource/William_Doyle_(businessman)",
    "entity2_mention": "william doyle"
},
{
    "id": "1803",
    "question": "Count me all the video game distributor whose parent company is Warner Bros ?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/Warner_Bros.> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/parent",
    "predicate1_mention": "parent",
    "predicate2_uri": "http://dbpedia.org/property/distributor",
    "predicate2_mention": "distributor",
    "type_uri": "http://dbpedia.org/ontology/VideoGame",
    "type_mention": "video game",
    "entity1_uri": "http://dbpedia.org/resource/Warner_Bros.",
    "entity1_mention": "warner bros",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1804",
    "question": "Was Elizabeth Ann Seton canonized by Pope Paul VI?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Elizabeth_Ann_Seton> <http://dbpedia.org/property/canonizedBy> <http://dbpedia.org/resource/Pope_Paul_VI> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/canonizedBy",
    "predicate1_mention": "canonized by",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Elizabeth_Ann_Seton",
    "entity1_mention": "Elizabeth Ann Seton",
    "entity2_uri": "http://dbpedia.org/resource/Pope_Paul_VI",
    "entity2_mention": "Pope Paul VI"
},
{
    "id": "1805",
    "question": "Is Sao Paulo the largest city of Brazil?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Brazil> <http://dbpedia.org/property/largestCity> <http://dbpedia.org/resource/S\u00e3o_Paulo> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/largestCity",
    "predicate1_mention": "largest city",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Brazil",
    "entity1_mention": "brazil",
    "entity2_uri": "http://dbpedia.org/resource/S\u00e3o_Paulo",
    "entity2_mention": "Sao Paulo"
},
{
    "id": "1807",
    "question": "What are the nicknames of the schools whose color is royal blue?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/colour> <http://dbpedia.org/resource/Royal_blue> . ?x <http://dbpedia.org/property/nickname> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/colour",
    "predicate1_mention": "color",
    "predicate2_uri": "http://dbpedia.org/property/nickname",
    "predicate2_mention": "nicknames",
    "type_uri": "http://dbpedia.org/ontology/School",
    "type_mention": "schools",
    "entity1_uri": "http://dbpedia.org/resource/Royal_blue",
    "entity1_mention": "royal blue",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1808",
    "question": "Was David Gilmour a former member of Pink Floyd?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Pink_Floyd> <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/David_Gilmour> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/formerBandMember",
    "predicate1_mention": "former member",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Pink_Floyd",
    "entity1_mention": "Pink Floyd",
    "entity2_uri": "http://dbpedia.org/resource/David_Gilmour",
    "entity2_mention": "David Gilmour"
},
{
    "id": "1809",
    "question": "Name the office holder who has a child named lori Black and Harvard Westlake school as one of the educational institute ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Lori_Black> . ?uri <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Harvard-Westlake_School>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/children",
    "predicate1_mention": "child",
    "predicate2_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate2_mention": "school",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "office holder",
    "entity1_uri": "http://dbpedia.org/resource/Lori_Black",
    "entity1_mention": "lori Black",
    "entity2_uri": "http://dbpedia.org/resource/Harvard-Westlake_School",
    "entity2_mention": "Harvard Westlake school"
},
{
    "id": "1811",
    "question": "Name the sstadium of 2015 Pro Duta FC season ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2015_Pro_Duta_FC_season> <http://dbpedia.org/property/stadium> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/stadium",
    "predicate1_mention": "sstadium",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/2015_Pro_Duta_FC_season",
    "entity1_mention": "2015 Pro Duta FC season",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1812",
    "question": "What is the region served by Toll Global Express and also borders Siberia ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Toll_Global_Express> <http://dbpedia.org/ontology/regionServed> ?uri. <http://dbpedia.org/resource/Siberia> <http://dbpedia.org/ontology/border> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/regionServed",
    "predicate1_mention": "region served",
    "predicate2_uri": "http://dbpedia.org/ontology/border",
    "predicate2_mention": "borders",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Toll_Global_Express",
    "entity1_mention": "Toll Global Express",
    "entity2_uri": "http://dbpedia.org/resource/Siberia",
    "entity2_mention": "siberia"
},
{
    "id": "1813",
    "question": "Where is the tombstone of the congressman who died in the McLean hospital?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/McLean_Hospital> . ?x <http://dbpedia.org/property/restingplace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Congressman>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate1_mention": "died in",
    "predicate2_uri": "http://dbpedia.org/property/restingplace",
    "predicate2_mention": "tombstone",
    "type_uri": "http://dbpedia.org/ontology/Congressman",
    "type_mention": "congressman",
    "entity1_uri": "http://dbpedia.org/resource/McLean_Hospital",
    "entity1_mention": "McLean hospital",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1814",
    "question": "Which writer is famous for works written by Neil Gaiman?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/writers> <http://dbpedia.org/resource/Neil_Gaiman> . ?uri <http://dbpedia.org/ontology/notableWork> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/writers",
    "predicate1_mention": "writer",
    "predicate2_uri": "http://dbpedia.org/ontology/notableWork",
    "predicate2_mention": "works",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Neil_Gaiman",
    "entity1_mention": "Neil Gaiman",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1815",
    "question": "What awards have been given to citizens of the Ottoman Empire?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/citizenship> <http://dbpedia.org/resource/Ottoman_Empire> . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/citizenship",
    "predicate1_mention": "citizens",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ottoman_Empire",
    "entity1_mention": "ottoman empire",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1817",
    "question": "Who are the shareholder of the broadcast networks whose owning company is Jamie Kellner?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/Jamie_Kellner> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BroadcastNetwork>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/owningCompany",
    "predicate1_mention": "owning company",
    "predicate2_uri": "http://dbpedia.org/property/owner",
    "predicate2_mention": "owning",
    "type_uri": "http://dbpedia.org/ontology/BroadcastNetwork",
    "type_mention": "broadcast networks",
    "entity1_uri": "http://dbpedia.org/resource/Jamie_Kellner",
    "entity1_mention": "Jamie Kellner",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1818",
    "question": "List the state of the universities whose nation is United States ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/country",
    "predicate1_mention": "nation",
    "predicate2_uri": "http://dbpedia.org/ontology/state",
    "predicate2_mention": "state",
    "type_uri": "http://dbpedia.org/ontology/University",
    "type_mention": "universities",
    "entity1_uri": "http://dbpedia.org/resource/United_States",
    "entity1_mention": "United States",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1820",
    "question": "What faith of Buddhist Tai Hung College is also the acadmeic interest of Paul Demiville ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Paul_Demi\u00e9ville> <http://dbpedia.org/property/fields> ?uri. <http://dbpedia.org/resource/Buddhist_Tai_Hung_College> <http://dbpedia.org/property/religion> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/fields",
    "predicate1_mention": "faith",
    "predicate2_uri": "http://dbpedia.org/property/religion",
    "predicate2_mention": "acadmeic interest",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Paul_Demi\u00e9ville",
    "entity1_mention": "Paul Demiville",
    "entity2_uri": "http://dbpedia.org/resource/Buddhist_Tai_Hung_College",
    "entity2_mention": "Buddhist Tai Hung College"
},
{
    "id": "1821",
    "question": "What are the software whose operating systems are Mac OS and Microsoft Windows?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Mac_OS> . ?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/operatingSystem",
    "predicate1_mention": "operating systems",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Software",
    "type_mention": "software",
    "entity1_uri": "http://dbpedia.org/resource/Mac_OS",
    "entity1_mention": "Mac OS",
    "entity2_uri": "http://dbpedia.org/resource/Microsoft_Windows",
    "entity2_mention": "microsoft windows"
},
{
    "id": "1822",
    "question": "Does the Utah State Route 162 end at Colorado?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Utah_State_Route_162> <http://dbpedia.org/ontology/routeEnd> <http://dbpedia.org/resource/Colorado> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/routeEnd",
    "predicate1_mention": "end at",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Utah_State_Route_162",
    "entity1_mention": "Utah State Route 162",
    "entity2_uri": "http://dbpedia.org/resource/Colorado",
    "entity2_mention": "colorado"
},
{
    "id": "1825",
    "question": "How many awards have been received by graduates of University of Melbourne, Faculty of VCA & MCM?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/training> <http://dbpedia.org/resource/University_of_Melbourne_Faculty_of_VCA_and_MCM> . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/training",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/University_of_Melbourne_Faculty_of_VCA_and_MCM",
    "entity1_mention": "University of Melbourne, Faculty of VCA & MCM",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1826",
    "question": "To which books Thomas Egerton, an editor?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Thomas_Egerton_(publisher)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/publisher",
    "predicate1_mention": "editor",
    "predicate2_uri": "http://dbpedia.org/ontology/Book",
    "predicate2_mention": "books",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Thomas_Egerton_(publisher)",
    "entity1_mention": "Thomas Egerton",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1829",
    "question": "In how many places has Garbage recorded their songs?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Garbage_(band)> . ?x <http://dbpedia.org/ontology/recordedIn> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/producer",
    "predicate1_mention": "places",
    "predicate2_uri": "http://dbpedia.org/ontology/recordedIn",
    "predicate2_mention": "recorded",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Garbage_(band)",
    "entity1_mention": "garbage",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1830",
    "question": "What award was won by executive producer of Shaun the Sheep?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Shaun_the_Sheep> <http://dbpedia.org/ontology/executiveProducer> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/executiveProducer",
    "predicate1_mention": "executive producer",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "award",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Shaun_the_Sheep",
    "entity1_mention": "Shaun the Sheep",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1831",
    "question": "Name the current club of Abdelhameed Amarri ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Abdelhameed_Amarri> <http://dbpedia.org/property/currentclub> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/currentclub",
    "predicate1_mention": "current club",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Abdelhameed_Amarri",
    "entity1_mention": "abdelhameed amarri",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1832",
    "question": "Whose songs are Tickle Me and Viva Las Vegas?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tickle_Me> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/Viva_Las_Vegas> <http://dbpedia.org/property/artist> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/artist",
    "predicate1_mention": "songs",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tickle_Me",
    "entity1_mention": "tickle me",
    "entity2_uri": "http://dbpedia.org/resource/Viva_Las_Vegas",
    "entity2_mention": "Viva Las Vegas"
},
{
    "id": "1833",
    "question": "Among the scientist known for Manhattan Project who had a doctoral student named Charles Ellis ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Charles_Drummond_Ellis> . ?uri <http://dbpedia.org/property/knownFor> <http://dbpedia.org/resource/Manhattan_Project>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/doctoralStudents",
    "predicate1_mention": "doctoral student",
    "predicate2_uri": "http://dbpedia.org/property/knownFor",
    "predicate2_mention": "known for",
    "type_uri": "http://dbpedia.org/ontology/Scientist",
    "type_mention": "scientist",
    "entity1_uri": "http://dbpedia.org/resource/Charles_Drummond_Ellis",
    "entity1_mention": "charles ellis",
    "entity2_uri": "http://dbpedia.org/resource/Manhattan_Project",
    "entity2_mention": "manhattan project"
},
{
    "id": "1835",
    "question": "Which club of perianne Lones is also the home town of the Kady O'Malley ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kady_O'Malley> <http://dbpedia.org/property/homeTown> ?uri. <http://dbpedia.org/resource/Perianne_Jones> <http://dbpedia.org/property/club> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/homeTown",
    "predicate1_mention": "home town",
    "predicate2_uri": "http://dbpedia.org/property/club",
    "predicate2_mention": "club",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kady_O'Malley",
    "entity1_mention": "Kady O'Malley",
    "entity2_uri": "http://dbpedia.org/resource/Perianne_Jones",
    "entity2_mention": "perianne Lones"
},
{
    "id": "1836",
    "question": "Which countries share a similar sociocultural and ethnic heritage of that of Native Indonesians?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Native_Indonesians> <http://dbpedia.org/property/region> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/region",
    "predicate1_mention": "share",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Native_Indonesians",
    "entity1_mention": "sociocultural and ethnic heritage of that of native indonesians",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1837",
    "question": "What is the television show whose opening theme's album is Cheers?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/album> <http://dbpedia.org/resource/Cheers> . ?uri <http://dbpedia.org/ontology/openingTheme> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/album",
    "predicate1_mention": "album",
    "predicate2_uri": "http://dbpedia.org/ontology/openingTheme",
    "predicate2_mention": "opening theme's",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television show",
    "entity1_uri": "http://dbpedia.org/resource/Cheers",
    "entity1_mention": "cheers",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1839",
    "question": "What are some organizations in Auckland created to do?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Auckland> . ?x <http://dbpedia.org/property/purpose> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/location",
    "predicate1_mention": "organizations",
    "predicate2_uri": "http://dbpedia.org/property/purpose",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Organisation",
    "type_mention": "organizations",
    "entity1_uri": "http://dbpedia.org/resource/Auckland",
    "entity1_mention": "auckland",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1840",
    "question": "Where are the agencies headquartered at, which are under the Colorado Dept of Natural Resources?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/parentOrganisation> <http://dbpedia.org/resource/Colorado_Department_of_Natural_Resources> . ?x <http://dbpedia.org/property/headquarters> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/parentOrganisation",
    "predicate1_mention": "agencies",
    "predicate2_uri": "http://dbpedia.org/property/headquarters",
    "predicate2_mention": "headquartered",
    "type_uri": "http://dbpedia.org/ontology/GovernmentAgency",
    "type_mention": "agencies",
    "entity1_uri": "http://dbpedia.org/resource/Colorado_Department_of_Natural_Resources",
    "entity1_mention": "Colorado Dept of Natural Resources",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1842",
    "question": "How many different religions have economists followed?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Economist> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/profession",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religions",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Economist",
    "entity1_mention": "economists",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1844",
    "question": "What borders siberia?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Siberia> <http://dbpedia.org/ontology/border> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/border",
    "predicate1_mention": "borders",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Siberia",
    "entity1_mention": "siberia",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1845",
    "question": "In which city where there is a headquarters of Orient News and also Feras Saied died?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Orient_News> <http://dbpedia.org/property/headquarters> ?uri. <http://dbpedia.org/resource/Feras_Saied> <http://dbpedia.org/ontology/deathPlace> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/headquarters",
    "predicate1_mention": "headquarters",
    "predicate2_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate2_mention": "died",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Orient_News",
    "entity1_mention": "orient news",
    "entity2_uri": "http://dbpedia.org/resource/Feras_Saied",
    "entity2_mention": "Feras Saied"
},
{
    "id": "1846",
    "question": "List the producers who produced movies starring Michael Jackson.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Michael_Jackson> . ?x <http://dbpedia.org/property/producer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/starring",
    "predicate1_mention": "starring",
    "predicate2_uri": "http://dbpedia.org/property/producer",
    "predicate2_mention": "producers",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Michael_Jackson",
    "entity1_mention": "Michael Jackson",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1847",
    "question": "In which department does Raymond Baldwin work?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Raymond_E._Baldwin> <http://dbpedia.org/property/branch> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/branch",
    "predicate1_mention": "department",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Raymond_E._Baldwin",
    "entity1_mention": "Raymond Baldwin",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1849",
    "question": "Jeff Munn is the president of which basketball team ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/president> <http://dbpedia.org/resource/Jeff_Munn>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballTeam>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/president",
    "predicate1_mention": "president",
    "predicate2_uri": "http://dbpedia.org/ontology/BasketballTeam",
    "predicate2_mention": "basketball team",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jeff_Munn",
    "entity1_mention": "Jeff Munn",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1850",
    "question": "What is the city  of the 2015 MLS All-Star Game and birthplace of the The Okee Dokee Brothers",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2015_MLS_All-Star_Game> <http://dbpedia.org/property/city> ?uri. <http://dbpedia.org/resource/The_Okee_Dokee_Brothers> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/city",
    "predicate1_mention": "city",
    "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate2_mention": "birthplace",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/2015_MLS_All-Star_Game",
    "entity1_mention": "2015 MLS All-Star Game",
    "entity2_uri": "http://dbpedia.org/resource/The_Okee_Dokee_Brothers",
    "entity2_mention": "The Okee Dokee Brothers"
},
{
    "id": "1851",
    "question": "How many had their debut team coached by Chip Kelly?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Chip_Kelly> . ?uri <http://dbpedia.org/ontology/debutTeam> ?x  . }",
    "sparql_id": "106",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/coach",
    "predicate1_mention": "coached",
    "predicate2_uri": "http://dbpedia.org/ontology/debutTeam",
    "predicate2_mention": "debut team",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Chip_Kelly",
    "entity1_mention": "Chip Kelly",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1855",
    "question": "Name the champion of National League ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/National_League> <http://dbpedia.org/property/champion> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/champion",
    "predicate1_mention": "champion",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/National_League",
    "entity1_mention": "national league",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1858",
    "question": "What is the device whose successor's CPU is by AMD?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/cpu> <http://dbpedia.org/resource/Advanced_Micro_Devices> . ?uri <http://dbpedia.org/ontology/successor> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Device>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/cpu",
    "predicate1_mention": "cpu",
    "predicate2_uri": "http://dbpedia.org/ontology/successor",
    "predicate2_mention": "successor's",
    "type_uri": "http://dbpedia.org/ontology/Device",
    "type_mention": "device",
    "entity1_uri": "http://dbpedia.org/resource/Advanced_Micro_Devices",
    "entity1_mention": "AMD",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1859",
    "question": "With whom is the institution of David Charles affiliated?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/David_Charles_(physician)> <http://dbpedia.org/property/workInstitutions> ?x . ?x <http://dbpedia.org/property/affiliation> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/workInstitutions",
    "predicate1_mention": "institution",
    "predicate2_uri": "http://dbpedia.org/property/affiliation",
    "predicate2_mention": "affiliated",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/David_Charles_(physician)",
    "entity1_mention": "David Charles",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1860",
    "question": "Which battle did both Steven Palazao and tony hogg fight in?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Steven_Palazzo> <http://dbpedia.org/property/battles> ?uri. <http://dbpedia.org/resource/Tony_Hogg> <http://dbpedia.org/property/battles> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/battles",
    "predicate1_mention": "battle",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Steven_Palazzo",
    "entity1_mention": "Steven Palazao",
    "entity2_uri": "http://dbpedia.org/resource/Tony_Hogg",
    "entity2_mention": "tony hogg"
},
{
    "id": "1861",
    "question": "Name the TV show whose producer is Stephen E. Ambrose and company is HBO ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Stephen_E._Ambrose> . ?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/HBO>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/producer",
    "predicate1_mention": "producer",
    "predicate2_uri": "http://dbpedia.org/ontology/company",
    "predicate2_mention": "company",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "TV show",
    "entity1_uri": "http://dbpedia.org/resource/Stephen_E._Ambrose",
    "entity1_mention": "Stephen E. Ambrose",
    "entity2_uri": "http://dbpedia.org/resource/HBO",
    "entity2_mention": "hbo"
},
{
    "id": "1862",
    "question": "What are the movies whose musicians's home town is Volos?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Volos> . ?uri <http://dbpedia.org/property/music> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/hometown",
    "predicate1_mention": "home town",
    "predicate2_uri": "http://dbpedia.org/property/music",
    "predicate2_mention": "musicians's",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Volos",
    "entity1_mention": "volos",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1864",
    "question": "List the school of Bobby Skinstad?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bobby_Skinstad> <http://dbpedia.org/property/school> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/school",
    "predicate1_mention": "school",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bobby_Skinstad",
    "entity1_mention": "Bobby Skinstad",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1866",
    "question": "Who authored the work illustrated by Hiroyuki Takei?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/illustrator> <http://dbpedia.org/resource/Hiroyuki_Takei> . ?x <http://dbpedia.org/property/author> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/illustrator",
    "predicate1_mention": "illustrated",
    "predicate2_uri": "http://dbpedia.org/property/author",
    "predicate2_mention": "authored",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hiroyuki_Takei",
    "entity1_mention": "hiroyuki takei",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1867",
    "question": "What made Jon Speelman and Eric Schiller famous?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jon_Speelman> <http://dbpedia.org/ontology/field> ?uri. <http://dbpedia.org/resource/Eric_Schiller> <http://dbpedia.org/ontology/knownFor> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/field",
    "predicate1_mention": "made",
    "predicate2_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate2_mention": "famous",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jon_Speelman",
    "entity1_mention": "Jon Speelman",
    "entity2_uri": "http://dbpedia.org/resource/Eric_Schiller",
    "entity2_mention": "Eric Schiller"
},
{
    "id": "1868",
    "question": "In which wars army men awarded with the Croix de Guerre, fought?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Croix_de_guerre_1939\u20131945_(France)> . ?x <http://dbpedia.org/property/battles> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/awards",
    "predicate1_mention": "awarded",
    "predicate2_uri": "http://dbpedia.org/property/battles",
    "predicate2_mention": "fought",
    "type_uri": "http://dbpedia.org/ontology/MilitaryPerson",
    "type_mention": "men",
    "entity1_uri": "http://dbpedia.org/resource/Croix_de_guerre_1939\u20131945_(France)",
    "entity1_mention": "Croix de Guerre",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1869",
    "question": "Which manufacturer of the Boeing B-17 Flying fortress is the manager of burro Flats Painted Caves ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Burro_Flats_Painted_Cave> <http://dbpedia.org/ontology/governingBody> ?uri. <http://dbpedia.org/resource/Boeing_B-17_Flying_Fortress> <http://dbpedia.org/ontology/manufacturer> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/governingBody",
    "predicate1_mention": "manager",
    "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate2_mention": "manufacturer",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Burro_Flats_Painted_Cave",
    "entity1_mention": "burro Flats Painted Caves",
    "entity2_uri": "http://dbpedia.org/resource/Boeing_B-17_Flying_Fortress",
    "entity2_mention": "Boeing B-17 Flying fortress"
},
{
    "id": "1870",
    "question": "List the saints venerated in Islam having major shrine as Tomb of Joshua ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/majorShrine> <http://dbpedia.org/resource/Tomb_of_Joshua> . ?uri <http://dbpedia.org/ontology/veneratedIn> <http://dbpedia.org/resource/Islam>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Saint>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/majorShrine",
    "predicate1_mention": "major shrine",
    "predicate2_uri": "http://dbpedia.org/ontology/veneratedIn",
    "predicate2_mention": "venerated",
    "type_uri": "http://dbpedia.org/ontology/Saint",
    "type_mention": "saints",
    "entity1_uri": "http://dbpedia.org/resource/Tomb_of_Joshua",
    "entity1_mention": "Tomb of Joshua",
    "entity2_uri": "http://dbpedia.org/resource/Islam",
    "entity2_mention": "islam"
},
{
    "id": "1871",
    "question": "How many people currently play for Stoke City F.C.?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/Stoke_City_F.C.>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/currentclub",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Stoke_City_F.C.",
    "entity1_mention": "Stoke City F.C.",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1872",
    "question": "In how many different places can I find companies which were founded in toronto?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Toronto> . ?x <http://dbpedia.org/property/locations> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/foundationPlace",
    "predicate1_mention": "founded in",
    "predicate2_uri": "http://dbpedia.org/property/locations",
    "predicate2_mention": "places",
    "type_uri": "http://dbpedia.org/ontology/Place",
    "type_mention": "places",
    "entity1_uri": "http://dbpedia.org/resource/Toronto",
    "entity1_mention": "toronto",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1873",
    "question": "How many organizations own the website to which Jimmy Wales contributes?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Jimmy_Wales> . ?x <http://dbpedia.org/ontology/owner> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/author",
    "predicate1_mention": "contributes",
    "predicate2_uri": "http://dbpedia.org/ontology/owner",
    "predicate2_mention": "own",
    "type_uri": "http://dbpedia.org/ontology/Organisation",
    "type_mention": "organizations",
    "entity1_uri": "http://dbpedia.org/resource/Jimmy_Wales",
    "entity1_mention": "Jimmy Wales",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1874",
    "question": "List the former team of the american football players born in Pennsylvania ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Pennsylvania> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate1_mention": "born in",
    "predicate2_uri": "http://dbpedia.org/ontology/formerTeam",
    "predicate2_mention": "former team",
    "type_uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
    "type_mention": "american football players",
    "entity1_uri": "http://dbpedia.org/resource/Pennsylvania",
    "entity1_mention": "pennsylvania",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1875",
    "question": "Through how many cities does the river flowing into Arkansas go?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Arkansas> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/mouthMountain",
    "predicate1_mention": "river flowing into",
    "predicate2_uri": "http://dbpedia.org/ontology/city",
    "predicate2_mention": "cities",
    "type_uri": "http://dbpedia.org/ontology/City",
    "type_mention": "cities",
    "entity1_uri": "http://dbpedia.org/resource/Arkansas",
    "entity1_mention": "arkansas",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1876",
    "question": "Which fictional character's relatives were made by Ted Osborne?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Ted_Osborne> . ?uri <http://dbpedia.org/property/relatives> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/creator",
    "predicate1_mention": "were made by",
    "predicate2_uri": "http://dbpedia.org/property/relatives",
    "predicate2_mention": "relatives",
    "type_uri": "http://dbpedia.org/ontology/FictionalCharacter",
    "type_mention": "fictional character's",
    "entity1_uri": "http://dbpedia.org/resource/Ted_Osborne",
    "entity1_mention": "Ted Osborne",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1877",
    "question": "List the relatives of the children of Jon Voight ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jon_Voight> <http://dbpedia.org/property/children> ?x . ?x <http://dbpedia.org/ontology/relative> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/children",
    "predicate1_mention": "children",
    "predicate2_uri": "http://dbpedia.org/ontology/relative",
    "predicate2_mention": "relatives",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jon_Voight",
    "entity1_mention": "Jon Voight",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1878",
    "question": "who are the managers of england national under 20 football team?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/managerclubs> <http://dbpedia.org/resource/England_national_under-20_football_team> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/managerclubs",
    "predicate1_mention": "managers",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/England_national_under-20_football_team",
    "entity1_mention": "england national under 20 football team",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1880",
    "question": "Did Jim Kiick do his highschool in New Jersey?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jim_Kiick> <http://dbpedia.org/property/highSchool> <http://dbpedia.org/resource/New_Jersey> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/highSchool",
    "predicate1_mention": "highschool",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jim_Kiick",
    "entity1_mention": "Jim Kiick",
    "entity2_uri": "http://dbpedia.org/resource/New_Jersey",
    "entity2_mention": "New Jersey"
},
{
    "id": "1881",
    "question": "What shows are on the networks which are from the United States?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/locationCountry> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/locationCountry",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/network",
    "predicate2_mention": "networks",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "shows",
    "entity1_uri": "http://dbpedia.org/resource/United_States",
    "entity1_mention": "united states",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1882",
    "question": "Who have rented the stadium operated by Maple Leaf S&E?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/operator> <http://dbpedia.org/resource/Maple_Leaf_Sports_&_Entertainment> . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/operator",
    "predicate1_mention": "operated",
    "predicate2_uri": "http://dbpedia.org/ontology/tenant",
    "predicate2_mention": "rented",
    "type_uri": "http://dbpedia.org/ontology/Stadium",
    "type_mention": "stadium",
    "entity1_uri": "http://dbpedia.org/resource/Maple_Leaf_Sports_&_Entertainment",
    "entity1_mention": "Maple Leaf S&E",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1883",
    "question": "Was the song The Boy is Mine recorded in Atlanta?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Boy_Is_Mine_(song)> <http://dbpedia.org/property/recorded> <http://dbpedia.org/resource/Atlanta> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/recorded",
    "predicate1_mention": "recorded",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Boy_Is_Mine_(song)",
    "entity1_mention": "The Boy is Mine",
    "entity2_uri": "http://dbpedia.org/resource/Atlanta",
    "entity2_mention": "atlanta"
},
{
    "id": "1884",
    "question": "Where is Snake Island located ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Snake_Island_(Black_Sea)> <http://dbpedia.org/property/locationCountry> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/locationCountry",
    "predicate1_mention": "located",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Snake_Island_(Black_Sea)",
    "entity1_mention": "Snake Island",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1885",
    "question": "How many things do bridges designed by the UEM group go over?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/UEM_Group> . ?x <http://dbpedia.org/property/crosses> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/designer",
    "predicate1_mention": "designed",
    "predicate2_uri": "http://dbpedia.org/property/crosses",
    "predicate2_mention": "go over",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/UEM_Group",
    "entity1_mention": "UEM group",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1886",
    "question": "Who is the fictional character who portrayed in Terminator 2: Judgment Day?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Terminator_2:_Judgment_Day>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/portrayer",
    "predicate1_mention": "portrayed",
    "predicate2_uri": "http://dbpedia.org/ontology/FictionalCharacter",
    "predicate2_mention": "fictional character",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Terminator_2:_Judgment_Day",
    "entity1_mention": " Terminator 2: Judgment Day",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1888",
    "question": "Who composed songs in the Mr Tambourine Man album?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/album> <http://dbpedia.org/resource/Mr._Tambourine_Man_(album)> . ?x <http://dbpedia.org/ontology/composer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/album",
    "predicate1_mention": "album",
    "predicate2_uri": "http://dbpedia.org/ontology/composer",
    "predicate2_mention": "composed",
    "type_uri": "http://dbpedia.org/ontology/Song",
    "type_mention": "songs",
    "entity1_uri": "http://dbpedia.org/resource/Mr._Tambourine_Man_(album)",
    "entity1_mention": "Mr Tambourine Man album",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1889",
    "question": "What are the relatives of the parliament member whose successor is Peter Thorneycroft?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Peter_Thorneycroft> . ?x <http://dbpedia.org/ontology/relation> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MemberOfParliament>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "http://dbpedia.org/ontology/relation",
    "predicate2_mention": "relatives",
    "type_uri": "http://dbpedia.org/ontology/MemberOfParliament",
    "type_mention": "parliament member",
    "entity1_uri": "http://dbpedia.org/resource/Peter_Thorneycroft",
    "entity1_mention": "Peter Thorneycroft",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1890",
    "question": "Which movies' music is composed by people associated with the band Yes?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Yes_(band)> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
    "predicate1_mention": "associated",
    "predicate2_uri": "http://dbpedia.org/ontology/musicComposer",
    "predicate2_mention": "composed",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies'",
    "entity1_uri": "http://dbpedia.org/resource/Yes_(band)",
    "entity1_mention": "band yes",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1891",
    "question": "What is the death place of the Marina Pankova and Viktor Ulyanich?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marina_Pankova> <http://dbpedia.org/ontology/deathPlace> ?uri. <http://dbpedia.org/resource/Viktor_Ulyanich> <http://dbpedia.org/ontology/deathPlace> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate1_mention": "death place",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Marina_Pankova",
    "entity1_mention": "Marina Pankova",
    "entity2_uri": "http://dbpedia.org/resource/Viktor_Ulyanich",
    "entity2_mention": "Viktor Ulyanich"
},
{
    "id": "1892",
    "question": "Which american football player's current team is Michigan Wolverines and former team was  Baltimore Ravens ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentteam> <http://dbpedia.org/resource/Michigan_Wolverines> . ?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/1998_Baltimore_Ravens_season>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/currentteam",
    "predicate1_mention": "current team",
    "predicate2_uri": "http://dbpedia.org/ontology/formerTeam",
    "predicate2_mention": "former team",
    "type_uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
    "type_mention": "american football player's",
    "entity1_uri": "http://dbpedia.org/resource/Michigan_Wolverines",
    "entity1_mention": "Michigan Wolverines",
    "entity2_uri": "http://dbpedia.org/resource/1998_Baltimore_Ravens_season",
    "entity2_mention": "baltimore ravens"
},
{
    "id": "1893",
    "question": "What famous work is derived from the one whose lyrics are written by Inma Gonzales?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/lyrics> <http://dbpedia.org/resource/Inma_Gonz\u00e1lez> . ?x <http://dbpedia.org/ontology/basedOn> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/lyrics",
    "predicate1_mention": "lyrics",
    "predicate2_uri": "http://dbpedia.org/ontology/basedOn",
    "predicate2_mention": "derived from",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Inma_Gonz\u00e1lez",
    "entity1_mention": "Inma Gonzales",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1894",
    "question": "How many services are there of the companies whose services is Web hosting service ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Web_hosting_service> . ?x <http://dbpedia.org/property/services> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/services",
    "predicate1_mention": "services",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Web_hosting_service",
    "entity1_mention": "Web hosting service",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1896",
    "question": "What is the ethnicity of Linda Hogan ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Linda_Hogan> <http://dbpedia.org/property/ethnicity> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/ethnicity",
    "predicate1_mention": "ethnicity",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Linda_Hogan",
    "entity1_mention": "linda hogan",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1897",
    "question": "What are the veneration of the one for which there's a major shrine in Hebron?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/majorShrine> <http://dbpedia.org/resource/Hebron> . ?x <http://dbpedia.org/property/veneratedIn> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/majorShrine",
    "predicate1_mention": "major shrine",
    "predicate2_uri": "http://dbpedia.org/property/veneratedIn",
    "predicate2_mention": "veneration",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hebron",
    "entity1_mention": "hebron",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1898",
    "question": "By which university is the literary magazine named Stone Canoe published?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Stone_Canoe> <http://dbpedia.org/ontology/publisher> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/publisher",
    "predicate1_mention": "published",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Stone_Canoe",
    "entity1_mention": " stone canoe published",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1900",
    "question": "How many politicians are in the militia?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Militia>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/branch",
    "predicate1_mention": "politicians",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Militia",
    "entity1_mention": "militia",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1901",
    "question": "Name the rivers whose source country's capital is Lusaka?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Lusaka> . ?uri <http://dbpedia.org/ontology/sourceCountry> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/capital",
    "predicate1_mention": "capital",
    "predicate2_uri": "http://dbpedia.org/ontology/sourceCountry",
    "predicate2_mention": "source country's",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "rivers",
    "entity1_uri": "http://dbpedia.org/resource/Lusaka",
    "entity1_mention": "lusaka",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1902",
    "question": "What is the source country of Water resources managemnt in EL Salvador is also the land of Jos MAra Orellana ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Water_resources_management_in_El_Salvador> <http://dbpedia.org/property/sourceCountry> ?uri. <http://dbpedia.org/resource/Jos\u00e9_Mar\u00eda_Orellana> <http://dbpedia.org/ontology/country> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/sourceCountry",
    "predicate1_mention": "source country",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "country",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Water_resources_management_in_El_Salvador",
    "entity1_mention": "Water resources managemnt in EL Salvador",
    "entity2_uri": "http://dbpedia.org/resource/Jos\u00e9_Mar\u00eda_Orellana",
    "entity2_mention": "Jos MAra Orellana"
},
{
    "id": "1903",
    "question": "From where is Quinn Ojinnaka billed?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Quinn_Ojinnaka> <http://dbpedia.org/property/billed> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/billed",
    "predicate1_mention": "billed",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Quinn_Ojinnaka",
    "entity1_mention": "Quinn Ojinnaka",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1904",
    "question": "What are the movies produced by Michael Deeley?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Michael_Deeley>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/producer",
    "predicate1_mention": "produced",
    "predicate2_uri": "http://dbpedia.org/ontology/Film",
    "predicate2_mention": "movies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Michael_Deeley",
    "entity1_mention": "michael deeley",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1905",
    "question": "Some movies whose screenplay is done by american born people?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/screenplay> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate1_mention": "born",
    "predicate2_uri": "http://dbpedia.org/property/screenplay",
    "predicate2_mention": "screenplay",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_States",
    "entity1_mention": "american",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1907",
    "question": "Which colonel consort is Dolley Madison?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Colonel_(United_States)> . ?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Dolley_Madison>  . }",
    "sparql_id": "8",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/rank",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/spouse",
    "predicate2_mention": "consort",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Colonel_(United_States)",
    "entity1_mention": "colonel",
    "entity2_uri": "http://dbpedia.org/resource/Dolley_Madison",
    "entity2_mention": "dolley madison"
},
{
    "id": "1909",
    "question": "Which company ownes stock in Dagenham turbines and Ford Motor credit?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Motor_Credit_Company> <http://dbpedia.org/property/owner> ?uri. <http://dbpedia.org/resource/Dagenham_wind_turbines> <http://dbpedia.org/property/owner> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/owner",
    "predicate1_mention": "ownes",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ford_Motor_Credit_Company",
    "entity1_mention": "Ford Motor credit",
    "entity2_uri": "http://dbpedia.org/resource/Dagenham_wind_turbines",
    "entity2_mention": "Dagenham turbines"
},
{
    "id": "1910",
    "question": "Who are the writers of South Park: The Stick of Truth?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Park:_The_Stick_of_Truth> <http://dbpedia.org/property/writer> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/writer",
    "predicate1_mention": "writers",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/South_Park:_The_Stick_of_Truth",
    "entity1_mention": "South Park: The Stick of Truth",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1911",
    "question": "Enumerate all those who are in the Board of companies founded in New York?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/New_York> . ?uri <http://dbpedia.org/ontology/board> ?x  . }",
    "sparql_id": "106",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/foundation",
    "predicate1_mention": "founded",
    "predicate2_uri": "http://dbpedia.org/ontology/board",
    "predicate2_mention": "board",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/New_York",
    "entity1_mention": "New York",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1912",
    "question": "Name the television show developed by J. Michael Straczynski and distributed by Warner Bros. Television?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/J._Michael_Straczynski> . ?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Warner_Bros._Television>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/developer",
    "predicate1_mention": "developed",
    "predicate2_uri": "http://dbpedia.org/property/distributor",
    "predicate2_mention": "distributed",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television show",
    "entity1_uri": "http://dbpedia.org/resource/J._Michael_Straczynski",
    "entity1_mention": "J. Michael Straczynski",
    "entity2_uri": "http://dbpedia.org/resource/Warner_Bros._Television",
    "entity2_mention": "Warner Bros. Television"
},
{
    "id": "1913",
    "question": "Who did Bruce Bochy play for ? ",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bruce_Bochy> <http://dbpedia.org/ontology/team> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/team",
    "predicate1_mention": "play",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bruce_Bochy",
    "entity1_mention": "bruce bochy",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1914",
    "question": "Was Michael Schumacher a pole driver in the 1999 GP?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/1999_Japanese_Grand_Prix> <http://dbpedia.org/property/poleDriver> <http://dbpedia.org/resource/Michael_Schumacher> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/poleDriver",
    "predicate1_mention": "pole driver",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/1999_Japanese_Grand_Prix",
    "entity1_mention": "1999 GP",
    "entity2_uri": "http://dbpedia.org/resource/Michael_Schumacher",
    "entity2_mention": "Michael Schumacher"
},
{
    "id": "1915",
    "question": "How many universities participate in the NCAA Division I Football Bowl Subdivision?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/athletics> <http://dbpedia.org/resource/NCAA_Division_I_Football_Bowl_Subdivision>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/athletics",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/University",
    "predicate2_mention": "universities",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/NCAA_Division_I_Football_Bowl_Subdivision",
    "entity1_mention": "NCAA Division I Football Bowl Subdivision",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1916",
    "question": "Who directed the albums recorded in Anaheim?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/recordedIn> <http://dbpedia.org/resource/Anaheim,_California> . ?x <http://dbpedia.org/property/director> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/recordedIn",
    "predicate1_mention": "recorded",
    "predicate2_uri": "http://dbpedia.org/property/director",
    "predicate2_mention": "directed",
    "type_uri": "http://dbpedia.org/ontology/Album",
    "type_mention": "albums",
    "entity1_uri": "http://dbpedia.org/resource/Anaheim,_California",
    "entity1_mention": "anaheim",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1918",
    "question": "What is the home town of the band which is the artist of Your Ice Cream's Dirty ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Your_Ice_Cream's_Dirty> <http://dbpedia.org/property/artist> ?x . ?x <http://dbpedia.org/ontology/hometown> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/artist",
    "predicate1_mention": "artist",
    "predicate2_uri": "http://dbpedia.org/ontology/hometown",
    "predicate2_mention": "home town",
    "type_uri": "http://dbpedia.org/ontology/Band",
    "type_mention": "band",
    "entity1_uri": "http://dbpedia.org/resource/Your_Ice_Cream's_Dirty",
    "entity1_mention": "Your Ice Cream's Dirty",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1919",
    "question": "Which writer of the Snaman is also the writer of Neverwher ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Sandman_(Vertigo)> <http://dbpedia.org/property/writers> ?uri. <http://dbpedia.org/resource/Neverwhere_(radio_play)> <http://dbpedia.org/ontology/writer> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/writers",
    "predicate1_mention": "writer",
    "predicate2_uri": "http://dbpedia.org/ontology/writer",
    "predicate2_mention": "writer",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Sandman_(Vertigo)",
    "entity1_mention": "the Snaman",
    "entity2_uri": "http://dbpedia.org/resource/Neverwhere_(radio_play)",
    "entity2_mention": "neverwher"
},
{
    "id": "1920",
    "question": "How many religion's people have died in Malaysia?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Malaysia> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate1_mention": "died in",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religion's",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Malaysia",
    "entity1_mention": "malaysia",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1921",
    "question": "How many people have managed a club which owns the Riverside Stadium?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/ground> <http://dbpedia.org/resource/Riverside_Stadium> . ?uri <http://dbpedia.org/ontology/managerClub> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/ground",
    "predicate1_mention": "owns",
    "predicate2_uri": "http://dbpedia.org/ontology/managerClub",
    "predicate2_mention": "managed a club",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Riverside_Stadium",
    "entity1_mention": "riverside stadium",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1922",
    "question": "Which river's source mountain is Baikal Mountains and it's mouth is Lena Delta Wildlife Reserve?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Baikal_Mountains> . ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Lena_Delta_Wildlife_Reserve>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/sourceMountain",
    "predicate1_mention": "source mountain",
    "predicate2_uri": "http://dbpedia.org/ontology/riverMouth",
    "predicate2_mention": "mouth",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "river's",
    "entity1_uri": "http://dbpedia.org/resource/Baikal_Mountains",
    "entity1_mention": "Baikal Mountains",
    "entity2_uri": "http://dbpedia.org/resource/Lena_Delta_Wildlife_Reserve",
    "entity2_mention": "Lena Delta Wildlife Reserve"
},
{
    "id": "1923",
    "question": "Name the person whose daughter is Rohan Marley and also another children named Sharon Marley ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Rohan_Marley> . ?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Sharon_Marley>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/child",
    "predicate1_mention": "children",
    "predicate2_uri": "http://dbpedia.org/property/children",
    "predicate2_mention": "children",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "person",
    "entity1_uri": "http://dbpedia.org/resource/Rohan_Marley",
    "entity1_mention": "Rohan Marley",
    "entity2_uri": "http://dbpedia.org/resource/Sharon_Marley",
    "entity2_mention": "sharon marley"
},
{
    "id": "1924",
    "question": "Name the members of European Go Federation?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/European_Go_Federation> <http://dbpedia.org/property/membership> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/membership",
    "predicate1_mention": "members",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/European_Go_Federation",
    "entity1_mention": "European Go Federation",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1925",
    "question": "What is the state of origin of the person who is the successor of Tetsugen Bernard Glassman?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tetsugen_Bernard_Glassman> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/ontology/stateOfOrigin> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "http://dbpedia.org/ontology/stateOfOrigin",
    "predicate2_mention": "state of origin",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "person",
    "entity1_uri": "http://dbpedia.org/resource/Tetsugen_Bernard_Glassman",
    "entity1_mention": "Tetsugen Bernard Glassman",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1926",
    "question": "How many other wine region are there of the grapes whose one of the wine region is Michigan ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/wineRegion> <http://dbpedia.org/resource/Michigan> . ?x <http://dbpedia.org/ontology/wineRegion> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/wineRegion",
    "predicate1_mention": "wine region",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Michigan",
    "entity1_mention": "michigan",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1927",
    "question": "Where was WiZeefa founded ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WiZeefa> <http://dbpedia.org/property/foundation> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/foundation",
    "predicate1_mention": "founded",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/WiZeefa",
    "entity1_mention": "wizeefa",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1928",
    "question": "To which families does the Koolakamba belong ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Koolakamba> <http://dbpedia.org/ontology/family> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/family",
    "predicate1_mention": "families",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Koolakamba",
    "entity1_mention": "koolakamba",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1929",
    "question": "What Orson Welles directed movie has  photography director as Gregg Toland ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Gregg_Toland> . ?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Orson_Welles>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/cinematography",
    "predicate1_mention": "photography",
    "predicate2_uri": "http://dbpedia.org/property/director",
    "predicate2_mention": "director",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movie",
    "entity1_uri": "http://dbpedia.org/resource/Gregg_Toland",
    "entity1_mention": "Gregg Toland",
    "entity2_uri": "http://dbpedia.org/resource/Orson_Welles",
    "entity2_mention": "Orson Welles"
},
{
    "id": "1932",
    "question": "How many awards have screenwriters won?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Screenwriter> . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/occupation",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Screenwriter",
    "entity1_mention": "screenwriters",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1933",
    "question": "What is the local authority of the Buckhurst Hill County High School is also the birth place of Sarah hampion ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Buckhurst_Hill_County_High_School> <http://dbpedia.org/ontology/localAuthority> ?uri. <http://dbpedia.org/resource/Sarah_Champion_(presenter)> <http://dbpedia.org/property/birthPlace> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/localAuthority",
    "predicate1_mention": "local authority",
    "predicate2_uri": "http://dbpedia.org/property/birthPlace",
    "predicate2_mention": "birth place",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Buckhurst_Hill_County_High_School",
    "entity1_mention": "Buckhurst Hill County High School",
    "entity2_uri": "http://dbpedia.org/resource/Sarah_Champion_(presenter)",
    "entity2_mention": "Sarah hampion"
},
{
    "id": "1934",
    "question": "Which place founded by Penobscot Island Air is also the location fo Ellei Johndro ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Penobscot_Island_Air> <http://dbpedia.org/property/founded> ?uri. <http://dbpedia.org/resource/Ellei_Johndro> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/founded",
    "predicate1_mention": "founded",
    "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate2_mention": "place",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Penobscot_Island_Air",
    "entity1_mention": "Penobscot Island Air",
    "entity2_uri": "http://dbpedia.org/resource/Ellei_Johndro",
    "entity2_mention": "Ellei Johndro"
},
{
    "id": "1935",
    "question": "List the countries through which European rout E39 and E8 passes ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/European_route_E39> <http://dbpedia.org/ontology/county> ?uri. <http://dbpedia.org/resource/European_route_E8> <http://dbpedia.org/ontology/county> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/county",
    "predicate1_mention": "countries",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/European_route_E39",
    "entity1_mention": "European rout E39",
    "entity2_uri": "http://dbpedia.org/resource/European_route_E8",
    "entity2_mention": "european rout E39 and E8"
},
{
    "id": "1936",
    "question": "How many people work at the FBI?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Federal_Bureau_of_Investigation>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/occupation",
    "predicate1_mention": "work at",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Federal_Bureau_of_Investigation",
    "entity1_mention": "FBI",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1937",
    "question": "Name the hockey team whose head coach is Alain Vigneault?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/headCoach> <http://dbpedia.org/resource/Alain_Vigneault>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HockeyTeam>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/headCoach",
    "predicate1_mention": "head coach",
    "predicate2_uri": "http://dbpedia.org/ontology/HockeyTeam",
    "predicate2_mention": "hockey team",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Alain_Vigneault",
    "entity1_mention": "Alain Vigneault",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1938",
    "question": "In which state is Dorchester Bay (Boston Harbor) ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dorchester_Bay_(Boston_Harbor)> <http://dbpedia.org/property/state> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/state",
    "predicate1_mention": "state",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Dorchester_Bay_(Boston_Harbor)",
    "entity1_mention": "Dorchester Bay (Boston Harbor)",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1939",
    "question": "To which political party do the children of Sonia Gandhi belong?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sonia_Gandhi> <http://dbpedia.org/property/children> ?x . ?x <http://dbpedia.org/ontology/party> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/children",
    "predicate1_mention": "children",
    "predicate2_uri": "http://dbpedia.org/ontology/party",
    "predicate2_mention": "party",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sonia_Gandhi",
    "entity1_mention": "Sonia Gandhi",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1940",
    "question": "Which religion followers are the members of Janata Dal?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/party> <http://dbpedia.org/resource/Janata_Dal> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/party",
    "predicate1_mention": "are",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religion",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Janata_Dal",
    "entity1_mention": "janata dal",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1941",
    "question": "Count the nearest city to the historic palce whose one of the nearest city is Wisconsin ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/nearestCity> <http://dbpedia.org/resource/Wisconsin> . ?x <http://dbpedia.org/property/nearestCity> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/nearestCity",
    "predicate1_mention": "nearest city",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Wisconsin",
    "entity1_mention": "wisconsin",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1942",
    "question": "What is the airline company has its headquarters in Dublin Airport?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Dublin_Airport> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/headquarters",
    "predicate1_mention": "headquarters",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Dublin_Airport",
    "entity1_mention": "Dublin Airport",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1943",
    "question": "What are the teams for which Wilfred McDonald played for?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wilfred_McDonald> <http://dbpedia.org/property/playedFor> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/playedFor",
    "predicate1_mention": "played for",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Wilfred_McDonald",
    "entity1_mention": "Wilfred McDonald",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1945",
    "question": "List the music played in television episode which came after The Colonel (The Americans) ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Colonel_(The_Americans)> <http://dbpedia.org/ontology/subsequentWork> ?x . ?x <http://dbpedia.org/property/music> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/subsequentWork",
    "predicate1_mention": "came after",
    "predicate2_uri": "http://dbpedia.org/property/music",
    "predicate2_mention": "music",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Colonel_(The_Americans)",
    "entity1_mention": "The Colonel (The Americans)",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1946",
    "question": "Is Dave Schulz a band member of Berlin?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Berlin_(band)> <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Dave_Schulz_(musician)> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/bandMember",
    "predicate1_mention": "band member",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Berlin_(band)",
    "entity1_mention": "berlin",
    "entity2_uri": "http://dbpedia.org/resource/Dave_Schulz_(musician)",
    "entity2_mention": "Dave Schulz"
},
{
    "id": "1947",
    "question": "Does MSX BASIC have a license of microsoft?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/MSX_BASIC> <http://dbpedia.org/property/license> <http://dbpedia.org/resource/Microsoft> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/license",
    "predicate1_mention": "license",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/MSX_BASIC",
    "entity1_mention": "MSX BASIC",
    "entity2_uri": "http://dbpedia.org/resource/Microsoft",
    "entity2_mention": "microsoft"
},
{
    "id": "1948",
    "question": "List the subsequent work of the albums whose one of the subsequent work is Planet Waves?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Planet_Waves> . ?x <http://dbpedia.org/ontology/subsequentWork> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/subsequentWork",
    "predicate1_mention": "subsequent work",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Album",
    "type_mention": "albums",
    "entity1_uri": "http://dbpedia.org/resource/Planet_Waves",
    "entity1_mention": "planet waves",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1949",
    "question": "In which mountain Inyo National Forest and California are located?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Inyo_National_Forest> . ?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/California> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/locatedInArea",
    "predicate1_mention": "located",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Mountain",
    "type_mention": "mountain",
    "entity1_uri": "http://dbpedia.org/resource/Inyo_National_Forest",
    "entity1_mention": "Inyo National Forest",
    "entity2_uri": "http://dbpedia.org/resource/California",
    "entity2_mention": "california"
},
{
    "id": "1950",
    "question": "where did Alfred Tarnowski die?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alfred_Tarnowski> <http://dbpedia.org/property/placeOfDeath> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/placeOfDeath",
    "predicate1_mention": "die",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Alfred_Tarnowski",
    "entity1_mention": "Alfred Tarnowski",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1951",
    "question": "What are some licensees of the stations playing in Nashville, Tennessee?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/area> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?x <http://dbpedia.org/property/licensee> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/area",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/licensee",
    "predicate2_mention": "licensees",
    "type_uri": "http://dbpedia.org/ontology/RadioStation",
    "type_mention": "stations",
    "entity1_uri": "http://dbpedia.org/resource/Nashville,_Tennessee",
    "entity1_mention": "nashville, tennessee",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1952",
    "question": "Was the Incredibles released before Finding Nemo?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Incredibles_(film_score)> <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/Finding_Nemo> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/previousWork",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Incredibles_(film_score)",
    "entity1_mention": "incredibles",
    "entity2_uri": "http://dbpedia.org/resource/Finding_Nemo",
    "entity2_mention": "finding nemo"
},
{
    "id": "1953",
    "question": "List the American MEditerranean Sea city is also the place of death of Laszlo Bellak ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/American_Mediterranean_Sea> <http://dbpedia.org/property/cities> ?uri. <http://dbpedia.org/resource/Laszlo_Bellak> <http://dbpedia.org/ontology/deathPlace> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/cities",
    "predicate1_mention": "city",
    "predicate2_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate2_mention": "place of death",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/American_Mediterranean_Sea",
    "entity1_mention": "American MEditerranean Sea",
    "entity2_uri": "http://dbpedia.org/resource/Laszlo_Bellak",
    "entity2_mention": "laszlo bellak"
},
{
    "id": "1954",
    "question": "Which river originates from Cape Vincent and Kingston, Ontario?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Cape_Vincent,_New_York> . ?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Kingston,_Ontario> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/sourceLocation",
    "predicate1_mention": "originates from",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "river",
    "entity1_uri": "http://dbpedia.org/resource/Cape_Vincent,_New_York",
    "entity1_mention": "Cape Vincent",
    "entity2_uri": "http://dbpedia.org/resource/Kingston,_Ontario",
    "entity2_mention": "kingston, ontario"
},
{
    "id": "1956",
    "question": "Isaac Hayes has acted in which movies ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Isaac_Hayes>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> }",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/starring",
    "predicate1_mention": "acted in",
    "predicate2_uri": "http://dbpedia.org/ontology/Film",
    "predicate2_mention": "movies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Isaac_Hayes",
    "entity1_mention": "isaac hayes",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1957",
    "question": "How many thesis were supervised by Ernest Rutherford?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/doctoralAdvisor> <http://dbpedia.org/resource/Ernest_Rutherford>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/doctoralAdvisor",
    "predicate1_mention": "supervised by",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ernest_Rutherford",
    "entity1_mention": "Ernest Rutherford",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1960",
    "question": "What are the last two studio albums of Moondog Matinee ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moondog_Matinee> <http://dbpedia.org/ontology/subsequentWork> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/subsequentWork",
    "predicate1_mention": "two studio albums",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Moondog_Matinee",
    "entity1_mention": "moondog matinee",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1961",
    "question": "How many people currently play for the NYC FC?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/New_York_City_FC>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/currentclub",
    "predicate1_mention": "currently play for",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/New_York_City_FC",
    "entity1_mention": "NYC FC",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1962",
    "question": "List the battles fought by Roh Tae woo ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Roh_Tae-woo> <http://dbpedia.org/property/battles> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/battles",
    "predicate1_mention": "battles",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Roh_Tae-woo",
    "entity1_mention": "Roh Tae woo",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1963",
    "question": "Is Gutenberg neighbouring with Madiswil?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Madiswil> <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Gutenburg,_Switzerland> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/neighboringMunicipalities",
    "predicate1_mention": "neighbouring",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Madiswil",
    "entity1_mention": "madiswil",
    "entity2_uri": "http://dbpedia.org/resource/Gutenburg,_Switzerland",
    "entity2_mention": "Gutenberg"
},
{
    "id": "1964",
    "question": "Which educational institution has Kaplan Inc as it's affiliation?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Kaplan,_Inc.>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/affiliations",
    "predicate1_mention": "affiliation",
    "predicate2_uri": "http://dbpedia.org/ontology/EducationalInstitution",
    "predicate2_mention": "educational institution",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kaplan,_Inc.",
    "entity1_mention": "kaplan inc",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1965",
    "question": "Whose wife is a presenter at WWE?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/WWE> . ?uri <http://dbpedia.org/ontology/spouse> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/presenter",
    "predicate1_mention": "presenter",
    "predicate2_uri": "http://dbpedia.org/ontology/spouse",
    "predicate2_mention": "wife",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/WWE",
    "entity1_mention": "wwe",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1966",
    "question": "Over what do Concor holdings have a bridge?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/builder> <http://dbpedia.org/resource/Concor_Holdings> . ?x <http://dbpedia.org/property/crosses> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/builder",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/crosses",
    "predicate2_mention": "over",
    "type_uri": "http://dbpedia.org/ontology/Bridge",
    "type_mention": "bridge",
    "entity1_uri": "http://dbpedia.org/resource/Concor_Holdings",
    "entity1_mention": "Concor holdings",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1967",
    "question": "What is the parent company of company which owns Sony Bank?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sony_Bank> <http://dbpedia.org/property/parent> ?x . ?x <http://dbpedia.org/ontology/parentCompany> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/parent",
    "predicate1_mention": "parent",
    "predicate2_uri": "http://dbpedia.org/ontology/parentCompany",
    "predicate2_mention": "parent company",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "company",
    "entity1_uri": "http://dbpedia.org/resource/Sony_Bank",
    "entity1_mention": "sony bank",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1971",
    "question": "What is the city nearest to the historic place whose architect is Joseph Dion?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/architect> <http://dbpedia.org/resource/Joseph_Dion> . ?x <http://dbpedia.org/ontology/nearestCity> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HistoricPlace>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/architect",
    "predicate1_mention": "architect",
    "predicate2_uri": "http://dbpedia.org/ontology/nearestCity",
    "predicate2_mention": "city nearest",
    "type_uri": "http://dbpedia.org/ontology/HistoricPlace",
    "type_mention": "historic place",
    "entity1_uri": "http://dbpedia.org/resource/Joseph_Dion",
    "entity1_mention": "joseph dion",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1972",
    "question": "Who are the employer of Don R. Berlin?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Don_R._Berlin> <http://dbpedia.org/ontology/employer> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/employer",
    "predicate1_mention": "employer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Don_R._Berlin",
    "entity1_mention": "Don R. Berlin",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1973",
    "question": "How many different mascots are there of the NCAA teams?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/athletics> <http://dbpedia.org/resource/National_Collegiate_Athletic_Association> . ?x <http://dbpedia.org/property/mascot> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/athletics",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/mascot",
    "predicate2_mention": "mascots",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/National_Collegiate_Athletic_Association",
    "entity1_mention": "NCAA",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1974",
    "question": "Where do the stockholders of Pathaninaikos F.C. live?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Panathinaikos_F.C.> <http://dbpedia.org/ontology/owner> ?x . ?x <http://dbpedia.org/property/residence> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/owner",
    "predicate1_mention": "stockholders",
    "predicate2_uri": "http://dbpedia.org/property/residence",
    "predicate2_mention": "live",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Panathinaikos_F.C.",
    "entity1_mention": "Pathaninaikos F.C.",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1977",
    "question": "What is the river whose tributary is Zarqa River?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/leftTributary> <http://dbpedia.org/resource/Zarqa_River>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/leftTributary",
    "predicate1_mention": "tributary",
    "predicate2_uri": "http://dbpedia.org/ontology/River",
    "predicate2_mention": "river",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Zarqa_River",
    "entity1_mention": "zarqa river",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1978",
    "question": "How many home stadiums are there of the seasons whose chairman in Merritt Paulson?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Merritt_Paulson> . ?x <http://dbpedia.org/ontology/homeStadium> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/chairman",
    "predicate1_mention": "chairman",
    "predicate2_uri": "http://dbpedia.org/ontology/homeStadium",
    "predicate2_mention": "home stadiums",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Merritt_Paulson",
    "entity1_mention": "Merritt Paulson",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1979",
    "question": "Where can I find some buildings of modern architecture?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/architecturalStyle> <http://dbpedia.org/resource/Modern_architecture> . ?x <http://dbpedia.org/property/address> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/architecturalStyle",
    "predicate1_mention": "architecture",
    "predicate2_uri": "http://dbpedia.org/property/address",
    "predicate2_mention": "where",
    "type_uri": "http://dbpedia.org/ontology/Building",
    "type_mention": "buildings",
    "entity1_uri": "http://dbpedia.org/resource/Modern_architecture",
    "entity1_mention": "modern architecture",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1980",
    "question": "Name the team Ramiro Pea played for, which was also the first team of Steve Ontiveros?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Steve_Ontiveros_(infielder)> <http://dbpedia.org/property/debutteam> ?uri. <http://dbpedia.org/resource/Ramiro_Pe\u00f1a> <http://dbpedia.org/ontology/team> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/debutteam",
    "predicate1_mention": "team",
    "predicate2_uri": "http://dbpedia.org/ontology/team",
    "predicate2_mention": "team",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Steve_Ontiveros_(infielder)",
    "entity1_mention": "Steve Ontiveros",
    "entity2_uri": "http://dbpedia.org/resource/Ramiro_Pe\u00f1a",
    "entity2_mention": "ramiro pea "
},
{
    "id": "1983",
    "question": "Give me a count of bridges located in California ?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/California>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/locatedInArea",
    "predicate1_mention": "located in",
    "predicate2_uri": "http://dbpedia.org/ontology/Bridge",
    "predicate2_mention": "bridges",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/California",
    "entity1_mention": "california",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1985",
    "question": "What all are in the states whose anthem is Ja, vi esker dette landet?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/anthem> <http://dbpedia.org/resource/Ja,_vi_elsker_dette_landet> . ?uri <http://dbpedia.org/ontology/country> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/anthem",
    "predicate1_mention": "anthem",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "state",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ja,_vi_elsker_dette_landet",
    "entity1_mention": "Ja, vi esker dette landet",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1987",
    "question": "Which country are the players of the Atletico Petroleos de Luanda from?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/club> <http://dbpedia.org/resource/Atl\u00e9tico_Petr\u00f3leos_de_Luanda_(handball)> . ?x <http://dbpedia.org/ontology/nationality> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/club",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/nationality",
    "predicate2_mention": "country",
    "type_uri": "http://dbpedia.org/ontology/Athlete",
    "type_mention": "atletico",
    "entity1_uri": "http://dbpedia.org/resource/Atl\u00e9tico_Petr\u00f3leos_de_Luanda_(handball)",
    "entity1_mention": "Atletico Petroleos de Luanda",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1988",
    "question": "Who owns the ford kansas assembly plant?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant> <http://dbpedia.org/ontology/owningOrganisation> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/owningOrganisation",
    "predicate1_mention": "owns",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant",
    "entity1_mention": "ford kansas assembly plant",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1989",
    "question": "Which saints were the messengers of Islam?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/veneratedIn> <http://dbpedia.org/resource/Islam>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Saint>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/veneratedIn",
    "predicate1_mention": "messengers",
    "predicate2_uri": "http://dbpedia.org/ontology/Saint",
    "predicate2_mention": "saints",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Islam",
    "entity1_mention": "islam",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1991",
    "question": "What do the relatives of James Hartness do?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/James_Hartness> . ?x <http://dbpedia.org/property/occupation> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/relation",
    "predicate1_mention": "relatives",
    "predicate2_uri": "http://dbpedia.org/property/occupation",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/James_Hartness",
    "entity1_mention": "James Hartness",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1992",
    "question": "What is the debut team of ngel Escobar ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/\u00c1ngel_Escobar> <http://dbpedia.org/property/debutteam> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/debutteam",
    "predicate1_mention": "debut team",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/\u00c1ngel_Escobar",
    "entity1_mention": "ngel Escobar",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1993",
    "question": "What is the hub airport of Pawan Hans, and is also the largest city of India?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pawan_Hans> <http://dbpedia.org/ontology/hubAirport> ?uri. <http://dbpedia.org/resource/India> <http://dbpedia.org/ontology/largestCity> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/hubAirport",
    "predicate1_mention": "hub airport",
    "predicate2_uri": "http://dbpedia.org/ontology/largestCity",
    "predicate2_mention": "largest city",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Pawan_Hans",
    "entity1_mention": "Pawan Hans",
    "entity2_uri": "http://dbpedia.org/resource/India",
    "entity2_mention": "india"
},
{
    "id": "1995",
    "question": "Which company produced the car which was a new version of Daewoo's Tico?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Daewoo_Tico> . ?x <http://dbpedia.org/property/parentCompany> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/predecessor",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/parentCompany",
    "predicate2_mention": "company",
    "type_uri": "http://dbpedia.org/ontology/Automobile",
    "type_mention": "car",
    "entity1_uri": "http://dbpedia.org/resource/Daewoo_Tico",
    "entity1_mention": "Daewoo's Tico",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "1999",
    "question": "What is the mascot of Galatasaray Handball Team ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Galatasaray_Handball_Team> <http://dbpedia.org/property/mascot> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/mascot",
    "predicate1_mention": "mascot",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Galatasaray_Handball_Team",
    "entity1_mention": "galatasaray handball team",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2001",
    "question": "For which teams did the Hawai graduated players play their first game?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/college> <http://dbpedia.org/resource/Hawaii> . ?x <http://dbpedia.org/ontology/debutTeam> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/college",
    "predicate1_mention": "graduated",
    "predicate2_uri": "http://dbpedia.org/ontology/debutTeam",
    "predicate2_mention": "teams",
    "type_uri": "http://dbpedia.org/ontology/Athlete",
    "type_mention": "players",
    "entity1_uri": "http://dbpedia.org/resource/Hawaii",
    "entity1_mention": "hawai",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2002",
    "question": "Who represent the constituencies of Noe Valley and Duboce Triangle ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Noe_Valley,_San_Francisco> . ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/constituency",
    "predicate1_mention": "constituencies",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Noe_Valley,_San_Francisco",
    "entity1_mention": "Noe Valley",
    "entity2_uri": "http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco",
    "entity2_mention": "Duboce Triangle"
},
{
    "id": "2003",
    "question": "Movie's produced by Michael Deeley has Jordan Cronenweth as director of photography",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Michael_Deeley> . ?uri <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Jordan_Cronenweth>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/producer",
    "predicate1_mention": "produced",
    "predicate2_uri": "http://dbpedia.org/ontology/cinematography",
    "predicate2_mention": "photography",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "Movie",
    "entity1_uri": "http://dbpedia.org/resource/Michael_Deeley",
    "entity1_mention": "michael deeley",
    "entity2_uri": "http://dbpedia.org/resource/Jordan_Cronenweth",
    "entity2_mention": "Jordan Cronenweth"
},
{
    "id": "2004",
    "question": "Which key person of maryland jockey club is the appointer of Joseph Clay ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Joseph_Clay_(Georgia)> <http://dbpedia.org/ontology/appointer> ?uri. <http://dbpedia.org/resource/Maryland_Jockey_Club> <http://dbpedia.org/property/keyPeople> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/appointer",
    "predicate1_mention": "appointer",
    "predicate2_uri": "http://dbpedia.org/property/keyPeople",
    "predicate2_mention": "key person",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Joseph_Clay_(Georgia)",
    "entity1_mention": "joseph clay",
    "entity2_uri": "http://dbpedia.org/resource/Maryland_Jockey_Club",
    "entity2_mention": "maryland jockey club"
},
{
    "id": "2005",
    "question": "Which cities have the river one of whose Tributary is the Missouri's big spring?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/rightTributary> <http://dbpedia.org/resource/Big_Spring_(Missouri)> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/rightTributary",
    "predicate1_mention": "tributary",
    "predicate2_uri": "http://dbpedia.org/ontology/city",
    "predicate2_mention": "cities",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "river",
    "entity1_uri": "http://dbpedia.org/resource/Big_Spring_(Missouri)",
    "entity1_mention": "big spring",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2006",
    "question": "Who has written works found in the Gangan comics?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/magazine> <http://dbpedia.org/resource/Gangan_Comics> . ?x <http://dbpedia.org/property/author> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/magazine",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/author",
    "predicate2_mention": "written",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Gangan_Comics",
    "entity1_mention": "gangan comics",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2007",
    "question": "What is the currency of Republic of Montenegro (1992-2006) ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Republic_of_Montenegro_(1992\u20132006)> <http://dbpedia.org/property/currency> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/currency",
    "predicate1_mention": "currency",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Republic_of_Montenegro_(1992\u20132006)",
    "entity1_mention": "Republic of Montenegro (1992-2006)",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2008",
    "question": "Who has given guest appearances on the TV Episodes whose was music done by Mama Makes 3?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Mama_Makes_Three> . ?x <http://dbpedia.org/property/guests> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionEpisode>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/music",
    "predicate1_mention": "music",
    "predicate2_uri": "http://dbpedia.org/property/guests",
    "predicate2_mention": "guest",
    "type_uri": "http://dbpedia.org/ontology/TelevisionEpisode",
    "type_mention": "TV Episodes",
    "entity1_uri": "http://dbpedia.org/resource/Mama_Makes_Three",
    "entity1_mention": "Mama Makes 3",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2009",
    "question": "Which band was left by Kevin Jonas?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Kevin_Jonas>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/formerBandMember",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/Band",
    "predicate2_mention": "band",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kevin_Jonas",
    "entity1_mention": "kevin jonas",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2010",
    "question": "List all the presidents of the school which had atleast one of the president as Queen Noor of Jordan ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/president> <http://dbpedia.org/resource/Queen_Noor_of_Jordan> . ?x <http://dbpedia.org/ontology/president> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/president",
    "predicate1_mention": "president",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/School",
    "type_mention": "school",
    "entity1_uri": "http://dbpedia.org/resource/Queen_Noor_of_Jordan",
    "entity1_mention": "Queen Noor of Jordan",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2011",
    "question": "In which countries have the Start + Flug aircrafts originated?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Start_+_Flug> . ?x <http://dbpedia.org/property/nationalOrigin> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Aircraft>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/nationalOrigin",
    "predicate2_mention": "originated",
    "type_uri": "http://dbpedia.org/ontology/Aircraft",
    "type_mention": "aircrafts",
    "entity1_uri": "http://dbpedia.org/resource/Start_+_Flug",
    "entity1_mention": "Start + Flug",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2012",
    "question": "return some  players who have played in the NBA?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/league> <http://dbpedia.org/resource/National_Basketball_Association> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/league",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/National_Basketball_Association",
    "entity1_mention": "NBA",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2013",
    "question": "Name the nearest city to Tennie and Laura ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tennie_and_Laura_(schooner)> <http://dbpedia.org/property/nearestCity> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/nearestCity",
    "predicate1_mention": "nearest city",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tennie_and_Laura_(schooner)",
    "entity1_mention": "Tennie and Laura",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2014",
    "question": "Name the home Stadium of Kenya national under-20 football team ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kenya_national_under-20_football_team> <http://dbpedia.org/property/homeStadium> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/homeStadium",
    "predicate1_mention": "home Stadium",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kenya_national_under-20_football_team",
    "entity1_mention": "Kenya national under-20 football team",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2015",
    "question": "How many have been venerateds in Islam and Judaism?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?uri <http://dbpedia.org/ontology/veneratedIn> <http://dbpedia.org/resource/Islam> . ?uri <http://dbpedia.org/ontology/veneratedIn> <http://dbpedia.org/resource/Judaism>} ",
    "sparql_id": "107",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/veneratedIn",
    "predicate1_mention": "venerateds in",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Islam",
    "entity1_mention": "islam",
    "entity2_uri": "http://dbpedia.org/resource/Judaism",
    "entity2_mention": "judaism"
},
{
    "id": "2016",
    "question": "What is the resting place of the politician who succeeded Samuel Hayes?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Samuel_Hayes_(settler)> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/successor",
    "predicate1_mention": "succeeded",
    "predicate2_uri": "http://dbpedia.org/ontology/restingPlace",
    "predicate2_mention": "resting place",
    "type_uri": "http://dbpedia.org/ontology/Politician",
    "type_mention": "politician",
    "entity1_uri": "http://dbpedia.org/resource/Samuel_Hayes_(settler)",
    "entity1_mention": "samuel hayes",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2018",
    "question": "Name the river whose mouth country is Mozambique and source region is North-Western Province, Zambia?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mouthCountry> <http://dbpedia.org/resource/Mozambique> . ?uri <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/mouthCountry",
    "predicate1_mention": "mouth country",
    "predicate2_uri": "http://dbpedia.org/property/sourceRegion",
    "predicate2_mention": "source region",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "river",
    "entity1_uri": "http://dbpedia.org/resource/Mozambique",
    "entity1_mention": "mozambique",
    "entity2_uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia",
    "entity2_mention": "north-western province, zambia"
},
{
    "id": "2019",
    "question": "List the people who influenced the comedian who acted in Good Hair ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Good_Hair> <http://dbpedia.org/property/starring> ?x . ?x <http://dbpedia.org/ontology/influencedBy> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Comedian>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/starring",
    "predicate1_mention": "acted",
    "predicate2_uri": "http://dbpedia.org/ontology/influencedBy",
    "predicate2_mention": "influenced",
    "type_uri": "http://dbpedia.org/ontology/Comedian",
    "type_mention": "comedian",
    "entity1_uri": "http://dbpedia.org/resource/Good_Hair",
    "entity1_mention": "Good Hair",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2020",
    "question": "Which religion did both anupong paochinda and udit raj follow?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Anupong_Paochinda> <http://dbpedia.org/ontology/religion> ?uri. <http://dbpedia.org/resource/Udit_Raj> <http://dbpedia.org/ontology/religion> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/religion",
    "predicate1_mention": "religion",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Anupong_Paochinda",
    "entity1_mention": "anupong paochinda",
    "entity2_uri": "http://dbpedia.org/resource/Udit_Raj",
    "entity2_mention": "udit raj"
},
{
    "id": "2021",
    "question": "What is the source country of reg Lake ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/\u00dc\u00fcreg_Lake> <http://dbpedia.org/ontology/sourceCountry> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/sourceCountry",
    "predicate1_mention": "source country",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/\u00dc\u00fcreg_Lake",
    "entity1_mention": "reg Lake",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2022",
    "question": "Where did the wrestler trained by Ring of Honour get billed?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/trainer> <http://dbpedia.org/resource/Ring_of_Honor> . ?x <http://dbpedia.org/property/billed> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/trainer",
    "predicate1_mention": "trained",
    "predicate2_uri": "http://dbpedia.org/property/billed",
    "predicate2_mention": "billed",
    "type_uri": "http://dbpedia.org/ontology/Athlete",
    "type_mention": "wrestler",
    "entity1_uri": "http://dbpedia.org/resource/Ring_of_Honor",
    "entity1_mention": "Ring of Honour",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2023",
    "question": "What is the television show whose cast members are Jeff Conaway and Jason Carter?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jeff_Conaway> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jason_Carter_(actor)> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/starring",
    "predicate1_mention": "cast members",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television show",
    "entity1_uri": "http://dbpedia.org/resource/Jeff_Conaway",
    "entity1_mention": "Jeff Conaway",
    "entity2_uri": "http://dbpedia.org/resource/Jason_Carter_(actor)",
    "entity2_mention": "Jason Carter"
},
{
    "id": "2024",
    "question": "Who founded the city where Pat Vincent die?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pat_Vincent> <http://dbpedia.org/ontology/deathPlace> ?x . ?x <http://dbpedia.org/ontology/founder> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate1_mention": "die",
    "predicate2_uri": "http://dbpedia.org/ontology/founder",
    "predicate2_mention": "founded",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Pat_Vincent",
    "entity1_mention": "Pat Vincent",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2025",
    "question": "The successor of Ellsworth Bunker belongs to which religion?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ellsworth_Bunker> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/ontology/region> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "http://dbpedia.org/ontology/region",
    "predicate2_mention": "religion",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ellsworth_Bunker",
    "entity1_mention": "ellsworth bunker",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2028",
    "question": "In which wars were people from the Saudi Arabian ministry of defense involved?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/office> <http://dbpedia.org/resource/Minister_of_Defense_(Saudi_Arabia)> . ?x <http://dbpedia.org/property/battles> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/office",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/battles",
    "predicate2_mention": "wars",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Minister_of_Defense_(Saudi_Arabia)",
    "entity1_mention": "ministry of defense",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2029",
    "question": "Name the commanders of military conflicts where Roundhead was one of the commander ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Roundhead_(Wyandot)> . ?x <http://dbpedia.org/ontology/commander> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/commander",
    "predicate1_mention": "commander",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/MilitaryConflict",
    "type_mention": "military conflicts",
    "entity1_uri": "http://dbpedia.org/resource/Roundhead_(Wyandot)",
    "entity1_mention": "roundhead",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2030",
    "question": "Was saddam hussein at the rank of Mushir ever?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Saddam_Hussein> <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Mushir> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/rank",
    "predicate1_mention": "rank",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Saddam_Hussein",
    "entity1_mention": "saddam hussein",
    "entity2_uri": "http://dbpedia.org/resource/Mushir",
    "entity2_mention": "mushir"
},
{
    "id": "2031",
    "question": "Which mountain is located in inyo National Forest and has a parent peak named Nevado de Toluca ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Inyo_National_Forest> . ?uri <http://dbpedia.org/ontology/parentMountainPeak> <http://dbpedia.org/resource/Nevado_de_Toluca>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/locatedInArea",
    "predicate1_mention": "located",
    "predicate2_uri": "http://dbpedia.org/ontology/parentMountainPeak",
    "predicate2_mention": "parent peak",
    "type_uri": "http://dbpedia.org/ontology/Mountain",
    "type_mention": "mountain",
    "entity1_uri": "http://dbpedia.org/resource/Inyo_National_Forest",
    "entity1_mention": "inyo National Forest",
    "entity2_uri": "http://dbpedia.org/resource/Nevado_de_Toluca",
    "entity2_mention": "Nevado de Toluca"
},
{
    "id": "2032",
    "question": "Whihc state of Timothy J. Roemer is also the location city of Dad's Root Beer ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dad's_Root_Beer> <http://dbpedia.org/property/locationCity> ?uri. <http://dbpedia.org/resource/Timothy_J._Roemer> <http://dbpedia.org/property/state> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/locationCity",
    "predicate1_mention": "location city",
    "predicate2_uri": "http://dbpedia.org/property/state",
    "predicate2_mention": "state",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Dad's_Root_Beer",
    "entity1_mention": "Dad's Root Beer",
    "entity2_uri": "http://dbpedia.org/resource/Timothy_J._Roemer",
    "entity2_mention": "Timothy J. Roemer"
},
{
    "id": "2033",
    "question": "How many factions were involved in the battles fought by Arthur St. Clair?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Arthur_St._Clair> <http://dbpedia.org/property/battles> ?x . ?x <http://dbpedia.org/property/combatant> ?uri  . }",
    "sparql_id": "103",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/battles",
    "predicate1_mention": "battles",
    "predicate2_uri": "http://dbpedia.org/property/combatant",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Arthur_St._Clair",
    "entity1_mention": "Arthur St. Clair",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2034",
    "question": "List borders of the admin region bordering Arctic ocean ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/border> <http://dbpedia.org/resource/Arctic_Ocean> . ?x <http://dbpedia.org/ontology/border> ?uri  . }",
    "sparql_id": "11",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/border",
    "predicate1_mention": "borders",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Arctic_Ocean",
    "entity1_mention": "arctic ocean",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2036",
    "question": "Is Giorgos Kaminis the mayor of Athens?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Athens> <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Giorgos_Kaminis> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/mayor",
    "predicate1_mention": "mayor",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Athens",
    "entity1_mention": "athens",
    "entity2_uri": "http://dbpedia.org/resource/Giorgos_Kaminis",
    "entity2_mention": "Giorgos Kaminis"
},
{
    "id": "2037",
    "question": "What are the artists that have been in the band Framptons camel?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Frampton's_Camel>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/associatedActs",
    "predicate1_mention": "artists",
    "predicate2_uri": "http://dbpedia.org/ontology/Artist",
    "predicate2_mention": "artists",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Frampton's_Camel",
    "entity1_mention": "Framptons camel",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2040",
    "question": "Who is the headcoach of 2013-14 Marquette Golden Eagles men's basketball team ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2013\u201314_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/property/headcoach> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/headcoach",
    "predicate1_mention": "headcoach",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/2013\u201314_Marquette_Golden_Eagles_men's_basketball_team",
    "entity1_mention": "2013-14 Marquette Golden Eagles men's basketball team",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2042",
    "question": "In which military conflict were Phm Vn ng and John McEwen commanders ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Ph\u1ea1m_V\u0103n_\u0110\u1ed3ng> . ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/John_McEwen> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/commander",
    "predicate1_mention": "commanders",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/MilitaryConflict",
    "type_mention": "military conflict",
    "entity1_uri": "http://dbpedia.org/resource/Ph\u1ea1m_V\u0103n_\u0110\u1ed3ng",
    "entity1_mention": "Phm Vn ng",
    "entity2_uri": "http://dbpedia.org/resource/John_McEwen",
    "entity2_mention": "John McEwen"
},
{
    "id": "2043",
    "question": "Does Air 2000 fly to the north american continent?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Air_2000> <http://dbpedia.org/ontology/destination> <http://dbpedia.org/resource/North_America> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/destination",
    "predicate1_mention": "continent",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Air_2000",
    "entity1_mention": "Air 2000",
    "entity2_uri": "http://dbpedia.org/resource/North_America",
    "entity2_mention": "north american"
},
{
    "id": "2044",
    "question": "List the music of Open House (American Horror Story)?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Open_House_(American_Horror_Story)> <http://dbpedia.org/property/music> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/music",
    "predicate1_mention": "music",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Open_House_(American_Horror_Story)",
    "entity1_mention": "Open House (American Horror Story)",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2045",
    "question": "What is the predecessor of the car engine which was succeeded by  BMW M43 ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/BMW_M43> . ?x <http://dbpedia.org/property/predecessor> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Engine>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/successor",
    "predicate1_mention": "succeeded",
    "predicate2_uri": "http://dbpedia.org/property/predecessor",
    "predicate2_mention": "predecessor",
    "type_uri": "http://dbpedia.org/ontology/Engine",
    "type_mention": "engine",
    "entity1_uri": "http://dbpedia.org/resource/BMW_M43",
    "entity1_mention": "BMW M43",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2046",
    "question": "How many players debuted their careers from San Francisco 49ers?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/debutTeam> <http://dbpedia.org/resource/San_Francisco_49ers>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/debutTeam",
    "predicate1_mention": "debuted",
    "predicate2_uri": "http://dbpedia.org/ontology/Athlete",
    "predicate2_mention": "players",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/San_Francisco_49ers",
    "entity1_mention": "San Francisco 49ers",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2050",
    "question": "To which country do gabriel paris gordillo and gustavo rojas pinilla owe their allegiance?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gabriel_Par\u00eds_Gordillo> <http://dbpedia.org/property/allegiance> ?uri. <http://dbpedia.org/resource/Gustavo_Rojas_Pinilla> <http://dbpedia.org/property/allegiance> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/allegiance",
    "predicate1_mention": "allegiance",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Gabriel_Par\u00eds_Gordillo",
    "entity1_mention": "gabriel paris gordillo",
    "entity2_uri": "http://dbpedia.org/resource/Gustavo_Rojas_Pinilla",
    "entity2_mention": "gustavo rojas pinilla"
},
{
    "id": "2051",
    "question": "What was founded by pina Records which has name of Geography of Puerto Rico ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Geography_of_Puerto_Rico> <http://dbpedia.org/property/name> ?uri. <http://dbpedia.org/resource/Pina_Records> <http://dbpedia.org/property/founded> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/name",
    "predicate1_mention": "name",
    "predicate2_uri": "http://dbpedia.org/property/founded",
    "predicate2_mention": "founded",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Geography_of_Puerto_Rico",
    "entity1_mention": "Geography of Puerto Rico",
    "entity2_uri": "http://dbpedia.org/resource/Pina_Records",
    "entity2_mention": "pina Records"
},
{
    "id": "2052",
    "question": "How many saints have been venerated in Judaism?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/veneratedIn> <http://dbpedia.org/resource/Judaism>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Saint>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/veneratedIn",
    "predicate1_mention": "venerated in",
    "predicate2_uri": "http://dbpedia.org/ontology/Saint",
    "predicate2_mention": "saints",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Judaism",
    "entity1_mention": "judaism",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2053",
    "question": "List the outflows of the lake which has Benu river as one of it ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/outflow> <http://dbpedia.org/resource/Benu\u00e9_River> . ?x <http://dbpedia.org/property/outflow> ?uri  . }",
    "sparql_id": "11",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/outflow",
    "predicate1_mention": "outflows",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Benu\u00e9_River",
    "entity1_mention": "Benu river",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2054",
    "question": "Who is the co-founder of the city where Owen Dougherty died?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Owen_Dougherty> <http://dbpedia.org/property/placeOfDeath> ?x . ?x <http://dbpedia.org/ontology/founder> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/placeOfDeath",
    "predicate1_mention": "died",
    "predicate2_uri": "http://dbpedia.org/ontology/founder",
    "predicate2_mention": "co-founder",
    "type_uri": "http://dbpedia.org/ontology/City",
    "type_mention": "city",
    "entity1_uri": "http://dbpedia.org/resource/Owen_Dougherty",
    "entity1_mention": "Owen Dougherty",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2057",
    "question": "Is James Wong Howe the cinematographer of Behave Yourself?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Behave_Yourself!> <http://dbpedia.org/property/cinematography> <http://dbpedia.org/resource/James_Wong_Howe> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/cinematography",
    "predicate1_mention": "cinematographer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Behave_Yourself!",
    "entity1_mention": "Behave Yourself",
    "entity2_uri": "http://dbpedia.org/resource/James_Wong_Howe",
    "entity2_mention": "james wong howe"
},
{
    "id": "2058",
    "question": "Who are the children of Abigail Adams?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Abigail_Adams> <http://dbpedia.org/property/children> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/children",
    "predicate1_mention": "children",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Abigail_Adams",
    "entity1_mention": "abigail adams",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2059",
    "question": "What awards have the alumni of Academy of Fine Arts in Lodz achieved?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/training> <http://dbpedia.org/resource/Academy_of_Fine_Arts_In_\u0141\u00f3d\u017a> . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/training",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Academy_of_Fine_Arts_In_\u0141\u00f3d\u017a",
    "entity1_mention": "Academy of Fine Arts in Lodz",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2063",
    "question": "Which animal is the mascot of the 1502nd Infantry Brigade (Ready Reserve) and Galatasaray Handball Team ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1502nd_Infantry_Brigade_(Ready_Reserve)> <http://dbpedia.org/property/mascot> ?uri. <http://dbpedia.org/resource/Galatasaray_Handball_Team> <http://dbpedia.org/property/mascot> ?uri . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Animal>}",
    "sparql_id": "315",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/mascot",
    "predicate1_mention": "mascot",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Animal",
    "type_mention": "animal",
    "entity1_uri": "http://dbpedia.org/resource/1502nd_Infantry_Brigade_(Ready_Reserve)",
    "entity1_mention": "1502nd Infantry Brigade (Ready Reserve)",
    "entity2_uri": "http://dbpedia.org/resource/Galatasaray_Handball_Team",
    "entity2_mention": "galatasaray handball team"
},
{
    "id": "2064",
    "question": "What are other famous works of the writer who created the Sarah Jane Adventures?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/The_Sarah_Jane_Adventures> . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/notableworks",
    "predicate1_mention": "famous works",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Writer",
    "type_mention": "writer",
    "entity1_uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures",
    "entity1_mention": "the Sarah Jane Adventures",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2066",
    "question": "Which key person of the Clinton Foundation is also the president of Edward J. Perkins ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Edward_J._Perkins> <http://dbpedia.org/ontology/president> ?uri. <http://dbpedia.org/resource/Clinton_Foundation> <http://dbpedia.org/property/keyPeople> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/president",
    "predicate1_mention": "president",
    "predicate2_uri": "http://dbpedia.org/property/keyPeople",
    "predicate2_mention": "key person",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Edward_J._Perkins",
    "entity1_mention": "Edward J. Perkins",
    "entity2_uri": "http://dbpedia.org/resource/Clinton_Foundation",
    "entity2_mention": "Clinton Foundation"
},
{
    "id": "2067",
    "question": "Name the sports played by Fr Agnel Multipurpose School and Junior College?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College> <http://dbpedia.org/ontology/sport> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/sport",
    "predicate1_mention": "sports",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College",
    "entity1_mention": " Fr Agnel Multipurpose School and Junior College",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2068",
    "question": "Which athletics of Jaimatu Muslim Mindano is same as the genre of the Fritz Chess ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao> <http://dbpedia.org/ontology/athletics> ?uri. <http://dbpedia.org/resource/Fritz_Chess> <http://dbpedia.org/ontology/genre> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/athletics",
    "predicate1_mention": "athletics",
    "predicate2_uri": "http://dbpedia.org/ontology/genre",
    "predicate2_mention": "genre",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao",
    "entity1_mention": "Jaimatu Muslim Mindano",
    "entity2_uri": "http://dbpedia.org/resource/Fritz_Chess",
    "entity2_mention": "fritz chess"
},
{
    "id": "2069",
    "question": "Which are the comics characters painted by Bruce Timm and created by  Paul Dini?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Bruce_Timm> . ?uri <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Paul_Dini>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/creator",
    "predicate1_mention": "created",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/ComicsCharacter",
    "type_mention": "comics characters",
    "entity1_uri": "http://dbpedia.org/resource/Bruce_Timm",
    "entity1_mention": "bruce timm",
    "entity2_uri": "http://dbpedia.org/resource/Paul_Dini",
    "entity2_mention": "paul dini"
},
{
    "id": "2071",
    "question": "In what battles did president Park Chung hee participate?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Park_Chung-hee>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/commander",
    "predicate1_mention": "participate",
    "predicate2_uri": "http://dbpedia.org/ontology/MilitaryConflict",
    "predicate2_mention": "battles",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Park_Chung-hee",
    "entity1_mention": "Park Chung hee",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2072",
    "question": "Is stephanie a female?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Stephanie> <http://dbpedia.org/property/gender> <http://dbpedia.org/resource/Female> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/gender",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Stephanie",
    "entity1_mention": "stephanie",
    "entity2_uri": "http://dbpedia.org/resource/Female",
    "entity2_mention": "female"
},
{
    "id": "2073",
    "question": "List the scientists whose doctoral advisor is Ernest Rutherford and are known for Manhattan Project?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/doctoralAdvisor> <http://dbpedia.org/resource/Ernest_Rutherford> . ?uri <http://dbpedia.org/property/knownFor> <http://dbpedia.org/resource/Manhattan_Project>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/doctoralAdvisor",
    "predicate1_mention": "doctoral advisor",
    "predicate2_uri": "http://dbpedia.org/property/knownFor",
    "predicate2_mention": "known for",
    "type_uri": "http://dbpedia.org/ontology/Scientist",
    "type_mention": "scientists",
    "entity1_uri": "http://dbpedia.org/resource/Ernest_Rutherford",
    "entity1_mention": "Ernest Rutherford",
    "entity2_uri": "http://dbpedia.org/resource/Manhattan_Project",
    "entity2_mention": "manhattan project"
},
{
    "id": "2074",
    "question": "What is the layout of the automobiles whose designer company is Olivier Boulay?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/designCompany> <http://dbpedia.org/resource/Olivier_Boulay> . ?x <http://dbpedia.org/ontology/layout> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/designCompany",
    "predicate1_mention": "designer company",
    "predicate2_uri": "http://dbpedia.org/ontology/layout",
    "predicate2_mention": "layout",
    "type_uri": "http://dbpedia.org/ontology/Automobile",
    "type_mention": "automobiles",
    "entity1_uri": "http://dbpedia.org/resource/Olivier_Boulay",
    "entity1_mention": "olivier boulay",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2076",
    "question": "How many people have been the head coach for Middlesbrough FC?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/club> <http://dbpedia.org/resource/Middlesbrough_F.C.> . ?x <http://dbpedia.org/ontology/manager> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/club",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/manager",
    "predicate2_mention": "head coach",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Middlesbrough_F.C.",
    "entity1_mention": "Middlesbrough FC",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2077",
    "question": "Who was on the boards of Freedom of the City and Royal Society?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Freedom_of_the_City> . ?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Royal_Society> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/board",
    "predicate1_mention": "boards",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Freedom_of_the_City",
    "entity1_mention": "Freedom of the City",
    "entity2_uri": "http://dbpedia.org/resource/Royal_Society",
    "entity2_mention": "Royal Society"
},
{
    "id": "2078",
    "question": "What games are played at universities in Lanao Del Sur?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Lanao_del_Sur> . ?x <http://dbpedia.org/ontology/athletics> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/state",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/athletics",
    "predicate2_mention": "played",
    "type_uri": "http://dbpedia.org/ontology/University",
    "type_mention": "universities",
    "entity1_uri": "http://dbpedia.org/resource/Lanao_del_Sur",
    "entity1_mention": "Lanao Del Sur",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2080",
    "question": "What is the architecture of First National Bank and Trust Building ( Lima, Ohio ) ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/First_National_Bank_and_Trust_Building_(Lima,_Ohio)> <http://dbpedia.org/ontology/architecturalStyle> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/architecturalStyle",
    "predicate1_mention": "architecture",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/First_National_Bank_and_Trust_Building_(Lima,_Ohio)",
    "entity1_mention": "First National Bank and Trust Building ( Lima, Ohio )",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2083",
    "question": "Which animator of the The Skeleton Dance is also the director of The Haunted House (1929 film) ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Skeleton_Dance> <http://dbpedia.org/ontology/animator> ?uri. <http://dbpedia.org/resource/The_Haunted_House_(1929_film)> <http://dbpedia.org/ontology/director> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/animator",
    "predicate1_mention": "animator",
    "predicate2_uri": "http://dbpedia.org/ontology/director",
    "predicate2_mention": "director",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Skeleton_Dance",
    "entity1_mention": "The Skeleton Dance",
    "entity2_uri": "http://dbpedia.org/resource/The_Haunted_House_(1929_film)",
    "entity2_mention": "The Haunted House (1929 film)"
},
{
    "id": "2084",
    "question": "What basketball league's champion is Golden State Warriors",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/champion> <http://dbpedia.org/resource/Golden_State_Warriors>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballLeague>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/champion",
    "predicate1_mention": "champion",
    "predicate2_uri": "http://dbpedia.org/ontology/BasketballLeague",
    "predicate2_mention": "basketball league's",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Golden_State_Warriors",
    "entity1_mention": "Golden State Warriors",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2085",
    "question": "Name the movie in which Vangelis gave the music and Jordan was the cinematographer ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Vangelis> . ?uri <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Jordan_Cronenweth>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/music",
    "predicate1_mention": "music",
    "predicate2_uri": "http://dbpedia.org/ontology/cinematography",
    "predicate2_mention": "cinematographer",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movie",
    "entity1_uri": "http://dbpedia.org/resource/Vangelis",
    "entity1_mention": "vangelis",
    "entity2_uri": "http://dbpedia.org/resource/Jordan_Cronenweth",
    "entity2_mention": "jordan"
},
{
    "id": "2086",
    "question": "Which high school of the Jerry Tagge also was the palce hwer Temptation Waits was recorded ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerry_Tagge> <http://dbpedia.org/property/highSchool> ?uri. <http://dbpedia.org/resource/Temptation_Waits> <http://dbpedia.org/ontology/recordedIn> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/highSchool",
    "predicate1_mention": "high school",
    "predicate2_uri": "http://dbpedia.org/ontology/recordedIn",
    "predicate2_mention": "recorded",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jerry_Tagge",
    "entity1_mention": "Jerry Tagge",
    "entity2_uri": "http://dbpedia.org/resource/Temptation_Waits",
    "entity2_mention": "temptation waits"
},
{
    "id": "2087",
    "question": "How many people won the Gold Medal of the Royal Astronomical Society?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Gold_Medal_of_the_Royal_Astronomical_Society>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/prizes",
    "predicate1_mention": "won",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Gold_Medal_of_the_Royal_Astronomical_Society",
    "entity1_mention": "Gold Medal of the Royal Astronomical Society",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2088",
    "question": "Stockholm is the HQ of how many things?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Stockholm>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/headquarters",
    "predicate1_mention": "hq",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Stockholm",
    "entity1_mention": "stockholm",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2089",
    "question": "With whom were the engagements of Alpine Brigade Taurinense?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alpine_Brigade_Taurinense> <http://dbpedia.org/ontology/battle> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/battle",
    "predicate1_mention": "engagements",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Alpine_Brigade_Taurinense",
    "entity1_mention": "Alpine Brigade Taurinense",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2090",
    "question": "Who is married to Susan Weber Soros?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Susan_Weber_Soros>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/spouse",
    "predicate1_mention": "married to",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Susan_Weber_Soros",
    "entity1_mention": "Susan Weber Soros",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2091",
    "question": "In how many different places have US people died?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate1_mention": "places",
    "predicate2_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate2_mention": "died",
    "type_uri": "http://dbpedia.org/ontology/Location",
    "type_mention": "places",
    "entity1_uri": "http://dbpedia.org/resource/United_States",
    "entity1_mention": "US",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2092",
    "question": "What is the state of origin of Abbas Jafri ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Abbas_Jafri> <http://dbpedia.org/ontology/stateOfOrigin> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/stateOfOrigin",
    "predicate1_mention": "state of origin",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Abbas_Jafri",
    "entity1_mention": "Abbas Jafri",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2093",
    "question": "Name the battle fought by the military persons who also fought in Algeria ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Algeria> . ?x <http://dbpedia.org/property/battles> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/battles",
    "predicate1_mention": "battle",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/MilitaryPerson",
    "type_mention": "military persons",
    "entity1_uri": "http://dbpedia.org/resource/Algeria",
    "entity1_mention": "algeria",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2094",
    "question": "does the journal of cancer have the creative commons license?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Journal_of_Cancer> <http://dbpedia.org/property/license> <http://dbpedia.org/resource/Creative_Commons_license> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/license",
    "predicate1_mention": "license",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Journal_of_Cancer",
    "entity1_mention": "journal of cancer",
    "entity2_uri": "http://dbpedia.org/resource/Creative_Commons_license",
    "entity2_mention": "creative commons license"
},
{
    "id": "2095",
    "question": "Terry Pratchett has written about how many topics?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Terry_Pratchett> . ?x <http://dbpedia.org/ontology/nonFictionSubject> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/author",
    "predicate1_mention": "written",
    "predicate2_uri": "http://dbpedia.org/ontology/nonFictionSubject",
    "predicate2_mention": "topics",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Terry_Pratchett",
    "entity1_mention": "Terry Pratchett",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2096",
    "question": "What is debut team of the baseball players who died in Los Angeles?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?x <http://dbpedia.org/property/debutteam> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballPlayer>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate1_mention": "died",
    "predicate2_uri": "http://dbpedia.org/property/debutteam",
    "predicate2_mention": "debut team",
    "type_uri": "http://dbpedia.org/ontology/BaseballPlayer",
    "type_mention": "baseball players",
    "entity1_uri": "http://dbpedia.org/resource/Los_Angeles",
    "entity1_mention": "Los Angeles",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2097",
    "question": "Who are the associated musical artist of the  artists of band Shorty Rogers?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Shorty_Rogers> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedBand",
    "predicate1_mention": "band",
    "predicate2_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
    "predicate2_mention": "associated musical artist",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Shorty_Rogers",
    "entity1_mention": "shorty rogers",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2098",
    "question": "Martin Ferguson and Mike Kelly served under which aussie PM?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Martin_Ferguson> <http://dbpedia.org/property/primeminister> ?uri. <http://dbpedia.org/resource/Mike_Kelly_(Australian_politician)> <http://dbpedia.org/property/primeminister> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/primeminister",
    "predicate1_mention": "PM",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Martin_Ferguson",
    "entity1_mention": "Martin Ferguson",
    "entity2_uri": "http://dbpedia.org/resource/Mike_Kelly_(Australian_politician)",
    "entity2_mention": "Mike Kelly"
},
{
    "id": "2099",
    "question": "What is the region of the ethnic group which speaks the language of Arkansas?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arkansas> <http://dbpedia.org/ontology/language> ?x . ?x <http://dbpedia.org/property/region> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/language",
    "predicate1_mention": "language",
    "predicate2_uri": "http://dbpedia.org/property/region",
    "predicate2_mention": "region",
    "type_uri": "http://dbpedia.org/ontology/EthnicGroup",
    "type_mention": "ethnic group",
    "entity1_uri": "http://dbpedia.org/resource/Arkansas",
    "entity1_mention": "arkansas",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2100",
    "question": "Who has fought in the conflicts around the Mississippi river?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/place> <http://dbpedia.org/resource/Mississippi_River> . ?x <http://dbpedia.org/property/combatant> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/place",
    "predicate1_mention": "fought",
    "predicate2_uri": "http://dbpedia.org/property/combatant",
    "predicate2_mention": "conflicts",
    "type_uri": "http://dbpedia.org/ontology/MilitaryConflict",
    "type_mention": "conflicts",
    "entity1_uri": "http://dbpedia.org/resource/Mississippi_River",
    "entity1_mention": "mississippi river",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2101",
    "question": "List the relegion of tani University which is also the life stance of udit Raj ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/\u014ctani_University> <http://dbpedia.org/property/affiliation> ?uri. <http://dbpedia.org/resource/Udit_Raj> <http://dbpedia.org/ontology/religion> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/affiliation",
    "predicate1_mention": "life stance",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "relegion",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/\u014ctani_University",
    "entity1_mention": "tani University",
    "entity2_uri": "http://dbpedia.org/resource/Udit_Raj",
    "entity2_mention": "udit raj"
},
{
    "id": "2102",
    "question": "Does the San Macros River start in Texas?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/San_Marcos_River> <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Texas> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/sourceMountain",
    "predicate1_mention": "start in",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/San_Marcos_River",
    "entity1_mention": "San Macros River",
    "entity2_uri": "http://dbpedia.org/resource/Texas",
    "entity2_mention": "texas"
},
{
    "id": "2103",
    "question": "Which university's graduates have worked in the Quartermaster corps?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/Quartermaster_Corps_(United_States_Army)> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/militaryUnit",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate2_mention": "graduates",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Quartermaster_Corps_(United_States_Army)",
    "entity1_mention": "Quartermaster corps",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2104",
    "question": "What is the mascot of the military unit of David Prowse?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/David_Prowse_(politician)> <http://dbpedia.org/property/branch> ?x . ?x <http://dbpedia.org/property/mascot> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/branch",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/mascot",
    "predicate2_mention": "mascot",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/David_Prowse_(politician)",
    "entity1_mention": "David Prowse",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2106",
    "question": "Mouse Morris' horses have raced in which races?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/trainer> <http://dbpedia.org/resource/Mouse_Morris> . ?x <http://dbpedia.org/property/race> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/trainer",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/race",
    "predicate2_mention": "races",
    "type_uri": "http://dbpedia.org/ontology/Horse",
    "type_mention": "horses",
    "entity1_uri": "http://dbpedia.org/resource/Mouse_Morris",
    "entity1_mention": "Mouse Morris",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2107",
    "question": "Does Silver Airways have a hub at the Washington Dulles International Airport?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Silver_Airways> <http://dbpedia.org/ontology/hubAirport> <http://dbpedia.org/resource/Washington_Dulles_International_Airport> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/hubAirport",
    "predicate1_mention": "Airport",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Silver_Airways",
    "entity1_mention": "Silver Airways",
    "entity2_uri": "http://dbpedia.org/resource/Washington_Dulles_International_Airport",
    "entity2_mention": "Washington Dulles International Airport"
},
{
    "id": "2108",
    "question": "What is the profession of William Luther Hill ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Luther_Hill> <http://dbpedia.org/ontology/profession> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/profession",
    "predicate1_mention": "profession",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/William_Luther_Hill",
    "entity1_mention": "william luther hill",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2109",
    "question": "What religion is Kabir Suman from?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/birthName> <http://dbpedia.org/resource/Kabir_Suman> . ?x <http://dbpedia.org/property/religion> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/birthName",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/religion",
    "predicate2_mention": "religion",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kabir_Suman",
    "entity1_mention": "Kabir Suman",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2110",
    "question": "What are the source of the streams whose one of the source is Calera Oklahoma?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Calera,_Oklahoma> . ?x <http://dbpedia.org/ontology/source> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stream>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/source",
    "predicate1_mention": "source",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Stream",
    "type_mention": "streams",
    "entity1_uri": "http://dbpedia.org/resource/Calera,_Oklahoma",
    "entity1_mention": "Calera Oklahoma",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2111",
    "question": "What company made the front row and distributed big top ballet?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Big_Top_Ballet> <http://dbpedia.org/property/distributor> ?uri. <http://dbpedia.org/resource/Front_Row_(software)> <http://dbpedia.org/property/developer> ?uri . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "316",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/distributor",
    "predicate1_mention": "distributed",
    "predicate2_uri": "http://dbpedia.org/property/developer",
    "predicate2_mention": "company",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "company",
    "entity1_uri": "http://dbpedia.org/resource/Big_Top_Ballet",
    "entity1_mention": "big top ballet",
    "entity2_uri": "http://dbpedia.org/resource/Front_Row_(software)",
    "entity2_mention": "front row"
},
{
    "id": "2112",
    "question": "What is the serving railway line of Rostov Glavny ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rostov-Glavny> <http://dbpedia.org/ontology/servingRailwayLine> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/servingRailwayLine",
    "predicate1_mention": "serving railway",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Rostov-Glavny",
    "entity1_mention": "rostov glavny",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2113",
    "question": "Which company is located in Harris County, Texas?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Harris_County,_Texas>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/locationCity",
    "predicate1_mention": "located",
    "predicate2_uri": "http://dbpedia.org/ontology/Company",
    "predicate2_mention": "company",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Harris_County,_Texas",
    "entity1_mention": "Harris County, Texas",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2114",
    "question": "Name the alma mater of the scientist famous for Email filtering ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/knownFor> <http://dbpedia.org/resource/Email_filtering> . ?x <http://dbpedia.org/property/almaMater> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/knownFor",
    "predicate1_mention": "famous for",
    "predicate2_uri": "http://dbpedia.org/property/almaMater",
    "predicate2_mention": "alma mater",
    "type_uri": "http://dbpedia.org/ontology/Scientist",
    "type_mention": "scientist",
    "entity1_uri": "http://dbpedia.org/resource/Email_filtering",
    "entity1_mention": "email filtering",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2115",
    "question": "What is the genre for the developer of Interplay Entertainment?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/developer> <http://dbpedia.org/resource/Interplay_Entertainment> . ?x <http://dbpedia.org/ontology/genre> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/developer",
    "predicate1_mention": "developer",
    "predicate2_uri": "http://dbpedia.org/ontology/genre",
    "predicate2_mention": "genre",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Interplay_Entertainment",
    "entity1_mention": "Interplay Entertainment",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2117",
    "question": "Tell me the number of writers whose works have been recorded in Criteria Studios?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/recordedIn> <http://dbpedia.org/resource/Criteria_Studios> . ?x <http://dbpedia.org/property/writer> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/recordedIn",
    "predicate1_mention": "recorded",
    "predicate2_uri": "http://dbpedia.org/property/writer",
    "predicate2_mention": "writers",
    "type_uri": "http://dbpedia.org/ontology/Artist",
    "type_mention": "writers",
    "entity1_uri": "http://dbpedia.org/resource/Criteria_Studios",
    "entity1_mention": "criteria studios",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2118",
    "question": "What is the official residence of Sarah Kazemy ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sarah_Kazemy> <http://dbpedia.org/property/residence> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/residence",
    "predicate1_mention": "residence",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sarah_Kazemy",
    "entity1_mention": "Sarah Kazemy",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2119",
    "question": "List all crafts of the people whose one of the profession is Kingdom of Naples ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Kingdom_of_Naples> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/occupation",
    "predicate1_mention": "profession",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "peop.e",
    "entity1_uri": "http://dbpedia.org/resource/Kingdom_of_Naples",
    "entity1_mention": "Kingdom of Naples",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2120",
    "question": "Which state of Tendaho dam is the headquarters of Ethiopian People's revolutionary democratic Front located ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ethiopian_People's_Revolutionary_Democratic_Front> <http://dbpedia.org/property/headquarters> ?uri. <http://dbpedia.org/resource/Tendaho_Dam> <http://dbpedia.org/property/country> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/headquarters",
    "predicate1_mention": "headquarters",
    "predicate2_uri": "http://dbpedia.org/property/country",
    "predicate2_mention": "state",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ethiopian_People's_Revolutionary_Democratic_Front",
    "entity1_mention": "Ethiopian People's revolutionary democratic Front",
    "entity2_uri": "http://dbpedia.org/resource/Tendaho_Dam",
    "entity2_mention": "tendaho dam"
},
{
    "id": "2121",
    "question": "Was Apollo 11 a mission of Niel Armstrong?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Neil_Armstrong> <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Apollo_11> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/mission",
    "predicate1_mention": "mission",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Neil_Armstrong",
    "entity1_mention": "Niel Armstrong",
    "entity2_uri": "http://dbpedia.org/resource/Apollo_11",
    "entity2_mention": "apollo 11"
},
{
    "id": "2123",
    "question": "Did Paul Weatherwax an editor of Behave Yourself?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Behave_Yourself!> <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Paul_Weatherwax> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/editing",
    "predicate1_mention": "editor",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Behave_Yourself!",
    "entity1_mention": "Behave Yourself",
    "entity2_uri": "http://dbpedia.org/resource/Paul_Weatherwax",
    "entity2_mention": "Paul Weatherwax"
},
{
    "id": "2124",
    "question": "What ingredients are used in preparing the dish of Ragout fin?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ragout_fin> <http://dbpedia.org/ontology/ingredient> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/ingredient",
    "predicate1_mention": "ingredients",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ragout_fin",
    "entity1_mention": "the dish of ragout fin",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2126",
    "question": "How many television shows are broadcasted on Fox Broadcasting Company?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/channel",
    "predicate1_mention": "broadcasted on",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "television shows",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company",
    "entity1_mention": "fox broadcasting company",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2127",
    "question": "What is the fictional character which belongs to families of Darth Vader and Padm Amidala?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/family> <http://dbpedia.org/resource/Darth_Vader> . ?uri <http://dbpedia.org/property/family> <http://dbpedia.org/resource/Padm\u00e9_Amidala> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/family",
    "predicate1_mention": "families",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/FictionalCharacter",
    "type_mention": "fictional character",
    "entity1_uri": "http://dbpedia.org/resource/Darth_Vader",
    "entity1_mention": "Darth Vader",
    "entity2_uri": "http://dbpedia.org/resource/Padm\u00e9_Amidala",
    "entity2_mention": "Padm Amidala"
},
{
    "id": "2129",
    "question": "Does Ronaldinho play in the brazil's under 23 team?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ronaldinho> <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Brazil_national_under-23_football_team> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/nationalteam",
    "predicate1_mention": "team",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ronaldinho",
    "entity1_mention": "ronaldinho",
    "entity2_uri": "http://dbpedia.org/resource/Brazil_national_under-23_football_team",
    "entity2_mention": "brazil's under 23 team"
},
{
    "id": "2130",
    "question": "What are some rivers in Zambia which have a dam on them?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Zambia> . ?x <http://dbpedia.org/ontology/river> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Dam>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/country",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/river",
    "predicate2_mention": "rivers",
    "type_uri": "http://dbpedia.org/ontology/Dam",
    "type_mention": "dam",
    "entity1_uri": "http://dbpedia.org/resource/Zambia",
    "entity1_mention": "zambia",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2131",
    "question": "Which office's people have died on the US Route 165?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/U.S._Route_165> . ?x <http://dbpedia.org/property/office> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/deathPlace",
    "predicate1_mention": "died",
    "predicate2_uri": "http://dbpedia.org/property/office",
    "predicate2_mention": "office's",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/U.S._Route_165",
    "entity1_mention": "US Route 165",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2132",
    "question": "Name some shows similar to the one whose theme song is made by Murray Gold.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Murray_Gold> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/themeMusicComposer",
    "predicate1_mention": "made by",
    "predicate2_uri": "http://dbpedia.org/ontology/related",
    "predicate2_mention": "similar",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "shows",
    "entity1_uri": "http://dbpedia.org/resource/Murray_Gold",
    "entity1_mention": "Murray Gold",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2133",
    "question": "What is the order of George Frisbie Hoar?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_Frisbie_Hoar> <http://dbpedia.org/property/order> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/order",
    "predicate1_mention": "order",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/George_Frisbie_Hoar",
    "entity1_mention": "George Frisbie Hoar",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2134",
    "question": "Who are the opponents of graduates of the Middle Temple?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/education> <http://dbpedia.org/resource/Middle_Temple> . ?x <http://dbpedia.org/ontology/opponent> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/education",
    "predicate1_mention": "graduates",
    "predicate2_uri": "http://dbpedia.org/ontology/opponent",
    "predicate2_mention": "opponents",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Middle_Temple",
    "entity1_mention": "Middle Temple",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2135",
    "question": "How many movies were directed by the graduate of Burbank High School ?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/education> <http://dbpedia.org/resource/Burbank_High_School_(Burbank,_California)> . ?uri <http://dbpedia.org/property/director> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/education",
    "predicate1_mention": "graduate",
    "predicate2_uri": "http://dbpedia.org/property/director",
    "predicate2_mention": "directed",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Burbank_High_School_(Burbank,_California)",
    "entity1_mention": "Burbank High School",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2137",
    "question": "Name the company whose products is Boeing F/A-18E/F Super Hornet and key person is Raymond Conner?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet> . ?uri <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Raymond_Conner>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Raymond_Conner",
    "entity1_mention": "raymond conner",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2138",
    "question": "Who are some people whose relation is hqed in Gold Base?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Gold_Base> . ?uri <http://dbpedia.org/ontology/religion> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/headquarters",
    "predicate1_mention": "hqed",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "relation",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Gold_Base",
    "entity1_mention": "gold base",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2139",
    "question": "Name the common architecture of the Grand Serail of Aleppo and Shaheed Minar, Kolkata ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Grand_Serail_of_Aleppo> <http://dbpedia.org/ontology/architecturalStyle> ?uri. <http://dbpedia.org/resource/Shaheed_Minar,_Kolkata> <http://dbpedia.org/ontology/architecturalStyle> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/architecturalStyle",
    "predicate1_mention": "architecture",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Grand_Serail_of_Aleppo",
    "entity1_mention": "Grand Serail of Aleppo",
    "entity2_uri": "http://dbpedia.org/resource/Shaheed_Minar,_Kolkata",
    "entity2_mention": "Shaheed Minar, Kolkata"
},
{
    "id": "2140",
    "question": "Which New Mexico company provides One Drive as a service ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/New_Mexico> . ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/OneDrive>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/foundation",
    "predicate1_mention": "company",
    "predicate2_uri": "http://dbpedia.org/property/services",
    "predicate2_mention": "service",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "company",
    "entity1_uri": "http://dbpedia.org/resource/New_Mexico",
    "entity1_mention": "New Mexico",
    "entity2_uri": "http://dbpedia.org/resource/OneDrive",
    "entity2_mention": "One Drive"
},
{
    "id": "2142",
    "question": "Who operates the bridges designed by Malaysian PWD?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Malaysian_Public_Works_Department> . ?x <http://dbpedia.org/ontology/maintainedBy> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/designer",
    "predicate1_mention": "designed by",
    "predicate2_uri": "http://dbpedia.org/ontology/maintainedBy",
    "predicate2_mention": "operates",
    "type_uri": "http://dbpedia.org/ontology/Bridge",
    "type_mention": "bridges",
    "entity1_uri": "http://dbpedia.org/resource/Malaysian_Public_Works_Department",
    "entity1_mention": "Malaysian PWD",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2144",
    "question": "Among which city where Geography Club played also had the Kenticky Cycle ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Geography_Club_(play)> <http://dbpedia.org/property/place> ?uri. <http://dbpedia.org/resource/The_Kentucky_Cycle> <http://dbpedia.org/property/place> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/place",
    "predicate1_mention": "city",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Geography_Club_(play)",
    "entity1_mention": "Geography Club played",
    "entity2_uri": "http://dbpedia.org/resource/The_Kentucky_Cycle",
    "entity2_mention": "the Kenticky Cycle"
},
{
    "id": "2145",
    "question": "Who was the animator of both Tommy Tucker's Tooth and Skeleton Dance?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tommy_Tucker's_Tooth> <http://dbpedia.org/property/animator> ?uri. <http://dbpedia.org/resource/The_Skeleton_Dance> <http://dbpedia.org/ontology/animator> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/animator",
    "predicate1_mention": "animator",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tommy_Tucker's_Tooth",
    "entity1_mention": "Tommy Tucker's Tooth",
    "entity2_uri": "http://dbpedia.org/resource/The_Skeleton_Dance",
    "entity2_mention": "Skeleton Dance"
},
{
    "id": "2146",
    "question": "Name everyone working for a company owned by Roman Abramovich.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/Roman_Abramovich> . ?uri <http://dbpedia.org/ontology/occupation> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/owningCompany",
    "predicate1_mention": "company",
    "predicate2_uri": "http://dbpedia.org/ontology/occupation",
    "predicate2_mention": "working for",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Roman_Abramovich",
    "entity1_mention": "Roman Abramovich",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2147",
    "question": "What is the nationality of the economist who is one of the important people in the Foundation for Economic Education?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Foundation_for_Economic_Education> <http://dbpedia.org/ontology/keyPerson> ?x . ?x <http://dbpedia.org/ontology/nationality> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/keyPerson",
    "predicate1_mention": "people",
    "predicate2_uri": "http://dbpedia.org/ontology/nationality",
    "predicate2_mention": "nationality",
    "type_uri": "http://dbpedia.org/ontology/Economist",
    "type_mention": "economist",
    "entity1_uri": "http://dbpedia.org/resource/Foundation_for_Economic_Education",
    "entity1_mention": "Foundation for Economic Education",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2148",
    "question": "Name the rivers which originate from within Pittsburg?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Pittsburg,_New_Hampshire> . ?uri <http://dbpedia.org/ontology/source> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/cities",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/source",
    "predicate2_mention": "originate from",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "rivers",
    "entity1_uri": "http://dbpedia.org/resource/Pittsburg,_New_Hampshire",
    "entity1_mention": "pittsburg",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2149",
    "question": "What is the place of death of the gymnast who was the silver medalist at the 1956 Summer Olympics Men's rings ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gymnastics_at_the_1956_Summer_Olympics_\u2013_Men's_rings> <http://dbpedia.org/ontology/silverMedalist> ?x . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/silverMedalist",
    "predicate1_mention": "silver medalist",
    "predicate2_uri": "http://dbpedia.org/property/placeOfDeath",
    "predicate2_mention": "place of death",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Gymnastics_at_the_1956_Summer_Olympics_\u2013_Men's_rings",
    "entity1_mention": "the 1956 Summer Olympics Men's rings",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2153",
    "question": "How many people have coached the players of Middlesbrough FC?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Middlesbrough_F.C.> . ?x <http://dbpedia.org/ontology/manager> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/team",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/manager",
    "predicate2_mention": "coached",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "players",
    "entity1_uri": "http://dbpedia.org/resource/Middlesbrough_F.C.",
    "entity1_mention": "Middlesbrough FC",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2154",
    "question": "Was Robert Burns from the Romanticist School of thought?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Robert_Burns> <http://dbpedia.org/property/movement> <http://dbpedia.org/resource/Romanticism> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/movement",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Robert_Burns",
    "entity1_mention": "robert burns",
    "entity2_uri": "http://dbpedia.org/resource/Romanticism",
    "entity2_mention": "Romanticist"
},
{
    "id": "2155",
    "question": "Name the sea whose inflow is Kemijoki and outflow is Danish straits?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/inflow> <http://dbpedia.org/resource/Kemijoki> . ?uri <http://dbpedia.org/property/outflow> <http://dbpedia.org/resource/Danish_straits>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/inflow",
    "predicate1_mention": "inflow",
    "predicate2_uri": "http://dbpedia.org/property/outflow",
    "predicate2_mention": "outflow",
    "type_uri": "http://dbpedia.org/ontology/Sea",
    "type_mention": "sea",
    "entity1_uri": "http://dbpedia.org/resource/Kemijoki",
    "entity1_mention": "kemijoki",
    "entity2_uri": "http://dbpedia.org/resource/Danish_straits",
    "entity2_mention": "Danish straits"
},
{
    "id": "2157",
    "question": "Give me a count of the services by the company which provides Data center as the services ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Data_center_services> . ?x <http://dbpedia.org/property/services> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/services",
    "predicate1_mention": "services",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Data_center_services",
    "entity1_mention": "Data center as the services",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2159",
    "question": "List the awards won by the wife of Ingrid von Rosen.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ingrid_von_Rosen> <http://dbpedia.org/property/spouse> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/spouse",
    "predicate1_mention": "wife",
    "predicate2_uri": "http://dbpedia.org/property/awards",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ingrid_von_Rosen",
    "entity1_mention": "Ingrid von Rosen",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2162",
    "question": "Which program was on NBC network with executive producer as Glen and Les Charles?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/NBC> . ?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Glen_and_Les_Charles>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/network",
    "predicate1_mention": "network",
    "predicate2_uri": "http://dbpedia.org/ontology/executiveProducer",
    "predicate2_mention": "executive producer",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "program",
    "entity1_uri": "http://dbpedia.org/resource/NBC",
    "entity1_mention": "nbc",
    "entity2_uri": "http://dbpedia.org/resource/Glen_and_Les_Charles",
    "entity2_mention": "Glen and Les Charles"
},
{
    "id": "2163",
    "question": "Name hte builder of Baku Olympic Stadium ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Baku_Olympic_Stadium_(BOS)> <http://dbpedia.org/ontology/builder> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/builder",
    "predicate1_mention": "builder",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Baku_Olympic_Stadium_(BOS)",
    "entity1_mention": "Baku Olympic Stadium",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2164",
    "question": "Who is the animator of Tommy Tucker's Tooth ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tommy_Tucker's_Tooth> <http://dbpedia.org/property/animator> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/animator",
    "predicate1_mention": "animator",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tommy_Tucker's_Tooth",
    "entity1_mention": "Tommy Tucker's Tooth",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2166",
    "question": "What is the national origin of Focke Wulf Fw 260 ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Focke-Wulf_Fw_260> <http://dbpedia.org/property/nationalOrigin> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/nationalOrigin",
    "predicate1_mention": "national origin",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Focke-Wulf_Fw_260",
    "entity1_mention": "Focke Wulf Fw 260 ",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2167",
    "question": "Who is the person opposed  by Tom McLaury and Ike Clanton?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/Tom_McLaury> . ?uri <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/Ike_Clanton> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/opponent",
    "predicate1_mention": "opposed",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "person",
    "entity1_uri": "http://dbpedia.org/resource/Tom_McLaury",
    "entity1_mention": "Tom McLaury",
    "entity2_uri": "http://dbpedia.org/resource/Ike_Clanton",
    "entity2_mention": "Ike Clanton"
},
{
    "id": "2168",
    "question": "Who all have developed a cross platform software?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/operatingSystem> <http://dbpedia.org/resource/Cross-platform> . ?x <http://dbpedia.org/ontology/developer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/operatingSystem",
    "predicate1_mention": "platform",
    "predicate2_uri": "http://dbpedia.org/ontology/developer",
    "predicate2_mention": "developed",
    "type_uri": "http://dbpedia.org/ontology/Software",
    "type_mention": "software",
    "entity1_uri": "http://dbpedia.org/resource/Cross-platform",
    "entity1_mention": "cross platform",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2169",
    "question": "Who attended Great Ayton university?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/education> <http://dbpedia.org/resource/Great_Ayton>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/education",
    "predicate1_mention": "university",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Great_Ayton",
    "entity1_mention": "great ayton",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2170",
    "question": "Who is known for are War of 1812 and Battle of the Thames?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/War_of_1812> . ?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Battle_of_the_Thames> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate1_mention": "known for",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/War_of_1812",
    "entity1_mention": "War of 1812",
    "entity2_uri": "http://dbpedia.org/resource/Battle_of_the_Thames",
    "entity2_mention": "Battle of the Thames"
},
{
    "id": "2171",
    "question": "Count everything garrisoned at the pentagon?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/garrison> <http://dbpedia.org/resource/The_Pentagon>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/garrison",
    "predicate1_mention": "garrisoned",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Pentagon",
    "entity1_mention": "the pentagon",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2172",
    "question": "List few schools situated in Reading, Berkshire ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Reading,_Berkshire>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/city",
    "predicate1_mention": "situated",
    "predicate2_uri": "http://dbpedia.org/ontology/School",
    "predicate2_mention": "schools",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Reading,_Berkshire",
    "entity1_mention": "Reading, Berkshire",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2173",
    "question": "How many rivers end in the Indian Ocean?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Indian_Ocean>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/riverMouth",
    "predicate1_mention": "end in",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "rivers",
    "entity1_uri": "http://dbpedia.org/resource/Indian_Ocean",
    "entity1_mention": "indian ocean",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2174",
    "question": "What non fiction subjects are covered in books by Doubleday publishers?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Doubleday_(publisher)> . ?x <http://dbpedia.org/ontology/nonFictionSubject> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/publisher",
    "predicate1_mention": "publishers",
    "predicate2_uri": "http://dbpedia.org/ontology/nonFictionSubject",
    "predicate2_mention": "non fiction subjects",
    "type_uri": "http://dbpedia.org/ontology/Book",
    "type_mention": "books",
    "entity1_uri": "http://dbpedia.org/resource/Doubleday_(publisher)",
    "entity1_mention": "Doubleday publishers",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2175",
    "question": "Find the total number of tenants of the stadium whose tenants was Toronto Marlies?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/tenants> <http://dbpedia.org/resource/Toronto_Marlies> . ?x <http://dbpedia.org/property/tenants> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/tenants",
    "predicate1_mention": "tenants",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Toronto_Marlies",
    "entity1_mention": "toronto marlies",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2176",
    "question": "Who voiced in Peanuts Motion Comics and The Peanuts Movie?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/voice> <http://dbpedia.org/resource/Peanuts_Motion_Comics> . ?uri <http://dbpedia.org/ontology/voice> <http://dbpedia.org/resource/The_Peanuts_Movie> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/voice",
    "predicate1_mention": "voiced",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Peanuts_Motion_Comics",
    "entity1_mention": "peanuts motion comics",
    "entity2_uri": "http://dbpedia.org/resource/The_Peanuts_Movie",
    "entity2_mention": "The Peanuts Movie"
},
{
    "id": "2177",
    "question": "Is Rain Over me in the planet pit album?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Rain_Over_Me> <http://dbpedia.org/ontology/album> <http://dbpedia.org/resource/Planet_Pit> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/album",
    "predicate1_mention": "album",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Rain_Over_Me",
    "entity1_mention": "Rain Over me",
    "entity2_uri": "http://dbpedia.org/resource/Planet_Pit",
    "entity2_mention": "planet pit"
},
{
    "id": "2178",
    "question": "The pope whose shrine is in St Peter's Basilica was venerated in which sects?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/majorShrine> <http://dbpedia.org/resource/St._Peter's_Basilica> . ?x <http://dbpedia.org/property/veneratedIn> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Pope>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/majorShrine",
    "predicate1_mention": "shrine",
    "predicate2_uri": "http://dbpedia.org/property/veneratedIn",
    "predicate2_mention": "venerated in",
    "type_uri": "http://dbpedia.org/ontology/Pope",
    "type_mention": "pope",
    "entity1_uri": "http://dbpedia.org/resource/St._Peter's_Basilica",
    "entity1_mention": "St Peter's Basilica",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2179",
    "question": "List the honorary title given to the spouse of Lillian Disney ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lillian_Disney> <http://dbpedia.org/property/spouse> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/spouse",
    "predicate1_mention": "spouse",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "honorary title",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lillian_Disney",
    "entity1_mention": "lillian disney",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2181",
    "question": "What is the total number of other restingplace of the politicians whose one of the restingplace is East Norwalk Historical Cemetery?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/East_Norwalk_Historical_Cemetery> . ?x <http://dbpedia.org/property/restingplace> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/restingplace",
    "predicate1_mention": "restingplace",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/East_Norwalk_Historical_Cemetery",
    "entity1_mention": "East Norwalk Historical Cemetery",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2182",
    "question": "Count the total number of conflicts people who were part of conflict in afghanisthan ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Afghanistan> . ?x <http://dbpedia.org/ontology/battle> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/battle",
    "predicate1_mention": "conflicts",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Afghanistan",
    "entity1_mention": "afghanisthan",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2183",
    "question": "Which tennis players live in Kenthurst new south wales?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Kenthurst,_New_South_Wales>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TennisPlayer>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/residence",
    "predicate1_mention": "live in",
    "predicate2_uri": "http://dbpedia.org/ontology/TennisPlayer",
    "predicate2_mention": "tennis players",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kenthurst,_New_South_Wales",
    "entity1_mention": "Kenthurst new south wales",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2184",
    "question": "Stan Van Gundy is president for which basketball team?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/president> <http://dbpedia.org/resource/Stan_Van_Gundy> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/president",
    "predicate1_mention": "president",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Stan_Van_Gundy",
    "entity1_mention": "Stan Van Gundy",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2185",
    "question": " Wringer (novel) and Maniac Magee is the notable work of which author?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Wringer_(novel)> . ?uri <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Maniac_Magee> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/notableworks",
    "predicate1_mention": "notable work",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Writer",
    "type_mention": "wringer",
    "entity1_uri": "http://dbpedia.org/resource/Wringer_(novel)",
    "entity1_mention": "wringer (novel)",
    "entity2_uri": "http://dbpedia.org/resource/Maniac_Magee",
    "entity2_mention": "maniac magee"
},
{
    "id": "2186",
    "question": "Was Liliya Lobanova born in Ukraine?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Liliya_Lobanova> <http://dbpedia.org/property/birthplace> <http://dbpedia.org/resource/Ukraine> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/birthplace",
    "predicate1_mention": "born in",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Liliya_Lobanova",
    "entity1_mention": "Liliya Lobanova",
    "entity2_uri": "http://dbpedia.org/resource/Ukraine",
    "entity2_mention": "ukraine"
},
{
    "id": "2187",
    "question": "Where is the head quarters of the parent company of Mall of America located?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mall_of_America> <http://dbpedia.org/property/owned> ?x . ?x <http://dbpedia.org/property/headquarters> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/owned",
    "predicate1_mention": "located",
    "predicate2_uri": "http://dbpedia.org/property/headquarters",
    "predicate2_mention": "head quarters",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mall_of_America",
    "entity1_mention": "Mall of America",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2189",
    "question": "List all the major shrines of the saints which has one of the shrines as Debre Libanos ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/majorShrine> <http://dbpedia.org/resource/Debre_Libanos> . ?x <http://dbpedia.org/ontology/majorShrine> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Saint>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/majorShrine",
    "predicate1_mention": "major shrines",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Saint",
    "type_mention": "saints",
    "entity1_uri": "http://dbpedia.org/resource/Debre_Libanos",
    "entity1_mention": "Debre Libanos",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2191",
    "question": "Which associate musical artist of Carolyn Dennis is also the composer of Motorpsycho Nitemare ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Carolyn_Dennis> <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri. <http://dbpedia.org/resource/Motorpsycho_Nitemare> <http://dbpedia.org/property/composer> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
    "predicate1_mention": "associate musical artist",
    "predicate2_uri": "http://dbpedia.org/property/composer",
    "predicate2_mention": "composer",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Carolyn_Dennis",
    "entity1_mention": "carolyn dennis",
    "entity2_uri": "http://dbpedia.org/resource/Motorpsycho_Nitemare",
    "entity2_mention": "motorpsycho nitemare"
},
{
    "id": "2194",
    "question": "What genre is PyChess from, which employes Craig Van Tilbury?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Craig_Van_Tilbury> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/PyChess> <http://dbpedia.org/property/genre> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/occupation",
    "predicate1_mention": "employes",
    "predicate2_uri": "http://dbpedia.org/property/genre",
    "predicate2_mention": "genre",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Craig_Van_Tilbury",
    "entity1_mention": "Craig Van Tilbury",
    "entity2_uri": "http://dbpedia.org/resource/PyChess",
    "entity2_mention": "PyChess"
},
{
    "id": "2195",
    "question": "List things developed by Autoconf ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Autoconf> <http://dbpedia.org/ontology/developer> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/developer",
    "predicate1_mention": "developed",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Autoconf",
    "entity1_mention": "autoconf",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2196",
    "question": "In which cities are there stations of SCOLA?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/broadcastNetwork> <http://dbpedia.org/resource/SCOLA_(TV_service)> . ?x <http://dbpedia.org/property/city> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionStation>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/broadcastNetwork",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/city",
    "predicate2_mention": "cities",
    "type_uri": "http://dbpedia.org/ontology/TelevisionStation",
    "type_mention": "stations",
    "entity1_uri": "http://dbpedia.org/resource/SCOLA_(TV_service)",
    "entity1_mention": "scola",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2197",
    "question": "Was His New Job edited by Charlie Chaplin?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/His_New_Job> <http://dbpedia.org/ontology/editing> <http://dbpedia.org/resource/Charlie_Chaplin> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/editing",
    "predicate1_mention": "edited",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/His_New_Job",
    "entity1_mention": "His New Job",
    "entity2_uri": "http://dbpedia.org/resource/Charlie_Chaplin",
    "entity2_mention": "charlie chaplin"
},
{
    "id": "2198",
    "question": "Which person belongs to the board of Howard Hughes Medical Institute?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Howard_Hughes_Medical_Institute>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/board",
    "predicate1_mention": "board",
    "predicate2_uri": "http://dbpedia.org/ontology/Person",
    "predicate2_mention": "person",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Howard_Hughes_Medical_Institute",
    "entity1_mention": "Howard Hughes Medical Institute",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2199",
    "question": "What are some bands out to texarkana?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/origin> <http://dbpedia.org/resource/Texarkana,_Texas>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/origin",
    "predicate1_mention": "texarkana",
    "predicate2_uri": "http://dbpedia.org/ontology/Band",
    "predicate2_mention": "bands",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Texarkana,_Texas",
    "entity1_mention": "texarkana",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2201",
    "question": "Which cover artist of the The Adventures of Tom Sawyer also the source of inspiration of The Appple Tree ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer> <http://dbpedia.org/ontology/coverArtist> ?uri. <http://dbpedia.org/resource/The_Apple_Tree> <http://dbpedia.org/ontology/basedOn> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/coverArtist",
    "predicate1_mention": "cover artist",
    "predicate2_uri": "http://dbpedia.org/ontology/basedOn",
    "predicate2_mention": "source of",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer",
    "entity1_mention": "The Adventures of Tom Sawyer",
    "entity2_uri": "http://dbpedia.org/resource/The_Apple_Tree",
    "entity2_mention": "The Appple Tree"
},
{
    "id": "2202",
    "question": "Which hockey team is coached by mike babcock?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/headCoach> <http://dbpedia.org/resource/Mike_Babcock>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HockeyTeam>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/headCoach",
    "predicate1_mention": "coached",
    "predicate2_uri": "http://dbpedia.org/ontology/HockeyTeam",
    "predicate2_mention": "hockey team",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mike_Babcock",
    "entity1_mention": "mike babcock",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2206",
    "question": "In which common territory did Sino French war and the Tonkin campaign take place?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sino-French_War> <http://dbpedia.org/ontology/territory> ?uri. <http://dbpedia.org/resource/Tonkin_Campaign> <http://dbpedia.org/ontology/territory> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/territory",
    "predicate1_mention": "territory",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sino-French_War",
    "entity1_mention": "Sino French war",
    "entity2_uri": "http://dbpedia.org/resource/Tonkin_Campaign",
    "entity2_mention": "Tonkin campaign"
},
{
    "id": "2207",
    "question": "Which distributer of Glover is also the stockholder of Seattle Mariners ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Glover_(video_game)> <http://dbpedia.org/ontology/distributor> ?uri. <http://dbpedia.org/resource/Seattle_Mariners> <http://dbpedia.org/ontology/owner> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/distributor",
    "predicate1_mention": "distributer",
    "predicate2_uri": "http://dbpedia.org/ontology/owner",
    "predicate2_mention": "stockholder",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Glover_(video_game)",
    "entity1_mention": "glover",
    "entity2_uri": "http://dbpedia.org/resource/Seattle_Mariners",
    "entity2_mention": "Seattle Mariners"
},
{
    "id": "2208",
    "question": "In which state is Colemanville Covered Bridge located ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Colemanville_Covered_Bridge> <http://dbpedia.org/ontology/state> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/state",
    "predicate1_mention": "state",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Colemanville_Covered_Bridge",
    "entity1_mention": "colemanville covered bridge",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2209",
    "question": "What are some important works of US citizens?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/nationality",
    "predicate1_mention": "citizens",
    "predicate2_uri": "http://dbpedia.org/ontology/notableWork",
    "predicate2_mention": "important works",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_States",
    "entity1_mention": "US",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2210",
    "question": "How many characters were made by Paul Dini?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Paul_Dini>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/creators",
    "predicate1_mention": "characters",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Paul_Dini",
    "entity1_mention": "paul dini",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2211",
    "question": "What is the Team Name  of the Cristo Rey Jesuit High School (Chicago) and is also the nickname of the Lyons Township High School ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cristo_Rey_Jesuit_High_School_(Chicago)> <http://dbpedia.org/property/teamName> ?uri. <http://dbpedia.org/resource/Lyons_Township_High_School> <http://dbpedia.org/property/nickname> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/teamName",
    "predicate1_mention": "team name",
    "predicate2_uri": "http://dbpedia.org/property/nickname",
    "predicate2_mention": "nickname",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Cristo_Rey_Jesuit_High_School_(Chicago)",
    "entity1_mention": "Cristo Rey Jesuit High School (Chicago)",
    "entity2_uri": "http://dbpedia.org/resource/Lyons_Township_High_School",
    "entity2_mention": "Lyons Township High School"
},
{
    "id": "2212",
    "question": "What is the religion of the relatives of Ananda Weerasekara?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Ananda_Weerasekara> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/relation",
    "predicate1_mention": "relatives",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religion",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ananda_Weerasekara",
    "entity1_mention": "Ananda Weerasekara",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2213",
    "question": "Is the song Only the Good Die Young from The Stranger?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Only_the_Good_Die_Young> <http://dbpedia.org/property/fromAlbum> <http://dbpedia.org/resource/The_Stranger_(album)> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/fromAlbum",
    "predicate1_mention": "from",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Only_the_Good_Die_Young",
    "entity1_mention": "Only the Good Die Young",
    "entity2_uri": "http://dbpedia.org/resource/The_Stranger_(album)",
    "entity2_mention": "The Stranger"
},
{
    "id": "2215",
    "question": "What is the purpose of the Maharashtra Chess Association which is genere of PyChess?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maharashtra_Chess_Association> <http://dbpedia.org/property/purpose> ?uri. <http://dbpedia.org/resource/PyChess> <http://dbpedia.org/ontology/genre> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/purpose",
    "predicate1_mention": "purpose",
    "predicate2_uri": "http://dbpedia.org/ontology/genre",
    "predicate2_mention": "genere",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Maharashtra_Chess_Association",
    "entity1_mention": "Maharashtra Chess Association",
    "entity2_uri": "http://dbpedia.org/resource/PyChess",
    "entity2_mention": "pychess"
},
{
    "id": "2216",
    "question": "Name the office holders whose successor died in Morristown, New Jersey?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Morristown,_New_Jersey> . ?uri <http://dbpedia.org/ontology/successor> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate1_mention": "died in",
    "predicate2_uri": "http://dbpedia.org/ontology/successor",
    "predicate2_mention": "successor",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "office holders ",
    "entity1_uri": "http://dbpedia.org/resource/Morristown,_New_Jersey",
    "entity1_mention": "Morristown, New Jersey",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2217",
    "question": "What is the total number of other non-fiction subject of the books whose one of the subject is Racism?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/nonFictionSubject> <http://dbpedia.org/resource/Racism> . ?x <http://dbpedia.org/ontology/nonFictionSubject> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/nonFictionSubject",
    "predicate1_mention": "non-fiction subject",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Racism",
    "entity1_mention": "racism",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2218",
    "question": "What medals have been given to people who died of lung cancer?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathCause> <http://dbpedia.org/resource/Lung_cancer> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/deathCause",
    "predicate1_mention": "died of",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "medals",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Lung_cancer",
    "entity1_mention": "lung cancer",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2220",
    "question": "Name the broadcast area of  Radio Philippines Network ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Radio_Philippines_Network> <http://dbpedia.org/property/area> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/area",
    "predicate1_mention": "area",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Radio_Philippines_Network",
    "entity1_mention": "Radio Philippines Network",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2221",
    "question": "Which country's engineered have studied at Aero Klub in Wroclaw?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/AeroKlub_Wroc\u0142aw> . ?x <http://dbpedia.org/property/nationality> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/institution",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/nationality",
    "predicate2_mention": "country's",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/AeroKlub_Wroc\u0142aw",
    "entity1_mention": "Aero Klub in Wroclaw",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2222",
    "question": "What is pitro Gruszka hometown ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Piotr_Gruszka> <http://dbpedia.org/property/hometown> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/hometown",
    "predicate1_mention": "hometown",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Piotr_Gruszka",
    "entity1_mention": "pitro Gruszka",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2223",
    "question": "Count the drinks originated in England.",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/origin> <http://dbpedia.org/resource/England>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Beverage>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/origin",
    "predicate1_mention": "originated",
    "predicate2_uri": "http://dbpedia.org/ontology/Beverage",
    "predicate2_mention": "drinks",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/England",
    "entity1_mention": "England",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2225",
    "question": "Is Angola Avante the anthem of Angola?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Angola> <http://dbpedia.org/ontology/anthem> <http://dbpedia.org/resource/Angola_Avante> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/anthem",
    "predicate1_mention": "anthem",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Angola",
    "entity1_mention": "angola",
    "entity2_uri": "http://dbpedia.org/resource/Angola_Avante",
    "entity2_mention": "Angola Avante"
},
{
    "id": "2226",
    "question": "What sport activities are available at Polytechnic University of the Philippines Bataan?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_\u2013_Bataan> <http://dbpedia.org/ontology/sport> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/sport",
    "predicate1_mention": "sport",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_\u2013_Bataan",
    "entity1_mention": "polytechnic university of the philippines bataan",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2227",
    "question": "Trainees at the national film school of Lodz have received what awards?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/training> <http://dbpedia.org/resource/National_Film_School_in_\u0141\u00f3d\u017a> . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/training",
    "predicate1_mention": "trainees",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/National_Film_School_in_\u0141\u00f3d\u017a",
    "entity1_mention": "national film school",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2228",
    "question": "Is the Providence Chapel, Charlwood made in New English style of architecture?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Providence_Chapel,_Charlwood> <http://dbpedia.org/property/style> <http://dbpedia.org/resource/New_England> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/style",
    "predicate1_mention": "style",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Providence_Chapel,_Charlwood",
    "entity1_mention": "Providence Chapel, Charlwood",
    "entity2_uri": "http://dbpedia.org/resource/New_England",
    "entity2_mention": "New English"
},
{
    "id": "2229",
    "question": "Which tema did Dough Acomb played for which is also the drafty team of Dale Mitchell ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dale_Mitchell_(ice_hockey)> <http://dbpedia.org/ontology/draftTeam> ?uri. <http://dbpedia.org/resource/Doug_Acomb> <http://dbpedia.org/property/playedFor> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/draftTeam",
    "predicate1_mention": "drafty team",
    "predicate2_uri": "http://dbpedia.org/property/playedFor",
    "predicate2_mention": "played for",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Dale_Mitchell_(ice_hockey)",
    "entity1_mention": "Dale Mitchell",
    "entity2_uri": "http://dbpedia.org/resource/Doug_Acomb",
    "entity2_mention": "Dough Acomb"
},
{
    "id": "2230",
    "question": "What is the river whose origin is North Western Province Zambia?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/sourceRegion",
    "predicate1_mention": "origin",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia",
    "entity1_mention": "North Western Province Zambia",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2231",
    "question": "Is Tenzing Norgay  the first person to scale Mt. Everest?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mount_Everest> <http://dbpedia.org/ontology/firstAscentPerson> <http://dbpedia.org/resource/Tenzing_Norgay> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/firstAscentPerson",
    "predicate1_mention": "first person",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mount_Everest",
    "entity1_mention": "Mt. Everest",
    "entity2_uri": "http://dbpedia.org/resource/Tenzing_Norgay",
    "entity2_mention": "tenzing norgay"
},
{
    "id": "2232",
    "question": "Which awards have been given to both Ingmar Bergman and Charles LeMaire?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ingmar_Bergman> <http://dbpedia.org/property/awards> ?uri. <http://dbpedia.org/resource/Charles_LeMaire> <http://dbpedia.org/property/awards> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/awards",
    "predicate1_mention": "awards",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ingmar_Bergman",
    "entity1_mention": "Ingmar Bergman",
    "entity2_uri": "http://dbpedia.org/resource/Charles_LeMaire",
    "entity2_mention": "Charles LeMaire"
},
{
    "id": "2233",
    "question": "What is the state of Umatilla language which is also the state of James K. Kelly ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/James_K._Kelly> <http://dbpedia.org/property/state> ?uri. <http://dbpedia.org/resource/Umatilla_language> <http://dbpedia.org/property/region> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/state",
    "predicate1_mention": "state",
    "predicate2_uri": "http://dbpedia.org/property/region",
    "predicate2_mention": "state",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/James_K._Kelly",
    "entity1_mention": "James K. Kelly",
    "entity2_uri": "http://dbpedia.org/resource/Umatilla_language",
    "entity2_mention": "umatilla language"
},
{
    "id": "2234",
    "question": "In which country can I find the State Academic Opera and Ballet Theater and Baku Puppet Theatre?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Azerbaijan_State_Academic_Opera_and_Ballet_Theater> <http://dbpedia.org/ontology/locationCountry> ?uri. <http://dbpedia.org/resource/Baku_Puppet_Theatre> <http://dbpedia.org/ontology/locationCountry> ?uri . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "sparql_id": "315",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/locationCountry",
    "predicate1_mention": "country",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Country",
    "type_mention": "country",
    "entity1_uri": "http://dbpedia.org/resource/Azerbaijan_State_Academic_Opera_and_Ballet_Theater",
    "entity1_mention": "State Academic Opera and Ballet Theater",
    "entity2_uri": "http://dbpedia.org/resource/Baku_Puppet_Theatre",
    "entity2_mention": "Baku Puppet Theatre"
},
{
    "id": "2235",
    "question": "What band was Afrika Baby Bam a part of, and often performed with Q Tip?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Afrika_Baby_Bam> <http://dbpedia.org/ontology/associatedBand> ?uri. <http://dbpedia.org/resource/Q-Tip_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedBand",
    "predicate1_mention": "band",
    "predicate2_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
    "predicate2_mention": "performed",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Afrika_Baby_Bam",
    "entity1_mention": "afrika baby bam",
    "entity2_uri": "http://dbpedia.org/resource/Q-Tip_(musician)",
    "entity2_mention": "Q Tip"
},
{
    "id": "2236",
    "question": "List the governers of Jimmie Lou Fisher?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jimmie_Lou_Fisher> <http://dbpedia.org/property/governor> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/governor",
    "predicate1_mention": "governers",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jimmie_Lou_Fisher",
    "entity1_mention": "Jimmie Lou Fisher",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2238",
    "question": "Where has GARAGE recorded its singles?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Garbage_(band)> . ?x <http://dbpedia.org/ontology/recordedIn> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/producer",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/recordedIn",
    "predicate2_mention": "recorded",
    "type_uri": "http://dbpedia.org/ontology/Single",
    "type_mention": "singles",
    "entity1_uri": "http://dbpedia.org/resource/Garbage_(band)",
    "entity1_mention": "GARAGE",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2239",
    "question": "Which employer of Manu Cornet has also written Google.by ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Manu_Cornet> <http://dbpedia.org/property/employer> ?uri. <http://dbpedia.org/resource/Google.by> <http://dbpedia.org/ontology/author> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/employer",
    "predicate1_mention": "employer",
    "predicate2_uri": "http://dbpedia.org/ontology/author",
    "predicate2_mention": "written",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Manu_Cornet",
    "entity1_mention": "Manu Cornet",
    "entity2_uri": "http://dbpedia.org/resource/Google.by",
    "entity2_mention": "google.by"
},
{
    "id": "2240",
    "question": "What is the television show whose theme music is by Primus?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Primus_(band)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/themeMusicComposer",
    "predicate1_mention": "theme music",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "television show",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Primus_(band)",
    "entity1_mention": "primus",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2241",
    "question": "Which field's journals are edited by Paul Morphy?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/editor> <http://dbpedia.org/resource/Paul_Morphy> . ?x <http://dbpedia.org/property/discipline> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AcademicJournal>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/editor",
    "predicate1_mention": "edited by",
    "predicate2_uri": "http://dbpedia.org/property/discipline",
    "predicate2_mention": "field's",
    "type_uri": "http://dbpedia.org/ontology/AcademicJournal",
    "type_mention": "journals",
    "entity1_uri": "http://dbpedia.org/resource/Paul_Morphy",
    "entity1_mention": "Paul Morphy",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2242",
    "question": "Was Ne Daj Se, Nina first aired in Croatia?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ne_daj_se,_Nina> <http://dbpedia.org/property/firstAired> <http://dbpedia.org/resource/Croatia> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/firstAired",
    "predicate1_mention": "first aired",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ne_daj_se,_Nina",
    "entity1_mention": "Ne Daj Se, Nina",
    "entity2_uri": "http://dbpedia.org/resource/Croatia",
    "entity2_mention": "croatia"
},
{
    "id": "2244",
    "question": "What is the military rank of the important commander of Peruvian Army?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Peruvian_Army> <http://dbpedia.org/ontology/notableCommander> ?x . ?x <http://dbpedia.org/ontology/militaryRank> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/notableCommander",
    "predicate1_mention": "important commander",
    "predicate2_uri": "http://dbpedia.org/ontology/militaryRank",
    "predicate2_mention": "military rank",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Peruvian_Army",
    "entity1_mention": "peruvian army",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2245",
    "question": "What mammals fall into the biological family Canidae?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Canidae>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/family",
    "predicate1_mention": "family",
    "predicate2_uri": "http://dbpedia.org/ontology/Mammal",
    "predicate2_mention": "mammals",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Canidae",
    "entity1_mention": "canidae",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2246",
    "question": "Name the writer of South Park: The Stick of Truth ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Park:_The_Stick_of_Truth> <http://dbpedia.org/ontology/writer> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/writer",
    "predicate1_mention": "writer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/South_Park:_The_Stick_of_Truth",
    "entity1_mention": "South Park: The Stick of Truth",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2247",
    "question": "Who is the authority of Maine School of Science and Mathematics ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maine_School_of_Science_and_Mathematics> <http://dbpedia.org/ontology/authority> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/authority",
    "predicate1_mention": "authority",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Maine_School_of_Science_and_Mathematics",
    "entity1_mention": "Maine School of Science and Mathematics",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2248",
    "question": "Give me the count of newspaper whose language is Sweedish and headquartered at stockholm ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/language> <http://dbpedia.org/resource/Swedish_language> . ?uri <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Stockholm> } ",
    "sparql_id": "108",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/language",
    "predicate1_mention": "language",
    "predicate2_uri": "http://dbpedia.org/property/headquarters",
    "predicate2_mention": "headquartered",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Swedish_language",
    "entity1_mention": "Sweedish",
    "entity2_uri": "http://dbpedia.org/resource/Stockholm",
    "entity2_mention": "stockholm"
},
{
    "id": "2249",
    "question": "In how many places are the companies founded in Canada operating?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Canada> . ?x <http://dbpedia.org/property/locations> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/foundationPlace",
    "predicate1_mention": "founded",
    "predicate2_uri": "http://dbpedia.org/property/locations",
    "predicate2_mention": "operating",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Canada",
    "entity1_mention": "canada",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2250",
    "question": "Name a person whose sucessor was Adrian A. basora and was educated at Harvard-Westlake School?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Harvard-Westlake_School> . ?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Adrian_A._Basora>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate1_mention": "educated at",
    "predicate2_uri": "http://dbpedia.org/property/successor",
    "predicate2_mention": "sucessor",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "person",
    "entity1_uri": "http://dbpedia.org/resource/Harvard-Westlake_School",
    "entity1_mention": "harvard-westlake school",
    "entity2_uri": "http://dbpedia.org/resource/Adrian_A._Basora",
    "entity2_mention": "Adrian A. basora"
},
{
    "id": "2251",
    "question": "How many titles have been won by the beauty queens which had brown hair?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/hairColor> <http://dbpedia.org/resource/Brown_hair> . ?x <http://dbpedia.org/property/title> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/hairColor",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/title",
    "predicate2_mention": "titles",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Brown_hair",
    "entity1_mention": "brown hair",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2252",
    "question": "Who worked at  A Goon's Deed in a Weary World and CBS?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/A_Goon's_Deed_in_a_Weary_World> . ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/CBS> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/occupation",
    "predicate1_mention": "worked at",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/A_Goon's_Deed_in_a_Weary_World",
    "entity1_mention": "A Goon's Deed in a Weary World",
    "entity2_uri": "http://dbpedia.org/resource/CBS",
    "entity2_mention": "cbs"
},
{
    "id": "2253",
    "question": "How many things are manufactured by the company whose subsidiary is Sony Corporation shareholders and subsidiaries?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Sony_Corporation_shareholders_and_subsidiaries> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }",
    "sparql_id": "106",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/subsidiary",
    "predicate1_mention": "subsidiary",
    "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate2_mention": "manufactured",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sony_Corporation_shareholders_and_subsidiaries",
    "entity1_mention": "Sony Corporation shareholders and subsidiaries",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2254",
    "question": "Ford Air Transport Service and Falcon cobra are both owned by which company?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Air_Transport_Service> <http://dbpedia.org/ontology/parentCompany> ?uri. <http://dbpedia.org/resource/Ford_Falcon_Cobra> <http://dbpedia.org/ontology/parentCompany> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/parentCompany",
    "predicate1_mention": "company",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ford_Air_Transport_Service",
    "entity1_mention": "Ford Air Transport Service",
    "entity2_uri": "http://dbpedia.org/resource/Ford_Falcon_Cobra",
    "entity2_mention": "falcon cobra"
},
{
    "id": "2256",
    "question": "Which continents can be reached by flight companies available on Gatwick Airport?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Gatwick_Airport> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/targetAirport",
    "predicate1_mention": "airport",
    "predicate2_uri": "http://dbpedia.org/property/destinations",
    "predicate2_mention": "continents",
    "type_uri": "http://dbpedia.org/ontology/Airline",
    "type_mention": "flight companies",
    "entity1_uri": "http://dbpedia.org/resource/Gatwick_Airport",
    "entity1_mention": "gatwick airport",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2257",
    "question": "Who trained the wrestlers who are billed in Wisconsin?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/billed> <http://dbpedia.org/resource/Wisconsin> . ?x <http://dbpedia.org/ontology/trainer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Wrestler>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/billed",
    "predicate1_mention": "billed",
    "predicate2_uri": "http://dbpedia.org/ontology/trainer",
    "predicate2_mention": "trained",
    "type_uri": "http://dbpedia.org/ontology/Wrestler",
    "type_mention": "wrestlers",
    "entity1_uri": "http://dbpedia.org/resource/Wisconsin",
    "entity1_mention": "wisconsin",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2258",
    "question": "Who developed the software which is used as operating system of Magic Trackpad ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Magic_Trackpad> <http://dbpedia.org/ontology/operatingSystem> ?x . ?x <http://dbpedia.org/property/developer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/operatingSystem",
    "predicate1_mention": "operating system",
    "predicate2_uri": "http://dbpedia.org/property/developer",
    "predicate2_mention": "developed",
    "type_uri": "http://dbpedia.org/ontology/Software",
    "type_mention": "software",
    "entity1_uri": "http://dbpedia.org/resource/Magic_Trackpad",
    "entity1_mention": "Magic Trackpad",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2259",
    "question": "Who is the head coach of 2009-10 Middlesbrough F.C. season ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2009\u201310_Middlesbrough_F.C._season> <http://dbpedia.org/ontology/manager> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/manager",
    "predicate1_mention": "middlesbrough",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/2009\u201310_Middlesbrough_F.C._season",
    "entity1_mention": "2009-10 Middlesbrough F.C. season",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2260",
    "question": "Which builder has made concrete bridges?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/material> <http://dbpedia.org/resource/Concrete> . ?x <http://dbpedia.org/ontology/builder> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/material",
    "predicate1_mention": "made",
    "predicate2_uri": "http://dbpedia.org/ontology/builder",
    "predicate2_mention": "builder",
    "type_uri": "http://dbpedia.org/ontology/Bridge",
    "type_mention": "bridges",
    "entity1_uri": "http://dbpedia.org/resource/Concrete",
    "entity1_mention": "concrete",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2263",
    "question": "How many venues are located in the US?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/address> <http://dbpedia.org/resource/United_States>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/address",
    "predicate1_mention": "located",
    "predicate2_uri": "http://dbpedia.org/ontology/Venue",
    "predicate2_mention": "venues",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_States",
    "entity1_mention": "US",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2264",
    "question": "Which vice president of Warren G. Harsing is also the president of Evans Hughes ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Warren_G._Harding> <http://dbpedia.org/ontology/vicePresident> ?uri. <http://dbpedia.org/resource/Charles_Evans_Hughes> <http://dbpedia.org/ontology/president> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/vicePresident",
    "predicate1_mention": "vice president",
    "predicate2_uri": "http://dbpedia.org/ontology/president",
    "predicate2_mention": "president",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Warren_G._Harding",
    "entity1_mention": "Warren G. Harsing",
    "entity2_uri": "http://dbpedia.org/resource/Charles_Evans_Hughes",
    "entity2_mention": "Evans Hughes"
},
{
    "id": "2266",
    "question": "In which countries can i find broadcasted TV in southeast asia?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/broadcastArea> <http://dbpedia.org/resource/Southeast_Asia> . ?x <http://dbpedia.org/property/country> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionStation>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/broadcastArea",
    "predicate1_mention": "broadcasted",
    "predicate2_uri": "http://dbpedia.org/property/country",
    "predicate2_mention": "countries",
    "type_uri": "http://dbpedia.org/ontology/TelevisionStation",
    "type_mention": "southeast",
    "entity1_uri": "http://dbpedia.org/resource/Southeast_Asia",
    "entity1_mention": "southeast asia",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2267",
    "question": "Where can i find teams whose coach has been Rodney Eade.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Rodney_Eade> . ?x <http://dbpedia.org/property/location> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/coach",
    "predicate1_mention": "coach",
    "predicate2_uri": "http://dbpedia.org/property/location",
    "predicate2_mention": "where",
    "type_uri": "http://dbpedia.org/ontology/SportsTeam",
    "type_mention": "teams",
    "entity1_uri": "http://dbpedia.org/resource/Rodney_Eade",
    "entity1_mention": "Rodney Eade",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2268",
    "question": "Count all those whose youthclub performed at the 14-15 La Liga?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/season> <http://dbpedia.org/resource/2014\u201315_La_Liga> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/season",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/youthclubs",
    "predicate2_mention": "youthclub",
    "type_uri": "http://dbpedia.org/ontology/Athlete",
    "type_mention": "performed",
    "entity1_uri": "http://dbpedia.org/resource/2014\u201315_La_Liga",
    "entity1_mention": "the 14-15 La Liga",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2269",
    "question": "Name the office holder whose Governor is Charles Willing Byrd and has resting place as North Bend, Ohio?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Charles_Willing_Byrd> . ?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/North_Bend,_Ohio>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/governor",
    "predicate1_mention": "governor",
    "predicate2_uri": "http://dbpedia.org/property/restingplace",
    "predicate2_mention": "resting place",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "office holder",
    "entity1_uri": "http://dbpedia.org/resource/Charles_Willing_Byrd",
    "entity1_mention": "Charles Willing Byrd",
    "entity2_uri": "http://dbpedia.org/resource/North_Bend,_Ohio",
    "entity2_mention": "North Bend, Ohio"
},
{
    "id": "2270",
    "question": "What city is it where Wayne Allard governs and Juli Ashton was born?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wayne_Allard> <http://dbpedia.org/ontology/region> ?uri. <http://dbpedia.org/resource/Juli_Ashton> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/region",
    "predicate1_mention": "city",
    "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate2_mention": "born",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Wayne_Allard",
    "entity1_mention": "Wayne Allard",
    "entity2_uri": "http://dbpedia.org/resource/Juli_Ashton",
    "entity2_mention": "Juli Ashton"
},
{
    "id": "2271",
    "question": "Which neighboring municipalities of Cologny has a mayor named Ester Alder ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Cologny> . ?uri <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Esther_Alder>  . }",
    "sparql_id": "8",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/neighboringMunicipalities",
    "predicate1_mention": "neighboring municipalities",
    "predicate2_uri": "http://dbpedia.org/ontology/mayor",
    "predicate2_mention": "mayor",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Cologny",
    "entity1_mention": "cologny",
    "entity2_uri": "http://dbpedia.org/resource/Esther_Alder",
    "entity2_mention": "Ester Alder"
},
{
    "id": "2272",
    "question": "Rostock and Oulu is the shore cities on which sea ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Rostock> . ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Oulu> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/cities",
    "predicate1_mention": "cities",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Sea",
    "type_mention": "sea",
    "entity1_uri": "http://dbpedia.org/resource/Rostock",
    "entity1_mention": "rostock",
    "entity2_uri": "http://dbpedia.org/resource/Oulu",
    "entity2_mention": "oulu"
},
{
    "id": "2273",
    "question": "Count the number of broadcast area of the TV stations which serves in Agalga ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/broadcastArea> <http://dbpedia.org/resource/Agal\u00e9ga> . ?x <http://dbpedia.org/property/broadcastArea> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/broadcastArea",
    "predicate1_mention": "broadcast area",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Agal\u00e9ga",
    "entity1_mention": "Agalga",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2274",
    "question": "Name the kingdom with currency Solidus (coin) and administrative headquarters in Nicomedia?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Solidus_(coin)> . ?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Nicomedia>  . }",
    "sparql_id": "8",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/currency",
    "predicate1_mention": "currency",
    "predicate2_uri": "http://dbpedia.org/ontology/capital",
    "predicate2_mention": "administrative headquarters",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Solidus_(coin)",
    "entity1_mention": "solidus (coin)",
    "entity2_uri": "http://dbpedia.org/resource/Nicomedia",
    "entity2_mention": "nicomedia"
},
{
    "id": "2275",
    "question": "What are the baseball teams who belongs to  Guggenheim Partners?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Guggenheim_Partners>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballTeam>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/owner",
    "predicate1_mention": "belongs to",
    "predicate2_uri": "http://dbpedia.org/ontology/BaseballTeam",
    "predicate2_mention": "baseball teams",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Guggenheim_Partners",
    "entity1_mention": "guggenheim partners",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2276",
    "question": "Where did Doug Walgren and Lee Si Chen study?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lee_Si-Chen> <http://dbpedia.org/property/almaMater> ?uri. <http://dbpedia.org/resource/Doug_Walgren> <http://dbpedia.org/ontology/almaMater> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/almaMater",
    "predicate1_mention": "study",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lee_Si-Chen",
    "entity1_mention": "Lee Si Chen",
    "entity2_uri": "http://dbpedia.org/resource/Doug_Walgren",
    "entity2_mention": "Doug Walgren"
},
{
    "id": "2277",
    "question": "Where are the politicians buried who succeeded George Whitefield Davis?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/George_Whitefield_Davis> . ?x <http://dbpedia.org/property/restingplace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "605",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/predecessor",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/restingplace",
    "predicate2_mention": "buried",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "politicians",
    "entity1_uri": "http://dbpedia.org/resource/George_Whitefield_Davis",
    "entity1_mention": "George Whitefield Davis",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2279",
    "question": "Is the assembly of tofa ahin ethopia?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Tofa\u015f_\u015eahin> <http://dbpedia.org/ontology/assembly> <http://dbpedia.org/resource/Ethiopia> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/assembly",
    "predicate1_mention": "assembly",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tofa\u015f_\u015eahin",
    "entity1_mention": "tofa ahin",
    "entity2_uri": "http://dbpedia.org/resource/Ethiopia",
    "entity2_mention": "ethopia"
},
{
    "id": "2280",
    "question": "What are some music artists whose bands have signed up with Entertainment One Music?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Entertainment_One_Music> . ?x <http://dbpedia.org/ontology/bandMember> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/label",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/bandMember",
    "predicate2_mention": "bands",
    "type_uri": "http://dbpedia.org/ontology/Band",
    "type_mention": "bands",
    "entity1_uri": "http://dbpedia.org/resource/Entertainment_One_Music",
    "entity1_mention": "Entertainment One Music",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2281",
    "question": "Do Ctenochaetus Binotatus lie in the Actinopterygii class?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ctenochaetus_binotatus> <http://dbpedia.org/ontology/class> <http://dbpedia.org/resource/Actinopterygii> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/class",
    "predicate1_mention": "class",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ctenochaetus_binotatus",
    "entity1_mention": "ctenochaetus binotatus",
    "entity2_uri": "http://dbpedia.org/resource/Actinopterygii",
    "entity2_mention": "Actinopterygii"
},
{
    "id": "2282",
    "question": "How many food items have an ingredient from the Sapindales family?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Sapindales> . ?uri <http://dbpedia.org/ontology/ingredient> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Food>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/order",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/ingredient",
    "predicate2_mention": "ingredient",
    "type_uri": "http://dbpedia.org/ontology/Food",
    "type_mention": "food",
    "entity1_uri": "http://dbpedia.org/resource/Sapindales",
    "entity1_mention": "sapindales",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2283",
    "question": "How many movies have had a cinematographer who died in US?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/cinematography> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/deathPlace",
    "predicate1_mention": "died in",
    "predicate2_uri": "http://dbpedia.org/property/cinematography",
    "predicate2_mention": "cinematographer",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/United_States",
    "entity1_mention": "US",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2284",
    "question": "Which type of building is Qun Thnh Temple ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Qu\u00e1n_Th\u00e1nh_Temple> <http://dbpedia.org/property/buildingType> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/buildingType",
    "predicate1_mention": "type of building",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Qu\u00e1n_Th\u00e1nh_Temple",
    "entity1_mention": "Qun Thnh Temple ",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2285",
    "question": "Does Stanley Cavell study Shakespeare?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Stanley_Cavell> <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/William_Shakespeare> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/mainInterests",
    "predicate1_mention": "shakespeare",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Stanley_Cavell",
    "entity1_mention": "stanley cavell",
    "entity2_uri": "http://dbpedia.org/resource/William_Shakespeare",
    "entity2_mention": "shakespeare"
},
{
    "id": "2287",
    "question": "Who is the common distributer of Bombay Sapphire and Rev ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bombay_Sapphire> <http://dbpedia.org/property/distributor> ?uri. <http://dbpedia.org/resource/Rev_(drink)> <http://dbpedia.org/ontology/distributor> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/distributor",
    "predicate1_mention": "distributer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bombay_Sapphire",
    "entity1_mention": "Bombay Sapphire",
    "entity2_uri": "http://dbpedia.org/resource/Rev_(drink)",
    "entity2_mention": "rev"
},
{
    "id": "2288",
    "question": "Name the largest city of the country where the body of Amit Saigal was discovered?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Amit_Saigal> <http://dbpedia.org/ontology/bodyDiscovered> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/bodyDiscovered",
    "predicate1_mention": "discovered",
    "predicate2_uri": "http://dbpedia.org/ontology/largestCity",
    "predicate2_mention": "largest city",
    "type_uri": "http://dbpedia.org/ontology/Country",
    "type_mention": "country",
    "entity1_uri": "http://dbpedia.org/resource/Amit_Saigal",
    "entity1_mention": "Amit Saigal",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2289",
    "question": "Where is the hometown of A Bartlett Giamatti?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/A._Bartlett_Giamatti> <http://dbpedia.org/ontology/hometown> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/hometown",
    "predicate1_mention": "hometown",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/A._Bartlett_Giamatti",
    "entity1_mention": "A Bartlett Giamatti",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2290",
    "question": "Which major shrine of Tekle haymanot is the palce of death of Haile Selassie Gugsa ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tekle_Haymanot> <http://dbpedia.org/ontology/majorShrine> ?uri. <http://dbpedia.org/resource/Haile_Selassie_Gugsa> <http://dbpedia.org/property/placeOfDeath> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/majorShrine",
    "predicate1_mention": "major shrine",
    "predicate2_uri": "http://dbpedia.org/property/placeOfDeath",
    "predicate2_mention": "palce of death",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tekle_Haymanot",
    "entity1_mention": "Tekle haymanot",
    "entity2_uri": "http://dbpedia.org/resource/Haile_Selassie_Gugsa",
    "entity2_mention": "Haile Selassie Gugsa"
},
{
    "id": "2292",
    "question": "List the fields of the scientists with Sanskrit as one of the interest ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/fields> <http://dbpedia.org/resource/Sanskrit> . ?x <http://dbpedia.org/property/fields> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/fields",
    "predicate1_mention": "fields",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Scientist",
    "type_mention": "scientists",
    "entity1_uri": "http://dbpedia.org/resource/Sanskrit",
    "entity1_mention": "sanskrit",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2293",
    "question": "Who is the headcoach of 2008-09 Marquette Golden Eagles men's basketball team ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2008\u201309_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/property/headcoach> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/headcoach",
    "predicate1_mention": "headcoach",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/2008\u201309_Marquette_Golden_Eagles_men's_basketball_team",
    "entity1_mention": "2008-09 Marquette Golden Eagles men's basketball team",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2295",
    "question": "List the work  edited by  Mark Stevens and directed by Joel Schumacher?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Mark_Stevens_(film_editor)> . ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Joel_Schumacher>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/editing",
    "predicate1_mention": "edited",
    "predicate2_uri": "http://dbpedia.org/ontology/director",
    "predicate2_mention": "directed",
    "type_uri": "http://dbpedia.org/ontology/Work",
    "type_mention": "work",
    "entity1_uri": "http://dbpedia.org/resource/Mark_Stevens_(film_editor)",
    "entity1_mention": "Mark Stevens",
    "entity2_uri": "http://dbpedia.org/resource/Joel_Schumacher",
    "entity2_mention": "Joel Schumacher"
},
{
    "id": "2297",
    "question": "List the popular works of the author of Luther The Calling ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Luther:_The_Calling> <http://dbpedia.org/property/author> ?x . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/author",
    "predicate1_mention": "author",
    "predicate2_uri": "http://dbpedia.org/ontology/notableWork",
    "predicate2_mention": "popular works",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Luther:_The_Calling",
    "entity1_mention": "Luther The Calling",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2298",
    "question": "Who are the predecessors of John Randolph of Roanoke?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/John_Randolph_of_Roanoke>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/predecessor",
    "predicate1_mention": "predecessors",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/John_Randolph_of_Roanoke",
    "entity1_mention": "John Randolph of Roanoke",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2299",
    "question": "In which continent do Air 2000 and Novair International airways operate?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Air_2000> <http://dbpedia.org/property/destinations> ?uri. <http://dbpedia.org/resource/Novair_International_Airways> <http://dbpedia.org/property/destinations> ?uri . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Continent>}",
    "sparql_id": "315",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/destinations",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Continent",
    "type_mention": "continent",
    "entity1_uri": "http://dbpedia.org/resource/Air_2000",
    "entity1_mention": "Air 2000",
    "entity2_uri": "http://dbpedia.org/resource/Novair_International_Airways",
    "entity2_mention": "Novair International airways"
},
{
    "id": "2301",
    "question": "Who were the first drivers in Grand Prixes where the first team was Scuderia Ferrari?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/firstTeam> <http://dbpedia.org/resource/Scuderia_Ferrari> . ?x <http://dbpedia.org/ontology/firstDriver> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GrandPrix>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/firstTeam",
    "predicate1_mention": "first team",
    "predicate2_uri": "http://dbpedia.org/ontology/firstDriver",
    "predicate2_mention": "first drivers",
    "type_uri": "http://dbpedia.org/ontology/GrandPrix",
    "type_mention": "Grand Prixes",
    "entity1_uri": "http://dbpedia.org/resource/Scuderia_Ferrari",
    "entity1_mention": "scuderia ferrari",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2302",
    "question": "Does Abdelhameed Amarri currently play for Khartoum?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Abdelhameed_Amarri> <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/Khartoum> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/currentclub",
    "predicate1_mention": "currently",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Abdelhameed_Amarri",
    "entity1_mention": "abdelhameed amarri",
    "entity2_uri": "http://dbpedia.org/resource/Khartoum",
    "entity2_mention": "khartoum"
},
{
    "id": "2303",
    "question": "List the alma mater of the congressmen who attended Nashville Tennessee ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Congressman>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/almaMater",
    "predicate1_mention": "alma mater",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Congressman",
    "type_mention": "congressmen",
    "entity1_uri": "http://dbpedia.org/resource/Nashville,_Tennessee",
    "entity1_mention": "nashville tennessee",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2304",
    "question": "What are the name of the casualties affected by shooting rampage of Eric Harris and Dylan Klebold?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/deathCause> <http://dbpedia.org/resource/Eric_Harris_and_Dylan_Klebold>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/deathCause",
    "predicate1_mention": "shooting rampage",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "name",
    "entity1_uri": "http://dbpedia.org/resource/Eric_Harris_and_Dylan_Klebold",
    "entity1_mention": "Eric Harris and Dylan Klebold",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2305",
    "question": "List TV shows with producer as Erik Bork and company is DreamWorks Television ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/DreamWorks_Television> . ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Erik_Bork>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/company",
    "predicate1_mention": "company",
    "predicate2_uri": "http://dbpedia.org/ontology/producer",
    "predicate2_mention": "producer",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "TV shows",
    "entity1_uri": "http://dbpedia.org/resource/DreamWorks_Television",
    "entity1_mention": "DreamWorks Television",
    "entity2_uri": "http://dbpedia.org/resource/Erik_Bork",
    "entity2_mention": "erik bork"
},
{
    "id": "2306",
    "question": "Name the awards that have been given to the writer made famous for Creature Comforts?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/Creature_Comforts> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/notableWork",
    "predicate1_mention": "made famous for",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "awards",
    "type_uri": "http://dbpedia.org/ontology/Writer",
    "type_mention": "writer",
    "entity1_uri": "http://dbpedia.org/resource/Creature_Comforts",
    "entity1_mention": "creature comforts",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2307",
    "question": "Who produces the tv series which made Scott Haran famous?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Scott_Haran> <http://dbpedia.org/ontology/knownFor> ?x . ?x <http://dbpedia.org/ontology/producer> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate1_mention": "famous",
    "predicate2_uri": "http://dbpedia.org/ontology/producer",
    "predicate2_mention": "produces",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Scott_Haran",
    "entity1_mention": "scott haran",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2308",
    "question": "List all the faiths that British Columbian politicians follow?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/British_Columbia> . ?x <http://dbpedia.org/property/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/residence",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/religion",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Politician",
    "type_mention": "politicians",
    "entity1_uri": "http://dbpedia.org/resource/British_Columbia",
    "entity1_mention": "British Columbian",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2309",
    "question": "Which sports are played in the alma mater of Habib Boromand Dashghapu?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Habib_Boromand_Dashghapu> <http://dbpedia.org/property/almaMater> ?x . ?x <http://dbpedia.org/ontology/sport> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/almaMater",
    "predicate1_mention": "alma mater",
    "predicate2_uri": "http://dbpedia.org/ontology/sport",
    "predicate2_mention": "sports",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Habib_Boromand_Dashghapu",
    "entity1_mention": "Habib Boromand Dashghapu",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2310",
    "question": "List the television shows whose network's owning company is Turner Broadcasting System?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/Turner_Broadcasting_System> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/owningCompany",
    "predicate1_mention": "owning company",
    "predicate2_uri": "http://dbpedia.org/property/network",
    "predicate2_mention": "network's",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television shows",
    "entity1_uri": "http://dbpedia.org/resource/Turner_Broadcasting_System",
    "entity1_mention": "Turner Broadcasting System",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2311",
    "question": "Give me a count on associates of Johnny Cash?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Johnny_Cash>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/associatedActs",
    "predicate1_mention": "associates",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Johnny_Cash",
    "entity1_mention": "johnny cash",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2312",
    "question": "What country provides a citizenship too Newin Chidchob and Seni Pramoj?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Newin_Chidchob> <http://dbpedia.org/property/nationality> ?uri. <http://dbpedia.org/resource/Seni_Pramoj> <http://dbpedia.org/ontology/nationality> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/nationality",
    "predicate1_mention": "country",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Newin_Chidchob",
    "entity1_mention": "Newin Chidchob",
    "entity2_uri": "http://dbpedia.org/resource/Seni_Pramoj",
    "entity2_mention": "Seni Pramoj"
},
{
    "id": "2313",
    "question": "What are some devices made by Taiwanese companies?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/locationCity> <http://dbpedia.org/resource/Taiwan> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Device>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/locationCity",
    "predicate1_mention": "companies",
    "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate2_mention": "made by",
    "type_uri": "http://dbpedia.org/ontology/Device",
    "type_mention": "devices",
    "entity1_uri": "http://dbpedia.org/resource/Taiwan",
    "entity1_mention": "Taiwanese",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2314",
    "question": "What is a salthill?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Salthill> <http://dbpedia.org/ontology/type> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/type",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Salthill",
    "entity1_mention": "salthill",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2315",
    "question": "Who is the musician of Before I let you Go ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Before_I_Let_You_Go> <http://dbpedia.org/ontology/musicalArtist> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/musicalArtist",
    "predicate1_mention": "musician",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Before_I_Let_You_Go",
    "entity1_mention": "Before I let you Go",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2316",
    "question": "Which admin center of pulau Ujong is also the largest city of Pulau Ubin ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pulau_Ubin> <http://dbpedia.org/ontology/largestCity> ?uri. <http://dbpedia.org/resource/Pulau_Ujong> <http://dbpedia.org/ontology/capital> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/largestCity",
    "predicate1_mention": "largest city",
    "predicate2_uri": "http://dbpedia.org/ontology/capital",
    "predicate2_mention": "admin center",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Pulau_Ubin",
    "entity1_mention": "pulau ubin",
    "entity2_uri": "http://dbpedia.org/resource/Pulau_Ujong",
    "entity2_mention": "pulau Ujong"
},
{
    "id": "2317",
    "question": "What is the Ceremonial County of Port of Tilbury ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Port_of_Tilbury> <http://dbpedia.org/ontology/ceremonialCounty> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/ceremonialCounty",
    "predicate1_mention": "ceremonial county",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Port_of_Tilbury",
    "entity1_mention": "Port of Tilbury",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2318",
    "question": "What is the current team of John McGuinness ( motorcycle racer ) ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_McGuinness_(motorcycle_racer)> <http://dbpedia.org/property/currentTeam> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/currentTeam",
    "predicate1_mention": "current team",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/John_McGuinness_(motorcycle_racer)",
    "entity1_mention": "John McGuinness ( motorcycle racer )",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2319",
    "question": "What is the ideology of the Union of Cambodian Democrats which is also the ideology of Palang Dharma Party ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Union_of_Cambodian_Democrats> <http://dbpedia.org/ontology/ideology> ?uri. <http://dbpedia.org/resource/Palang_Dharma_Party> <http://dbpedia.org/ontology/ideology> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/ideology",
    "predicate1_mention": "ideology",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Union_of_Cambodian_Democrats",
    "entity1_mention": "Union of Cambodian Democrats",
    "entity2_uri": "http://dbpedia.org/resource/Palang_Dharma_Party",
    "entity2_mention": "palang dharma party"
},
{
    "id": "2320",
    "question": "What is the honorary title of the narrator of Everything Will Be OK?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Everything_Will_Be_OK> <http://dbpedia.org/ontology/narrator> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/narrator",
    "predicate1_mention": "narrator",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "honorary title",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Everything_Will_Be_OK",
    "entity1_mention": "Everything Will Be OK",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2321",
    "question": "Does the white river flow into the connecticut river?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Connecticut_River> <http://dbpedia.org/ontology/rightTributary> <http://dbpedia.org/resource/White_River_(Vermont)> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/rightTributary",
    "predicate1_mention": "connecticut",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Connecticut_River",
    "entity1_mention": "connecticut river",
    "entity2_uri": "http://dbpedia.org/resource/White_River_(Vermont)",
    "entity2_mention": "white river"
},
{
    "id": "2322",
    "question": "Who is the famous relative of Kelly Osbourne?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Kelly_Osbourne>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/relatives",
    "predicate1_mention": "relative",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kelly_Osbourne",
    "entity1_mention": "Kelly Osbourne",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2323",
    "question": "What are some cars similar to luxury cars?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/class> <http://dbpedia.org/resource/Luxury_vehicle> . ?x <http://dbpedia.org/property/related> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/class",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/related",
    "predicate2_mention": "similar to",
    "type_uri": "http://dbpedia.org/ontology/Automobile",
    "type_mention": "some cars",
    "entity1_uri": "http://dbpedia.org/resource/Luxury_vehicle",
    "entity1_mention": "luxury",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2325",
    "question": "What is the regional radio sports network associated with?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Regional_Radio_Sports_Network> <http://dbpedia.org/property/affiliations> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/affiliations",
    "predicate1_mention": "associated",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Regional_Radio_Sports_Network",
    "entity1_mention": "regional radio sports network",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2328",
    "question": "In which state does the ambassador who is in related with J Bennett Johnston live?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/J._Bennett_Johnston> <http://dbpedia.org/ontology/relation> ?x . ?x <http://dbpedia.org/property/state> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/relation",
    "predicate1_mention": "related",
    "predicate2_uri": "http://dbpedia.org/property/state",
    "predicate2_mention": "state",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/J._Bennett_Johnston",
    "entity1_mention": "J Bennett Johnston",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2329",
    "question": "Who is the employer of Michael M. Sears ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_M._Sears> <http://dbpedia.org/property/employer> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/employer",
    "predicate1_mention": "employer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Michael_M._Sears",
    "entity1_mention": "Michael M. Sears",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2330",
    "question": "Does mumbai manage the railway line going to the daund railway junction?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Daund_Junction_railway_station> <http://dbpedia.org/ontology/servingRailwayLine> <http://dbpedia.org/resource/Mumbai> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/servingRailwayLine",
    "predicate1_mention": "railway line",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Daund_Junction_railway_station",
    "entity1_mention": "daund railway junction",
    "entity2_uri": "http://dbpedia.org/resource/Mumbai",
    "entity2_mention": "mumbai"
},
{
    "id": "2331",
    "question": "Whihc place of birth of the Nina Vislova is also the largest city of Union State ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Union_State> <http://dbpedia.org/property/largestCity> ?uri. <http://dbpedia.org/resource/Nina_Vislova> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/largestCity",
    "predicate1_mention": "largest city",
    "predicate2_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate2_mention": "place of birth",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Union_State",
    "entity1_mention": "union state",
    "entity2_uri": "http://dbpedia.org/resource/Nina_Vislova",
    "entity2_mention": "Nina Vislova"
},
{
    "id": "2333",
    "question": "Through which counties does the road go which starts at the Port Klang?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/routeStart> <http://dbpedia.org/resource/Port_Klang> . ?x <http://dbpedia.org/ontology/county> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Road>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/routeStart",
    "predicate1_mention": "starts",
    "predicate2_uri": "http://dbpedia.org/ontology/county",
    "predicate2_mention": "counties",
    "type_uri": "http://dbpedia.org/ontology/Road",
    "type_mention": "road",
    "entity1_uri": "http://dbpedia.org/resource/Port_Klang",
    "entity1_mention": "Port Klang",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2334",
    "question": "Under which president did some politicians live in Kensington?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Kensington,_Maryland> . ?x <http://dbpedia.org/ontology/president> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/residence",
    "predicate1_mention": "president",
    "predicate2_uri": "http://dbpedia.org/ontology/president",
    "predicate2_mention": "president",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "politicians",
    "entity1_uri": "http://dbpedia.org/resource/Kensington,_Maryland",
    "entity1_mention": "kensington",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2335",
    "question": "What awards were given to the producer of Chicken Little?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chicken_Little_(1943_film)> <http://dbpedia.org/ontology/producer> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/producer",
    "predicate1_mention": "producer",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Chicken_Little_(1943_film)",
    "entity1_mention": "chicken little",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2337",
    "question": "To what companies is Dennis Muilenburg important?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Dennis_Muilenburg>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/keyPeople",
    "predicate1_mention": "important",
    "predicate2_uri": "http://dbpedia.org/ontology/Company",
    "predicate2_mention": "companies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Dennis_Muilenburg",
    "entity1_mention": "Dennis Muilenburg",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2338",
    "question": "Whose children died in North Bend, Ohio?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/North_Bend,_Ohio> . ?uri <http://dbpedia.org/ontology/child> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate1_mention": "died",
    "predicate2_uri": "http://dbpedia.org/ontology/child",
    "predicate2_mention": "children",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/North_Bend,_Ohio",
    "entity1_mention": "North Bend, Ohio",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2339",
    "question": "What is the governing body of Burro Flats Painted Cave ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Burro_Flats_Painted_Cave> <http://dbpedia.org/ontology/governingBody> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/governingBody",
    "predicate1_mention": "governing body",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Burro_Flats_Painted_Cave",
    "entity1_mention": "Burro Flats Painted Cave",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2340",
    "question": "whose is famous works are Maniac Magee and Wringer ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Maniac_Magee> . ?uri <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Wringer_(novel)> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/notableworks",
    "predicate1_mention": "famous works",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Maniac_Magee",
    "entity1_mention": "maniac magee",
    "entity2_uri": "http://dbpedia.org/resource/Wringer_(novel)",
    "entity2_mention": "wringer"
},
{
    "id": "2341",
    "question": "Is Lieutenant general (United States) the superintendent of United States Air Force Academy?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/United_States_Air_Force_Academy> <http://dbpedia.org/property/superintendent> <http://dbpedia.org/resource/Lieutenant_general_(United_States)> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/superintendent",
    "predicate1_mention": "superintendent",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_States_Air_Force_Academy",
    "entity1_mention": "United States Air Force Academy",
    "entity2_uri": "http://dbpedia.org/resource/Lieutenant_general_(United_States)",
    "entity2_mention": "Lieutenant general (United States)"
},
{
    "id": "2342",
    "question": "Who operates the railway line which begins in Minneapolis?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/routeStart> <http://dbpedia.org/resource/Minneapolis> . ?x <http://dbpedia.org/ontology/operatedBy> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RailwayLine>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/routeStart",
    "predicate1_mention": "begins in",
    "predicate2_uri": "http://dbpedia.org/ontology/operatedBy",
    "predicate2_mention": "operates",
    "type_uri": "http://dbpedia.org/ontology/RailwayLine",
    "type_mention": "railway line",
    "entity1_uri": "http://dbpedia.org/resource/Minneapolis",
    "entity1_mention": "minneapolis",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2344",
    "question": "What is the venerated in of the Abraham and religion of the Saima Chowdhury",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Abraham> <http://dbpedia.org/property/veneratedIn> ?uri. <http://dbpedia.org/resource/Saima_Chowdhury> <http://dbpedia.org/property/religion> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/veneratedIn",
    "predicate1_mention": "venerated",
    "predicate2_uri": "http://dbpedia.org/property/religion",
    "predicate2_mention": "religion",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Abraham",
    "entity1_mention": "abraham",
    "entity2_uri": "http://dbpedia.org/resource/Saima_Chowdhury",
    "entity2_mention": "Saima Chowdhury"
},
{
    "id": "2345",
    "question": "To which label did The Producers and I pray on Christmas sign up?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Producers_(2005_film)> <http://dbpedia.org/property/label> ?uri. <http://dbpedia.org/resource/I_Pray_on_Christmas> <http://dbpedia.org/property/label> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/label",
    "predicate1_mention": "label",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Producers_(2005_film)",
    "entity1_mention": "The Producers",
    "entity2_uri": "http://dbpedia.org/resource/I_Pray_on_Christmas",
    "entity2_mention": "I pray on Christmas"
},
{
    "id": "2346",
    "question": "Wo which countries have the members of Ukrainian ministry of internal affairs swore their oath?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Ministry_of_Internal_Affairs_(Ukraine)> . ?x <http://dbpedia.org/property/allegiance> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/branch",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/allegiance",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ministry_of_Internal_Affairs_(Ukraine)",
    "entity1_mention": "Ukrainian ministry of internal affairs",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2347",
    "question": "Where did the conflict take place in which Henri Putz fought?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Henri_Putz> <http://dbpedia.org/ontology/battle> ?x . ?x <http://dbpedia.org/ontology/territory> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/battle",
    "predicate1_mention": "conflict",
    "predicate2_uri": "http://dbpedia.org/ontology/territory",
    "predicate2_mention": "take place",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Henri_Putz",
    "entity1_mention": "henri putz",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2348",
    "question": "Which producer of  the Eristoff is also the  distributor of  Bombay Sapphire?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eristoff> <http://dbpedia.org/property/manufacturer> ?uri. <http://dbpedia.org/resource/Bombay_Sapphire> <http://dbpedia.org/property/distributor> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/manufacturer",
    "predicate1_mention": "producer",
    "predicate2_uri": "http://dbpedia.org/property/distributor",
    "predicate2_mention": "distributor",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Eristoff",
    "entity1_mention": "eristoff",
    "entity2_uri": "http://dbpedia.org/resource/Bombay_Sapphire",
    "entity2_mention": "Bombay Sapphire"
},
{
    "id": "2350",
    "question": "Which sports by Polytechnic University of the Philippines Taguig is the discipline of The Chess Monthly ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Chess_Monthly> <http://dbpedia.org/property/discipline> ?uri. <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig> <http://dbpedia.org/ontology/sport> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/discipline",
    "predicate1_mention": "discipline",
    "predicate2_uri": "http://dbpedia.org/ontology/sport",
    "predicate2_mention": "sports",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Chess_Monthly",
    "entity1_mention": "The Chess Monthly",
    "entity2_uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig",
    "entity2_mention": "Polytechnic University of the Philippines Taguig"
},
{
    "id": "2351",
    "question": "Name the series of Doctor Who: Evacuation Earth ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Doctor_Who:_Evacuation_Earth> <http://dbpedia.org/ontology/series> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/series",
    "predicate1_mention": "series",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Doctor_Who:_Evacuation_Earth",
    "entity1_mention": "Doctor Who: Evacuation Earth",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2352",
    "question": "Which company of Ford Theatre is the owning organization of Ford Kansa City Assemply Plant ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant> <http://dbpedia.org/ontology/owningOrganisation> ?uri. <http://dbpedia.org/resource/Ford_Theatre> <http://dbpedia.org/property/company> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/owningOrganisation",
    "predicate1_mention": "organization",
    "predicate2_uri": "http://dbpedia.org/property/company",
    "predicate2_mention": "company",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant",
    "entity1_mention": "Ford Kansa City Assemply Plant",
    "entity2_uri": "http://dbpedia.org/resource/Ford_Theatre",
    "entity2_mention": "Ford Theatre"
},
{
    "id": "2353",
    "question": "Name a royalty whose one of the child is Augustus  and is associated with Publius Servilius Vatia Isauricus?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Augustus> . ?uri <http://dbpedia.org/ontology/associate> <http://dbpedia.org/resource/Publius_Servilius_Vatia_Isauricus_(consul_48_BC)>  . }",
    "sparql_id": "8",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/children",
    "predicate1_mention": "child",
    "predicate2_uri": "http://dbpedia.org/ontology/associate",
    "predicate2_mention": "associated",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Augustus",
    "entity1_mention": "augustus",
    "entity2_uri": "http://dbpedia.org/resource/Publius_Servilius_Vatia_Isauricus_(consul_48_BC)",
    "entity2_mention": "Publius Servilius Vatia Isauricus"
},
{
    "id": "2354",
    "question": "Is Lyndon bridge a kind of Truss bridge?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Lyndon_Bridge> <http://dbpedia.org/property/design> <http://dbpedia.org/resource/Truss_bridge> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/design",
    "predicate1_mention": "kind of",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lyndon_Bridge",
    "entity1_mention": "lyndon bridge",
    "entity2_uri": "http://dbpedia.org/resource/Truss_bridge",
    "entity2_mention": "Truss bridge"
},
{
    "id": "2355",
    "question": "Which country gave birth to the Lemberger LD20b and Start+Flug H101 aircrafts?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lemberger_LD20b> <http://dbpedia.org/property/nationalOrigin> ?uri. <http://dbpedia.org/resource/Start_+_Flug_H-101> <http://dbpedia.org/property/nationalOrigin> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/nationalOrigin",
    "predicate1_mention": "gave birth to",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lemberger_LD20b",
    "entity1_mention": "lemberger ld20b",
    "entity2_uri": "http://dbpedia.org/resource/Start_+_Flug_H-101",
    "entity2_mention": "Start+Flug H101"
},
{
    "id": "2356",
    "question": "What water bodies have primary inflows sa Kemijoki?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/inflow> <http://dbpedia.org/resource/Kemijoki> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/inflow",
    "predicate1_mention": "inflows",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kemijoki",
    "entity1_mention": "sa Kemijoki",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2357",
    "question": "Where is Ethiopian Parliament Building located ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ethiopian_Parliament_Building> <http://dbpedia.org/property/locationCountry> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/locationCountry",
    "predicate1_mention": "located",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ethiopian_Parliament_Building",
    "entity1_mention": "Ethiopian Parliament Building",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2358",
    "question": "In which nation does the league take place where C.D. Primeiro de Agosto play?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/C.D._Primeiro_de_Agosto_(basketball)> <http://dbpedia.org/ontology/league> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/league",
    "predicate1_mention": "league",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "nation",
    "type_uri": "http://dbpedia.org/ontology/SportsLeague",
    "type_mention": "league",
    "entity1_uri": "http://dbpedia.org/resource/C.D._Primeiro_de_Agosto_(basketball)",
    "entity1_mention": "C.D. Primeiro de Agosto",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2359",
    "question": "Colin Powell was the commander of which military conflict ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Colin_Powell>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/commander",
    "predicate1_mention": "commander",
    "predicate2_uri": "http://dbpedia.org/ontology/MilitaryConflict",
    "predicate2_mention": "military conflict",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Colin_Powell",
    "entity1_mention": "Colin Powell",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2361",
    "question": "Enumerate the cars related to the ones assembled in Toluca?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Toluca> . ?x <http://dbpedia.org/property/related> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/assembly",
    "predicate1_mention": "assembled",
    "predicate2_uri": "http://dbpedia.org/property/related",
    "predicate2_mention": "related",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Toluca",
    "entity1_mention": "toluca",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2364",
    "question": "List all areas served by the radio station serving South carolina ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/area> <http://dbpedia.org/resource/South_Carolina> . ?x <http://dbpedia.org/property/area> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/area",
    "predicate1_mention": "areas",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/RadioStation",
    "type_mention": "radio station",
    "entity1_uri": "http://dbpedia.org/resource/South_Carolina",
    "entity1_mention": "South carolina",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2365",
    "question": "Malaysian highway authority has designed bridges over what things?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Malaysian_Highway_Authority> . ?x <http://dbpedia.org/property/crosses> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/designer",
    "predicate1_mention": "designed",
    "predicate2_uri": "http://dbpedia.org/property/crosses",
    "predicate2_mention": "over",
    "type_uri": "http://dbpedia.org/ontology/Bridge",
    "type_mention": "bridges",
    "entity1_uri": "http://dbpedia.org/resource/Malaysian_Highway_Authority",
    "entity1_mention": "Malaysian highway authority",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2366",
    "question": "Where can I find companies which originated in Canada?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Canada> . ?x <http://dbpedia.org/property/locations> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/foundationPlace",
    "predicate1_mention": "originated in",
    "predicate2_uri": "http://dbpedia.org/property/locations",
    "predicate2_mention": "where",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "companies",
    "entity1_uri": "http://dbpedia.org/resource/Canada",
    "entity1_mention": "canada",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2367",
    "question": "Which school of jack mcGregor attend which was also the training center of William Anthony ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jack_McGregor> <http://dbpedia.org/ontology/education> ?uri. <http://dbpedia.org/resource/William_Anthony_(artist)> <http://dbpedia.org/ontology/training> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/education",
    "predicate1_mention": "school",
    "predicate2_uri": "http://dbpedia.org/ontology/training",
    "predicate2_mention": "training",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jack_McGregor",
    "entity1_mention": "jack mcGregor",
    "entity2_uri": "http://dbpedia.org/resource/William_Anthony_(artist)",
    "entity2_mention": "william anthony"
},
{
    "id": "2369",
    "question": "To which party do the politicians who died in Delhi belong?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Delhi> . ?x <http://dbpedia.org/property/party> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/placeOfDeath",
    "predicate1_mention": "died in",
    "predicate2_uri": "http://dbpedia.org/property/party",
    "predicate2_mention": "party",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "politicians",
    "entity1_uri": "http://dbpedia.org/resource/Delhi",
    "entity1_mention": "delhi",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2370",
    "question": "Which appointer of William Clark is the successor of Levi Lincoln Sr ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Levi_Lincoln,_Sr.> <http://dbpedia.org/property/successor> ?uri. <http://dbpedia.org/resource/William_Clark> <http://dbpedia.org/property/appointer> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "http://dbpedia.org/property/appointer",
    "predicate2_mention": "appointer",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Levi_Lincoln,_Sr.",
    "entity1_mention": "Levi Lincoln Sr",
    "entity2_uri": "http://dbpedia.org/resource/William_Clark",
    "entity2_mention": "william clark"
},
{
    "id": "2372",
    "question": "Which companies have launched a rocket from Cape Canaveral Air Force station?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Rocket>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/launchSite",
    "predicate1_mention": "launched",
    "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate2_mention": "companies",
    "type_uri": "http://dbpedia.org/ontology/Rocket",
    "type_mention": "rocket",
    "entity1_uri": "http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station",
    "entity1_mention": "Cape Canaveral Air Force station",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2373",
    "question": "What artists are associated with the members of the Catalin Maruta?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/C\u0103t\u0103lin_M\u0103ru\u021b\u0103> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedBand",
    "predicate1_mention": "associated with",
    "predicate2_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
    "predicate2_mention": "artists",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/C\u0103t\u0103lin_M\u0103ru\u021b\u0103",
    "entity1_mention": "Catalin Maruta",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2374",
    "question": "Does the north carolina highway 280 end in Arden?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/North_Carolina_Highway_280> <http://dbpedia.org/ontology/routeEnd> <http://dbpedia.org/resource/Arden,_North_Carolina> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/routeEnd",
    "predicate1_mention": "end",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/North_Carolina_Highway_280",
    "entity1_mention": "north carolina highway 280",
    "entity2_uri": "http://dbpedia.org/resource/Arden,_North_Carolina",
    "entity2_mention": "arden"
},
{
    "id": "2375",
    "question": "How many people are buried in the Mausoleum of Augustus?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Mausoleum_of_Augustus>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/placeOfBurial",
    "predicate1_mention": "buried",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mausoleum_of_Augustus",
    "entity1_mention": "Mausoleum of Augustus",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2377",
    "question": "List bacteria whose order (taxonomy) is Bacillales and domain is Bacteria?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Bacillales> . ?uri <http://dbpedia.org/property/domain> <http://dbpedia.org/resource/Bacteria>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bacteria>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/order",
    "predicate1_mention": "order",
    "predicate2_uri": "http://dbpedia.org/property/domain",
    "predicate2_mention": "domain",
    "type_uri": "http://dbpedia.org/ontology/Bacteria",
    "type_mention": "bacteria",
    "entity1_uri": "http://dbpedia.org/resource/Bacillales",
    "entity1_mention": "bacillales",
    "entity2_uri": "http://dbpedia.org/resource/Bacteria",
    "entity2_mention": "bacteria"
},
{
    "id": "2378",
    "question": "Name the writer whose one of the notable work is Adventures of Huckleberry Finn and died in Redding, Connecticut?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/Adventures_of_Huckleberry_Finn> . ?uri <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Redding,_Connecticut>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/notableWork",
    "predicate1_mention": "notable work",
    "predicate2_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate2_mention": "died",
    "type_uri": "http://dbpedia.org/ontology/Writer",
    "type_mention": "writer",
    "entity1_uri": "http://dbpedia.org/resource/Adventures_of_Huckleberry_Finn",
    "entity1_mention": "Adventures of Huckleberry Finn",
    "entity2_uri": "http://dbpedia.org/resource/Redding,_Connecticut",
    "entity2_mention": "Redding, Connecticut"
},
{
    "id": "2379",
    "question": "Name the broadcast area of ITV (Thailand) ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/ITV_(Thailand)> <http://dbpedia.org/property/broadcastArea> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/broadcastArea",
    "predicate1_mention": "broadcast area",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/ITV_(Thailand)",
    "entity1_mention": "ITV (Thailand)",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2380",
    "question": "What sports are played in schools in Vashi?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Vashi> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/city",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/sport",
    "predicate2_mention": "sports",
    "type_uri": "http://dbpedia.org/ontology/School",
    "type_mention": "schools",
    "entity1_uri": "http://dbpedia.org/resource/Vashi",
    "entity1_mention": "vashi",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2381",
    "question": "Who owns the radio stations in Alabama?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Alabama> . ?x <http://dbpedia.org/ontology/owner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/city",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/owner",
    "predicate2_mention": "owns",
    "type_uri": "http://dbpedia.org/ontology/RadioStation",
    "type_mention": "stations",
    "entity1_uri": "http://dbpedia.org/resource/Alabama",
    "entity1_mention": "alabama",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2382",
    "question": "Was Johnny Depp a member of Skull Gang?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Skull_Gang> <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Johnny_Depp> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/bandMember",
    "predicate1_mention": "member",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Skull_Gang",
    "entity1_mention": "skull gang",
    "entity2_uri": "http://dbpedia.org/resource/Johnny_Depp",
    "entity2_mention": "johnny depp"
},
{
    "id": "2383",
    "question": "How many sports are played at the university whose president is Emanuel de Guzman?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/president> <http://dbpedia.org/resource/Emanuel_de_Guzman> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sport>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/president",
    "predicate1_mention": "president",
    "predicate2_uri": "http://dbpedia.org/ontology/sport",
    "predicate2_mention": "sports",
    "type_uri": "http://dbpedia.org/ontology/Sport",
    "type_mention": "sports",
    "entity1_uri": "http://dbpedia.org/resource/Emanuel_de_Guzman",
    "entity1_mention": "Emanuel de Guzman",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2384",
    "question": "Scientists at the University of Queensland have won which awards?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Queensland> . ?x <http://dbpedia.org/property/awards> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/awards",
    "predicate2_mention": "awards",
    "type_uri": "http://dbpedia.org/ontology/Scientist",
    "type_mention": "scientists",
    "entity1_uri": "http://dbpedia.org/resource/University_of_Queensland",
    "entity1_mention": "University of Queensland",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2387",
    "question": "What are the television shows whose Composer is Stewart Copeland?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/composer> <http://dbpedia.org/resource/Stewart_Copeland>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/composer",
    "predicate1_mention": "composer",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "television shows",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Stewart_Copeland",
    "entity1_mention": "Stewart Copeland",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2388",
    "question": "What is the television show whose opening theme is Where Everybody Knows Your Name?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/openingTheme",
    "predicate1_mention": "opening theme",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "television show",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name",
    "entity1_mention": "Where Everybody Knows Your Name",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2389",
    "question": "Who follow religions led by David Miscavige?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/David_Miscavige> . ?uri <http://dbpedia.org/ontology/religion> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/leaderName",
    "predicate1_mention": "led",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religions",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/David_Miscavige",
    "entity1_mention": "David Miscavige",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2390",
    "question": "name the Glover's distributer ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Glover_(video_game)> <http://dbpedia.org/ontology/distributor> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/distributor",
    "predicate1_mention": "distributer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Glover_(video_game)",
    "entity1_mention": "Glover's",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2392",
    "question": "Which country had the county seats as History of Trier and Mediolanum?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/History_of_Trier> . ?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Mediolanum> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/capital",
    "predicate1_mention": "county seats",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Country",
    "type_mention": "country",
    "entity1_uri": "http://dbpedia.org/resource/History_of_Trier",
    "entity1_mention": "History of Trier",
    "entity2_uri": "http://dbpedia.org/resource/Mediolanum",
    "entity2_mention": "mediolanum"
},
{
    "id": "2395",
    "question": "who are all the people who have managed the England's under 20 soccer team?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/managerClub> <http://dbpedia.org/resource/England_national_under-20_football_team> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/managerClub",
    "predicate1_mention": "managed",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/England_national_under-20_football_team",
    "entity1_mention": "England's under 20 soccer team",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2396",
    "question": "Moscow Kazan high speed railway starts from which station?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moscow-Kazan_high-speed_railway> <http://dbpedia.org/ontology/routeStart> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/routeStart",
    "predicate1_mention": "starts",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Moscow-Kazan_high-speed_railway",
    "entity1_mention": "Moscow Kazan high speed railway",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2398",
    "question": "Does the hudson river flow into the lower manhatten?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hudson_River> <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Lower_Manhattan> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/mouthMountain",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hudson_River",
    "entity1_mention": "hudson river",
    "entity2_uri": "http://dbpedia.org/resource/Lower_Manhattan",
    "entity2_mention": "lower manhatten"
},
{
    "id": "2399",
    "question": "In how many places did Julian Leow Beng Kim study?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Julian_Leow_Beng_Kim> <http://dbpedia.org/property/almaMater> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "sparql_id": "402",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/almaMater",
    "predicate1_mention": "places",
    "predicate2_uri": "http://dbpedia.org/ontology/University",
    "predicate2_mention": "study",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Julian_Leow_Beng_Kim",
    "entity1_mention": "julian leow beng kim",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2400",
    "question": "What is the common university iof vanderbilt Commodores and also the college of hubert Wiggs ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vanderbilt_Commodores> <http://dbpedia.org/ontology/university> ?uri. <http://dbpedia.org/resource/Hubert_Wiggs> <http://dbpedia.org/ontology/college> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/university",
    "predicate1_mention": "university",
    "predicate2_uri": "http://dbpedia.org/ontology/college",
    "predicate2_mention": "college",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Vanderbilt_Commodores",
    "entity1_mention": "vanderbilt commodores",
    "entity2_uri": "http://dbpedia.org/resource/Hubert_Wiggs",
    "entity2_mention": "hubert wiggs"
},
{
    "id": "2401",
    "question": "Which royal people are buried in Rome?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Rome>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/placeOfBurial",
    "predicate1_mention": "buried",
    "predicate2_uri": "http://dbpedia.org/ontology/Royalty",
    "predicate2_mention": "royal",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Rome",
    "entity1_mention": "rome",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2402",
    "question": "How many movies have been directed by almunies of Parsons School of Design?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/education> <http://dbpedia.org/resource/Parsons_School_of_Design> . ?uri <http://dbpedia.org/ontology/director> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/education",
    "predicate1_mention": "design",
    "predicate2_uri": "http://dbpedia.org/ontology/director",
    "predicate2_mention": "directed",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Parsons_School_of_Design",
    "entity1_mention": "Parsons School of Design",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2403",
    "question": "Give me a count on scientist who are known for garrison is Tennessee ?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/garrison> <http://dbpedia.org/resource/Tennessee> . ?uri <http://dbpedia.org/property/knownFor> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/garrison",
    "predicate1_mention": "garrison",
    "predicate2_uri": "http://dbpedia.org/property/knownFor",
    "predicate2_mention": "known for",
    "type_uri": "http://dbpedia.org/ontology/Scientist",
    "type_mention": "scientist",
    "entity1_uri": "http://dbpedia.org/resource/Tennessee",
    "entity1_mention": "tennessee",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2404",
    "question": "Was einstein a doctoral student of Alfred Kleiner?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Alfred_Kleiner> <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/Albert_Einstein> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/doctoralStudent",
    "predicate1_mention": "doctoral student",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Alfred_Kleiner",
    "entity1_mention": "Alfred Kleiner",
    "entity2_uri": "http://dbpedia.org/resource/Albert_Einstein",
    "entity2_mention": "einstein"
},
{
    "id": "2405",
    "question": "Is the Mount St Peter Church made in the international architectural style?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mount_St._Peter_Church> <http://dbpedia.org/property/architecture> <http://dbpedia.org/resource/International_Style_(architecture)> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/architecture",
    "predicate1_mention": "architectural",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mount_St._Peter_Church",
    "entity1_mention": "Mount St Peter Church",
    "entity2_uri": "http://dbpedia.org/resource/International_Style_(architecture)",
    "entity2_mention": "international architectural style"
},
{
    "id": "2406",
    "question": "What is the state of origin of Thomas Pfyl ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thomas_Pfyl> <http://dbpedia.org/ontology/stateOfOrigin> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/stateOfOrigin",
    "predicate1_mention": "state of origin",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Thomas_Pfyl",
    "entity1_mention": "thomas pfyl",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2407",
    "question": "How many movies have been cinematographed by Jordan Cronenweth?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/cinematography> <http://dbpedia.org/resource/Jordan_Cronenweth>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/cinematography",
    "predicate1_mention": "cinematographed",
    "predicate2_uri": "http://dbpedia.org/ontology/Film",
    "predicate2_mention": "movies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jordan_Cronenweth",
    "entity1_mention": "Jordan Cronenweth",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2408",
    "question": "For what is Abhijit Kunte known ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Abhijit_Kunte> <http://dbpedia.org/property/knownFor> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/knownFor",
    "predicate1_mention": "known",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Abhijit_Kunte",
    "entity1_mention": "abhijit kunte",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2409",
    "question": "List the language of Kunsten Museum of moder art Aalborg ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/KUNSTEN_Museum_of_Modern_Art_Aalborg> <http://dbpedia.org/ontology/language> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/language",
    "predicate1_mention": "language",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/KUNSTEN_Museum_of_Modern_Art_Aalborg",
    "entity1_mention": "Kunsten Museum of moder art Aalborg",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2410",
    "question": "Who owns the bank where Fabio Mercurio works?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fabio_Mercurio> <http://dbpedia.org/property/institution> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/institution",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/owner",
    "predicate2_mention": "owns",
    "type_uri": "http://dbpedia.org/ontology/Bank",
    "type_mention": "bank",
    "entity1_uri": "http://dbpedia.org/resource/Fabio_Mercurio",
    "entity1_mention": "Fabio Mercurio",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2411",
    "question": "What shows are aired on sister channels of BBC Parliaments",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/sisterNames> <http://dbpedia.org/resource/BBC_Parliament> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/sisterNames",
    "predicate1_mention": "sister",
    "predicate2_uri": "http://dbpedia.org/ontology/network",
    "predicate2_mention": "aired on",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "shows",
    "entity1_uri": "http://dbpedia.org/resource/BBC_Parliament",
    "entity1_mention": "BBC Parliaments",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2412",
    "question": "Name a military unit whose command structure is United States Department of the Navy and garrison is Arlington County, Virginia?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_the_Navy> . ?uri <http://dbpedia.org/ontology/garrison> <http://dbpedia.org/resource/Arlington_County,_Virginia>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/commandStructure",
    "predicate1_mention": "command structure",
    "predicate2_uri": "http://dbpedia.org/ontology/garrison",
    "predicate2_mention": "garrison",
    "type_uri": "http://dbpedia.org/ontology/MilitaryUnit",
    "type_mention": "military unit",
    "entity1_uri": "http://dbpedia.org/resource/United_States_Department_of_the_Navy",
    "entity1_mention": "United States Department of the Navy",
    "entity2_uri": "http://dbpedia.org/resource/Arlington_County,_Virginia",
    "entity2_mention": "Arlington County, Virginia"
},
{
    "id": "2413",
    "question": "Starwood operates in which places?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/operator> <http://dbpedia.org/resource/Starwood_Hotels_and_Resorts_Worldwide> . ?x <http://dbpedia.org/property/address> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/operator",
    "predicate1_mention": "operates",
    "predicate2_uri": "http://dbpedia.org/property/address",
    "predicate2_mention": "places",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Starwood_Hotels_and_Resorts_Worldwide",
    "entity1_mention": "starwood",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2414",
    "question": "What are the things built by Eristoff ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eristoff> <http://dbpedia.org/property/manufacturer> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/manufacturer",
    "predicate1_mention": "built",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Eristoff",
    "entity1_mention": "eristoff",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2415",
    "question": "List the relative of Tim Nanai-Williams ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tim_Nanai-Williams> <http://dbpedia.org/ontology/relative> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/relative",
    "predicate1_mention": "relative",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tim_Nanai-Williams",
    "entity1_mention": "Tim Nanai-Williams",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2416",
    "question": "Which fictional character portrayed by Roger barton has Padm Amidala as family ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/portrayer> <http://dbpedia.org/resource/Roger_Barton_(film_editor)> . ?uri <http://dbpedia.org/property/family> <http://dbpedia.org/resource/Padm\u00e9_Amidala>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/portrayer",
    "predicate1_mention": "portrayed",
    "predicate2_uri": "http://dbpedia.org/property/family",
    "predicate2_mention": "family",
    "type_uri": "http://dbpedia.org/ontology/FictionalCharacter",
    "type_mention": "fictional character",
    "entity1_uri": "http://dbpedia.org/resource/Roger_Barton_(film_editor)",
    "entity1_mention": "Roger barton",
    "entity2_uri": "http://dbpedia.org/resource/Padm\u00e9_Amidala",
    "entity2_mention": "Padm Amidala"
},
{
    "id": "2417",
    "question": "Where is the station whose sister channel is the Channel 3 in Thailand?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/sisterStations> <http://dbpedia.org/resource/Channel_3_(Thailand)> . ?x <http://dbpedia.org/property/city> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionStation>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/sisterStations",
    "predicate1_mention": "station whose sister",
    "predicate2_uri": "http://dbpedia.org/property/city",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/TelevisionStation",
    "type_mention": "station",
    "entity1_uri": "http://dbpedia.org/resource/Channel_3_(Thailand)",
    "entity1_mention": "Channel 3 in Thailand",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2418",
    "question": "Count the  origin of the beverages which have been originated in england /",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/origin> <http://dbpedia.org/resource/England> . ?x <http://dbpedia.org/property/origin> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/origin",
    "predicate1_mention": "origin",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/England",
    "entity1_mention": "england",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2419",
    "question": "Which things have been located, where governance is Houston City Council?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/Houston_City_Council> . ?uri <http://dbpedia.org/ontology/location> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/governingBody",
    "predicate1_mention": "governance",
    "predicate2_uri": "http://dbpedia.org/ontology/location",
    "predicate2_mention": "located",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Houston_City_Council",
    "entity1_mention": "Houston City Council",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2420",
    "question": "What awards have been given to people schooled in the Everton park state high?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/education> <http://dbpedia.org/resource/Everton_Park_State_High_School> . ?x <http://dbpedia.org/property/awards> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/education",
    "predicate1_mention": "everton",
    "predicate2_uri": "http://dbpedia.org/property/awards",
    "predicate2_mention": "awards",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Everton_Park_State_High_School",
    "entity1_mention": "Everton park state high",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2421",
    "question": "What is the alma mater of the Marshall Fletcher McCallie and has affiliation with  Vanderbilt University Medical Center ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marshall_Fletcher_McCallie> <http://dbpedia.org/property/almaMater> ?uri. <http://dbpedia.org/resource/Vanderbilt_University_Medical_Center> <http://dbpedia.org/property/affiliation> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/almaMater",
    "predicate1_mention": "alma mater",
    "predicate2_uri": "http://dbpedia.org/property/affiliation",
    "predicate2_mention": "affiliation",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Marshall_Fletcher_McCallie",
    "entity1_mention": "Marshall Fletcher McCallie",
    "entity2_uri": "http://dbpedia.org/resource/Vanderbilt_University_Medical_Center",
    "entity2_mention": "Vanderbilt University Medical Center"
},
{
    "id": "2422",
    "question": "Where is the south shore plaza located?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Shore_Plaza> <http://dbpedia.org/property/address> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/address",
    "predicate1_mention": "located",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/South_Shore_Plaza",
    "entity1_mention": "south shore plaza",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2423",
    "question": "What is the river that falls into North Sea and Thames Estuary?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/North_Sea> . ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Thames_Estuary> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/riverMouth",
    "predicate1_mention": "river that falls into",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "river",
    "entity1_uri": "http://dbpedia.org/resource/North_Sea",
    "entity1_mention": "North Sea",
    "entity2_uri": "http://dbpedia.org/resource/Thames_Estuary",
    "entity2_mention": "Thames Estuary"
},
{
    "id": "2424",
    "question": "Name the university whose teams have been managed by Albertin Montoya?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Albertin_Montoya> <http://dbpedia.org/property/managerclubs> ?x . ?x <http://dbpedia.org/ontology/university> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/managerclubs",
    "predicate1_mention": "managed",
    "predicate2_uri": "http://dbpedia.org/ontology/university",
    "predicate2_mention": "university",
    "type_uri": "http://dbpedia.org/ontology/SportsTeam",
    "type_mention": "teams",
    "entity1_uri": "http://dbpedia.org/resource/Albertin_Montoya",
    "entity1_mention": "albertin montoya",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2425",
    "question": "Name the newspaper owned by Schibsted and headquartered at Stockholm?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/owners> <http://dbpedia.org/resource/Schibsted> . ?uri <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Stockholm>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/owners",
    "predicate1_mention": "owned",
    "predicate2_uri": "http://dbpedia.org/property/headquarters",
    "predicate2_mention": "headquartered",
    "type_uri": "http://dbpedia.org/ontology/Newspaper",
    "type_mention": "newspaper",
    "entity1_uri": "http://dbpedia.org/resource/Schibsted",
    "entity1_mention": "schibsted",
    "entity2_uri": "http://dbpedia.org/resource/Stockholm",
    "entity2_mention": "stockholm"
},
{
    "id": "2426",
    "question": "What is written in a programming language developed by GNOME Project?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/developer> <http://dbpedia.org/resource/The_GNOME_Project> . ?uri <http://dbpedia.org/property/programmingLanguage> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/developer",
    "predicate1_mention": "developed",
    "predicate2_uri": "http://dbpedia.org/property/programmingLanguage",
    "predicate2_mention": "programming language",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_GNOME_Project",
    "entity1_mention": "GNOME Project",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2428",
    "question": "State the religion of the person known for People's Bank (Sri Lanka) ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/People's_Bank_(Sri_Lanka)> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate1_mention": "known for",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religion",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/People's_Bank_(Sri_Lanka)",
    "entity1_mention": "People's Bank (Sri Lanka)",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2429",
    "question": "Name the television show distributed by Broadcast syndication and voiced by Eliza Schneider?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Broadcast_syndication> . ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Eliza_Schneider>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/distributor",
    "predicate1_mention": "distributed",
    "predicate2_uri": "http://dbpedia.org/property/voices",
    "predicate2_mention": "voiced",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television show",
    "entity1_uri": "http://dbpedia.org/resource/Broadcast_syndication",
    "entity1_mention": "Broadcast syndication",
    "entity2_uri": "http://dbpedia.org/resource/Eliza_Schneider",
    "entity2_mention": "Eliza Schneider"
},
{
    "id": "2430",
    "question": "Where were Justina Machado and John Englehard born?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Justina_Machado> <http://dbpedia.org/property/birthPlace> ?uri. <http://dbpedia.org/resource/John_Englehart> <http://dbpedia.org/ontology/birthPlace> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/birthPlace",
    "predicate1_mention": "born",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Justina_Machado",
    "entity1_mention": "Justina Machado",
    "entity2_uri": "http://dbpedia.org/resource/John_Englehart",
    "entity2_mention": "John Englehard"
},
{
    "id": "2431",
    "question": "Who is the successor of Quest Software ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Quest_Software> <http://dbpedia.org/property/successor> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Quest_Software",
    "entity1_mention": "Quest Software",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2432",
    "question": "What is the television show with presentator as Ryan Seacrest and theme music composer as Julian Gingell?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Ryan_Seacrest> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Julian_Gingell>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/presenter",
    "predicate1_mention": "presentator",
    "predicate2_uri": "http://dbpedia.org/property/themeMusicComposer",
    "predicate2_mention": "theme music composer",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television show",
    "entity1_uri": "http://dbpedia.org/resource/Ryan_Seacrest",
    "entity1_mention": "Ryan Seacrest",
    "entity2_uri": "http://dbpedia.org/resource/Julian_Gingell",
    "entity2_mention": "Julian Gingell"
},
{
    "id": "2434",
    "question": "Which scientist's academic advisor is Georg Meissner and is known for invention of Anthrax ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Anthrax> . ?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Georg_Meissner>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate1_mention": "known for",
    "predicate2_uri": "http://dbpedia.org/property/doctoralAdvisor",
    "predicate2_mention": "academic advisor",
    "type_uri": "http://dbpedia.org/ontology/Scientist",
    "type_mention": "scientist's",
    "entity1_uri": "http://dbpedia.org/resource/Anthrax",
    "entity1_mention": "anthrax",
    "entity2_uri": "http://dbpedia.org/resource/Georg_Meissner",
    "entity2_mention": "Georg Meissner"
},
{
    "id": "2436",
    "question": "Who is the developer of the software which distributes Batman: Arkham City Lockdown ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Batman:_Arkham_City_Lockdown> <http://dbpedia.org/property/distributor> ?x . ?x <http://dbpedia.org/property/developer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/distributor",
    "predicate1_mention": "distributes",
    "predicate2_uri": "http://dbpedia.org/property/developer",
    "predicate2_mention": "developer",
    "type_uri": "http://dbpedia.org/ontology/Software",
    "type_mention": "software",
    "entity1_uri": "http://dbpedia.org/resource/Batman:_Arkham_City_Lockdown",
    "entity1_mention": "Batman: Arkham City Lockdown",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2437",
    "question": "what are some neighboring cities of Pregny Chambsy?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/neighboringMunicipality> <http://dbpedia.org/resource/Pregny-Chamb\u00e9sy> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/neighboringMunicipality",
    "predicate1_mention": "neighboring",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Pregny-Chamb\u00e9sy",
    "entity1_mention": "Pregny Chambsy",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2438",
    "question": "How many honorary title are there of the scientists who has  Australian of the Year award  ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Australian_of_the_Year> . ?x <http://dbpedia.org/ontology/award> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/award",
    "predicate1_mention": "award",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Australian_of_the_Year",
    "entity1_mention": "Australian of the Year award ",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2439",
    "question": "What is the total number of companies who use a language designed by Bjarne Stroustrup?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Bjarne_Stroustrup> . ?uri <http://dbpedia.org/property/programmingLanguage> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/designer",
    "predicate1_mention": "designed",
    "predicate2_uri": "http://dbpedia.org/property/programmingLanguage",
    "predicate2_mention": "language",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "companies",
    "entity1_uri": "http://dbpedia.org/resource/Bjarne_Stroustrup",
    "entity1_mention": "Bjarne Stroustrup",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2440",
    "question": "Which job of Irving Chernev is the non-fiction subject of the Thud ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Irving_Chernev> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/Thud!> <http://dbpedia.org/ontology/nonFictionSubject> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/occupation",
    "predicate1_mention": "job",
    "predicate2_uri": "http://dbpedia.org/ontology/nonFictionSubject",
    "predicate2_mention": "non-fiction subject",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Irving_Chernev",
    "entity1_mention": "Irving Chernev",
    "entity2_uri": "http://dbpedia.org/resource/Thud!",
    "entity2_mention": "thud"
},
{
    "id": "2441",
    "question": "What are the musicals of the people died in California?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/California> . ?uri <http://dbpedia.org/property/music> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate1_mention": "died",
    "predicate2_uri": "http://dbpedia.org/property/music",
    "predicate2_mention": "musicals",
    "type_uri": "http://dbpedia.org/ontology/Musical",
    "type_mention": "musicals",
    "entity1_uri": "http://dbpedia.org/resource/California",
    "entity1_mention": "california",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2442",
    "question": "What is the workplace of Christopher S. Stewart ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Christopher_S._Stewart> <http://dbpedia.org/property/employer> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/employer",
    "predicate1_mention": "workplace",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Christopher_S._Stewart",
    "entity1_mention": "Christopher S. Stewart",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2445",
    "question": "Which units are garrisoned at Arlington County, Virginia?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/garrison> <http://dbpedia.org/resource/Arlington_County,_Virginia> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/garrison",
    "predicate1_mention": "garrisoned",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Arlington_County,_Virginia",
    "entity1_mention": "Arlington County, Virginia",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2446",
    "question": "What are the mountains in the Sequoia National Park?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Sequoia_National_Park>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/locatedInArea",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Mountain",
    "type_mention": "mountains",
    "entity1_uri": "http://dbpedia.org/resource/Sequoia_National_Park",
    "entity1_mention": "Sequoia National Park",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2447",
    "question": "Name the city of Duwamish River ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Duwamish_River> <http://dbpedia.org/ontology/city> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/city",
    "predicate1_mention": "city",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Duwamish_River",
    "entity1_mention": "duwamish river",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2448",
    "question": "What is the administrative headquarters of Pulau Ujong ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pulau_Ujong> <http://dbpedia.org/ontology/capital> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/capital",
    "predicate1_mention": "administrative headquarters",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Pulau_Ujong",
    "entity1_mention": "Pulau Ujong",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2450",
    "question": "Give me a count of everything made by the company which offers electronical manufacturing too.",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/service> <http://dbpedia.org/resource/Electronics_manufacturing_services> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }",
    "sparql_id": "106",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/service",
    "predicate1_mention": "offers",
    "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate2_mention": "manufacturing",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Electronics_manufacturing_services",
    "entity1_mention": "electronical manufacturing",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2451",
    "question": "What are the other band member of the Bands whose current members is Hynief?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Hynief> . ?x <http://dbpedia.org/ontology/bandMember> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/currentMembers",
    "predicate1_mention": "current members",
    "predicate2_uri": "http://dbpedia.org/ontology/bandMember",
    "predicate2_mention": "band member",
    "type_uri": "http://dbpedia.org/ontology/Band",
    "type_mention": "band",
    "entity1_uri": "http://dbpedia.org/resource/Hynief",
    "entity1_mention": "hynief",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2452",
    "question": "Who is the vice president of Jared Bernstein ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jared_Bernstein> <http://dbpedia.org/ontology/vicePresident> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/vicePresident",
    "predicate1_mention": "vice president",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jared_Bernstein",
    "entity1_mention": "Jared Bernstein",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2453",
    "question": "What currencies are prevalent in the countries governed by the President of France?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leaderTitle> <http://dbpedia.org/resource/President_of_France> . ?x <http://dbpedia.org/ontology/currency> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/leaderTitle",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/currency",
    "predicate2_mention": "currencies",
    "type_uri": "http://dbpedia.org/ontology/Country",
    "type_mention": "countries",
    "entity1_uri": "http://dbpedia.org/resource/President_of_France",
    "entity1_mention": "President of France",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2456",
    "question": "How many non-fiction subject are there of the books whose one of the non-fiction subject is Ankh-Morpork City Watch ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/nonFictionSubject> <http://dbpedia.org/resource/Ankh-Morpork_City_Watch> . ?x <http://dbpedia.org/ontology/nonFictionSubject> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/nonFictionSubject",
    "predicate1_mention": "non-fiction subject",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ankh-Morpork_City_Watch",
    "entity1_mention": "Ankh-Morpork City Watch",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2457",
    "question": "Name the show whose theme composing band previously also had Bryan Mantia?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Bryan_Mantia> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/formerBandMember",
    "predicate1_mention": "band previously",
    "predicate2_uri": "http://dbpedia.org/property/themeMusicComposer",
    "predicate2_mention": "theme composing",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "show",
    "entity1_uri": "http://dbpedia.org/resource/Bryan_Mantia",
    "entity1_mention": "Bryan Mantia",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2458",
    "question": "How many contries surround the seas on the banks of which is the city of Cancun?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Canc\u00fan> . ?x <http://dbpedia.org/ontology/country> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/cities",
    "predicate1_mention": "contries",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "contries",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Canc\u00fan",
    "entity1_mention": "Cancun",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2459",
    "question": "List all the settlements which has a part named Seguin Texas ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/part> <http://dbpedia.org/resource/Seguin,_Texas> . ?x <http://dbpedia.org/ontology/part> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/part",
    "predicate1_mention": "part",
    "predicate2_uri": "http://dbpedia.org/ontology/Settlement",
    "predicate2_mention": "settlements",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Seguin,_Texas",
    "entity1_mention": "Seguin Texas",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2460",
    "question": "List all the wine regions of the grapes whose one of the wine region is Mississippi ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/wineRegion> <http://dbpedia.org/resource/Mississippi> . ?x <http://dbpedia.org/ontology/wineRegion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Grape>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/wineRegion",
    "predicate1_mention": "wine regions",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Grape",
    "type_mention": "grapes",
    "entity1_uri": "http://dbpedia.org/resource/Mississippi",
    "entity1_mention": "mississippi",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2461",
    "question": "Which city was designed by saleen Pator which is also the birth location of Jimmy Diggs ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Saleen_S5S_Raptor> <http://dbpedia.org/property/designer> ?uri. <http://dbpedia.org/resource/Jimmy_Diggs> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/designer",
    "predicate1_mention": "designed",
    "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate2_mention": "birth location",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Saleen_S5S_Raptor",
    "entity1_mention": "saleen Pator",
    "entity2_uri": "http://dbpedia.org/resource/Jimmy_Diggs",
    "entity2_mention": "jimmy diggs"
},
{
    "id": "2462",
    "question": "Name the university whose affiliations's foundation is in Washington, D.C.?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/Washington,_D.C.> . ?uri <http://dbpedia.org/property/affiliations> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/foundation",
    "predicate1_mention": "foundation",
    "predicate2_uri": "http://dbpedia.org/property/affiliations",
    "predicate2_mention": "affiliations's",
    "type_uri": "http://dbpedia.org/ontology/University",
    "type_mention": "university",
    "entity1_uri": "http://dbpedia.org/resource/Washington,_D.C.",
    "entity1_mention": "washington, d.c.",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2463",
    "question": "Name the office holder whose theatre is Siege of Fort Recovery and belongs to Indian territory branch ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Siege_of_Fort_Recovery> . ?uri <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Indiana_Territory>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/battle",
    "predicate1_mention": "theatre",
    "predicate2_uri": "http://dbpedia.org/property/branch",
    "predicate2_mention": "branch",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "office holder",
    "entity1_uri": "http://dbpedia.org/resource/Siege_of_Fort_Recovery",
    "entity1_mention": "Siege of Fort Recovery",
    "entity2_uri": "http://dbpedia.org/resource/Indiana_Territory",
    "entity2_mention": "Indian territory"
},
{
    "id": "2464",
    "question": "What was the university of the rugby player who coached the Stanford rugby teams during 1906-1917?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1906\u201317_Stanford_rugby_teams> <http://dbpedia.org/property/headcoach> ?x . ?x <http://dbpedia.org/ontology/university> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/headcoach",
    "predicate1_mention": "coached",
    "predicate2_uri": "http://dbpedia.org/ontology/university",
    "predicate2_mention": "university",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/1906\u201317_Stanford_rugby_teams",
    "entity1_mention": "Stanford rugby teams during 1906-1917",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2465",
    "question": "Which sports are played at both the Polytech uni of Bataan and Taguig?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_\u2013_Bataan> <http://dbpedia.org/ontology/sport> ?uri. <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig> <http://dbpedia.org/ontology/sport> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/sport",
    "predicate1_mention": "sports",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_\u2013_Bataan",
    "entity1_mention": "Polytech uni of Bataan",
    "entity2_uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig",
    "entity2_mention": "Polytech uni of Bataan and Taguig"
},
{
    "id": "2466",
    "question": "Who has Kelly Osbourne and Ozzy Osbourne as relatives?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Kelly_Osbourne> . ?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Ozzy_Osbourne> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/relative",
    "predicate1_mention": "relatives",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kelly_Osbourne",
    "entity1_mention": "Kelly Osbourne",
    "entity2_uri": "http://dbpedia.org/resource/Ozzy_Osbourne",
    "entity2_mention": "Ozzy Osbourne"
},
{
    "id": "2467",
    "question": "Who were the founders of Sea Gayle Music?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sea_Gayle_Music> <http://dbpedia.org/property/founder> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/founder",
    "predicate1_mention": "founders",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sea_Gayle_Music",
    "entity1_mention": "Sea Gayle Music",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2468",
    "question": "What layout can be found in cars similar to the Subaru Outback?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/related> <http://dbpedia.org/resource/Subaru_Outback> . ?x <http://dbpedia.org/ontology/layout> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/related",
    "predicate1_mention": "similar",
    "predicate2_uri": "http://dbpedia.org/ontology/layout",
    "predicate2_mention": "layout",
    "type_uri": "http://dbpedia.org/ontology/Automobile",
    "type_mention": "cars",
    "entity1_uri": "http://dbpedia.org/resource/Subaru_Outback",
    "entity1_mention": "Subaru Outback",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2469",
    "question": "Name the president who has relations with Clinton family and had a lieutenant named Winston Bryant?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Clinton_family> . ?uri <http://dbpedia.org/ontology/lieutenant> <http://dbpedia.org/resource/Winston_Bryant>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/relation",
    "predicate1_mention": "relations",
    "predicate2_uri": "http://dbpedia.org/ontology/lieutenant",
    "predicate2_mention": "lieutenant",
    "type_uri": "http://dbpedia.org/ontology/President",
    "type_mention": "president",
    "entity1_uri": "http://dbpedia.org/resource/Clinton_family",
    "entity1_mention": "clinton family",
    "entity2_uri": "http://dbpedia.org/resource/Winston_Bryant",
    "entity2_mention": "winston bryant"
},
{
    "id": "2470",
    "question": "How many organizations work for Environmentalism?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/purpose> <http://dbpedia.org/resource/Environmentalism>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/purpose",
    "predicate1_mention": "work for",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Environmentalism",
    "entity1_mention": "environmentalism",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2471",
    "question": "Which producer of Boeing F/A-18E/F Super Hornet has a key person Dennis Muilenburg ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Dennis_Muilenburg> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet>  . }",
    "sparql_id": "8",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/keyPeople",
    "predicate1_mention": "key person",
    "predicate2_uri": "http://dbpedia.org/property/products",
    "predicate2_mention": "producer",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Dennis_Muilenburg",
    "entity1_mention": "Dennis Muilenburg",
    "entity2_uri":"http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet",
    "entity2_mention": "Boeing F/A-18E/F Super Hornet"
},
{
    "id": "2473",
    "question": "Who is the manager of the club whose homeground is the riverside stadium?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/ground> <http://dbpedia.org/resource/Riverside_Stadium> . ?uri <http://dbpedia.org/ontology/managerClub> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/ground",
    "predicate1_mention": "homeground",
    "predicate2_uri": "http://dbpedia.org/ontology/managerClub",
    "predicate2_mention": "manager of the club",
    "type_uri": "http://dbpedia.org/ontology/SportsManager",
    "type_mention": "manager",
    "entity1_uri": "http://dbpedia.org/resource/Riverside_Stadium",
    "entity1_mention": "riverside stadium",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2474",
    "question": "What are the organisation founded in Texas and Dallas?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Texas> . ?uri <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Dallas> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/foundationPlace",
    "predicate1_mention": "founded in",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Organisation",
    "type_mention": "organisation",
    "entity1_uri": "http://dbpedia.org/resource/Texas",
    "entity1_mention": "texas",
    "entity2_uri": "http://dbpedia.org/resource/Dallas",
    "entity2_mention": "dallas"
},
{
    "id": "2475",
    "question": "List the members of Skull Gang?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Skull_Gang> <http://dbpedia.org/ontology/bandMember> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/bandMember",
    "predicate1_mention": "members",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Skull_Gang",
    "entity1_mention": "skull gang",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2476",
    "question": "To which party does the politician belong, who was born in Nandurbar?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Nandurbar> . ?x <http://dbpedia.org/ontology/party> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate1_mention": "was born in",
    "predicate2_uri": "http://dbpedia.org/ontology/party",
    "predicate2_mention": "party",
    "type_uri": "http://dbpedia.org/ontology/Politician",
    "type_mention": "politician",
    "entity1_uri": "http://dbpedia.org/resource/Nandurbar",
    "entity1_mention": "nandurbar",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2477",
    "question": "Count the movies directed by Tim Burton and music composer Danny Elfman ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Danny_Elfman> . ?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Tim_Burton> } ",
    "sparql_id": "108",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/music",
    "predicate1_mention": "music",
    "predicate2_uri": "http://dbpedia.org/property/director",
    "predicate2_mention": "directed",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Danny_Elfman",
    "entity1_mention": "Danny Elfman",
    "entity2_uri": "http://dbpedia.org/resource/Tim_Burton",
    "entity2_mention": "Tim Burton"
},
{
    "id": "2478",
    "question": "What are the american football players whose former team's coach is Jason Maas?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Jason_Maas> . ?uri <http://dbpedia.org/ontology/formerTeam> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/coach",
    "predicate1_mention": "coach",
    "predicate2_uri": "http://dbpedia.org/ontology/formerTeam",
    "predicate2_mention": "former team's",
    "type_uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
    "type_mention": "american football players",
    "entity1_uri": "http://dbpedia.org/resource/Jason_Maas",
    "entity1_mention": "jason maas",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2480",
    "question": "What is the city  of the television station whose affiliations is LATV?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/LATV> . ?x <http://dbpedia.org/property/city> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionStation>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/affiliations",
    "predicate1_mention": "affiliations",
    "predicate2_uri": "http://dbpedia.org/property/city",
    "predicate2_mention": "city",
    "type_uri": "http://dbpedia.org/ontology/TelevisionStation",
    "type_mention": "television station",
    "entity1_uri": "http://dbpedia.org/resource/LATV",
    "entity1_mention": "latv",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2481",
    "question": "People who debuted from Houston Astros have played in which clubs?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/debutTeam> <http://dbpedia.org/resource/Houston_Astros> . ?x <http://dbpedia.org/ontology/team> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/debutTeam",
    "predicate1_mention": "debuted",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Houston_Astros",
    "entity1_mention": "houston astros",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2483",
    "question": "Where are Solidus and Aureus used?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Solidus_(coin)> . ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Aureus> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/currency",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Solidus_(coin)",
    "entity1_mention": "solidus",
    "entity2_uri": "http://dbpedia.org/resource/Aureus",
    "entity2_mention": "aureus"
},
{
    "id": "2484",
    "question": "Foxy Brown was associated with which band?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Foxy_Brown_(rapper)> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedBand",
    "predicate1_mention": "associated with which band",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Foxy_Brown_(rapper)",
    "entity1_mention": "Foxy Brown",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2486",
    "question": "Name the team of Michael springer ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Springer> <http://dbpedia.org/property/team> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/team",
    "predicate1_mention": "team",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Michael_Springer",
    "entity1_mention": "Michael springer",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2487",
    "question": "How many non fiction topics does Thud deals with?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Thud!> <http://dbpedia.org/ontology/nonFictionSubject> ?uri  . }",
    "sparql_id": "102",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/nonFictionSubject",
    "predicate1_mention": "non fiction topics",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Thud!",
    "entity1_mention": "thud",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2488",
    "question": "Is Steve Nash the chairman of Vancouver Whitecaps FC?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Vancouver_Whitecaps_FC> <http://dbpedia.org/property/chairman> <http://dbpedia.org/resource/Steve_Nash> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/chairman",
    "predicate1_mention": "chairman",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Vancouver_Whitecaps_FC",
    "entity1_mention": "Vancouver Whitecaps FC",
    "entity2_uri": "http://dbpedia.org/resource/Steve_Nash",
    "entity2_mention": "steve nash"
},
{
    "id": "2490",
    "question": "Did Christian Barnard study in the University of Minnesota?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Christiaan_Barnard> <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/University_of_Minnesota> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/institution",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Christiaan_Barnard",
    "entity1_mention": "Christian Barnard",
    "entity2_uri": "http://dbpedia.org/resource/University_of_Minnesota",
    "entity2_mention": "University of Minnesota"
},
{
    "id": "2492",
    "question": "What is the affiliation of the hospital where Alfred Blalock works?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alfred_Blalock> <http://dbpedia.org/property/workInstitutions> ?x . ?x <http://dbpedia.org/property/affiliation> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/workInstitutions",
    "predicate1_mention": "works",
    "predicate2_uri": "http://dbpedia.org/property/affiliation",
    "predicate2_mention": "affiliation",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Alfred_Blalock",
    "entity1_mention": "Alfred Blalock",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2493",
    "question": "Is the national anthem of Mauritius motherland?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mauritius> <http://dbpedia.org/ontology/anthem> <http://dbpedia.org/resource/Motherland_(anthem)> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/anthem",
    "predicate1_mention": "anthem",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mauritius",
    "entity1_mention": "mauritius",
    "entity2_uri": "http://dbpedia.org/resource/Motherland_(anthem)",
    "entity2_mention": "anthem"
},
{
    "id": "2494",
    "question": "What is the home town of the Rolando Gomez is the DOD of the Clyde McNeal ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rolando_Gomez> <http://dbpedia.org/property/homeTown> ?uri. <http://dbpedia.org/resource/Clyde_McNeal> <http://dbpedia.org/property/deathDate> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/homeTown",
    "predicate1_mention": "home town",
    "predicate2_uri": "http://dbpedia.org/property/deathDate",
    "predicate2_mention": "the DOD of",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Rolando_Gomez",
    "entity1_mention": "rolando gomez",
    "entity2_uri": "http://dbpedia.org/resource/Clyde_McNeal",
    "entity2_mention": "Clyde McNeal"
},
{
    "id": "2495",
    "question": "What software is developed by GNOWSYS and is licensed by Frontaccounting?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Frontaccounting> <http://dbpedia.org/ontology/license> ?uri. <http://dbpedia.org/resource/GNOWSYS> <http://dbpedia.org/ontology/developer> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/license",
    "predicate1_mention": "licensed",
    "predicate2_uri": "http://dbpedia.org/ontology/developer",
    "predicate2_mention": "developed",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Frontaccounting",
    "entity1_mention": "frontaccounting",
    "entity2_uri": "http://dbpedia.org/resource/GNOWSYS",
    "entity2_mention": "gnowsys"
},
{
    "id": "2496",
    "question": "Who was the president at the time when both Carl Stokes and Joseph Stiglitz held a position in US political framework?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Carl_Stokes> <http://dbpedia.org/property/president> ?uri. <http://dbpedia.org/resource/Joseph_Stiglitz> <http://dbpedia.org/property/president> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/president",
    "predicate1_mention": "president",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Carl_Stokes",
    "entity1_mention": "Carl Stokes",
    "entity2_uri": "http://dbpedia.org/resource/Joseph_Stiglitz",
    "entity2_mention": "Joseph Stiglitz"
},
{
    "id": "2497",
    "question": "What is the municipality of the Homestead Grays Bridge and Roberto Clemente Bridge?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Homestead_Grays_Bridge> <http://dbpedia.org/ontology/municipality> ?uri. <http://dbpedia.org/resource/Roberto_Clemente_Bridge> <http://dbpedia.org/ontology/municipality> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/municipality",
    "predicate1_mention": "municipality",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Homestead_Grays_Bridge",
    "entity1_mention": "Homestead Grays Bridge",
    "entity2_uri": "http://dbpedia.org/resource/Roberto_Clemente_Bridge",
    "entity2_mention": "Roberto Clemente Bridge"
},
{
    "id": "2498",
    "question": "List the home town of the people who have Ontario as one of it ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/homeTown> <http://dbpedia.org/resource/Ontario> . ?x <http://dbpedia.org/property/homeTown> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/homeTown",
    "predicate1_mention": "home town",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Ontario",
    "entity1_mention": "ontario",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2499",
    "question": "Name the language of I Love How You Love Me ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/I_Love_How_You_Love_Me> <http://dbpedia.org/property/language> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/language",
    "predicate1_mention": "language",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/I_Love_How_You_Love_Me",
    "entity1_mention": "I Love How You Love Me",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2500",
    "question": "Pennsylvania has how many american football teams?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Pennsylvania>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballTeam>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/city",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/AmericanFootballTeam",
    "predicate2_mention": "american football teams",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Pennsylvania",
    "entity1_mention": "pennsylvania",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2501",
    "question": "How many teams have someone playing at the defenceman position?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Defenceman> . ?x <http://dbpedia.org/ontology/team> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/position",
    "predicate1_mention": "position",
    "predicate2_uri": "http://dbpedia.org/ontology/team",
    "predicate2_mention": "teams",
    "type_uri": "http://dbpedia.org/ontology/SportsTeam",
    "type_mention": "teams",
    "entity1_uri": "http://dbpedia.org/resource/Defenceman",
    "entity1_mention": "defenceman",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2503",
    "question": "Count the number of different religions that field marshals have followed?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/Field_marshal> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/militaryRank",
    "predicate1_mention": "marshals",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religions",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Field_marshal",
    "entity1_mention": "field marshals",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2505",
    "question": "List the main ingredient of Pizza ghetti ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pizza-ghetti> <http://dbpedia.org/property/mainIngredient> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/mainIngredient",
    "predicate1_mention": "main ingredient",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Pizza-ghetti",
    "entity1_mention": "pizza ghetti",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2506",
    "question": "What is the governing body of Fort Monroe ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fort_Monroe> <http://dbpedia.org/property/governingBody> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/governingBody",
    "predicate1_mention": "governing body",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Fort_Monroe",
    "entity1_mention": "Fort Monroe",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2507",
    "question": "Who wrote the singles on the Main Course?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/album> <http://dbpedia.org/resource/Main_Course> . ?x <http://dbpedia.org/property/writer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/album",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/writer",
    "predicate2_mention": "wrote",
    "type_uri": "http://dbpedia.org/ontology/Single",
    "type_mention": "singles",
    "entity1_uri": "http://dbpedia.org/resource/Main_Course",
    "entity1_mention": "Main Course",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2509",
    "question": "What is the stylistic origin of Wizard rock ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wizard_rock> <http://dbpedia.org/ontology/stylisticOrigin> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/stylisticOrigin",
    "predicate1_mention": "stylistic origin",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Wizard_rock",
    "entity1_mention": "wizard rock",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2510",
    "question": "Count the  area of the radio stations whose serves in South Carolina ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/area> <http://dbpedia.org/resource/South_Carolina> . ?x <http://dbpedia.org/property/area> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/area",
    "predicate1_mention": "area",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/South_Carolina",
    "entity1_mention": "South Carolina",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2512",
    "question": "Name a few whose live in a place where Indian English is an official language",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/Indian_English> . ?uri <http://dbpedia.org/ontology/residence> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/officialLanguage",
    "predicate1_mention": "official language",
    "predicate2_uri": "http://dbpedia.org/ontology/residence",
    "predicate2_mention": "live in a place",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Indian_English",
    "entity1_mention": "Indian English",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2513",
    "question": "What is the constituency of Santo Versace?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Santo_Versace> <http://dbpedia.org/property/constituency> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/constituency",
    "predicate1_mention": "constituency",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Santo_Versace",
    "entity1_mention": "Santo Versace",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2514",
    "question": "What is the television show whose developer is J. Michael Straczynski?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/J._Michael_Straczynski>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/developer",
    "predicate1_mention": "developer",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "television show",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/J._Michael_Straczynski",
    "entity1_mention": "J. Michael Straczynski",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2515",
    "question": "What are some Louisiana based models known for?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Louisiana> . ?x <http://dbpedia.org/property/knownFor> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/knownFor",
    "predicate2_mention": "known for",
    "type_uri": "http://dbpedia.org/ontology/Model",
    "type_mention": "models",
    "entity1_uri": "http://dbpedia.org/resource/Louisiana",
    "entity1_mention": "louisiana",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2516",
    "question": "Name the person who died in Fair Lane ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Fair_Lane>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/deathPlace",
    "predicate1_mention": "died in",
    "predicate2_uri": "http://dbpedia.org/ontology/Person",
    "predicate2_mention": "person",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Fair_Lane",
    "entity1_mention": "Fair Lane",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2517",
    "question": "List the awards given to the important people of Aardman Animations?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Aardman_Animations> <http://dbpedia.org/ontology/keyPerson> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/keyPerson",
    "predicate1_mention": "important people",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Aardman_Animations",
    "entity1_mention": "Aardman Animations",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2518",
    "question": "List the import people of Maryland Jockey Club ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maryland_Jockey_Club> <http://dbpedia.org/property/keyPeople> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/keyPeople",
    "predicate1_mention": "import people",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Maryland_Jockey_Club",
    "entity1_mention": "maryland jockey club",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2519",
    "question": "From what american football teams did Carlos Emmons play?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Carlos_Emmons_(American_football)> <http://dbpedia.org/ontology/formerTeam> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/formerTeam",
    "predicate1_mention": "teams",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Carlos_Emmons_(American_football)",
    "entity1_mention": "american football teams did Carlos Emmons",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2520",
    "question": "Name the TV show whose company is Playtone and written by Graham Yost?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/Playtone> . ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Graham_Yost>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/company",
    "predicate1_mention": "company",
    "predicate2_uri": "http://dbpedia.org/property/writer",
    "predicate2_mention": "written",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "TV show",
    "entity1_uri": "http://dbpedia.org/resource/Playtone",
    "entity1_mention": "playtone",
    "entity2_uri": "http://dbpedia.org/resource/Graham_Yost",
    "entity2_mention": "graham yost"
},
{
    "id": "2521",
    "question": "Where does the publisher of Kathimerini live?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kathimerini> <http://dbpedia.org/ontology/publisher> ?x . ?x <http://dbpedia.org/property/residence> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/publisher",
    "predicate1_mention": "publisher",
    "predicate2_uri": "http://dbpedia.org/property/residence",
    "predicate2_mention": "live",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kathimerini",
    "entity1_mention": "kathimerini",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2522",
    "question": "Who is the person whose alma mater is Harvard Westlake School?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Harvard-Westlake_School>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate1_mention": "alma mater",
    "predicate2_uri": "http://dbpedia.org/ontology/Person",
    "predicate2_mention": "person",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Harvard-Westlake_School",
    "entity1_mention": "harvard westlake school",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2525",
    "question": "What sports are played at institutes affiliated by the Association of Southeast Asian Institutes of Higher Learning?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/affiliation> <http://dbpedia.org/resource/Association_of_Southeast_Asian_Institutions_of_Higher_Learning> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/affiliation",
    "predicate1_mention": "affiliated",
    "predicate2_uri": "http://dbpedia.org/ontology/sport",
    "predicate2_mention": "sports",
    "type_uri": "http://dbpedia.org/ontology/EducationalInstitution",
    "type_mention": "institutes",
    "entity1_uri": "http://dbpedia.org/resource/Association_of_Southeast_Asian_Institutions_of_Higher_Learning",
    "entity1_mention": "Association of Southeast Asian Institutes of Higher Learning",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2526",
    "question": "What is the homeport of INS Viraat (R22) ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/INS_Viraat_(R22)> <http://dbpedia.org/ontology/homeport> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/homeport",
    "predicate1_mention": "homeport",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/INS_Viraat_(R22)",
    "entity1_mention": "INS Viraat (R22)",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2527",
    "question": "What sport amongst the one Lagos Preparatory School practices, did Willian Garne play for?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lagos_Preparatory_School> <http://dbpedia.org/ontology/sport> ?uri. <http://dbpedia.org/resource/William_Garne> <http://dbpedia.org/ontology/occupation> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/sport",
    "predicate1_mention": "sport",
    "predicate2_uri": "http://dbpedia.org/ontology/occupation",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lagos_Preparatory_School",
    "entity1_mention": "Lagos Preparatory School",
    "entity2_uri": "http://dbpedia.org/resource/William_Garne",
    "entity2_mention": "Willian Garne"
},
{
    "id": "2528",
    "question": "Count the different places where the people died, who were born in England?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/England> . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate1_mention": "places where the people died",
    "predicate2_uri": "http://dbpedia.org/property/placeOfDeath",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/England",
    "entity1_mention": "england",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2529",
    "question": "With which artist did the musical artist of Groove Thang collaborated ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Groove_Thang> <http://dbpedia.org/ontology/musicalArtist> ?x . ?x <http://dbpedia.org/property/associatedActs> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/musicalArtist",
    "predicate1_mention": "musical artist",
    "predicate2_uri": "http://dbpedia.org/property/associatedActs",
    "predicate2_mention": "collaborated",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Groove_Thang",
    "entity1_mention": "groove thang",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2530",
    "question": "Where can i find salad based food?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/mainIngredient> <http://dbpedia.org/resource/Salad> . ?x <http://dbpedia.org/property/country> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/mainIngredient",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/country",
    "predicate2_mention": "Where",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Salad",
    "entity1_mention": "salad",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2531",
    "question": "What is the name of the television show whose company is Paramount Television and theme music composer is Gary Portnoy?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Paramount_Television> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Gary_Portnoy>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/company",
    "predicate1_mention": "company",
    "predicate2_uri": "http://dbpedia.org/property/themeMusicComposer",
    "predicate2_mention": "theme music composer",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television show",
    "entity1_uri": "http://dbpedia.org/resource/Paramount_Television",
    "entity1_mention": "Paramount Television",
    "entity2_uri": "http://dbpedia.org/resource/Gary_Portnoy",
    "entity2_mention": "Gary Portnoy"
},
{
    "id": "2532",
    "question": "In which state do darren brass and belvin perry live?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Darren_Brass> <http://dbpedia.org/ontology/residence> ?uri. <http://dbpedia.org/resource/Belvin_Perry> <http://dbpedia.org/ontology/residence> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/residence",
    "predicate1_mention": "darren",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Darren_Brass",
    "entity1_mention": "darren brass",
    "entity2_uri": "http://dbpedia.org/resource/Belvin_Perry",
    "entity2_mention": "belvin perry"
},
{
    "id": "2533",
    "question": "What is the territory of the conflict whose commander is Feng Zicai?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Feng_Zicai> . ?x <http://dbpedia.org/ontology/territory> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/commander",
    "predicate1_mention": "commander",
    "predicate2_uri": "http://dbpedia.org/ontology/territory",
    "predicate2_mention": "territory",
    "type_uri": "http://dbpedia.org/ontology/MilitaryConflict",
    "type_mention": "conflict",
    "entity1_uri": "http://dbpedia.org/resource/Feng_Zicai",
    "entity1_mention": "Feng Zicai",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2534",
    "question": "Which team did wolfred McDonald is also the prospect team of Milkhail Pashnin ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mikhail_Pashnin> <http://dbpedia.org/property/prospectTeam> ?uri. <http://dbpedia.org/resource/Wilfred_McDonald> <http://dbpedia.org/property/playedFor> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/prospectTeam",
    "predicate1_mention": "prospect team",
    "predicate2_uri": "http://dbpedia.org/property/playedFor",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mikhail_Pashnin",
    "entity1_mention": "Milkhail Pashnin",
    "entity2_uri": "http://dbpedia.org/resource/Wilfred_McDonald",
    "entity2_mention": "wolfred McDonald"
},
{
    "id": "2535",
    "question": "Where did Andy Wyant die and Robert Rodi was born in?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Rodi> <http://dbpedia.org/ontology/birthPlace> ?uri. <http://dbpedia.org/resource/Andy_Wyant> <http://dbpedia.org/property/placeOfDeath> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate1_mention": "was born in",
    "predicate2_uri": "http://dbpedia.org/property/placeOfDeath",
    "predicate2_mention": "die",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Robert_Rodi",
    "entity1_mention": "robert rodi",
    "entity2_uri": "http://dbpedia.org/resource/Andy_Wyant",
    "entity2_mention": "Andy Wyant"
},
{
    "id": "2536",
    "question": "Name a colonel whose resting place is Montpelier ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Colonel_(United_States)> . ?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)>  . }",
    "sparql_id": "8",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/rank",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/restingplace",
    "predicate2_mention": "resting place",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Colonel_(United_States)",
    "entity1_mention": "colonel",
    "entity2_uri": "http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)",
    "entity2_mention": "montpelier"
},
{
    "id": "2538",
    "question": "Where did the ultimate fighter: a champion will be crowned tonight and ultimate fighter: team rousey vs team tate take place?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Ultimate_Fighter:_A_Champion_Will_Be_Crowned> <http://dbpedia.org/property/city> ?uri. <http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Rousey_vs._Team_Tate> <http://dbpedia.org/property/city> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/city",
    "predicate1_mention": "where",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Ultimate_Fighter:_A_Champion_Will_Be_Crowned",
    "entity1_mention": "ultimate fighter: a champion will be crowned",
    "entity2_uri": "http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Rousey_vs._Team_Tate",
    "entity2_mention": "ultimate fighter: team rousey vs team tate"
},
{
    "id": "2540",
    "question": "For which band did Dave Hollister perform in the past?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Dave_Hollister> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/pastMembers",
    "predicate1_mention": "perform in the past",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Dave_Hollister",
    "entity1_mention": "Dave Hollister",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2541",
    "question": "Is The Universe in a Single Atom a book about buddhism?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Universe_in_a_Single_Atom> <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Buddhism> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/literaryGenre",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Universe_in_a_Single_Atom",
    "entity1_mention": "The Universe in a Single Atom",
    "entity2_uri": "http://dbpedia.org/resource/Buddhism",
    "entity2_mention": "buddhism"
},
{
    "id": "2542",
    "question": "Name the television show whose voice is given by  April Stewart and theme music composer is Primus (band)?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/April_Stewart> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Primus_(band)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/voices",
    "predicate1_mention": "voice",
    "predicate2_uri": "http://dbpedia.org/property/themeMusicComposer",
    "predicate2_mention": "theme music composer",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television show",
    "entity1_uri": "http://dbpedia.org/resource/April_Stewart",
    "entity1_mention": "April Stewart",
    "entity2_uri": "http://dbpedia.org/resource/Primus_(band)",
    "entity2_mention": "primus (band)"
},
{
    "id": "2543",
    "question": "Which musician was born in Harriman NY?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Harriman,_New_York>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate1_mention": "born",
    "predicate2_uri": "http://dbpedia.org/ontology/MusicalArtist",
    "predicate2_mention": "musician",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Harriman,_New_York",
    "entity1_mention": " Harriman NY",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2544",
    "question": "What are the famous Uni Toronto scientists known for?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Toronto> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate2_mention": "known for",
    "type_uri": "http://dbpedia.org/ontology/Scientist",
    "type_mention": "scientists",
    "entity1_uri": "http://dbpedia.org/resource/University_of_Toronto",
    "entity1_mention": "Uni Toronto",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2545",
    "question": "How many veterans are buried in the US?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/United_States>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/restingPlace",
    "predicate1_mention": "buried in",
    "predicate2_uri": "http://dbpedia.org/ontology/MilitaryPerson",
    "predicate2_mention": "veterans",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_States",
    "entity1_mention": "US",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2547",
    "question": "Count number of people who follow a religion which has an important office in Gold Base ?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Gold_Base> . ?uri <http://dbpedia.org/ontology/religion> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/headquarters",
    "predicate1_mention": "important office",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religion",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Gold_Base",
    "entity1_mention": "gold base",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2548",
    "question": "Name the actor of Soylent Green to which Lydia Clarke is married ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lydia_Clarke> <http://dbpedia.org/property/spouse> ?uri. <http://dbpedia.org/resource/Soylent_Green> <http://dbpedia.org/ontology/starring> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/spouse",
    "predicate1_mention": "married",
    "predicate2_uri": "http://dbpedia.org/ontology/starring",
    "predicate2_mention": "actor",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lydia_Clarke",
    "entity1_mention": "Lydia Clarke",
    "entity2_uri": "http://dbpedia.org/resource/Soylent_Green",
    "entity2_mention": "soylent green"
},
{
    "id": "2550",
    "question": "Name the notable commanders of Army Group Oberrhein ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Army_Group_Oberrhein_(Germany)> <http://dbpedia.org/property/notableCommanders> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/notableCommanders",
    "predicate1_mention": "notable commanders",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Army_Group_Oberrhein_(Germany)",
    "entity1_mention": "Army Group Oberrhein",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2552",
    "question": "In which mountain range does the Rochers De Naye lie?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/parentMountainPeak> <http://dbpedia.org/resource/Rochers_de_Naye> . ?x <http://dbpedia.org/ontology/mountainRange> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/parentMountainPeak",
    "predicate1_mention": "mountain",
    "predicate2_uri": "http://dbpedia.org/ontology/mountainRange",
    "predicate2_mention": "mountain range",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Rochers_de_Naye",
    "entity1_mention": "the Rochers De Naye",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2553",
    "question": "Murray Gold has composed music for how many things?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/Murray_Gold>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/composer",
    "predicate1_mention": "composed",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Murray_Gold",
    "entity1_mention": "murray gold",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2554",
    "question": "Count the number of other product of the banks whose one of the product is Wealth management ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Wealth_management> . ?x <http://dbpedia.org/ontology/product> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/product",
    "predicate1_mention": "product",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Wealth_management",
    "entity1_mention": "Wealth management",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2555",
    "question": "List the name of those who became famous for something garrisoned at Tennessee?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/garrison> <http://dbpedia.org/resource/Tennessee> . ?uri <http://dbpedia.org/property/knownFor> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/garrison",
    "predicate1_mention": "garrisoned",
    "predicate2_uri": "http://dbpedia.org/property/knownFor",
    "predicate2_mention": "famous for",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tennessee",
    "entity1_mention": "tennessee",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2559",
    "question": "Who is the writer of The Sandman (Vertigo) ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Sandman_(Vertigo)> <http://dbpedia.org/property/writers> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/writers",
    "predicate1_mention": "writer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Sandman_(Vertigo)",
    "entity1_mention": "The Sandman (Vertigo)",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2561",
    "question": "What is the subject of the book which preceded Sagan's Cosmos?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cosmos_(Carl_Sagan_book)> <http://dbpedia.org/ontology/previousWork> ?x . ?x <http://dbpedia.org/property/subject> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/previousWork",
    "predicate1_mention": "book",
    "predicate2_uri": "http://dbpedia.org/property/subject",
    "predicate2_mention": "subject",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Cosmos_(Carl_Sagan_book)",
    "entity1_mention": "cosmos",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2562",
    "question": "What was developed by someone working in Cockroach Labs?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/Cockroach_Labs> . ?uri <http://dbpedia.org/property/author> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/employer",
    "predicate1_mention": "working in",
    "predicate2_uri": "http://dbpedia.org/property/author",
    "predicate2_mention": "developed by",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Cockroach_Labs",
    "entity1_mention": "cockroach labs",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2564",
    "question": "How did Letitia MacTavish Hargrave died ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Letitia_MacTavish_Hargrave> <http://dbpedia.org/ontology/deathCause> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/deathCause",
    "predicate1_mention": "died",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Letitia_MacTavish_Hargrave",
    "entity1_mention": "Letitia MacTavish Hargrave",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2566",
    "question": "Which battle of  Khalid bin Sultan was also the conflict of Steve Buyer ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Khalid_bin_Sultan> <http://dbpedia.org/property/battles> ?uri. <http://dbpedia.org/resource/Steve_Buyer> <http://dbpedia.org/ontology/battle> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/battles",
    "predicate1_mention": "battle",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Khalid_bin_Sultan",
    "entity1_mention": "Khalid bin Sultan",
    "entity2_uri": "http://dbpedia.org/resource/Steve_Buyer",
    "entity2_mention": "steve buyer"
},
{
    "id": "2567",
    "question": "How many molluscas are there whose families are Buccinidae and Buccinoidea?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Buccinidae> . ?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Buccinoidea>} ",
    "sparql_id": "107",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/family",
    "predicate1_mention": "families",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Buccinidae",
    "entity1_mention": "buccinidae",
    "entity2_uri": "http://dbpedia.org/resource/Buccinoidea",
    "entity2_mention": "buccinoidea"
},
{
    "id": "2569",
    "question": "Name the person whose parent is Pattie Mallette?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Pattie_Mallette>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/parent",
    "predicate1_mention": "parent",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "person",
    "entity1_uri": "http://dbpedia.org/resource/Pattie_Mallette",
    "entity1_mention": "Pattie Mallette",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2570",
    "question": "Was Mark Twain a character of Mark Twain Tonight?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mark_Twain_Tonight> <http://dbpedia.org/property/characters> <http://dbpedia.org/resource/Mark_Twain> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/characters",
    "predicate1_mention": "character",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mark_Twain_Tonight",
    "entity1_mention": "Mark Twain Tonight",
    "entity2_uri": "http://dbpedia.org/resource/Mark_Twain",
    "entity2_mention": "Mark Twain"
},
{
    "id": "2571",
    "question": "In how many different stadiums are the seasons of the 2015 NA Soccer league held?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/2015_North_American_Soccer_League_season> . ?x <http://dbpedia.org/ontology/ground> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/league",
    "predicate1_mention": "league",
    "predicate2_uri": "http://dbpedia.org/ontology/ground",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Stadium",
    "type_mention": "stadiums",
    "entity1_uri": "http://dbpedia.org/resource/2015_North_American_Soccer_League_season",
    "entity1_mention": "the seasons of the 2015 NA Soccer league",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2572",
    "question": "In which countries were the Russian volleyball team players born?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Russia_women's_national_volleyball_team> . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/nationalteam",
    "predicate1_mention": "team",
    "predicate2_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate2_mention": "born",
    "type_uri": "http://dbpedia.org/ontology/Athlete",
    "type_mention": "players",
    "entity1_uri": "http://dbpedia.org/resource/Russia_women's_national_volleyball_team",
    "entity1_mention": "Russian volleyball team",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2573",
    "question": "What is the county of Saint Lucia national cricket team ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Saint_Lucia_national_cricket_team> <http://dbpedia.org/ontology/county> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/county",
    "predicate1_mention": "county",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Saint_Lucia_national_cricket_team",
    "entity1_mention": "Saint Lucia national cricket team",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2574",
    "question": "Which river originate from limerick?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Limerick>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/mouthLocation",
    "predicate1_mention": "originate from",
    "predicate2_uri": "http://dbpedia.org/ontology/River",
    "predicate2_mention": "river",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Limerick",
    "entity1_mention": "limerick",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2575",
    "question": "List the destinations to which the airlines headquartered at the Gatwick Airport fly to?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Gatwick_Airport> . ?x <http://dbpedia.org/ontology/destination> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/headquarters",
    "predicate1_mention": "headquartered",
    "predicate2_uri": "http://dbpedia.org/ontology/destination",
    "predicate2_mention": "destinations",
    "type_uri": "http://dbpedia.org/ontology/Airline",
    "type_mention": "airlines",
    "entity1_uri": "http://dbpedia.org/resource/Gatwick_Airport",
    "entity1_mention": "gatwick airport",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2576",
    "question": "Name the veneration of the monarch who is the predecessor of Solomon?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Solomon> <http://dbpedia.org/property/predecessor> ?x . ?x <http://dbpedia.org/property/veneratedIn> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Monarch>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/predecessor",
    "predicate1_mention": "predecessor",
    "predicate2_uri": "http://dbpedia.org/property/veneratedIn",
    "predicate2_mention": "veneration",
    "type_uri": "http://dbpedia.org/ontology/Monarch",
    "type_mention": "monarch",
    "entity1_uri": "http://dbpedia.org/resource/Solomon",
    "entity1_mention": "solomon",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2577",
    "question": "Who operates the Ganz UV?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ganz_UV> <http://dbpedia.org/ontology/operator> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/operator",
    "predicate1_mention": "operates",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ganz_UV",
    "entity1_mention": "ganz uv",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2578",
    "question": "Who is the publisher of The Rolling Stone Album Guide ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Rolling_Stone_Album_Guide> <http://dbpedia.org/ontology/publisher> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/publisher",
    "predicate1_mention": "publisher",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Rolling_Stone_Album_Guide",
    "entity1_mention": "The Rolling Stone Album Guide",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2579",
    "question": "In which country was GM was first aired which is also the mouth country of Upper Neretva?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Upper_Neretva> <http://dbpedia.org/ontology/mouthCountry> ?uri. <http://dbpedia.org/resource/G\u00fcm\u00fc\u015f_(TV_series)> <http://dbpedia.org/property/firstAired> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/mouthCountry",
    "predicate1_mention": "country",
    "predicate2_uri": "http://dbpedia.org/property/firstAired",
    "predicate2_mention": "first aired",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Upper_Neretva",
    "entity1_mention": "Upper Neretva",
    "entity2_uri": "http://dbpedia.org/resource/G\u00fcm\u00fc\u015f_(TV_series)",
    "entity2_mention": "GM"
},
{
    "id": "2580",
    "question": "What is the hometown of the volleyball player whose club is VC Lokomotiv Novosibirsk ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/club> <http://dbpedia.org/resource/VC_Lokomotiv_Novosibirsk> . ?x <http://dbpedia.org/property/hometown> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/club",
    "predicate1_mention": "club",
    "predicate2_uri": "http://dbpedia.org/property/hometown",
    "predicate2_mention": "hometown",
    "type_uri": "http://dbpedia.org/ontology/VolleyballPlayer",
    "type_mention": "volleyball player",
    "entity1_uri": "http://dbpedia.org/resource/VC_Lokomotiv_Novosibirsk",
    "entity1_mention": "VC Lokomotiv Novosibirsk",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2581",
    "question": "What are some books whose cover illustration is designed by Marshall Arisman?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/coverArtist> <http://dbpedia.org/resource/Marshall_Arisman>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/coverArtist",
    "predicate1_mention": "cover",
    "predicate2_uri": "http://dbpedia.org/ontology/Book",
    "predicate2_mention": "books",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Marshall_Arisman",
    "entity1_mention": "marshall arisman",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2582",
    "question": "What religion do people of the country of Mahbuba Islam Rakhi follow?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mahbuba_Islam_Rakhi> <http://dbpedia.org/ontology/nationality> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/nationality",
    "predicate1_mention": "country",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religion",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mahbuba_Islam_Rakhi",
    "entity1_mention": "Mahbuba Islam Rakhi",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2583",
    "question": "Name the people who were in a youth club managed by Luis Enrique ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/manager> <http://dbpedia.org/resource/Luis_Enrique_(footballer)> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/manager",
    "predicate1_mention": "managed",
    "predicate2_uri": "http://dbpedia.org/property/youthclubs",
    "predicate2_mention": "youth club",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Luis_Enrique_(footballer)",
    "entity1_mention": "Luis Enrique",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2584",
    "question": "What is the state of the administrative region where Oscoda, Michigan is located?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Oscoda,_Michigan> <http://dbpedia.org/ontology/isPartOf> ?x . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/isPartOf",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/state",
    "predicate2_mention": "state",
    "type_uri": "http://dbpedia.org/ontology/AdministrativeRegion",
    "type_mention": "administrative region",
    "entity1_uri": "http://dbpedia.org/resource/Oscoda,_Michigan",
    "entity1_mention": "Oscoda, Michigan",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2585",
    "question": "Which  institution of the Alton Ochsner is the alma mater of the Michael Hahn ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alton_Ochsner> <http://dbpedia.org/ontology/institution> ?uri. <http://dbpedia.org/resource/Michael_Hahn> <http://dbpedia.org/ontology/almaMater> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/institution",
    "predicate1_mention": "institution",
    "predicate2_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate2_mention": "alma mater",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Alton_Ochsner",
    "entity1_mention": "Alton Ochsner",
    "entity2_uri": "http://dbpedia.org/resource/Michael_Hahn",
    "entity2_mention": "michael hahn"
},
{
    "id": "2586",
    "question": "Which city's foundeer is John Forbes?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/founder> <http://dbpedia.org/resource/John_Forbes_(British_Army_officer)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/founder",
    "predicate1_mention": "foundeer",
    "predicate2_uri": "http://dbpedia.org/ontology/City",
    "predicate2_mention": "city's",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/John_Forbes_(British_Army_officer)",
    "entity1_mention": "John Forbes",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2587",
    "question": "How many times has Jeff Conaway been casted?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jeff_Conaway>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/starring",
    "predicate1_mention": "many",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jeff_Conaway",
    "entity1_mention": "Jeff Conaway",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2588",
    "question": "Kendall Jenner has how many relatives?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Kendall_Jenner> <http://dbpedia.org/property/relatives> ?uri  . }",
    "sparql_id": "102",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/relatives",
    "predicate1_mention": "relatives",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kendall_Jenner",
    "entity1_mention": "kendall jenner",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2589",
    "question": "How many people were drafted in the LA Clippers?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/draftTeam> <http://dbpedia.org/resource/Los_Angeles_Clippers>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/draftTeam",
    "predicate1_mention": "drafted",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Los_Angeles_Clippers",
    "entity1_mention": "LA Clippers",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2591",
    "question": "In which wars did commanders born in Indochina fight?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Indochina> . ?uri <http://dbpedia.org/ontology/commander> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate1_mention": "born",
    "predicate2_uri": "http://dbpedia.org/ontology/commander",
    "predicate2_mention": "commanders",
    "type_uri": "http://dbpedia.org/ontology/MilitaryConflict",
    "type_mention": "fight",
    "entity1_uri": "http://dbpedia.org/resource/Indochina",
    "entity1_mention": "indochina",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2592",
    "question": "List the affiliations of Wikipedia Zero ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wikipedia_Zero> <http://dbpedia.org/property/affiliations> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/affiliations",
    "predicate1_mention": "affiliations",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Wikipedia_Zero",
    "entity1_mention": "wikipedia zero",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2594",
    "question": "CN Atletic-Barceloneta has a stadium in Barcelona?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/CN_Atl\u00e8tic-Barceloneta> <http://dbpedia.org/ontology/stadium> <http://dbpedia.org/resource/Barcelona> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/stadium",
    "predicate1_mention": "stadium",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/CN_Atl\u00e8tic-Barceloneta",
    "entity1_mention": "CN Atletic-Barceloneta",
    "entity2_uri": "http://dbpedia.org/resource/Barcelona",
    "entity2_mention": "barcelona"
},
{
    "id": "2596",
    "question": "In how many different wars have people graduated from the Army Command and General staff college fought?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/United_States_Army_Command_and_General_Staff_College> . ?x <http://dbpedia.org/property/battles> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate1_mention": "graduated from",
    "predicate2_uri": "http://dbpedia.org/property/battles",
    "predicate2_mention": "wars",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_States_Army_Command_and_General_Staff_College",
    "entity1_mention": "the Army Command and General staff college",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2598",
    "question": "Was the street dogs of south central narrated by Queen Latifah?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Street_Dogs_of_South_Central> <http://dbpedia.org/property/narrator> <http://dbpedia.org/resource/Queen_Latifah> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/narrator",
    "predicate1_mention": "narrated",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Street_Dogs_of_South_Central",
    "entity1_mention": "street dogs of south central",
    "entity2_uri": "http://dbpedia.org/resource/Queen_Latifah",
    "entity2_mention": "Queen Latifah"
},
{
    "id": "2599",
    "question": "What fictional character's species is American Pekin duck",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/American_Pekin_duck> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/species",
    "predicate1_mention": "species",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/American_Pekin_duck",
    "entity1_mention": "american pekin duck",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2600",
    "question": "Name the television show whose creator is Simon Fuller and presented by Ryan Seacrest?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller> . ?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Ryan_Seacrest>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/creator",
    "predicate1_mention": "creator",
    "predicate2_uri": "http://dbpedia.org/ontology/presenter",
    "predicate2_mention": "presented",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television show",
    "entity1_uri": "http://dbpedia.org/resource/Simon_Fuller",
    "entity1_mention": "Simon Fuller",
    "entity2_uri": "http://dbpedia.org/resource/Ryan_Seacrest",
    "entity2_mention": "Ryan Seacrest"
},
{
    "id": "2601",
    "question": "How many books are there whose author's tomb is in Madrid?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . ?uri <http://dbpedia.org/ontology/author> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/restingPlace",
    "predicate1_mention": "tomb",
    "predicate2_uri": "http://dbpedia.org/ontology/author",
    "predicate2_mention": "author's",
    "type_uri": "http://dbpedia.org/ontology/Book",
    "type_mention": "books",
    "entity1_uri": "http://dbpedia.org/resource/Madrid",
    "entity1_mention": "madrid",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2602",
    "question": "What are the bridges whose located in California?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/California>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/locatedInArea",
    "predicate1_mention": "located in",
    "predicate2_uri": "http://dbpedia.org/ontology/Bridge",
    "predicate2_mention": "bridges",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/California",
    "entity1_mention": "california",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2603",
    "question": "Name the common sports played at Polytechnic University of Philippines San Juan and Islamic Azad University?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_San_Juan> <http://dbpedia.org/ontology/sport> ?uri. <http://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch> <http://dbpedia.org/ontology/sport> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/sport",
    "predicate1_mention": "sports",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_San_Juan",
    "entity1_mention": "Polytechnic University of Philippines San Juan",
    "entity2_uri": "http://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch",
    "entity2_mention": "Islamic Azad University"
},
{
    "id": "2604",
    "question": "Who acted in the work written by Colin Brake?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Colin_Brake> . ?x <http://dbpedia.org/property/starring> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/writer",
    "predicate1_mention": "written",
    "predicate2_uri": "http://dbpedia.org/property/starring",
    "predicate2_mention": "acted in",
    "type_uri": "http://dbpedia.org/ontology/Work",
    "type_mention": "work",
    "entity1_uri": "http://dbpedia.org/resource/Colin_Brake",
    "entity1_mention": "colin brake",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2605",
    "question": "Purnima Banerjee and Rishang Keishing are politicians of what party ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rishang_Keishing> <http://dbpedia.org/property/party> ?uri. <http://dbpedia.org/resource/Purnima_Banerjee> <http://dbpedia.org/ontology/party> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/party",
    "predicate1_mention": "party",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Rishang_Keishing",
    "entity1_mention": "Rishang Keishing",
    "entity2_uri": "http://dbpedia.org/resource/Purnima_Banerjee",
    "entity2_mention": "Purnima Banerjee"
},
{
    "id": "2606",
    "question": "Ryan Seacrest has been the presenter of how many things?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Ryan_Seacrest>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/presenter",
    "predicate1_mention": "presenter",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ryan_Seacrest",
    "entity1_mention": "Ryan Seacrest",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2607",
    "question": "Give me a count of companies located in Texas ?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Texas>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/locationCity",
    "predicate1_mention": "located",
    "predicate2_uri": "http://dbpedia.org/ontology/Company",
    "predicate2_mention": "companies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Texas",
    "entity1_mention": "texas",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2609",
    "question": "Name the organization which developed iPhone OS and the XNU?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/IPhone_OS_1> <http://dbpedia.org/property/developer> ?uri. <http://dbpedia.org/resource/XNU> <http://dbpedia.org/ontology/developer> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/developer",
    "predicate1_mention": "developed",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/IPhone_OS_1",
    "entity1_mention": "iphone os",
    "entity2_uri": "http://dbpedia.org/resource/XNU",
    "entity2_mention": "xnu"
},
{
    "id": "2610",
    "question": "What are the television shows whose network is BBC HD?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_HD>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/network",
    "predicate1_mention": "network",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "television shows",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/BBC_HD",
    "entity1_mention": "bbc hd",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2611",
    "question": "What are the books written by authors who died in Madrid?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . ?uri <http://dbpedia.org/property/author> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/restingPlace",
    "predicate1_mention": "written",
    "predicate2_uri": "http://dbpedia.org/property/author",
    "predicate2_mention": "authors",
    "type_uri": "http://dbpedia.org/ontology/Book",
    "type_mention": "books",
    "entity1_uri": "http://dbpedia.org/resource/Madrid",
    "entity1_mention": "madrid",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2614",
    "question": "Which stadium is owned by the team whose manager is Dimitris Terezopoulos?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/manager> <http://dbpedia.org/resource/Dimitris_Terezopoulos> . ?x <http://dbpedia.org/property/stadium> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/manager",
    "predicate1_mention": "manager",
    "predicate2_uri": "http://dbpedia.org/property/stadium",
    "predicate2_mention": "stadium",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Dimitris_Terezopoulos",
    "entity1_mention": "Dimitris Terezopoulos",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2615",
    "question": "Where is Tahual located which is also the country of Ren Romano ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ren\u00e9_Romano> <http://dbpedia.org/property/citizenship> ?uri. <http://dbpedia.org/resource/Tahual> <http://dbpedia.org/property/location> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/citizenship",
    "predicate1_mention": "country",
    "predicate2_uri": "http://dbpedia.org/property/location",
    "predicate2_mention": "located",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ren\u00e9_Romano",
    "entity1_mention": "Ren Romano",
    "entity2_uri": "http://dbpedia.org/resource/Tahual",
    "entity2_mention": "tahual"
},
{
    "id": "2617",
    "question": "What is the television show whose previous work is The Spirit of Christmas (short film)?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/The_Spirit_of_Christmas_(short_film)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/previousWork",
    "predicate1_mention": "previous work",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "television show",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Spirit_of_Christmas_(short_film)",
    "entity1_mention": "The Spirit of Christmas (short film)",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2618",
    "question": "List the series of the books whose author is K. W. Jeter.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/author> <http://dbpedia.org/resource/K._W._Jeter> . ?x <http://dbpedia.org/ontology/series> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/author",
    "predicate1_mention": "author",
    "predicate2_uri": "http://dbpedia.org/ontology/series",
    "predicate2_mention": "series",
    "type_uri": "http://dbpedia.org/ontology/Book",
    "type_mention": "books",
    "entity1_uri": "http://dbpedia.org/resource/K._W._Jeter",
    "entity1_mention": "K. W. Jeter",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2619",
    "question": "List the authors of the musicals whose songwriter is Richard M. Sherman.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/musicBy> <http://dbpedia.org/resource/Richard_M._Sherman> . ?x <http://dbpedia.org/ontology/author> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/musicBy",
    "predicate1_mention": "songwriter",
    "predicate2_uri": "http://dbpedia.org/ontology/author",
    "predicate2_mention": "authors",
    "type_uri": "http://dbpedia.org/ontology/Musical",
    "type_mention": "musicals",
    "entity1_uri": "http://dbpedia.org/resource/Richard_M._Sherman",
    "entity1_mention": "Richard M. Sherman",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2620",
    "question": "What is the river on which the Kariba Dam and Batoka Gorge Hydroelectirc power station exist?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kariba_Dam> <http://dbpedia.org/ontology/river> ?uri. <http://dbpedia.org/resource/Batoka_Gorge_Hydroelectric_Power_Station> <http://dbpedia.org/ontology/river> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/river",
    "predicate1_mention": "river",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kariba_Dam",
    "entity1_mention": "kariba dam",
    "entity2_uri": "http://dbpedia.org/resource/Batoka_Gorge_Hydroelectric_Power_Station",
    "entity2_mention": "Batoka Gorge Hydroelectirc power station"
},
{
    "id": "2622",
    "question": "What is the name of the information appliance by sony whose predecessor is PlayStation 2?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Sony> . ?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/PlayStation_2>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/predecessor",
    "predicate2_mention": "predecessor",
    "type_uri": "http://dbpedia.org/ontology/InformationAppliance",
    "type_mention": "information appliance",
    "entity1_uri": "http://dbpedia.org/resource/Sony",
    "entity1_mention": "sony",
    "entity2_uri": "http://dbpedia.org/resource/PlayStation_2",
    "entity2_mention": "playstation 2"
},
{
    "id": "2623",
    "question": "Is the College Sainte Marie in Mauritius?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/College_Sainte-Marie> <http://dbpedia.org/property/county> <http://dbpedia.org/resource/Mauritius> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/county",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/College_Sainte-Marie",
    "entity1_mention": "college sainte marie",
    "entity2_uri": "http://dbpedia.org/resource/Mauritius",
    "entity2_mention": "mauritius"
},
{
    "id": "2624",
    "question": "Who were the narrators of the albums which had Ringo Starr as one of the narrator ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/narrated> <http://dbpedia.org/resource/Ringo_Starr> . ?x <http://dbpedia.org/property/narrated> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/narrated",
    "predicate1_mention": "narrator",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Album",
    "type_mention": "albums",
    "entity1_uri": "http://dbpedia.org/resource/Ringo_Starr",
    "entity1_mention": "Ringo Starr",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2627",
    "question": "Danny Felice, the Gibraltarian guitarist is from which city?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Danny_Felice> <http://dbpedia.org/ontology/hometown> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/hometown",
    "predicate1_mention": "city",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Danny_Felice",
    "entity1_mention": "Danny Felice",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2628",
    "question": "How many things are people who died in St. Petersburg known for?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Saint_Petersburg> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/deathPlace",
    "predicate1_mention": "people",
    "predicate2_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate2_mention": "known for",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Saint_Petersburg",
    "entity1_mention": "St. Petersburg",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2629",
    "question": "Where did ed podolak go to high school",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ed_Podolak> <http://dbpedia.org/ontology/highschool> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/highschool",
    "predicate1_mention": "high school",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ed_Podolak",
    "entity1_mention": "ed podolak",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2630",
    "question": "Of which countries  does Viveka Babajee have citizenship?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Viveka_Babajee> <http://dbpedia.org/property/citizenship> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/citizenship",
    "predicate1_mention": "citizenship",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Viveka_Babajee",
    "entity1_mention": "Viveka Babajee",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2631",
    "question": "Which university attended by Donn Barber and education institute of Jack McGregor ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Donn_Barber> <http://dbpedia.org/property/education> ?uri. <http://dbpedia.org/resource/Jack_McGregor> <http://dbpedia.org/ontology/education> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/education",
    "predicate1_mention": "education",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Donn_Barber",
    "entity1_mention": "Donn Barber",
    "entity2_uri": "http://dbpedia.org/resource/Jack_McGregor",
    "entity2_mention": "Jack McGregor"
},
{
    "id": "2632",
    "question": "Where is Bogobiri House located ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bogobiri_House> <http://dbpedia.org/property/locationCity> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/locationCity",
    "predicate1_mention": "located",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bogobiri_House",
    "entity1_mention": "bogobiri house",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2633",
    "question": "Count all those whose youth club was managed by Luis Enrique.",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/manager> <http://dbpedia.org/resource/Luis_Enrique_(footballer)> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . }",
    "sparql_id": "106",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/manager",
    "predicate1_mention": "managed",
    "predicate2_uri": "http://dbpedia.org/property/youthclubs",
    "predicate2_mention": "youth club",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Luis_Enrique_(footballer)",
    "entity1_mention": "Luis Enrique",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2634",
    "question": "How many areas are led by Willem Alexander?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Willem-Alexander_of_the_Netherlands>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/leader",
    "predicate1_mention": "led by",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Willem-Alexander_of_the_Netherlands",
    "entity1_mention": "Willem Alexander",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2636",
    "question": "Count the awards received by Immunologists?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/fields> <http://dbpedia.org/resource/Immunology> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/fields",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "awards",
    "type_uri": "http://dbpedia.org/ontology/Award",
    "type_mention": "awards",
    "entity1_uri": "http://dbpedia.org/resource/Immunology",
    "entity1_mention": "Immunologists",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2638",
    "question": "Who are in the liang chow club?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/club> <http://dbpedia.org/resource/Liang_Chow> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/club",
    "predicate1_mention": "club",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Liang_Chow",
    "entity1_mention": "liang chow",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2639",
    "question": "What is the occupation of the people who are born in Iowa?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Iowa> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate1_mention": "are born in",
    "predicate2_uri": "http://dbpedia.org/ontology/occupation",
    "predicate2_mention": "occupation",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Iowa",
    "entity1_mention": "iowa",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2640",
    "question": "Who holds shares in something famous for the Seven Spring Mountain Resort?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Seven_Springs_Mountain_Resort> . ?uri <http://dbpedia.org/property/owner> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate1_mention": "famous for",
    "predicate2_uri": "http://dbpedia.org/property/owner",
    "predicate2_mention": "holds shares in",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Seven_Springs_Mountain_Resort",
    "entity1_mention": "Seven Spring Mountain Resort",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2641",
    "question": "What are the different religions followed by presidents whose prime minister was Surayud Chulanont?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/primeminister> <http://dbpedia.org/resource/Surayud_Chulanont> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/primeminister",
    "predicate1_mention": "prime minister",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religions",
    "type_uri": "http://dbpedia.org/ontology/President",
    "type_mention": "presidents",
    "entity1_uri": "http://dbpedia.org/resource/Surayud_Chulanont",
    "entity1_mention": "Surayud Chulanont",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2642",
    "question": "Who all were involved in the wars fought by the commander Blue Jacket?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Blue_Jacket> . ?x <http://dbpedia.org/property/combatant> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/commander",
    "predicate1_mention": "commander",
    "predicate2_uri": "http://dbpedia.org/property/combatant",
    "predicate2_mention": "involved in",
    "type_uri": "http://dbpedia.org/ontology/MilitaryConflict",
    "type_mention": "wars",
    "entity1_uri": "http://dbpedia.org/resource/Blue_Jacket",
    "entity1_mention": "Blue Jacket",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2643",
    "question": "What are some people who are on the board of companies founded in NY?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/New_York_City> . ?uri <http://dbpedia.org/ontology/board> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/foundation",
    "predicate1_mention": "founded",
    "predicate2_uri": "http://dbpedia.org/ontology/board",
    "predicate2_mention": "board",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/New_York_City",
    "entity1_mention": "NY",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2644",
    "question": "What are some cars similar to the ones assembled at Toluca?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Toluca> . ?x <http://dbpedia.org/property/related> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/assembly",
    "predicate1_mention": "assembled",
    "predicate2_uri": "http://dbpedia.org/property/related",
    "predicate2_mention": "similar to",
    "type_uri": "http://dbpedia.org/ontology/Automobile",
    "type_mention": "cars",
    "entity1_uri": "http://dbpedia.org/resource/Toluca",
    "entity1_mention": "toluca",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2646",
    "question": "Does Heydar mean the same as a lion?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Heydar> <http://dbpedia.org/property/meaning> <http://dbpedia.org/resource/Lion> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/meaning",
    "predicate1_mention": "mean",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Heydar",
    "entity1_mention": "heydar",
    "entity2_uri": "http://dbpedia.org/resource/Lion",
    "entity2_mention": "lion"
},
{
    "id": "2647",
    "question": "List the fields of Sylvain Lvi ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sylvain_L\u00e9vi> <http://dbpedia.org/property/fields> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/fields",
    "predicate1_mention": "fields",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Sylvain_L\u00e9vi",
    "entity1_mention": "Sylvain Lvi",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2648",
    "question": "How many managers have managed Middlesbrough FC?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/managerClub> <http://dbpedia.org/resource/Middlesbrough_F.C.>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/managerClub",
    "predicate1_mention": "managers",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Middlesbrough_F.C.",
    "entity1_mention": "Middlesbrough FC",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2649",
    "question": "What sport is Eric Schiller known for, and employes Craig Van Tibury?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eric_Schiller> <http://dbpedia.org/ontology/knownFor> ?uri. <http://dbpedia.org/resource/Craig_Van_Tilbury> <http://dbpedia.org/ontology/occupation> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate1_mention": "known for",
    "predicate2_uri": "http://dbpedia.org/ontology/occupation",
    "predicate2_mention": "employes",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Eric_Schiller",
    "entity1_mention": "Eric Schiller",
    "entity2_uri": "http://dbpedia.org/resource/Craig_Van_Tilbury",
    "entity2_mention": "Craig Van Tibury"
},
{
    "id": "2650",
    "question": "Which minister was responsible for Kriminalpolizie?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kriminalpolizei> <http://dbpedia.org/ontology/leader> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/leader",
    "predicate1_mention": "minister",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kriminalpolizei",
    "entity1_mention": "Kriminalpolizie",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2651",
    "question": "In what movies did Akira Ifukube compose the music?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Akira_Ifukube>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/music",
    "predicate1_mention": "music",
    "predicate2_uri": "http://dbpedia.org/ontology/Film",
    "predicate2_mention": "movies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Akira_Ifukube",
    "entity1_mention": "Akira Ifukube",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2652",
    "question": "How many awards have been awarded to people who are buried in Glendale, California?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Glendale,_California> . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/restingPlace",
    "predicate1_mention": "buried",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Glendale,_California",
    "entity1_mention": "Glendale, California",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2653",
    "question": "What is the river whose mouth is in deadsea?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Dead_Sea>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/riverMouth",
    "predicate1_mention": "river whose mouth",
    "predicate2_uri": "http://dbpedia.org/ontology/River",
    "predicate2_mention": "river",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Dead_Sea",
    "entity1_mention": "deadsea",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2654",
    "question": "List all those whose relatives' nationality is United States.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/ontology/relative> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/nationality",
    "predicate1_mention": "nationality",
    "predicate2_uri": "http://dbpedia.org/ontology/relative",
    "predicate2_mention": "relatives'",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_States",
    "entity1_mention": "United States",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2655",
    "question": "How many people were in a youthclub which played in the Argentine Primera Division?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/Argentine_Primera_Divisi\u00f3n> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . }",
    "sparql_id": "106",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/league",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/youthclubs",
    "predicate2_mention": "youthclub",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Argentine_Primera_Divisi\u00f3n",
    "entity1_mention": "Argentine Primera Division",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2656",
    "question": "Which Stanley Kubrick's movie has music by Laurie Johnson?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Stanley_Kubrick> . ?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Laurie_Johnson>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/director",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/music",
    "predicate2_mention": "music",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movie",
    "entity1_uri": "http://dbpedia.org/resource/Stanley_Kubrick",
    "entity1_mention": "Stanley Kubrick",
    "entity2_uri": "http://dbpedia.org/resource/Laurie_Johnson",
    "entity2_mention": "Laurie Johnson"
},
{
    "id": "2657",
    "question": "Where does the river flows into, which starts in Gredelj?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Gredelj> . ?x <http://dbpedia.org/ontology/riverMouth> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/source",
    "predicate1_mention": "starts in",
    "predicate2_uri": "http://dbpedia.org/ontology/riverMouth",
    "predicate2_mention": "river",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Gredelj",
    "entity1_mention": "gredelj",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2658",
    "question": "Did chris lebenzon edit Batman returns?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Batman_Returns> <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Chris_Lebenzon> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/editing",
    "predicate1_mention": "edit",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Batman_Returns",
    "entity1_mention": "Batman returns",
    "entity2_uri": "http://dbpedia.org/resource/Chris_Lebenzon",
    "entity2_mention": "chris lebenzon"
},
{
    "id": "2659",
    "question": "Name the TV show with distributor as Broadcast syndication and has theme music composed by Primus ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Broadcast_syndication> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Primus_(band)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/distributor",
    "predicate1_mention": "distributor",
    "predicate2_uri": "http://dbpedia.org/property/themeMusicComposer",
    "predicate2_mention": "theme music composed",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "TV show",
    "entity1_uri": "http://dbpedia.org/resource/Broadcast_syndication",
    "entity1_mention": "Broadcast syndication",
    "entity2_uri": "http://dbpedia.org/resource/Primus_(band)",
    "entity2_mention": "primus"
},
{
    "id": "2661",
    "question": "What artist was associated closely with the bare necessities and rock a doodle?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Bare_Necessities> <http://dbpedia.org/ontology/artist> ?uri. <http://dbpedia.org/resource/Rock-a-Doodle> <http://dbpedia.org/ontology/starring> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/artist",
    "predicate1_mention": "artist",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Bare_Necessities",
    "entity1_mention": "the bare necessities",
    "entity2_uri": "http://dbpedia.org/resource/Rock-a-Doodle",
    "entity2_mention": "rock a doodle"
},
{
    "id": "2662",
    "question": "Was Let it Be written by Ringo Starr?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Let_It_Be_(musical)> <http://dbpedia.org/ontology/musicBy> <http://dbpedia.org/resource/Ringo_Starr> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/musicBy",
    "predicate1_mention": "written",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Let_It_Be_(musical)",
    "entity1_mention": "Let it Be",
    "entity2_uri": "http://dbpedia.org/resource/Ringo_Starr",
    "entity2_mention": "Ringo Starr"
},
{
    "id": "2663",
    "question": "How many artists are signed up with Celluloid Records?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Celluloid_Records>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/label",
    "predicate1_mention": "signed up",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Celluloid_Records",
    "entity1_mention": "celluloid records",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2664",
    "question": "Which country were the associates of Hilda Duhalde from?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hilda_de_Duhalde> <http://dbpedia.org/ontology/associate> ?x . ?x <http://dbpedia.org/ontology/nationality> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/associate",
    "predicate1_mention": "associates",
    "predicate2_uri": "http://dbpedia.org/ontology/nationality",
    "predicate2_mention": "country",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hilda_de_Duhalde",
    "entity1_mention": "Hilda Duhalde",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2665",
    "question": "In what tv shows did Jason Carter act?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jason_Carter_(actor)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/starring",
    "predicate1_mention": "act",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "tv shows",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jason_Carter_(actor)",
    "entity1_mention": "Jason Carter act",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2666",
    "question": "Name some books by Spanish speaking authors.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/language> <http://dbpedia.org/resource/Spanish_language> . ?uri <http://dbpedia.org/property/author> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/language",
    "predicate1_mention": "speaking",
    "predicate2_uri": "http://dbpedia.org/property/author",
    "predicate2_mention": "authors",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Spanish_language",
    "entity1_mention": "spanish",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2667",
    "question": "Which  siler medalist of the Tennis at the 2012 Summer Olympics Men's singles was also the  flagbearer of the Switzerland at the 2008 Summer Olympics",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tennis_at_the_2012_Summer_Olympics_\u2013_Men's_singles> <http://dbpedia.org/ontology/silverMedalist> ?uri. <http://dbpedia.org/resource/Switzerland_at_the_2008_Summer_Olympics> <http://dbpedia.org/property/flagbearer> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/silverMedalist",
    "predicate1_mention": "medalist",
    "predicate2_uri": "http://dbpedia.org/property/flagbearer",
    "predicate2_mention": "flagbearer",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tennis_at_the_2012_Summer_Olympics_\u2013_Men's_singles",
    "entity1_mention": "Tennis at the 2012 Summer Olympics Men's singles",
    "entity2_uri": "http://dbpedia.org/resource/Switzerland_at_the_2008_Summer_Olympics",
    "entity2_mention": "Switzerland at the 2008 Summer Olympics"
},
{
    "id": "2668",
    "question": "Which television shows have been produced by Erik Bork?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Erik_Bork>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/producer",
    "predicate1_mention": "produced",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "television shows",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Erik_Bork",
    "entity1_mention": "erik bork",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2669",
    "question": "In which states are there bridges over the Pequea Creek?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/river> <http://dbpedia.org/resource/Pequea_Creek> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/river",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/state",
    "predicate2_mention": "states",
    "type_uri": "http://dbpedia.org/ontology/Bridge",
    "type_mention": "bridges",
    "entity1_uri": "http://dbpedia.org/resource/Pequea_Creek",
    "entity1_mention": "pequea creek",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2670",
    "question": "Name the university with mascot as Aubie and president as jay Gogue ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mascot> <http://dbpedia.org/resource/Aubie> . ?uri <http://dbpedia.org/ontology/president> <http://dbpedia.org/resource/Jay_Gogue>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/mascot",
    "predicate1_mention": "mascot",
    "predicate2_uri": "http://dbpedia.org/ontology/president",
    "predicate2_mention": "president",
    "type_uri": "http://dbpedia.org/ontology/University",
    "type_mention": "university",
    "entity1_uri": "http://dbpedia.org/resource/Aubie",
    "entity1_mention": "aubie",
    "entity2_uri": "http://dbpedia.org/resource/Jay_Gogue",
    "entity2_mention": "jay Gogue"
},
{
    "id": "2671",
    "question": "List the birthplace of the medicians who studied in Harvard.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/Harvard_Medical_School> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Medician>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/institution",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate2_mention": "birthplace",
    "type_uri": "http://dbpedia.org/ontology/Medician",
    "type_mention": "medicians",
    "entity1_uri": "http://dbpedia.org/resource/Harvard_Medical_School",
    "entity1_mention": "Harvard",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2672",
    "question": "Name some Texas based companies ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Texas>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/locationCity",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/Company",
    "predicate2_mention": "companies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Texas",
    "entity1_mention": "texas",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2673",
    "question": "What is common between genre of battle chess and purpose of New Zealand Chess ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Battle_Chess> <http://dbpedia.org/property/genre> ?uri. <http://dbpedia.org/resource/New_Zealand_Chess_Federation> <http://dbpedia.org/property/purpose> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/genre",
    "predicate1_mention": "genre",
    "predicate2_uri": "http://dbpedia.org/property/purpose",
    "predicate2_mention": "purpose",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Battle_Chess",
    "entity1_mention": "battle chess",
    "entity2_uri": "http://dbpedia.org/resource/New_Zealand_Chess_Federation",
    "entity2_mention": "New Zealand Chess"
},
{
    "id": "2676",
    "question": "who is the governer of New Castile?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/order> <http://dbpedia.org/resource/Governorate_of_New_Castile> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/order",
    "predicate1_mention": "governer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Governorate_of_New_Castile",
    "entity1_mention": "governer of New Castile",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2677",
    "question": "In which country is the Baku puppet Theater located which is also the birth palce of Anar Salmanov ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Baku_Puppet_Theatre> <http://dbpedia.org/ontology/locationCountry> ?uri. <http://dbpedia.org/resource/Anar_Salmanov> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/locationCountry",
    "predicate1_mention": "country",
    "predicate2_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate2_mention": "birth palce",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Baku_Puppet_Theatre",
    "entity1_mention": "Baku puppet Theater",
    "entity2_uri": "http://dbpedia.org/resource/Anar_Salmanov",
    "entity2_mention": "Anar Salmanov"
},
{
    "id": "2678",
    "question": "Which magazine's editor's official residence is Playboy Mansion?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Playboy_Mansion> . ?uri <http://dbpedia.org/property/editor> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/residence",
    "predicate1_mention": "residence",
    "predicate2_uri": "http://dbpedia.org/property/editor",
    "predicate2_mention": "editor's",
    "type_uri": "http://dbpedia.org/ontology/Magazine",
    "type_mention": "magazine's",
    "entity1_uri": "http://dbpedia.org/resource/Playboy_Mansion",
    "entity1_mention": "playboy mansion",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2679",
    "question": "What are the television shows telecasted on the network which has headquarters at Atlanta?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Atlanta> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/headquarters",
    "predicate1_mention": "headquarters",
    "predicate2_uri": "http://dbpedia.org/property/network",
    "predicate2_mention": "network",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television",
    "entity1_uri": "http://dbpedia.org/resource/Atlanta",
    "entity1_mention": "atlanta",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2680",
    "question": "Which military unit's  garrison is Pentagon and command structure is United States Department of Defense?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/garrison> <http://dbpedia.org/resource/The_Pentagon> . ?uri <http://dbpedia.org/ontology/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_Defense>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/garrison",
    "predicate1_mention": "garrison",
    "predicate2_uri": "http://dbpedia.org/ontology/commandStructure",
    "predicate2_mention": "command structure",
    "type_uri": "http://dbpedia.org/ontology/MilitaryUnit",
    "type_mention": "military",
    "entity1_uri": "http://dbpedia.org/resource/The_Pentagon",
    "entity1_mention": "pentagon",
    "entity2_uri": "http://dbpedia.org/resource/United_States_Department_of_Defense",
    "entity2_mention": "United States Department of Defense"
},
{
    "id": "2682",
    "question": "By whom is the broadcaster network Bounce TV founded?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bounce_TV> <http://dbpedia.org/ontology/foundedBy> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/foundedBy",
    "predicate1_mention": "founded",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bounce_TV",
    "entity1_mention": "the broadcaster network bounce tv",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2683",
    "question": "Where was William anthony trained ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Anthony_(artist)> <http://dbpedia.org/property/training> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/training",
    "predicate1_mention": "trained",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/William_Anthony_(artist)",
    "entity1_mention": "william anthony",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2684",
    "question": "Which countries were the first to play Gumus and Ne daj se, Nina?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/G\u00fcm\u00fc\u015f_(TV_series)> <http://dbpedia.org/property/firstAired> ?uri. <http://dbpedia.org/resource/Ne_daj_se,_Nina> <http://dbpedia.org/property/firstAired> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/firstAired",
    "predicate1_mention": "first",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/G\u00fcm\u00fc\u015f_(TV_series)",
    "entity1_mention": "Gumus",
    "entity2_uri": "http://dbpedia.org/resource/Ne_daj_se,_Nina",
    "entity2_mention": "Ne daj se, Nina"
},
{
    "id": "2685",
    "question": "Where did the people beatified by Pope Pius X die?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/beatifiedBy> <http://dbpedia.org/resource/Pope_Pius_X> . ?x <http://dbpedia.org/property/deathPlace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/beatifiedBy",
    "predicate1_mention": "beatified by",
    "predicate2_uri": "http://dbpedia.org/property/deathPlace",
    "predicate2_mention": "die",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Pope_Pius_X",
    "entity1_mention": "Pope Pius X",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2686",
    "question": "How many other family of the mammals exists  whose family is also Hominidae ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Hominidae> . ?x <http://dbpedia.org/ontology/family> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/family",
    "predicate1_mention": "family",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hominidae",
    "entity1_mention": "hominidae",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2688",
    "question": "Who were the pole drivers in GP when Damon hill was a first driver?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/firstDriver> <http://dbpedia.org/resource/Damon_Hill> . ?x <http://dbpedia.org/ontology/poleDriver> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GrandPrix>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/firstDriver",
    "predicate1_mention": "first driver",
    "predicate2_uri": "http://dbpedia.org/ontology/poleDriver",
    "predicate2_mention": "pole drivers",
    "type_uri": "http://dbpedia.org/ontology/GrandPrix",
    "type_mention": "GP",
    "entity1_uri": "http://dbpedia.org/resource/Damon_Hill",
    "entity1_mention": "damon hill",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2689",
    "question": "How many awards have royal designers for industry awardwinners got?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Designers_for_Industry> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/awards",
    "predicate1_mention": "awards",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Award",
    "type_mention": "awards",
    "entity1_uri": "http://dbpedia.org/resource/Royal_Designers_for_Industry",
    "entity1_mention": "royal designers for industry",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2691",
    "question": "List the relatives of the governor of Gabriel Slaughter?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gabriel_Slaughter> <http://dbpedia.org/ontology/governor> ?x . ?x <http://dbpedia.org/ontology/relation> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/governor",
    "predicate1_mention": "governor",
    "predicate2_uri": "http://dbpedia.org/ontology/relation",
    "predicate2_mention": "relatives",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Gabriel_Slaughter",
    "entity1_mention": "Gabriel Slaughter",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2692",
    "question": "What continent of the world has Baja California peninsula and also has WEPG in one of it's cities?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Baja_California_Peninsula> <http://dbpedia.org/ontology/location> ?uri. <http://dbpedia.org/resource/WEPG> <http://dbpedia.org/property/city> ?uri . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Continent>}",
    "sparql_id": "316",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/location",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/city",
    "predicate2_mention": "cities",
    "type_uri": "http://dbpedia.org/ontology/Continent",
    "type_mention": "continent",
    "entity1_uri": "http://dbpedia.org/resource/Baja_California_Peninsula",
    "entity1_mention": "Baja California peninsula",
    "entity2_uri": "http://dbpedia.org/resource/WEPG",
    "entity2_mention": "wepg"
},
{
    "id": "2694",
    "question": "How many games are released for virtual consoles?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Virtual_Console>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/computingPlatform",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/VideoGame",
    "predicate2_mention": "games",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Virtual_Console",
    "entity1_mention": "virtual consoles",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2696",
    "question": "To what political party do the politicians graduated from Somerville college, Oxford belong to?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Somerville_College,_Oxford> . ?x <http://dbpedia.org/ontology/party> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate1_mention": "graduated from",
    "predicate2_uri": "http://dbpedia.org/ontology/party",
    "predicate2_mention": "party",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "politicians",
    "entity1_uri": "http://dbpedia.org/resource/Somerville_College,_Oxford",
    "entity1_mention": "somerville college, oxford",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2697",
    "question": "Where did Wallace Dollase die?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wallace_Dollase> <http://dbpedia.org/ontology/deathPlace> ?uri  . }",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate1_mention": "die",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Wallace_Dollase",
    "entity1_mention": "wallace dollase",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2698",
    "question": "Where did the people canonized by John Paul II die?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/canonizedBy> <http://dbpedia.org/resource/Pope_John_Paul_II> . ?x <http://dbpedia.org/property/deathPlace> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/canonizedBy",
    "predicate1_mention": "canonized by",
    "predicate2_uri": "http://dbpedia.org/property/deathPlace",
    "predicate2_mention": "people",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Pope_John_Paul_II",
    "entity1_mention": "John Paul II",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2699",
    "question": "Where did the editor of Charlie Mensuel die ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charlie_Mensuel> <http://dbpedia.org/property/editor> ?x . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/editor",
    "predicate1_mention": "editor",
    "predicate2_uri": "http://dbpedia.org/property/placeOfDeath",
    "predicate2_mention": "die",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Charlie_Mensuel",
    "entity1_mention": "Charlie Mensuel",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2700",
    "question": "What is the alma mater of K. Terry Dornbush ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/K._Terry_Dornbush> <http://dbpedia.org/property/almaMater> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/almaMater",
    "predicate1_mention": "alma mater",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/K._Terry_Dornbush",
    "entity1_mention": "K. Terry Dornbush",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2702",
    "question": "Which country has the Carmel Winery and the Teperberg 1870 winery ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Carmel_Winery> <http://dbpedia.org/property/locationCountry> ?uri. <http://dbpedia.org/resource/Teperberg_1870> <http://dbpedia.org/property/locationCountry> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/locationCountry",
    "predicate1_mention": "country",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Carmel_Winery",
    "entity1_mention": "Carmel Winery",
    "entity2_uri": "http://dbpedia.org/resource/Teperberg_1870",
    "entity2_mention": "teperberg 1870"
},
{
    "id": "2704",
    "question": "Name the river whose source is located in Itasca State Park and mouth is located in Pilottown, Louisiana?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Itasca_State_Park> . ?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Pilottown,_Louisiana>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/sourceLocation",
    "predicate1_mention": "source is located",
    "predicate2_uri": "http://dbpedia.org/property/mouthLocation",
    "predicate2_mention": "mouth is located",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "river",
    "entity1_uri": "http://dbpedia.org/resource/Itasca_State_Park",
    "entity1_mention": "itasca state park",
    "entity2_uri": "http://dbpedia.org/resource/Pilottown,_Louisiana",
    "entity2_mention": "pilottown, louisiana"
},
{
    "id": "2705",
    "question": "What is the river which comes from Southend on Sea mountain?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Southend-on-Sea>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/mouthMountain",
    "predicate1_mention": "mountain",
    "predicate2_uri": "http://dbpedia.org/ontology/River",
    "predicate2_mention": "river",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Southend-on-Sea",
    "entity1_mention": "Southend on Sea",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2706",
    "question": "Where did Meg McGuffin graduated ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Meg_McGuffin> <http://dbpedia.org/ontology/education> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/education",
    "predicate1_mention": "graduated",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Meg_McGuffin",
    "entity1_mention": "Meg McGuffin",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2707",
    "question": "Where is the team of Abdel Boucker located ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Abdel_Bouckar> <http://dbpedia.org/property/team> ?x . ?x <http://dbpedia.org/ontology/location> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/team",
    "predicate1_mention": "team",
    "predicate2_uri": "http://dbpedia.org/ontology/location",
    "predicate2_mention": "located",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Abdel_Bouckar",
    "entity1_mention": "Abdel Boucker",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2710",
    "question": "Count the different religions practiced by people who are in the Malaysian and Chinese association.",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Malaysian_Chinese_Association> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/party",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religions",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Malaysian_Chinese_Association",
    "entity1_mention": "Malaysian and Chinese association",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2711",
    "question": "Name few companies where don berlin and michael sears have worked together?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Don_R._Berlin> <http://dbpedia.org/ontology/employer> ?uri. <http://dbpedia.org/resource/Michael_M._Sears> <http://dbpedia.org/ontology/employer> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/employer",
    "predicate1_mention": "worked",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Don_R._Berlin",
    "entity1_mention": "don berlin",
    "entity2_uri": "http://dbpedia.org/resource/Michael_M._Sears",
    "entity2_mention": "michael sears"
},
{
    "id": "2714",
    "question": "What is the mascot of the Royal Australian Air Force and Austin College?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Royal_Australian_Air_Force> <http://dbpedia.org/property/mascot> ?uri. <http://dbpedia.org/resource/Austin_College> <http://dbpedia.org/property/mascot> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/mascot",
    "predicate1_mention": "mascot",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Royal_Australian_Air_Force",
    "entity1_mention": "Royal Australian Air Force",
    "entity2_uri": "http://dbpedia.org/resource/Austin_College",
    "entity2_mention": "Austin College"
},
{
    "id": "2715",
    "question": "Who managed England national under-20 football team and Middlesbrough F.C.?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/managerclubs> <http://dbpedia.org/resource/England_national_under-20_football_team> . ?uri <http://dbpedia.org/ontology/managerClub> <http://dbpedia.org/resource/Middlesbrough_F.C.>  . }",
    "sparql_id": "8",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/managerclubs",
    "predicate1_mention": "managed",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/England_national_under-20_football_team",
    "entity1_mention": "England national under-20 football team",
    "entity2_uri": "http://dbpedia.org/resource/Middlesbrough_F.C.",
    "entity2_mention": "middlesbrough f.c."
},
{
    "id": "2716",
    "question": "What is the religion of the ethnic group to which Clara Ng belongs?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Clara_Ng> <http://dbpedia.org/ontology/ethnicity> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/ethnicity",
    "predicate1_mention": "ethnic",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religion",
    "type_uri": "http://dbpedia.org/ontology/EthnicGroup",
    "type_mention": "ethnic group",
    "entity1_uri": "http://dbpedia.org/resource/Clara_Ng",
    "entity1_mention": "clara ng",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2718",
    "question": "Was John of Damascus canonized by Anglican Communion?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/John_of_Damascus> <http://dbpedia.org/property/canonizedBy> <http://dbpedia.org/resource/Anglican_Communion> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/canonizedBy",
    "predicate1_mention": "canonized by",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/John_of_Damascus",
    "entity1_mention": "John of Damascus",
    "entity2_uri": "http://dbpedia.org/resource/Anglican_Communion",
    "entity2_mention": "Anglican Communion"
},
{
    "id": "2719",
    "question": "Who owns the horses which have won the Timeform award?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Timeform> . ?x <http://dbpedia.org/ontology/owner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/awards",
    "predicate1_mention": "award",
    "predicate2_uri": "http://dbpedia.org/ontology/owner",
    "predicate2_mention": "owns",
    "type_uri": "http://dbpedia.org/ontology/Horse",
    "type_mention": "horses",
    "entity1_uri": "http://dbpedia.org/resource/Timeform",
    "entity1_mention": "timeform",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2720",
    "question": "Which distributer of Bombay Sapphire also makes Grewy goose ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Grey_Goose_(vodka)> <http://dbpedia.org/property/manufacturer> ?uri. <http://dbpedia.org/resource/Bombay_Sapphire> <http://dbpedia.org/property/distributor> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/manufacturer",
    "predicate1_mention": "makes",
    "predicate2_uri": "http://dbpedia.org/property/distributor",
    "predicate2_mention": "distributer",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Grey_Goose_(vodka)",
    "entity1_mention": "Grewy goose",
    "entity2_uri": "http://dbpedia.org/resource/Bombay_Sapphire",
    "entity2_mention": "Bombay Sapphire"
},
{
    "id": "2721",
    "question": "Was George Cash in the western australian parliament?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/George_Cash> <http://dbpedia.org/property/parliament> <http://dbpedia.org/resource/Western_Australia> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/parliament",
    "predicate1_mention": "parliament",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/George_Cash",
    "entity1_mention": "george cash",
    "entity2_uri": "http://dbpedia.org/resource/Western_Australia",
    "entity2_mention": "western australian"
},
{
    "id": "2722",
    "question": "Name the TV show broadcasted by Fox and presented by Ryan Seacrest ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Ryan_Seacrest> . ?uri <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/presenter",
    "predicate1_mention": "presented",
    "predicate2_uri": "http://dbpedia.org/ontology/channel",
    "predicate2_mention": "broadcasted by",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "TV show",
    "entity1_uri": "http://dbpedia.org/resource/Ryan_Seacrest",
    "entity1_mention": "Ryan Seacrest",
    "entity2_uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company",
    "entity2_mention": "Fox"
},
{
    "id": "2723",
    "question": "Which university has affiliations to Graham Holdings and Kaplan, Inc.?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Graham_Holdings_Company> . ?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Kaplan,_Inc.> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/affiliations",
    "predicate1_mention": "affiliations",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/University",
    "type_mention": "university",
    "entity1_uri": "http://dbpedia.org/resource/Graham_Holdings_Company",
    "entity1_mention": "Graham Holdings",
    "entity2_uri": "http://dbpedia.org/resource/Kaplan,_Inc.",
    "entity2_mention": "kaplan, inc."
},
{
    "id": "2725",
    "question": "Name the person who was educated at Harvard-Westlake and won the Screen Actor Guild Life Achievement Award ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Harvard-Westlake_School> . ?uri <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate1_mention": "educated at",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "award",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "person",
    "entity1_uri": "http://dbpedia.org/resource/Harvard-Westlake_School",
    "entity1_mention": "harvard-westlake",
    "entity2_uri": "http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award",
    "entity2_mention": "Screen Actor Guild Life Achievement Award"
},
{
    "id": "2726",
    "question": "What is the place of birth of the badminton player who is the bronze medalist of Badminton at the 2012 Summer Olympics Women's doubles ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Badminton_at_the_2012_Summer_Olympics_\u2013_Women's_doubles> <http://dbpedia.org/ontology/bronzeMedalist> ?x . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BadmintonPlayer>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/bronzeMedalist",
    "predicate1_mention": "bronze medalist",
    "predicate2_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate2_mention": "place of birth",
    "type_uri": "http://dbpedia.org/ontology/BadmintonPlayer",
    "type_mention": "badminton player",
    "entity1_uri": "http://dbpedia.org/resource/Badminton_at_the_2012_Summer_Olympics_\u2013_Women's_doubles",
    "entity1_mention": "Badminton at the 2012 Summer Olympics Women's doubles",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2727",
    "question": "Where do bachelor of arts live?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Bachelor_of_Arts> . ?x <http://dbpedia.org/ontology/residence> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/almaMater",
    "predicate1_mention": "bachelor",
    "predicate2_uri": "http://dbpedia.org/ontology/residence",
    "predicate2_mention": "live",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bachelor_of_Arts",
    "entity1_mention": "bachelor of arts",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2728",
    "question": "How many people live in the Beverly Hills, California?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Beverly_Hills,_California>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/residence",
    "predicate1_mention": "live in",
    "predicate2_uri": "http://dbpedia.org/ontology/Person",
    "predicate2_mention": "people",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Beverly_Hills,_California",
    "entity1_mention": "Beverly Hills, California",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2732",
    "question": "What is the layout of Subaru Legacy (second generation) ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Subaru_Legacy_(second_generation)> <http://dbpedia.org/ontology/layout> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/layout",
    "predicate1_mention": "layout",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Subaru_Legacy_(second_generation)",
    "entity1_mention": "Subaru Legacy (second generation)",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2736",
    "question": "What is the deathplace of the Anatoly Kharlampiyev which is also the death place of  Lyudmila Buldakova?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Anatoly_Kharlampiyev> <http://dbpedia.org/property/deathPlace> ?uri. <http://dbpedia.org/resource/Lyudmila_Buldakova> <http://dbpedia.org/property/deathPlace> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/deathPlace",
    "predicate1_mention": "deathplace",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Anatoly_Kharlampiyev",
    "entity1_mention": "Anatoly Kharlampiyev",
    "entity2_uri": "http://dbpedia.org/resource/Lyudmila_Buldakova",
    "entity2_mention": "Lyudmila Buldakova"
},
{
    "id": "2737",
    "question": "Who are the people who died in a place architected by Jens Jensen",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Jens_Jensen_(landscape_architect)> . ?uri <http://dbpedia.org/ontology/deathPlace> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/architect",
    "predicate1_mention": "architected",
    "predicate2_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate2_mention": "died",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Jens_Jensen_(landscape_architect)",
    "entity1_mention": "Jens Jensen",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2740",
    "question": "What are the professions of Frederick Frelinghuysen (general) ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Frederick_Frelinghuysen_(general)> <http://dbpedia.org/property/occupation> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/occupation",
    "predicate1_mention": "professions",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Frederick_Frelinghuysen_(general)",
    "entity1_mention": "Frederick Frelinghuysen (general)",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2741",
    "question": "What tv show is created by Brian Graden?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/developer> <http://dbpedia.org/resource/Brian_Graden>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/developer",
    "predicate1_mention": "created by",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "tv show",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Brian_Graden",
    "entity1_mention": "Brian Graden",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2742",
    "question": "List the starring of the movies whose label is T-Series ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/T-Series> . ?x <http://dbpedia.org/property/starring> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/label",
    "predicate1_mention": "label",
    "predicate2_uri": "http://dbpedia.org/property/starring",
    "predicate2_mention": "starring",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/T-Series",
    "entity1_mention": "t-series",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2743",
    "question": "Which operator of ganz UV is also the nationality of the Gza Horvth ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ganz_UV> <http://dbpedia.org/ontology/operator> ?uri. <http://dbpedia.org/resource/G\u00e9za_Horv\u00e1th> <http://dbpedia.org/ontology/nationality> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/operator",
    "predicate1_mention": "operator",
    "predicate2_uri": "http://dbpedia.org/ontology/nationality",
    "predicate2_mention": "nationality",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ganz_UV",
    "entity1_mention": "ganz uv",
    "entity2_uri": "http://dbpedia.org/resource/G\u00e9za_Horv\u00e1th",
    "entity2_mention": "Gza Horvth"
},
{
    "id": "2746",
    "question": "What is the ideology of Palang Dharma Party ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Palang_Dharma_Party> <http://dbpedia.org/ontology/ideology> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/ideology",
    "predicate1_mention": "ideology",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Palang_Dharma_Party",
    "entity1_mention": "palang dharma party",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2748",
    "question": "Name the common record label of I pray on Christmas and Next Thing ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/I_Pray_on_Christmas> <http://dbpedia.org/property/label> ?uri. <http://dbpedia.org/resource/Next_Thing> <http://dbpedia.org/ontology/recordLabel> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/label",
    "predicate1_mention": "label",
    "predicate2_uri": "http://dbpedia.org/ontology/recordLabel",
    "predicate2_mention": "record label",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/I_Pray_on_Christmas",
    "entity1_mention": "I pray on Christmas",
    "entity2_uri": "http://dbpedia.org/resource/Next_Thing",
    "entity2_mention": "Next Thing"
},
{
    "id": "2749",
    "question": "Who won the general elections in India in 2009, and had also won the AP elections in 2004 ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)> <http://dbpedia.org/ontology/affiliation> ?uri. <http://dbpedia.org/resource/Indian_general_election,_2009> <http://dbpedia.org/ontology/affiliation> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/affiliation",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)",
    "entity1_mention": "the AP elections in 2004",
    "entity2_uri": "http://dbpedia.org/resource/Indian_general_election,_2009",
    "entity2_mention": "the general elections in India in 2009"
},
{
    "id": "2750",
    "question": "What is the common place of study for jack McGregor and Philip W. Pillsbury ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jack_McGregor> <http://dbpedia.org/ontology/education> ?uri. <http://dbpedia.org/resource/Philip_W._Pillsbury> <http://dbpedia.org/property/education> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/education",
    "predicate1_mention": "place of",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jack_McGregor",
    "entity1_mention": "jack McGregor",
    "entity2_uri": "http://dbpedia.org/resource/Philip_W._Pillsbury",
    "entity2_mention": "Philip W. Pillsbury"
},
{
    "id": "2751",
    "question": "Is Ian Thorpe the bronze medalist of Swimming at the 2004 Summer Olympics Men's 100 metre freestyle?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Swimming_at_the_2004_Summer_Olympics_\u2013_Men's_100_metre_freestyle> <http://dbpedia.org/ontology/bronzeMedalist> <http://dbpedia.org/resource/Ian_Thorpe> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/bronzeMedalist",
    "predicate1_mention": "bronze medalist",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Swimming_at_the_2004_Summer_Olympics_\u2013_Men's_100_metre_freestyle",
    "entity1_mention": "Swimming at the 2004 Summer Olympics Men's 100 metre freestyle",
    "entity2_uri": "http://dbpedia.org/resource/Ian_Thorpe",
    "entity2_mention": "Ian Thorpe"
},
{
    "id": "2752",
    "question": "How many cities are around the sea in which the ionian sea flows?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Ionian_Sea> <http://dbpedia.org/ontology/outflow> ?x . ?x <http://dbpedia.org/property/cities> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
    "sparql_id": "403",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/outflow",
    "predicate1_mention": "flows",
    "predicate2_uri": "http://dbpedia.org/property/cities",
    "predicate2_mention": "cities",
    "type_uri": "http://dbpedia.org/ontology/Sea",
    "type_mention": "sea",
    "entity1_uri": "http://dbpedia.org/resource/Ionian_Sea",
    "entity1_mention": "ionian sea",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2753",
    "question": "Where can I find people whose hometown is Ann Arbour in Michigan?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/homeTown> <http://dbpedia.org/resource/Ann_Arbor,_Michigan> . ?x <http://dbpedia.org/ontology/residence> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/homeTown",
    "predicate1_mention": "hometown",
    "predicate2_uri": "http://dbpedia.org/ontology/residence",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Ann_Arbor,_Michigan",
    "entity1_mention": "Ann Arbour in Michigan",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2754",
    "question": "Which television show's theme music composer is Gary Portnoy and subsequent work is Frasier?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Gary_Portnoy> . ?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Frasier>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/themeMusicComposer",
    "predicate1_mention": "theme music composer",
    "predicate2_uri": "http://dbpedia.org/ontology/subsequentWork",
    "predicate2_mention": "subsequent work",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "television show's",
    "entity1_uri": "http://dbpedia.org/resource/Gary_Portnoy",
    "entity1_mention": "Gary Portnoy",
    "entity2_uri": "http://dbpedia.org/resource/Frasier",
    "entity2_mention": "frasier"
},
{
    "id": "2755",
    "question": "Name the licensee of the TV station whose one of the licensee is Incorporation ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/licensee> <http://dbpedia.org/resource/Incorporation_(business)> . ?x <http://dbpedia.org/property/licensee> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionStation>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/licensee",
    "predicate1_mention": "licensee",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/TelevisionStation",
    "type_mention": "TV station",
    "entity1_uri": "http://dbpedia.org/resource/Incorporation_(business)",
    "entity1_mention": "incorporation",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2757",
    "question": "Which awards did the parents of Anna Bergman win ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Anna_Bergman> <http://dbpedia.org/ontology/parent> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/parent",
    "predicate1_mention": "parents",
    "predicate2_uri": "http://dbpedia.org/property/awards",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Anna_Bergman",
    "entity1_mention": "Anna Bergman",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2758",
    "question": "Where did the wrestler die who was billed in Norman, Oklahoma?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/billed> <http://dbpedia.org/resource/Norman,_Oklahoma> . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Wrestler>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/billed",
    "predicate1_mention": "billed",
    "predicate2_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate2_mention": "die",
    "type_uri": "http://dbpedia.org/ontology/Wrestler",
    "type_mention": "wrestler",
    "entity1_uri": "http://dbpedia.org/resource/Norman,_Oklahoma",
    "entity1_mention": "Norman, Oklahoma",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2759",
    "question": "How many different genres of games can I find which are compatible with the Commodore 64?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Commodore_64> . ?x <http://dbpedia.org/property/genre> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/computingPlatform",
    "predicate1_mention": "compatible",
    "predicate2_uri": "http://dbpedia.org/property/genre",
    "predicate2_mention": "genres",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Commodore_64",
    "entity1_mention": "commodore 64",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2760",
    "question": "Where did the relatives of David Hume study?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/David_Hume> . ?x <http://dbpedia.org/property/education> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/relative",
    "predicate1_mention": "relatives",
    "predicate2_uri": "http://dbpedia.org/property/education",
    "predicate2_mention": "study",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/David_Hume",
    "entity1_mention": "david hume",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2761",
    "question": "Which producer of Boeing F/A has Dennis Muilenburg as an important person ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet> . ?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Dennis_Muilenburg>  . }",
    "sparql_id": "8",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/product",
    "predicate1_mention": "producer",
    "predicate2_uri": "http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet",
    "predicate2_mention": "Boeing F/A",
    "type_uri": "http://dbpedia.org/property/keyPeople",
    "type_mention": "person",
    "entity1_uri": "http://dbpedia.org/resource/Dennis_Muilenburg",
    "entity1_mention": "Dennis Muilenburg",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2763",
    "question": "Does Lionel Messi play in the Argentina National Football Team?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Lionel_Messi> <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Argentina_national_football_team> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/nationalteam",
    "predicate1_mention": "national football team",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lionel_Messi",
    "entity1_mention": "lionel messi",
    "entity2_uri": "http://dbpedia.org/resource/Argentina_national_football_team",
    "entity2_mention": "argentina national football team"
},
{
    "id": "2764",
    "question": "Does the owyhee river flow into oregon?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Owyhee_River> <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Oregon> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/mouthMountain",
    "predicate1_mention": "flow into",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Owyhee_River",
    "entity1_mention": "owyhee river",
    "entity2_uri": "http://dbpedia.org/resource/Oregon",
    "entity2_mention": "oregon"
},
{
    "id": "2765",
    "question": "Was X the Unknown edited by James needs?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/X_the_Unknown> <http://dbpedia.org/ontology/editing> <http://dbpedia.org/resource/James_Needs> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/editing",
    "predicate1_mention": "edited",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/X_the_Unknown",
    "entity1_mention": "X the Unknown",
    "entity2_uri": "http://dbpedia.org/resource/James_Needs",
    "entity2_mention": "James needs"
},
{
    "id": "2767",
    "question": "Martin AN/GSG-5 is a part of the building in which city?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/part> <http://dbpedia.org/resource/Martin_AN/GSG-5_Battery_Integration_and_Radar_Display_Equipment> . ?x <http://dbpedia.org/property/district> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/part",
    "predicate1_mention": "part",
    "predicate2_uri": "http://dbpedia.org/property/district",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Building",
    "type_mention": "building",
    "entity1_uri": "http://dbpedia.org/resource/Martin_AN/GSG-5_Battery_Integration_and_Radar_Display_Equipment",
    "entity1_mention": "an/gsg-5",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2768",
    "question": "Who is the president of United World College of Costa Rica ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_World_College_of_Costa_Rica> <http://dbpedia.org/ontology/president> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/president",
    "predicate1_mention": "president",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_World_College_of_Costa_Rica",
    "entity1_mention": "United World College of Costa Rica",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2769",
    "question": "What party was in majority of Fourth Legislative Assembly of Delhi?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fourth_Legislative_Assembly_of_Delhi> <http://dbpedia.org/property/party> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/party",
    "predicate1_mention": "party",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Fourth_Legislative_Assembly_of_Delhi",
    "entity1_mention": "Fourth Legislative Assembly of Delhi",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2770",
    "question": "What is the venue of Indy PopCon ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Indy_PopCon> <http://dbpedia.org/property/venue> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/venue",
    "predicate1_mention": "venue",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Indy_PopCon",
    "entity1_mention": "Indy PopCon",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2771",
    "question": "Which non fictional subject of Thud is the athletics of PATTS College of Aeronautics ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thud!> <http://dbpedia.org/ontology/nonFictionSubject> ?uri. <http://dbpedia.org/resource/PATTS_College_of_Aeronautics> <http://dbpedia.org/property/athletics> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/nonFictionSubject",
    "predicate1_mention": "non fictional subject",
    "predicate2_uri": "http://dbpedia.org/property/athletics",
    "predicate2_mention": "athletics",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Thud!",
    "entity1_mention": "thud",
    "entity2_uri": "http://dbpedia.org/resource/PATTS_College_of_Aeronautics",
    "entity2_mention": "PATTS College of Aeronautics"
},
{
    "id": "2772",
    "question": "Where is the birthplace of Ferrel Harris ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ferrel_Harris> <http://dbpedia.org/property/birthplace> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/birthplace",
    "predicate1_mention": "birthplace",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ferrel_Harris",
    "entity1_mention": "Ferrel Harris",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2775",
    "question": "What are the airlines whose hub airport is Los Angeles International Airport?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/hubAirport> <http://dbpedia.org/resource/Los_Angeles_International_Airport>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/hubAirport",
    "predicate1_mention": "hub airport",
    "predicate2_uri": "http://dbpedia.org/ontology/Airline",
    "predicate2_mention": "airlines",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Los_Angeles_International_Airport",
    "entity1_mention": "Los Angeles International Airport",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2776",
    "question": "Count all the books written by an author buried in the Convent of Barefoot Trinitarians?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Convent_of_the_Barefoot_Trinitarians> . ?uri <http://dbpedia.org/ontology/author> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/restingPlace",
    "predicate1_mention": "trinitarians",
    "predicate2_uri": "http://dbpedia.org/ontology/author",
    "predicate2_mention": "author",
    "type_uri": "http://dbpedia.org/ontology/Book",
    "type_mention": "books",
    "entity1_uri": "http://dbpedia.org/resource/Convent_of_the_Barefoot_Trinitarians",
    "entity1_mention": "Convent of Barefoot Trinitarians",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2778",
    "question": "Who were some governmental heads in Nazi Germany?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/jurisdiction> <http://dbpedia.org/resource/Nazi_Germany> . ?x <http://dbpedia.org/ontology/leader> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/jurisdiction",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/leader",
    "predicate2_mention": "heads",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Nazi_Germany",
    "entity1_mention": "Nazi Germany",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2780",
    "question": "What are some TV shows whose voice actors are from Truckee, California, US?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Truckee,_California> . ?uri <http://dbpedia.org/property/voices> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/birthPlace",
    "predicate1_mention": "are from",
    "predicate2_uri": "http://dbpedia.org/property/voices",
    "predicate2_mention": "voice",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "TV shows",
    "entity1_uri": "http://dbpedia.org/resource/Truckee,_California",
    "entity1_mention": "Truckee, California",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2781",
    "question": "What is the total number of office holders who preceded the people working under president bill clinton?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/president> <http://dbpedia.org/resource/Bill_Clinton> . ?uri <http://dbpedia.org/property/successor> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/president",
    "predicate1_mention": "president",
    "predicate2_uri": "http://dbpedia.org/property/successor",
    "predicate2_mention": "preceded",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "office holders",
    "entity1_uri": "http://dbpedia.org/resource/Bill_Clinton",
    "entity1_mention": "bill clinton",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2784",
    "question": "How many people are buried in the Winchester Cathedral?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Winchester_Cathedral>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/restingPlace",
    "predicate1_mention": "buried in",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Winchester_Cathedral",
    "entity1_mention": "winchester cathedral",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2785",
    "question": "What is the colour of Red Marauder ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Red_Marauder> <http://dbpedia.org/ontology/colour> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/colour",
    "predicate1_mention": "colour",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Red_Marauder",
    "entity1_mention": "Red Marauder",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2787",
    "question": "Is wizard rock inspired from Harry potter?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Wizard_rock> <http://dbpedia.org/ontology/stylisticOrigin> <http://dbpedia.org/resource/Harry_Potter> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/stylisticOrigin",
    "predicate1_mention": "is",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Wizard_rock",
    "entity1_mention": "wizard rock",
    "entity2_uri": "http://dbpedia.org/resource/Harry_Potter",
    "entity2_mention": "Harry potter"
},
{
    "id": "2788",
    "question": "What is the route start of Capitol 400 ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Capitol_400> <http://dbpedia.org/ontology/routeStart> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/routeStart",
    "predicate1_mention": "route start",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Capitol_400",
    "entity1_mention": "capitol 400",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2789",
    "question": "Who made the Y block engine and the SHO V8 engine?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Y-block_engine> <http://dbpedia.org/ontology/manufacturer> ?uri. <http://dbpedia.org/resource/Ford_SHO_V8_engine> <http://dbpedia.org/ontology/manufacturer> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate1_mention": "made",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ford_Y-block_engine",
    "entity1_mention": "the Y block engine",
    "entity2_uri": "http://dbpedia.org/resource/Ford_SHO_V8_engine",
    "entity2_mention": "SHO V8 engine"
},
{
    "id": "2791",
    "question": "With which musical artist is the music group which sung Mind Blowin' related to ?  ",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mind_Blowin'_(Smooth_song)> <http://dbpedia.org/ontology/musicalArtist> ?x . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/musicalArtist",
    "predicate1_mention": "musical artist",
    "predicate2_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
    "predicate2_mention": "musical artist",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mind_Blowin'_(Smooth_song)",
    "entity1_mention": "sung Mind Blowin",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2792",
    "question": "How many subjects have been covered in fantasy novels?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Fantasy> . ?x <http://dbpedia.org/ontology/nonFictionSubject> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/literaryGenre",
    "predicate1_mention": "been",
    "predicate2_uri": "http://dbpedia.org/ontology/nonFictionSubject",
    "predicate2_mention": "subjects",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Fantasy",
    "entity1_mention": "fantasy",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2793",
    "question": "List the universities with athletics NCAA Division I Football Bowl Subdivision ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/athletics> <http://dbpedia.org/resource/NCAA_Division_I_Football_Bowl_Subdivision>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/athletics",
    "predicate1_mention": "athletics",
    "predicate2_uri": "http://dbpedia.org/ontology/University",
    "predicate2_mention": "universities",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/NCAA_Division_I_Football_Bowl_Subdivision",
    "entity1_mention": "NCAA Division I Football Bowl Subdivision",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2794",
    "question": "In which races does Coneygree compete?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Coneygree> <http://dbpedia.org/property/race> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/race",
    "predicate1_mention": "races",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Coneygree",
    "entity1_mention": "coneygree",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2795",
    "question": "Who was the designer of john madden Football '92 ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Madden_Football_'92> <http://dbpedia.org/property/designer> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/designer",
    "predicate1_mention": "designer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/John_Madden_Football_'92",
    "entity1_mention": "john madden Football '92",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2796",
    "question": "Which ancient country had capital as Nicomedia and History of Trier?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Nicomedia> . ?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/History_of_Trier> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/capital",
    "predicate1_mention": "capital",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Country",
    "type_mention": "country",
    "entity1_uri": "http://dbpedia.org/resource/Nicomedia",
    "entity1_mention": "nicomedia",
    "entity2_uri": "http://dbpedia.org/resource/History_of_Trier",
    "entity2_mention": "History of Trier"
},
{
    "id": "2798",
    "question": "Which teams participate in the football seasons headed by Patricia Amorim?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Patr\u00edcia_Amorim> . ?x <http://dbpedia.org/property/name> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/chairman",
    "predicate1_mention": "headed by",
    "predicate2_uri": "http://dbpedia.org/property/name",
    "predicate2_mention": "teams",
    "type_uri": "http://dbpedia.org/ontology/SportsSeason",
    "type_mention": "seasons",
    "entity1_uri": "http://dbpedia.org/resource/Patr\u00edcia_Amorim",
    "entity1_mention": "Patricia Amorim",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2799",
    "question": "Which sports are played in schools founded by Fr Almeida?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Fr._Almeida> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/founder",
    "predicate1_mention": "founded",
    "predicate2_uri": "http://dbpedia.org/ontology/sport",
    "predicate2_mention": "sports",
    "type_uri": "http://dbpedia.org/ontology/School",
    "type_mention": "schools",
    "entity1_uri": "http://dbpedia.org/resource/Fr._Almeida",
    "entity1_mention": "Fr Almeida",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2800",
    "question": "In which wars did Percy Fitzwallace fight?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Percy_Fitzwallace> <http://dbpedia.org/property/battles> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/battles",
    "predicate1_mention": "wars",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Percy_Fitzwallace",
    "entity1_mention": "Percy Fitzwallace",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2801",
    "question": "In which state is the alma mater of Ben Ysursa located ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ben_Ysursa> <http://dbpedia.org/property/almaMater> ?x . ?x <http://dbpedia.org/ontology/state> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/almaMater",
    "predicate1_mention": "alma mater",
    "predicate2_uri": "http://dbpedia.org/ontology/state",
    "predicate2_mention": "state",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ben_Ysursa",
    "entity1_mention": "Ben Ysursa",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2802",
    "question": "Players from how many teams have participated in the National Hockey League?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/National_Hockey_League> . ?x <http://dbpedia.org/ontology/team> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/league",
    "predicate1_mention": "league",
    "predicate2_uri": "http://dbpedia.org/ontology/team",
    "predicate2_mention": "teams",
    "type_uri": "http://dbpedia.org/ontology/SportsTeam",
    "type_mention": "teams",
    "entity1_uri": "http://dbpedia.org/resource/National_Hockey_League",
    "entity1_mention": "national hockey league",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2803",
    "question": "Who are some US colonels?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Colonel_(United_States)>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/rank",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Colonel_(United_States)",
    "entity1_mention": "US colonels",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2804",
    "question": "How many places were ruled by Elizabeth II?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Elizabeth_II>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/leaderName",
    "predicate1_mention": "ruled",
    "predicate2_uri": "http://dbpedia.org/ontology/Place",
    "predicate2_mention": "places",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Elizabeth_II",
    "entity1_mention": " elizabeth ii",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2805",
    "question": "Who is on the board of Kate Spade and company?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Kate_Spade_&_Company>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/board",
    "predicate1_mention": "board",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kate_Spade_&_Company",
    "entity1_mention": "Kate Spade and company",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2807",
    "question": "What is the rank of Julius C. Burrows politically?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Julius_C._Burrows> <http://dbpedia.org/property/order> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/order",
    "predicate1_mention": "rank",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Julius_C._Burrows",
    "entity1_mention": "Julius C. Burrows",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2809",
    "question": "What is the death location of the scientist who is the known authority of Hallopus ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hallopus> <http://dbpedia.org/ontology/binomialAuthority> ?x . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/binomialAuthority",
    "predicate1_mention": "authority",
    "predicate2_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate2_mention": "death",
    "type_uri": "http://dbpedia.org/ontology/Scientist",
    "type_mention": "scientist",
    "entity1_uri": "http://dbpedia.org/resource/Hallopus",
    "entity1_mention": "hallopus",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2810",
    "question": "Artists trained at art students league NY are buried where?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/training> <http://dbpedia.org/resource/Art_Students_League_of_New_York> . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/training",
    "predicate1_mention": "buried",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Artist",
    "type_mention": "artists",
    "entity1_uri": "http://dbpedia.org/resource/Art_Students_League_of_New_York",
    "entity1_mention": "art students league NY",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2812",
    "question": "Who are the people who played for San Francisco 49ers?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/San_Francisco_49ers>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/team",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/San_Francisco_49ers",
    "entity1_mention": "San Francisco 49ers",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2813",
    "question": "What is the Nickname of the school where Jeff Hornacek studied  ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jeff_Hornacek> <http://dbpedia.org/property/highschool> ?x . ?x <http://dbpedia.org/property/nickname> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/highschool",
    "predicate1_mention": "school",
    "predicate2_uri": "http://dbpedia.org/property/nickname",
    "predicate2_mention": "nickname",
    "type_uri": "http://dbpedia.org/ontology/School",
    "type_mention": "school",
    "entity1_uri": "http://dbpedia.org/resource/Jeff_Hornacek",
    "entity1_mention": "Jeff Hornacek",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2815",
    "question": "Which country of Montaas Mayas Chiquibul is the birth place of Jos Bernardo Escobar?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Monta\u00f1as_Mayas_Chiquibul> <http://dbpedia.org/property/country> ?uri. <http://dbpedia.org/resource/Jos\u00e9_Bernardo_Escobar> <http://dbpedia.org/property/birthPlace> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/country",
    "predicate1_mention": "country",
    "predicate2_uri": "http://dbpedia.org/property/birthPlace",
    "predicate2_mention": "birth place",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Monta\u00f1as_Mayas_Chiquibul",
    "entity1_mention": "Montaas Mayas Chiquibul",
    "entity2_uri": "http://dbpedia.org/resource/Jos\u00e9_Bernardo_Escobar",
    "entity2_mention": "Jos Bernardo Escobar"
},
{
    "id": "2817",
    "question": "Name all the doctoral student of the scientist who also supervised Mary Ainsworth ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Mary_Ainsworth> . ?x <http://dbpedia.org/property/doctoralStudents> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/doctoralStudents",
    "predicate1_mention": "doctoral student",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Scientist",
    "type_mention": "scientist",
    "entity1_uri": "http://dbpedia.org/resource/Mary_Ainsworth",
    "entity1_mention": "Mary Ainsworth",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2818",
    "question": "Who was in youth clubs of FC Barcelona and Newell's Old Boys?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/youthclubs> <http://dbpedia.org/resource/FC_Barcelona> . ?uri <http://dbpedia.org/property/youthclubs> <http://dbpedia.org/resource/Newell's_Old_Boys> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/youthclubs",
    "predicate1_mention": "youth clubs",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/FC_Barcelona",
    "entity1_mention": "FC Barcelona",
    "entity2_uri": "http://dbpedia.org/resource/Newell's_Old_Boys",
    "entity2_mention": "Newell's Old Boys"
},
{
    "id": "2819",
    "question": "Which river's mouth is located in Gulf of Mexico and has source location as Itasca State Park ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Gulf_of_Mexico> . ?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Itasca_State_Park>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/riverMouth",
    "predicate1_mention": "river's mouth",
    "predicate2_uri": "http://dbpedia.org/property/sourceLocation",
    "predicate2_mention": "source location",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "river's",
    "entity1_uri": "http://dbpedia.org/resource/Gulf_of_Mexico",
    "entity1_mention": "Gulf of Mexico",
    "entity2_uri": "http://dbpedia.org/resource/Itasca_State_Park",
    "entity2_mention": "itasca state park"
},
{
    "id": "2820",
    "question": "Whose youth clubs used to participate in Argentine Primera Division?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/Argentine_Primera_Divisi\u00f3n> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/league",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/youthclubs",
    "predicate2_mention": "youth clubs",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Argentine_Primera_Divisi\u00f3n",
    "entity1_mention": "Argentine Primera Division",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2821",
    "question": "Which prime ministers were served by the governor who appointed Murray Gleeson?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Murray_Gleeson> <http://dbpedia.org/ontology/appointer> ?x . ?x <http://dbpedia.org/ontology/primeMinister> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/appointer",
    "predicate1_mention": "appointed",
    "predicate2_uri": "http://dbpedia.org/ontology/primeMinister",
    "predicate2_mention": "prime ministers",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Murray_Gleeson",
    "entity1_mention": "Murray Gleeson",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2822",
    "question": "What are the movies whose music composer is Akira Ifukube?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Akira_Ifukube>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/musicComposer",
    "predicate1_mention": "music composer",
    "predicate2_uri": "http://dbpedia.org/ontology/Film",
    "predicate2_mention": "movies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Akira_Ifukube",
    "entity1_mention": "Akira Ifukube",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2823",
    "question": "Which adminstrative region of Lawrence F. Cafero is also the resting place of Samuel Keeler ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lawrence_F._Cafero> <http://dbpedia.org/ontology/region> ?uri. <http://dbpedia.org/resource/Samuel_Keeler> <http://dbpedia.org/ontology/restingPlace> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/region",
    "predicate1_mention": "region",
    "predicate2_uri": "http://dbpedia.org/ontology/restingPlace",
    "predicate2_mention": "resting place",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lawrence_F._Cafero",
    "entity1_mention": "Lawrence F. Cafero",
    "entity2_uri": "http://dbpedia.org/resource/Samuel_Keeler",
    "entity2_mention": "samuel keeler"
},
{
    "id": "2825",
    "question": "What is the mouth mountain of Current River ( Missouri ) ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Current_River_(Missouri)> <http://dbpedia.org/ontology/mouthMountain> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/mouthMountain",
    "predicate1_mention": "mouth mountain",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Current_River_(Missouri)",
    "entity1_mention": "Current River ( Missouri )",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2826",
    "question": "Who all did their high school in Denbigh high School?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/highSchool> <http://dbpedia.org/resource/Denbigh_High_School_(Newport_News,_Virginia)> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/highSchool",
    "predicate1_mention": "high school",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Denbigh_High_School_(Newport_News,_Virginia)",
    "entity1_mention": "Denbigh high School?",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2827",
    "question": "In which part of the world will I find Kim Sawchuk and Vuelta Mexico Telmex?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kim_Sawchuk> <http://dbpedia.org/property/region> ?uri. <http://dbpedia.org/resource/Vuelta_Mexico_Telmex> <http://dbpedia.org/property/region> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/region",
    "predicate1_mention": "part of the world",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kim_Sawchuk",
    "entity1_mention": "Kim Sawchuk",
    "entity2_uri": "http://dbpedia.org/resource/Vuelta_Mexico_Telmex",
    "entity2_mention": "Vuelta Mexico Telmex"
},
{
    "id": "2828",
    "question": "List everything written in languages developed by EXperimental Computing Facility?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/EXperimental_Computing_Facility> . ?uri <http://dbpedia.org/property/programmingLanguage> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/author",
    "predicate1_mention": "facility",
    "predicate2_uri": "http://dbpedia.org/property/programmingLanguage",
    "predicate2_mention": "languages",
    "type_uri": "http://dbpedia.org/ontology/Work",
    "type_mention": "written",
    "entity1_uri": "http://dbpedia.org/resource/EXperimental_Computing_Facility",
    "entity1_mention": "experimental computing facility",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2829",
    "question": "Who is the singer of the album which has a song Me and My arrow ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Me_and_My_Arrow> <http://dbpedia.org/ontology/album> ?x . ?x <http://dbpedia.org/property/narrated> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/album",
    "predicate1_mention": "album",
    "predicate2_uri": "http://dbpedia.org/property/narrated",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Album",
    "type_mention": "album",
    "entity1_uri": "http://dbpedia.org/resource/Me_and_My_Arrow",
    "entity1_mention": "Me and My arrow",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2830",
    "question": "Is Azerbaijan the membership of European Go Federation?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/European_Go_Federation> <http://dbpedia.org/property/membership> <http://dbpedia.org/resource/Azerbaijan> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/membership",
    "predicate1_mention": "membership",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/European_Go_Federation",
    "entity1_mention": "European Go Federation",
    "entity2_uri": "http://dbpedia.org/resource/Azerbaijan",
    "entity2_mention": "azerbaijan"
},
{
    "id": "2833",
    "question": "What is the religious affiliation of Hong Kong Taoist Association Tang Hin Memorial Secondary School ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hong_Kong_Taoist_Association_Tang_Hin_Memorial_Secondary_School> <http://dbpedia.org/property/religiousAffiliation> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/religiousAffiliation",
    "predicate1_mention": "religious affiliation",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hong_Kong_Taoist_Association_Tang_Hin_Memorial_Secondary_School",
    "entity1_mention": "Hong Kong Taoist Association Tang Hin Memorial Secondary School",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2834",
    "question": "Did Joe Namath did his highschool in Beaver Falls High School?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Joe_Namath> <http://dbpedia.org/property/highSchool> <http://dbpedia.org/resource/Beaver_Falls_High_School> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/highSchool",
    "predicate1_mention": "highschool",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Joe_Namath",
    "entity1_mention": "Joe Namath",
    "entity2_uri": "http://dbpedia.org/resource/Beaver_Falls_High_School",
    "entity2_mention": "Beaver Falls High School"
},
{
    "id": "2835",
    "question": "Which work is both Neil Cross and Lars Pearson both known for ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Neil_Cross> <http://dbpedia.org/ontology/notableWork> ?uri. <http://dbpedia.org/resource/Lars_Pearson> <http://dbpedia.org/ontology/notableWork> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/notableWork",
    "predicate1_mention": "work",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Neil_Cross",
    "entity1_mention": "Neil Cross",
    "entity2_uri": "http://dbpedia.org/resource/Lars_Pearson",
    "entity2_mention": "Lars Pearson"
},
{
    "id": "2836",
    "question": "What are some non fiction subjects dealt with in fantasy novels?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Fantasy> . ?x <http://dbpedia.org/ontology/nonFictionSubject> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/literaryGenre",
    "predicate1_mention": "subjects dealt with",
    "predicate2_uri": "http://dbpedia.org/ontology/nonFictionSubject",
    "predicate2_mention": "non fiction subjects",
    "type_uri": "http://dbpedia.org/ontology/Book",
    "type_mention": "novels",
    "entity1_uri": "http://dbpedia.org/resource/Fantasy",
    "entity1_mention": "fantasy",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2837",
    "question": "Which predecessor of the PlayStation 4 is also the developer of Oddworld: Munch's Oddysee?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/PlayStation_4> <http://dbpedia.org/property/predecessor> ?uri. <http://dbpedia.org/resource/Oddworld:_Munch's_Oddysee> <http://dbpedia.org/ontology/developer> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/predecessor",
    "predicate1_mention": "predecessor",
    "predicate2_uri": "http://dbpedia.org/ontology/developer",
    "predicate2_mention": "developer",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/PlayStation_4",
    "entity1_mention": "PlayStation 4",
    "entity2_uri": "http://dbpedia.org/resource/Oddworld:_Munch's_Oddysee",
    "entity2_mention": "Oddworld: Munch's Oddysee"
},
{
    "id": "2840",
    "question": "Which awards have been given to immunologists?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/fields> <http://dbpedia.org/resource/Immunology> . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/fields",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Immunology",
    "entity1_mention": "immunologists",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2841",
    "question": "What are the awards won by the producer of Puss in Boots (film)?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Puss_in_Boots_(1922_film)> <http://dbpedia.org/ontology/producer> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/producer",
    "predicate1_mention": "producer",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Puss_in_Boots_(1922_film)",
    "entity1_mention": "Puss in Boots (film)",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2842",
    "question": "Name the college of the Allama Matthews which also has affiliation with  Monroe Carell Jr. Children's Hospital at Vanderbilt",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Allama_Matthews> <http://dbpedia.org/ontology/college> ?uri. <http://dbpedia.org/resource/Monroe_Carell_Jr._Children's_Hospital_at_Vanderbilt> <http://dbpedia.org/property/affiliation> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/college",
    "predicate1_mention": "college",
    "predicate2_uri": "http://dbpedia.org/property/affiliation",
    "predicate2_mention": "affiliation",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Allama_Matthews",
    "entity1_mention": "Allama Matthews",
    "entity2_uri": "http://dbpedia.org/resource/Monroe_Carell_Jr._Children's_Hospital_at_Vanderbilt",
    "entity2_mention": "Monroe Carell Jr. Children's Hospital at Vanderbilt"
},
{
    "id": "2843",
    "question": "Name the debut team of Butch Metzger ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Butch_Metzger> <http://dbpedia.org/ontology/debutTeam> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/debutTeam",
    "predicate1_mention": "debut team",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Butch_Metzger",
    "entity1_mention": "Butch Metzger",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2844",
    "question": "Name the common distributing label of the Chinga Chang Records and StandBy Records ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chinga_Chang_Records> <http://dbpedia.org/ontology/distributingLabel> ?uri. <http://dbpedia.org/resource/StandBy_Records> <http://dbpedia.org/ontology/distributingLabel> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/distributingLabel",
    "predicate1_mention": "distributing label",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Chinga_Chang_Records",
    "entity1_mention": "Chinga Chang Records",
    "entity2_uri": "http://dbpedia.org/resource/StandBy_Records",
    "entity2_mention": "standby records"
},
{
    "id": "2845",
    "question": "What are some relatives of the spouse of Uncle henry from Oz?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Uncle_Henry_(Oz)> . ?uri <http://dbpedia.org/ontology/relative> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/spouse",
    "predicate1_mention": "spouse",
    "predicate2_uri": "http://dbpedia.org/ontology/relative",
    "predicate2_mention": "relatives",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Uncle_Henry_(Oz)",
    "entity1_mention": "uncle henry from oz",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2846",
    "question": "Which line of the Vadodara Junction railway station is the route end of Mumbai Vadodara Expressway ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mumbai_Vadodara_Expressway> <http://dbpedia.org/ontology/routeEnd> ?uri. <http://dbpedia.org/resource/Vadodara_Junction_railway_station> <http://dbpedia.org/property/line> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/routeEnd",
    "predicate1_mention": "route end",
    "predicate2_uri": "http://dbpedia.org/property/line",
    "predicate2_mention": "line",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mumbai_Vadodara_Expressway",
    "entity1_mention": "Mumbai Vadodara Expressway",
    "entity2_uri": "http://dbpedia.org/resource/Vadodara_Junction_railway_station",
    "entity2_mention": "Vadodara Junction railway station"
},
{
    "id": "2847",
    "question": "Foxconn makes how many things?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Foxconn>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate1_mention": "makes",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Foxconn",
    "entity1_mention": "foxconn",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2848",
    "question": "In which racing championships did Bobby Beasley and Martin Molony participate?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bobby_Beasley> <http://dbpedia.org/ontology/race> ?uri. <http://dbpedia.org/resource/Martin_Molony> <http://dbpedia.org/ontology/race> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/race",
    "predicate1_mention": "racing",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bobby_Beasley",
    "entity1_mention": "Bobby Beasley",
    "entity2_uri": "http://dbpedia.org/resource/Martin_Molony",
    "entity2_mention": "Martin Molony"
},
{
    "id": "2850",
    "question": "Which actors have performed in plays performed in New York?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/place> <http://dbpedia.org/resource/New_York_City> . ?x <http://dbpedia.org/property/starring> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Play>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/place",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/starring",
    "predicate2_mention": "performed in",
    "type_uri": "http://dbpedia.org/ontology/Play",
    "type_mention": "plays",
    "entity1_uri": "http://dbpedia.org/resource/New_York_City",
    "entity1_mention": "New York",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2851",
    "question": "What currencies are used in the countries which have been governed by Francois Hollande?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Fran\u00e7ois_Hollande> . ?x <http://dbpedia.org/ontology/currency> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/leader",
    "predicate1_mention": "governed",
    "predicate2_uri": "http://dbpedia.org/ontology/currency",
    "predicate2_mention": "currencies",
    "type_uri": "http://dbpedia.org/ontology/Country",
    "type_mention": "countries",
    "entity1_uri": "http://dbpedia.org/resource/Fran\u00e7ois_Hollande",
    "entity1_mention": "Francois Hollande",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2852",
    "question": "Name the ground of Al Rayan SC ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Al-Rayan_SC> <http://dbpedia.org/ontology/ground> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/ground",
    "predicate1_mention": "ground",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Al-Rayan_SC",
    "entity1_mention": "al rayan sc",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2854",
    "question": "Where did the office holder died who also have faith in Episcopal Church ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Episcopal_Church_(United_States)> . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/religion",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate2_mention": "died",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "office holder",
    "entity1_uri": "http://dbpedia.org/resource/Episcopal_Church_(United_States)",
    "entity1_mention": "episcopal church",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2855",
    "question": "Is Another Lonely Night in New York by the musical band Robin Gibb?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Another_Lonely_Night_in_New_York> <http://dbpedia.org/ontology/musicalBand> <http://dbpedia.org/resource/Robin_Gibb> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/musicalBand",
    "predicate1_mention": "musical band",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Another_Lonely_Night_in_New_York",
    "entity1_mention": "Another Lonely Night in New York",
    "entity2_uri": "http://dbpedia.org/resource/Robin_Gibb",
    "entity2_mention": "robin gibb"
},
{
    "id": "2856",
    "question": "List all the developers of the Oddworld series?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/series> <http://dbpedia.org/resource/Oddworld> . ?x <http://dbpedia.org/ontology/developer> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/series",
    "predicate1_mention": "series",
    "predicate2_uri": "http://dbpedia.org/ontology/developer",
    "predicate2_mention": "developers",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Oddworld",
    "entity1_mention": "oddworld",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2857",
    "question": "To which political party does the successor of Radhabinod Koijam belong?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Radhabinod_Koijam> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/property/party> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "http://dbpedia.org/property/party",
    "predicate2_mention": "party",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Radhabinod_Koijam",
    "entity1_mention": "radhabinod koijam",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2858",
    "question": "Which builder of Edwin Andrews Air Base isalso place of birth of the Akinoumi Setsuo ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Edwin_Andrews_Air_Base> <http://dbpedia.org/ontology/builder> ?uri. <http://dbpedia.org/resource/Akinoumi_Setsuo> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/builder",
    "predicate1_mention": "builder",
    "predicate2_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate2_mention": "place of birth",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Edwin_Andrews_Air_Base",
    "entity1_mention": "Edwin Andrews Air Base",
    "entity2_uri": "http://dbpedia.org/resource/Akinoumi_Setsuo",
    "entity2_mention": "akinoumi setsuo"
},
{
    "id": "2859",
    "question": "is ANYway in the Quack album?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/ANYway> <http://dbpedia.org/ontology/album> <http://dbpedia.org/resource/Quack_(album)> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/album",
    "predicate1_mention": "album",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/ANYway",
    "entity1_mention": "anyway",
    "entity2_uri": "http://dbpedia.org/resource/Quack_(album)",
    "entity2_mention": "quack album"
},
{
    "id": "2860",
    "question": "What are the political parties whose leaders have lived in the Prime Minister's House?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Prime_Minister's_House_(Colombo)> . ?uri <http://dbpedia.org/ontology/leader> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/residence",
    "predicate1_mention": "lived in",
    "predicate2_uri": "http://dbpedia.org/ontology/leader",
    "predicate2_mention": "leaders",
    "type_uri": "http://dbpedia.org/ontology/PoliticalParty",
    "type_mention": "political parties",
    "entity1_uri": "http://dbpedia.org/resource/Prime_Minister's_House_(Colombo)",
    "entity1_mention": "Prime Minister's House",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2862",
    "question": "Name a TV show judged by Jennifier Lopez and presented by Brian Dunkleman ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Jennifer_Lopez> . ?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Brian_Dunkleman>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/judges",
    "predicate1_mention": "judged",
    "predicate2_uri": "http://dbpedia.org/property/presenter",
    "predicate2_mention": "presented",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "TV show",
    "entity1_uri": "http://dbpedia.org/resource/Jennifer_Lopez",
    "entity1_mention": "Jennifier Lopez",
    "entity2_uri": "http://dbpedia.org/resource/Brian_Dunkleman",
    "entity2_mention": "Brian Dunkleman"
},
{
    "id": "2863",
    "question": "Is the Chiva Bus by the Ford Motor Company?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Chiva_bus> <http://dbpedia.org/ontology/automobilePlatform> <http://dbpedia.org/resource/Ford_Motor_Company> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/automobilePlatform",
    "predicate1_mention": "motor",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Chiva_bus",
    "entity1_mention": "chiva bus",
    "entity2_uri": "http://dbpedia.org/resource/Ford_Motor_Company",
    "entity2_mention": "Ford Motor Company"
},
{
    "id": "2864",
    "question": "From how many different places have participants of Breeders's Cup Turf come?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/race> <http://dbpedia.org/resource/Breeders'_Cup_Turf> . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/race",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/birthPlace",
    "predicate2_mention": "places",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Breeders'_Cup_Turf",
    "entity1_mention": "Breeders's Cup Turf",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2865",
    "question": "Was Lionel Messi a member  of the 2009 FIFA World Cup squads?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/2009_FIFA_Club_World_Cup_squads> <http://dbpedia.org/ontology/currentMember> <http://dbpedia.org/resource/Lionel_Messi> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/currentMember",
    "predicate1_mention": "member",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/2009_FIFA_Club_World_Cup_squads",
    "entity1_mention": "2009 FIFA World Cup squads",
    "entity2_uri": "http://dbpedia.org/resource/Lionel_Messi",
    "entity2_mention": "lionel messi"
},
{
    "id": "2866",
    "question": "Name the company founded by Jim Harris located in Harris County, Texas ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Jim_Harris_(entrepreneur)> . ?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Harris_County,_Texas>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/foundedBy",
    "predicate1_mention": "founded by",
    "predicate2_uri": "http://dbpedia.org/ontology/locationCity",
    "predicate2_mention": "located in",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "company",
    "entity1_uri": "http://dbpedia.org/resource/Jim_Harris_(entrepreneur)",
    "entity1_mention": "Jim Harris",
    "entity2_uri": "http://dbpedia.org/resource/Harris_County,_Texas",
    "entity2_mention": "Harris County, Texas"
},
{
    "id": "2867",
    "question": "Which video game composed by Hirokazu Tanaka can be played on virtual Console ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Virtual_Console> . ?uri <http://dbpedia.org/property/composer> <http://dbpedia.org/resource/Hirokazu_Tanaka>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/computingPlatform",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/composer",
    "predicate2_mention": "composed",
    "type_uri": "http://dbpedia.org/ontology/VideoGame",
    "type_mention": "video game",
    "entity1_uri": "http://dbpedia.org/resource/Virtual_Console",
    "entity1_mention": "virtual console",
    "entity2_uri": "http://dbpedia.org/resource/Hirokazu_Tanaka",
    "entity2_mention": "hirokazu tanaka"
},
{
    "id": "2868",
    "question": "Give me the count of tenants of the stadia whose one of the tenants is Toronto Furies?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/tenants> <http://dbpedia.org/resource/Toronto_Furies> . ?x <http://dbpedia.org/property/tenants> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/tenants",
    "predicate1_mention": "tenants",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Toronto_Furies",
    "entity1_mention": "toronto furies",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2873",
    "question": "What are the birth place of the people who are the star of Dhoondte Reh Jaaoge?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dhoondte_Reh_Jaaoge!_(1998_film)> <http://dbpedia.org/ontology/starring> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/starring",
    "predicate1_mention": "star",
    "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
    "predicate2_mention": "birth place",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Dhoondte_Reh_Jaaoge!_(1998_film)",
    "entity1_mention": "Dhoondte Reh Jaaoge",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2874",
    "question": "Who is the architect of Red House, London ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Red_House,_London> <http://dbpedia.org/property/architect> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/architect",
    "predicate1_mention": "architect",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Red_House,_London",
    "entity1_mention": "Red House, London",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2875",
    "question": "Count the number of tenants whose one of the tenant is Toronto Phantoms ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Toronto_Phantoms> . ?x <http://dbpedia.org/ontology/tenant> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/tenant",
    "predicate1_mention": "tenant",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Toronto_Phantoms",
    "entity1_mention": "Toronto Phantoms",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2876",
    "question": "Which relative of George Madison is the appointer of John Drayton ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Drayton> <http://dbpedia.org/property/appointer> ?uri. <http://dbpedia.org/resource/George_Madison> <http://dbpedia.org/ontology/relation> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/appointer",
    "predicate1_mention": "appointer",
    "predicate2_uri": "http://dbpedia.org/ontology/relation",
    "predicate2_mention": "relative",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/John_Drayton",
    "entity1_mention": "John Drayton",
    "entity2_uri": "http://dbpedia.org/resource/George_Madison",
    "entity2_mention": "George Madison"
},
{
    "id": "2877",
    "question": "Which company manufactured Delta III?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Delta_III> <http://dbpedia.org/ontology/manufacturer> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate1_mention": "manufactured",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Delta_III",
    "entity1_mention": "delta iii",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2879",
    "question": "Name the river whose mouth mountain is Essex and river mouth is North Sea?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Essex> . ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/North_Sea>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/mouthMountain",
    "predicate1_mention": "mouth mountain",
    "predicate2_uri": "http://dbpedia.org/ontology/riverMouth",
    "predicate2_mention": "river mouth",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "river",
    "entity1_uri": "http://dbpedia.org/resource/Essex",
    "entity1_mention": "essex",
    "entity2_uri": "http://dbpedia.org/resource/North_Sea",
    "entity2_mention": "North Sea"
},
{
    "id": "2880",
    "question": "Who is the owner of Bloomberg L.P. ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bloomberg_L.P.> <http://dbpedia.org/property/owner> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/owner",
    "predicate1_mention": "owner",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bloomberg_L.P.",
    "entity1_mention": "bloomberg l.p.",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2881",
    "question": "List the houses of Parliament of India ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Parliament_of_India> <http://dbpedia.org/property/houses> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/houses",
    "predicate1_mention": "houses",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Parliament_of_India",
    "entity1_mention": "Parliament of India",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2882",
    "question": "Richard Gant did a guest appearance on which series?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/guests> <http://dbpedia.org/resource/Richard_Gant> . ?x <http://dbpedia.org/ontology/series> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/guests",
    "predicate1_mention": "guest",
    "predicate2_uri": "http://dbpedia.org/ontology/series",
    "predicate2_mention": "series",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Richard_Gant",
    "entity1_mention": "richard gant",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2883",
    "question": "What is the home stadium of the soccer club seasons whose chairman is Merritt Paulson?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/chairman> <http://dbpedia.org/resource/Merritt_Paulson> . ?x <http://dbpedia.org/ontology/homeStadium> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/chairman",
    "predicate1_mention": "chairman",
    "predicate2_uri": "http://dbpedia.org/ontology/homeStadium",
    "predicate2_mention": "home stadium",
    "type_uri": "http://dbpedia.org/ontology/SoccerClubSeason",
    "type_mention": "soccer club seasons",
    "entity1_uri": "http://dbpedia.org/resource/Merritt_Paulson",
    "entity1_mention": "Merritt Paulson",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2884",
    "question": "What is the government type of Kumta ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kumta> <http://dbpedia.org/property/governmentType> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/governmentType",
    "predicate1_mention": "government type",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kumta",
    "entity1_mention": "kumta",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2885",
    "question": "What genres of games are available on the Commodore 64?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Commodore_64> . ?x <http://dbpedia.org/property/genre> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/computingPlatform",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/genre",
    "predicate2_mention": "genres",
    "type_uri": "http://dbpedia.org/ontology/VideoGame",
    "type_mention": "games",
    "entity1_uri": "http://dbpedia.org/resource/Commodore_64",
    "entity1_mention": "commodore 64",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2886",
    "question": "What is the protected area whose nearest city is Kenya?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/nearestCity> <http://dbpedia.org/resource/Kenya>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ProtectedArea>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/nearestCity",
    "predicate1_mention": "nearest city",
    "predicate2_uri": "http://dbpedia.org/ontology/ProtectedArea",
    "predicate2_mention": "protected area",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kenya",
    "entity1_mention": "kenya",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2887",
    "question": "How many companies have launched their rockets from the Vandenerg Air base?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Vandenberg_Air_Force_Base> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/launchSite",
    "predicate1_mention": "launched",
    "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "companies",
    "entity1_uri": "http://dbpedia.org/resource/Vandenberg_Air_Force_Base",
    "entity1_mention": "Vandenerg Air base",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2889",
    "question": "Name the driver who was at pole in 1997 Canadian Grand Prix and also 1994 Spanish Grand Prix ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1997_Canadian_Grand_Prix> <http://dbpedia.org/property/poleDriver> ?uri. <http://dbpedia.org/resource/1994_Spanish_Grand_Prix> <http://dbpedia.org/ontology/poleDriver> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/poleDriver",
    "predicate1_mention": "driver who was at pole",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/1997_Canadian_Grand_Prix",
    "entity1_mention": "1997 Canadian Grand Prix",
    "entity2_uri": "http://dbpedia.org/resource/1994_Spanish_Grand_Prix",
    "entity2_mention": "1994 Spanish Grand Prix"
},
{
    "id": "2890",
    "question": "Which college has been attended  by both Mr. Hubert Wiggs and Mr. Alvin Bell?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hubert_Wiggs> <http://dbpedia.org/ontology/college> ?uri. <http://dbpedia.org/resource/Alvin_Bell> <http://dbpedia.org/ontology/college> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/college",
    "predicate1_mention": "college",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hubert_Wiggs",
    "entity1_mention": "hubert wiggs",
    "entity2_uri": "http://dbpedia.org/resource/Alvin_Bell",
    "entity2_mention": "alvin bell"
},
{
    "id": "2892",
    "question": "What is the academic discipline of the Journal of Cerebral Blood Flow & Metabolism and also an ingredient of the Ragout fin ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_&_Metabolism> <http://dbpedia.org/ontology/academicDiscipline> ?uri. <http://dbpedia.org/resource/Ragout_fin> <http://dbpedia.org/ontology/ingredient> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/academicDiscipline",
    "predicate1_mention": "academic discipline",
    "predicate2_uri": "http://dbpedia.org/ontology/ingredient",
    "predicate2_mention": "ingredient",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_&_Metabolism",
    "entity1_mention": "Journal of Cerebral Blood Flow & Metabolism",
    "entity2_uri": "http://dbpedia.org/resource/Ragout_fin",
    "entity2_mention": "ragout fin"
},
{
    "id": "2893",
    "question": "Was Duanne Allman famous for playing the Gibson SG?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Duane_Allman> <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Gibson_SG> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/notableInstruments",
    "predicate1_mention": "allman",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Duane_Allman",
    "entity1_mention": "Duanne Allman",
    "entity2_uri": "http://dbpedia.org/resource/Gibson_SG",
    "entity2_mention": "Gibson SG"
},
{
    "id": "2894",
    "question": "List the people casted in Betsy's Wedding and 16 candles?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Betsy's_Wedding> <http://dbpedia.org/ontology/starring> ?uri. <http://dbpedia.org/resource/Sixteen_Candles> <http://dbpedia.org/property/starring> ?uri . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "316",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/starring",
    "predicate1_mention": "wedding",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Betsy's_Wedding",
    "entity1_mention": "Betsy's Wedding",
    "entity2_uri": "http://dbpedia.org/resource/Sixteen_Candles",
    "entity2_mention": "16 candles"
},
{
    "id": "2895",
    "question": "Is Maldives a member ofof South Asia Subregional Economic Cooperation?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/South_Asia_Subregional_Economic_Cooperation> <http://dbpedia.org/property/membership> <http://dbpedia.org/resource/Maldives> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/membership",
    "predicate1_mention": "member",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/South_Asia_Subregional_Economic_Cooperation",
    "entity1_mention": "South Asia Subregional Economic Cooperation",
    "entity2_uri": "http://dbpedia.org/resource/Maldives",
    "entity2_mention": "maldives"
},
{
    "id": "2897",
    "question": "For how many things are people famous, who were born in Nebraska?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Nebraska> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/birthPlace",
    "predicate1_mention": "born in",
    "predicate2_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate2_mention": "famous",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Nebraska",
    "entity1_mention": "nebraska",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2899",
    "question": "What is the political party of the Satish Kumar Sharma which is also the political party of Manthena Venkata Raju?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Satish_Kumar_Sharma> <http://dbpedia.org/ontology/party> ?uri. <http://dbpedia.org/resource/Manthena_Venkata_Raju> <http://dbpedia.org/ontology/party> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/party",
    "predicate1_mention": "party",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Satish_Kumar_Sharma",
    "entity1_mention": "Satish Kumar Sharma",
    "entity2_uri": "http://dbpedia.org/resource/Manthena_Venkata_Raju",
    "entity2_mention": "manthena venkata raju"
},
{
    "id": "2900",
    "question": "Which shows theme music is composed by a band which has Larry Lalonde in it?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Larry_LaLonde> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/bandMember",
    "predicate1_mention": "band",
    "predicate2_uri": "http://dbpedia.org/property/themeMusicComposer",
    "predicate2_mention": "theme music is composed",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "shows",
    "entity1_uri": "http://dbpedia.org/resource/Larry_LaLonde",
    "entity1_mention": "Larry Lalonde",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2902",
    "question": "Name a famous relative of barry voight",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Barry_Voight>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/relative",
    "predicate1_mention": "relative",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Barry_Voight",
    "entity1_mention": "barry voight",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2903",
    "question": "Which company developed both Dart and Go?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dart_(programming_language)> <http://dbpedia.org/ontology/developer> ?uri. <http://dbpedia.org/resource/Go_(programming_language)> <http://dbpedia.org/ontology/developer> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/developer",
    "predicate1_mention": "developed",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Dart_(programming_language)",
    "entity1_mention": "dart",
    "entity2_uri": "http://dbpedia.org/resource/Go_(programming_language)",
    "entity2_mention": "Go"
},
{
    "id": "2905",
    "question": "What awards have been given to some screenwriters?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Screenwriter> . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/occupation",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "awards",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Screenwriter",
    "entity1_mention": "screenwriters",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2906",
    "question": "Which city near Nihoa is the place of death of jim Brady ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Nihoa> <http://dbpedia.org/property/nearestCity> ?uri. <http://dbpedia.org/resource/Jim_Brady_(quarterback)> <http://dbpedia.org/ontology/deathPlace> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/nearestCity",
    "predicate1_mention": "city near",
    "predicate2_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate2_mention": "place of death",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Nihoa",
    "entity1_mention": "nihoa",
    "entity2_uri": "http://dbpedia.org/resource/Jim_Brady_(quarterback)",
    "entity2_mention": "jim Brady"
},
{
    "id": "2907",
    "question": "List the people who were the first one to climb a mountain in California?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/California> . ?x <http://dbpedia.org/ontology/firstAscentPerson> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/locatedInArea",
    "predicate1_mention": "california",
    "predicate2_uri": "http://dbpedia.org/ontology/firstAscentPerson",
    "predicate2_mention": "first one to climb",
    "type_uri": "http://dbpedia.org/ontology/Mountain",
    "type_mention": "mountain",
    "entity1_uri": "http://dbpedia.org/resource/California",
    "entity1_mention": "california",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2908",
    "question": "Where is the spouse of Henry Bourchier of Essex buried?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Henry_Bourchier,_1st_Earl_of_Essex> . ?x <http://dbpedia.org/property/placeOfBurial> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/spouse",
    "predicate1_mention": "spouse",
    "predicate2_uri": "http://dbpedia.org/property/placeOfBurial",
    "predicate2_mention": "buried",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Henry_Bourchier,_1st_Earl_of_Essex",
    "entity1_mention": "Henry Bourchier of Essex",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2909",
    "question": "Who are the local authority of Buckhurst Hill County High School ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Buckhurst_Hill_County_High_School> <http://dbpedia.org/ontology/localAuthority> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/localAuthority",
    "predicate1_mention": "local authority",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Buckhurst_Hill_County_High_School",
    "entity1_mention": "Buckhurst Hill County High School",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2910",
    "question": "Which peak was first scaled by Krzysztof Wielicki?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/firstAscentPerson> <http://dbpedia.org/resource/Krzysztof_Wielicki> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/firstAscentPerson",
    "predicate1_mention": "first scaled",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Krzysztof_Wielicki",
    "entity1_mention": "krzysztof wielicki",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2913",
    "question": "What teams have Avangard Omsk's players played for?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/playedFor> <http://dbpedia.org/resource/Avangard_Omsk> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/playedFor",
    "predicate1_mention": "played",
    "predicate2_uri": "http://dbpedia.org/ontology/formerTeam",
    "predicate2_mention": "teams",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Avangard_Omsk",
    "entity1_mention": "Avangard Omsk's players",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2915",
    "question": "Name the rivers in the hudson highlands state parts?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hudson_Highlands_State_Park> <http://dbpedia.org/property/river> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/river",
    "predicate1_mention": "rivers",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hudson_Highlands_State_Park",
    "entity1_mention": "hudson highlands state parts",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2916",
    "question": "Is Ingo Steuer the formercoach of Stanislav Morozov?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Stanislav_Morozov> <http://dbpedia.org/property/formercoach> <http://dbpedia.org/resource/Ingo_Steuer> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/formercoach",
    "predicate1_mention": "formercoach",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Stanislav_Morozov",
    "entity1_mention": "stanislav morozov",
    "entity2_uri": "http://dbpedia.org/resource/Ingo_Steuer",
    "entity2_mention": "Ingo Steuer"
},
{
    "id": "2917",
    "question": "How many cars can I find related to the cars which have a V8 engine?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/engine> <http://dbpedia.org/resource/V8_engine> . ?x <http://dbpedia.org/property/related> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/engine",
    "predicate1_mention": "engine",
    "predicate2_uri": "http://dbpedia.org/property/related",
    "predicate2_mention": "related",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/V8_engine",
    "entity1_mention": "V8 engine",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2918",
    "question": "Which destinations of the Air 2000 is also the location continent of the Falken Tire ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Air_2000> <http://dbpedia.org/property/destinations> ?uri. <http://dbpedia.org/resource/Falken_Tire> <http://dbpedia.org/ontology/locationCountry> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/destinations",
    "predicate1_mention": "destinations",
    "predicate2_uri": "http://dbpedia.org/ontology/locationCountry",
    "predicate2_mention": "location",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Air_2000",
    "entity1_mention": "Air 2000",
    "entity2_uri": "http://dbpedia.org/resource/Falken_Tire",
    "entity2_mention": "falken tire"
},
{
    "id": "2920",
    "question": "Why did Letita McTavish Hargrave and Sextus Barbour die?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Letitia_MacTavish_Hargrave> <http://dbpedia.org/ontology/deathCause> ?uri. <http://dbpedia.org/resource/Sextus_Barbour> <http://dbpedia.org/property/deathCause> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/deathCause",
    "predicate1_mention": "die",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Letitia_MacTavish_Hargrave",
    "entity1_mention": "Letita McTavish Hargrave",
    "entity2_uri": "http://dbpedia.org/resource/Sextus_Barbour",
    "entity2_mention": "Sextus Barbour"
},
{
    "id": "2921",
    "question": "What show has Sirius XM Holdings and Fox Sports Radio as channels ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/Sirius_XM_Holdings> . ?uri <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/Fox_Sports_Radio> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/channel",
    "predicate1_mention": "channels",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "show",
    "entity1_uri": "http://dbpedia.org/resource/Sirius_XM_Holdings",
    "entity1_mention": "Sirius XM Holdings",
    "entity2_uri": "http://dbpedia.org/resource/Fox_Sports_Radio",
    "entity2_mention": "Fox Sports Radio"
},
{
    "id": "2922",
    "question": "What are Breann McGregor and Anika Knudsen, both known for?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Breann_McGregor> <http://dbpedia.org/property/knownFor> ?uri. <http://dbpedia.org/resource/Anika_Knudsen> <http://dbpedia.org/property/knownFor> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/knownFor",
    "predicate1_mention": "known for",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Breann_McGregor",
    "entity1_mention": "Breann McGregor",
    "entity2_uri": "http://dbpedia.org/resource/Anika_Knudsen",
    "entity2_mention": "Anika Knudsen"
},
{
    "id": "2924",
    "question": "List the movies produced by Michael Deeley ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Michael_Deeley>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/producer",
    "predicate1_mention": "produced",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Michael_Deeley",
    "entity1_mention": "michael deeley",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2925",
    "question": "What are the TV shows whose network is also known as the CW?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/sisterNames> <http://dbpedia.org/resource/The_CW> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/sisterNames",
    "predicate1_mention": "also known as",
    "predicate2_uri": "http://dbpedia.org/property/network",
    "predicate2_mention": "network",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "TV shows",
    "entity1_uri": "http://dbpedia.org/resource/The_CW",
    "entity1_mention": "the cw",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2926",
    "question": "What are some tv shows created by Simon Fuller?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/creator",
    "predicate1_mention": "created",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "tv shows",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Simon_Fuller",
    "entity1_mention": "Simon Fuller",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2927",
    "question": "Count the number of sports played by the universities whose one of the sports is baketball ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/athletics> <http://dbpedia.org/resource/Basketball> . ?x <http://dbpedia.org/property/athletics> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/athletics",
    "predicate1_mention": "sports",
    "predicate2_uri": "http://dbpedia.org/property/athletics",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Basketball",
    "entity1_mention": "baketball",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2929",
    "question": "In which state is the team, which has John Roeslein?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Roeslein> <http://dbpedia.org/ontology/team> ?x . ?x <http://dbpedia.org/property/state> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/team",
    "predicate1_mention": "team,",
    "predicate2_uri": "http://dbpedia.org/property/state",
    "predicate2_mention": "state",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/John_Roeslein",
    "entity1_mention": "John Roeslein",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2930",
    "question": "Where has the employee of Columbia Records  worked ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/Columbia_Records> . ?x <http://dbpedia.org/ontology/employer> ?uri  . }",
    "sparql_id": "11",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/employer",
    "predicate1_mention": "employee",
    "predicate2_uri": "http://dbpedia.org/ontology/employer",
    "predicate2_mention": "employee",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Columbia_Records",
    "entity1_mention": "columbia records",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2932",
    "question": "What are the sports played by the universities who also plays taekwondo ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/athletics> <http://dbpedia.org/resource/Taekwondo> . ?x <http://dbpedia.org/property/athletics> ?uri  . }",
    "sparql_id": "11",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/athletics",
    "predicate1_mention": "sports played",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Taekwondo",
    "entity1_mention": "taekwondo",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2934",
    "question": "How many members are there of the organization headquartered at Amstelveen?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Amstelveen> . ?x <http://dbpedia.org/property/membership> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/headquarters",
    "predicate1_mention": "headquartered",
    "predicate2_uri": "http://dbpedia.org/property/membership",
    "predicate2_mention": "members",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Amstelveen",
    "entity1_mention": "amstelveen",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2936",
    "question": "Under which scientist did doctoral students erban ieica and Erich Bagge study?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/\u0218erban_\u021ai\u021beica> . ?uri <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Erich_Bagge> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/doctoralStudents",
    "predicate1_mention": "doctoral students",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Scientist",
    "type_mention": "scientist",
    "entity1_uri": "http://dbpedia.org/resource/\u0218erban_\u021ai\u021beica",
    "entity1_mention": "erban ieica",
    "entity2_uri": "http://dbpedia.org/resource/Erich_Bagge",
    "entity2_mention": "erich bagge"
},
{
    "id": "2937",
    "question": "Who did the associated act which is a Peter Frampton production ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Peter_Frampton> . ?uri <http://dbpedia.org/property/associatedActs> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/producer",
    "predicate1_mention": "production",
    "predicate2_uri": "http://dbpedia.org/property/associatedActs",
    "predicate2_mention": "associated act",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Peter_Frampton",
    "entity1_mention": "Peter Frampton",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2939",
    "question": "Who is the film director of Alice's Wonderland ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alice's_Wonderland> <http://dbpedia.org/ontology/director> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/director",
    "predicate1_mention": "director",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Alice's_Wonderland",
    "entity1_mention": "Alice's Wonderland",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2940",
    "question": "Who is the builder of Estadio Nacional de Costa Rica (2011) ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Estadio_Nacional_de_Costa_Rica_(2011)> <http://dbpedia.org/ontology/builder> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/builder",
    "predicate1_mention": "builder",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Estadio_Nacional_de_Costa_Rica_(2011)",
    "entity1_mention": "Estadio Nacional de Costa Rica (2011)",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2941",
    "question": "What is the common award won by Charles LeMaire and Eric Roth",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charles_LeMaire> <http://dbpedia.org/property/awards> ?uri. <http://dbpedia.org/resource/Eric_Roth> <http://dbpedia.org/ontology/award> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/awards",
    "predicate1_mention": "award",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Charles_LeMaire",
    "entity1_mention": "Charles LeMaire",
    "entity2_uri": "http://dbpedia.org/resource/Eric_Roth",
    "entity2_mention": "Eric Roth"
},
{
    "id": "2942",
    "question": "Where does the river end which starts in Richmond Park?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Richmond_Park> . ?x <http://dbpedia.org/property/mouthLocation> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stream>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/sourcePlace",
    "predicate1_mention": "which starts",
    "predicate2_uri": "http://dbpedia.org/property/mouthLocation",
    "predicate2_mention": "starts",
    "type_uri": "http://dbpedia.org/ontology/Stream",
    "type_mention": "starts",
    "entity1_uri": "http://dbpedia.org/resource/Richmond_Park",
    "entity1_mention": "richmond park",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2943",
    "question": "Count the number of first drivers in all the GPs where Mika Hakkinen was a first driver?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/poleDriver> <http://dbpedia.org/resource/Mika_H\u00e4kkinen> . ?x <http://dbpedia.org/ontology/firstDriver> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/poleDriver",
    "predicate1_mention": "driver",
    "predicate2_uri": "http://dbpedia.org/ontology/firstDriver",
    "predicate2_mention": "first drivers",
    "type_uri": "http://dbpedia.org/ontology/RacingDriver",
    "type_mention": "driver",
    "entity1_uri": "http://dbpedia.org/resource/Mika_H\u00e4kkinen",
    "entity1_mention": "Mika Hakkinen",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2944",
    "question": "Is the Kia Sportage similar to the Hyundai Lavita?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hyundai_Lavita> <http://dbpedia.org/ontology/relatedMeanOfTransportation> <http://dbpedia.org/resource/Kia_Sportage> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/relatedMeanOfTransportation",
    "predicate1_mention": "sportage",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Hyundai_Lavita",
    "entity1_mention": "hyundai lavita",
    "entity2_uri": "http://dbpedia.org/resource/Kia_Sportage",
    "entity2_mention": "Kia Sportage"
},
{
    "id": "2945",
    "question": "Which river has its roots in Baikal Mountains?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Baikal_Mountains> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/sourceMountain",
    "predicate1_mention": "mountains",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Baikal_Mountains",
    "entity1_mention": "Baikal Mountains",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2946",
    "question": "How many nations' volleyball players have played for the Russian women volleyball team?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Russia_women's_national_volleyball_team> . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/nationalteam",
    "predicate1_mention": "nations'",
    "predicate2_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Country",
    "type_mention": "nations",
    "entity1_uri": "http://dbpedia.org/resource/Russia_women's_national_volleyball_team",
    "entity1_mention": "Russian women volleyball team",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2948",
    "question": "Name the tiemzone of Banlung ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Banlung> <http://dbpedia.org/ontology/timeZone> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/timeZone",
    "predicate1_mention": "tiemzone",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Banlung",
    "entity1_mention": "banlung",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2949",
    "question": "Who made the engine whose predecessor is the SHO V6?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Ford_SHO_V6_engine> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Engine>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/predecessor",
    "predicate1_mention": "predecessor",
    "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate2_mention": "made",
    "type_uri": "http://dbpedia.org/ontology/Engine",
    "type_mention": "engine",
    "entity1_uri": "http://dbpedia.org/resource/Ford_SHO_V6_engine",
    "entity1_mention": "the SHO V6",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2951",
    "question": "In how many places was the album of King Crimson recorded?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/King_Crimson> . ?x <http://dbpedia.org/ontology/recordedIn> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/artist",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/recordedIn",
    "predicate2_mention": "recorded",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/King_Crimson",
    "entity1_mention": "King Crimson",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2952",
    "question": "Which musical artist collaborated with Tony Allen (musician) and label is Victor Entertainment?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Tony_Allen_(musician)> . ?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Victor_Entertainment>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
    "predicate1_mention": "musical artist",
    "predicate2_uri": "http://dbpedia.org/property/label",
    "predicate2_mention": "label",
    "type_uri": "http://dbpedia.org/ontology/MusicalArtist",
    "type_mention": "musical artist",
    "entity1_uri": "http://dbpedia.org/resource/Tony_Allen_(musician)",
    "entity1_mention": "Tony Allen (musician)",
    "entity2_uri": "http://dbpedia.org/resource/Victor_Entertainment",
    "entity2_mention": "Victor Entertainment"
},
{
    "id": "2953",
    "question": "In how many teams have people previously played who play as defencemen?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Defenceman> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
    "sparql_id": "405",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/position",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/formerTeam",
    "predicate2_mention": "previously played",
    "type_uri": "http://dbpedia.org/ontology/SportsTeam",
    "type_mention": "teams",
    "entity1_uri": "http://dbpedia.org/resource/Defenceman",
    "entity1_mention": "defencemen",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2954",
    "question": "What is the total number of regions served by the companies which also serves Australia?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/regionServed> <http://dbpedia.org/resource/Australia> . ?x <http://dbpedia.org/ontology/regionServed> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/regionServed",
    "predicate1_mention": "regions served",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Australia",
    "entity1_mention": "australia",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2955",
    "question": "Whose children are married to Fredric Joliot-Curie?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Fr\u00e9d\u00e9ric_Joliot-Curie> . ?uri <http://dbpedia.org/property/children> ?x  . }",
    "sparql_id": "6",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/spouse",
    "predicate1_mention": "married",
    "predicate2_uri": "http://dbpedia.org/property/children",
    "predicate2_mention": "children",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Fr\u00e9d\u00e9ric_Joliot-Curie",
    "entity1_mention": "Fredric Joliot-Curie",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2957",
    "question": "Who is the composer of Girl from the North Country ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Girl_from_the_North_Country> <http://dbpedia.org/ontology/composer> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/composer",
    "predicate1_mention": "composer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Girl_from_the_North_Country",
    "entity1_mention": "Girl from the North Country",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2960",
    "question": "What is the name of Mary's divine child?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_(mother_of_Jesus)>  . }",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/parent",
    "predicate1_mention": "child",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mary_(mother_of_Jesus)",
    "entity1_mention": "Mary's divine",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2962",
    "question": "Which appointer of the Joseph Clay (Georgia) is also the  President of the William Carmichael (diplomat) ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Joseph_Clay_(Georgia)> <http://dbpedia.org/ontology/appointer> ?uri. <http://dbpedia.org/resource/William_Carmichael_(diplomat)> <http://dbpedia.org/property/president> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/appointer",
    "predicate1_mention": "appointer",
    "predicate2_uri": "http://dbpedia.org/property/president",
    "predicate2_mention": "president",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Joseph_Clay_(Georgia)",
    "entity1_mention": "Joseph Clay (Georgia)",
    "entity2_uri": "http://dbpedia.org/resource/William_Carmichael_(diplomat)",
    "entity2_mention": "William Carmichael (diplomat)"
},
{
    "id": "2963",
    "question": "Among which sitcoms in which theme music is composed by Gary Portnoy is located in Massachusetts ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Massachusetts> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Gary_Portnoy>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/location",
    "predicate1_mention": "located",
    "predicate2_uri": "http://dbpedia.org/property/themeMusicComposer",
    "predicate2_mention": "composed by",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "sitcoms",
    "entity1_uri": "http://dbpedia.org/resource/Massachusetts",
    "entity1_mention": "massachusetts",
    "entity2_uri": "http://dbpedia.org/resource/Gary_Portnoy",
    "entity2_mention": "Gary Portnoy"
},
{
    "id": "2964",
    "question": "Over which rivers, does a cable stayed bridge exists?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/design> <http://dbpedia.org/resource/Cable-stayed_bridge> . ?x <http://dbpedia.org/property/crosses> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/design",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/crosses",
    "predicate2_mention": "over",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Cable-stayed_bridge",
    "entity1_mention": "cable stayed bridge",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2966",
    "question": "Ontario's ice hockey players have been a part of which teams?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Ontario> . ?x <http://dbpedia.org/ontology/team> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/IceHockeyPlayer>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/team",
    "predicate2_mention": "teams",
    "type_uri": "http://dbpedia.org/ontology/IceHockeyPlayer",
    "type_mention": "ice hockey players",
    "entity1_uri": "http://dbpedia.org/resource/Ontario",
    "entity1_mention": "Ontario's",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2968",
    "question": "List the battles in which alumni of US Army Command and General Staff College fought?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/United_States_Army_Command_and_General_Staff_College> . ?x <http://dbpedia.org/property/battles> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate1_mention": "alumni",
    "predicate2_uri": "http://dbpedia.org/property/battles",
    "predicate2_mention": "battles",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_States_Army_Command_and_General_Staff_College",
    "entity1_mention": "US Army Command and General Staff College",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2969",
    "question": "Name the military units whose command structure's headquarters is The Pentagon?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/The_Pentagon> . ?uri <http://dbpedia.org/ontology/commandStructure> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/headquarters",
    "predicate1_mention": "headquarters",
    "predicate2_uri": "http://dbpedia.org/ontology/commandStructure",
    "predicate2_mention": "command structure's",
    "type_uri": "http://dbpedia.org/ontology/MilitaryUnit",
    "type_mention": "military units",
    "entity1_uri": "http://dbpedia.org/resource/The_Pentagon",
    "entity1_mention": "The Pentagon",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2970",
    "question": "Name the city with leader as Esther Alder and neighboring municipality as Pregny-Chambsy?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Esther_Alder> . ?uri <http://dbpedia.org/ontology/neighboringMunicipality> <http://dbpedia.org/resource/Pregny-Chamb\u00e9sy>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/mayor",
    "predicate1_mention": "leader",
    "predicate2_uri": "http://dbpedia.org/ontology/neighboringMunicipality",
    "predicate2_mention": "neighboring municipality",
    "type_uri": "http://dbpedia.org/ontology/Location",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Esther_Alder",
    "entity1_mention": "esther alder",
    "entity2_uri": "http://dbpedia.org/resource/Pregny-Chamb\u00e9sy",
    "entity2_mention": "Pregny-Chambsy"
},
{
    "id": "2971",
    "question": "What is the mascot of Celal Bayar University ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Celal_Bayar_University> <http://dbpedia.org/property/mascot> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/mascot",
    "predicate1_mention": "mascot",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Celal_Bayar_University",
    "entity1_mention": "Celal Bayar University",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2972",
    "question": "List all the members of  Mekong River Commission?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mekong_River_Commission> <http://dbpedia.org/property/membership> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/membership",
    "predicate1_mention": "members",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mekong_River_Commission",
    "entity1_mention": "Mekong River Commission",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2973",
    "question": "What are the academic interests of the advisor of Paul Demiville ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Paul_Demi\u00e9ville> <http://dbpedia.org/ontology/academicAdvisor> ?x . ?x <http://dbpedia.org/property/fields> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/academicAdvisor",
    "predicate1_mention": "academic interests of the advisor",
    "predicate2_uri": "http://dbpedia.org/property/fields",
    "predicate2_mention": "academic interests",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Paul_Demi\u00e9ville",
    "entity1_mention": "Paul Demiville",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2974",
    "question": "How many other ingredient are there in the foods whihh have one of the ingredient as Potato ?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Potato> . ?x <http://dbpedia.org/ontology/ingredient> ?uri }",
    "sparql_id": "111",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/ingredient",
    "predicate1_mention": "ingredient",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Potato",
    "entity1_mention": "potato",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2977",
    "question": "Who are the founders of Iskra ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Iskra> <http://dbpedia.org/ontology/foundedBy> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/foundedBy",
    "predicate1_mention": "founders",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Iskra",
    "entity1_mention": "iskra",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2978",
    "question": "What is the location country of the bank whose successor is Mauritius Bank ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Mauritius_Bank> . ?x <http://dbpedia.org/property/locationCountry> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "http://dbpedia.org/property/locationCountry",
    "predicate2_mention": "location country",
    "type_uri": "http://dbpedia.org/ontology/Bank",
    "type_mention": "bank",
    "entity1_uri": "http://dbpedia.org/resource/Mauritius_Bank",
    "entity1_mention": "mauritius bank",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2979",
    "question": "Who is the manufacturer of engine of Jeep Forward Control ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jeep_Forward_Control> <http://dbpedia.org/property/engine> ?x . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/engine",
    "predicate1_mention": "engine",
    "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
    "predicate2_mention": "manufacturer",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jeep_Forward_Control",
    "entity1_mention": "Jeep Forward Control",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2980",
    "question": "What sports are played at Vishwajyot High School?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vishwajyot_High_School> <http://dbpedia.org/ontology/sport> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/sport",
    "predicate1_mention": "sports",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Vishwajyot_High_School",
    "entity1_mention": "Vishwajyot High School",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2981",
    "question": "Who is the person whose parent is Ptolemy XII Auletes?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ptolemy_XII_Auletes>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/parent",
    "predicate1_mention": "parent",
    "predicate2_uri": "http://dbpedia.org/ontology/Person",
    "predicate2_mention": "person",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ptolemy_XII_Auletes",
    "entity1_mention": "ptolemy xii auletes",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2983",
    "question": "What does the river flow into, whose left tributary is Bukovica?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/leftTributary> <http://dbpedia.org/resource/Bukovica_(river)> . ?x <http://dbpedia.org/ontology/mouthCountry> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/leftTributary",
    "predicate1_mention": "left tributary",
    "predicate2_uri": "http://dbpedia.org/ontology/mouthCountry",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bukovica_(river)",
    "entity1_mention": "bukovica",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2984",
    "question": "Who are in the board of Jimmy Wales ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jimmy_Wales> <http://dbpedia.org/ontology/board> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/board",
    "predicate1_mention": "board",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jimmy_Wales",
    "entity1_mention": "Jimmy Wales",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2985",
    "question": "What is the leading party in Baraily which Chandra Shekhar too is associated with?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Baraily> <http://dbpedia.org/ontology/leaderName> ?uri. <http://dbpedia.org/resource/Chandra_Shekhar> <http://dbpedia.org/ontology/otherParty> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/leaderName",
    "predicate1_mention": "leading",
    "predicate2_uri": "http://dbpedia.org/ontology/otherParty",
    "predicate2_mention": "party",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Baraily",
    "entity1_mention": "baraily",
    "entity2_uri": "http://dbpedia.org/resource/Chandra_Shekhar",
    "entity2_mention": "Chandra Shekhar"
},
{
    "id": "2986",
    "question": "which astronaut's mission was Apollo 11?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Apollo_11> } ",
    "sparql_id": "1",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/mission",
    "predicate1_mention": "mission",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Apollo_11",
    "entity1_mention": "apollo 11",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2987",
    "question": "What came before  PlayStation 4 and uses PlayStation 3 system software as OS?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/PlayStation_4> . ?uri <http://dbpedia.org/property/os> <http://dbpedia.org/resource/PlayStation_3_system_software>  . }",
    "sparql_id": "8",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/successor",
    "predicate1_mention": "uses",
    "predicate2_uri": "http://dbpedia.org/property/os",
    "predicate2_mention": "os",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/PlayStation_4",
    "entity1_mention": "PlayStation 4",
    "entity2_uri": "http://dbpedia.org/resource/PlayStation_3_system_software",
    "entity2_mention": "PlayStation 3 system software"
},
{
    "id": "2988",
    "question": "What are the tenants of Mercedes Benz Superdome?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mercedes-Benz_Superdome> <http://dbpedia.org/ontology/tenant> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/tenant",
    "predicate1_mention": "tenants",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mercedes-Benz_Superdome",
    "entity1_mention": "mercedes benz superdome",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2989",
    "question": "Was elizabeth ann seton beatified by Pope John XXIII?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Elizabeth_Ann_Seton> <http://dbpedia.org/property/beatifiedBy> <http://dbpedia.org/resource/Pope_John_XXIII> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/beatifiedBy",
    "predicate1_mention": "beatified by",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Elizabeth_Ann_Seton",
    "entity1_mention": "elizabeth ann seton",
    "entity2_uri": "http://dbpedia.org/resource/Pope_John_XXIII",
    "entity2_mention": "Pope John XXIII"
},
{
    "id": "2990",
    "question": "Give me a count of all the producers of all the movies whose music was done by James Horner?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/James_Horner> . ?x <http://dbpedia.org/property/producer> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/music",
    "predicate1_mention": "music",
    "predicate2_uri": "http://dbpedia.org/property/producer",
    "predicate2_mention": "producers",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/James_Horner",
    "entity1_mention": "James Horner",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2991",
    "question": "Name the musical artists whose label is given by Kobalt Label Services?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Kobalt_Label_Services>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/label",
    "predicate1_mention": "label",
    "predicate2_uri": "http://dbpedia.org/ontology/MusicalArtist",
    "predicate2_mention": "musical artists",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kobalt_Label_Services",
    "entity1_mention": "Kobalt Label Services",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2992",
    "question": "Count everyone who was in the military unit which is structured like the Marine Aircraft Group 13 ?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/commandStructure> <http://dbpedia.org/resource/Marine_Aircraft_Group_13> . ?uri <http://dbpedia.org/ontology/militaryUnit> ?x  . }",
    "sparql_id": "106",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/commandStructure",
    "predicate1_mention": "structured",
    "predicate2_uri": "http://dbpedia.org/ontology/militaryUnit",
    "predicate2_mention": "military unit",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Marine_Aircraft_Group_13",
    "entity1_mention": "Marine Aircraft Group 13",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2994",
    "question": "List the common sports played by Polytechnic University of the Philippines Bataan and Jamiatu Muslim Mindanao ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_\u2013_Bataan> <http://dbpedia.org/ontology/sport> ?uri. <http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao> <http://dbpedia.org/ontology/athletics> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/sport",
    "predicate1_mention": "sports",
    "predicate2_uri": "http://dbpedia.org/ontology/athletics",
    "predicate2_mention": "sports",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_\u2013_Bataan",
    "entity1_mention": "Polytechnic University of the Philippines Bataan",
    "entity2_uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao",
    "entity2_mention": "Jamiatu Muslim Mindanao"
},
{
    "id": "2995",
    "question": "List down all the cast members of Tony n' Tina's Wedding ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tony_n'_Tina's_Wedding> <http://dbpedia.org/property/starring> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/starring",
    "predicate1_mention": "cast",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Tony_n'_Tina's_Wedding",
    "entity1_mention": "Tony n' Tina's Wedding",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2996",
    "question": "Who is the writer of Neverwhere (radio play) ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Neverwhere_(radio_play)> <http://dbpedia.org/ontology/writer> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/writer",
    "predicate1_mention": "writer",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Neverwhere_(radio_play)",
    "entity1_mention": "neverwhere (radio play)",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2997",
    "question": "What is the musical whose music is by Jose Luis Narom,  based upon?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/musicBy> <http://dbpedia.org/resource/Jos\u00e9_Luis_Narom> . ?x <http://dbpedia.org/ontology/basedOn> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/musicBy",
    "predicate1_mention": "music",
    "predicate2_uri": "http://dbpedia.org/ontology/basedOn",
    "predicate2_mention": "based upon",
    "type_uri": "http://dbpedia.org/ontology/Musical",
    "type_mention": "musical",
    "entity1_uri": "http://dbpedia.org/resource/Jos\u00e9_Luis_Narom",
    "entity1_mention": "Jose Luis Narom",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "2998",
    "question": "List the bacterias whose division is Firmicutes and domain is bacteria?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/division> <http://dbpedia.org/resource/Firmicutes> . ?uri <http://dbpedia.org/property/domain> <http://dbpedia.org/resource/Bacteria>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bacteria>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/division",
    "predicate1_mention": "division",
    "predicate2_uri": "http://dbpedia.org/property/domain",
    "predicate2_mention": "domain",
    "type_uri": "http://dbpedia.org/ontology/Bacteria",
    "type_mention": "bacteria",
    "entity1_uri": "http://dbpedia.org/resource/Firmicutes",
    "entity1_mention": "firmicutes",
    "entity2_uri": "http://dbpedia.org/resource/Bacteria",
    "entity2_mention": "bacteria"
},
{
    "id": "3000",
    "question": "What is the university whose affiliations is Graham Holdings Company?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Graham_Holdings_Company>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/affiliations",
    "predicate1_mention": "affiliations",
    "predicate2_uri": "http://dbpedia.org/ontology/University",
    "predicate2_mention": "university",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Graham_Holdings_Company",
    "entity1_mention": "Graham Holdings Company",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3001",
    "question": "What are some seas inside europe ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Europe>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/location",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/Sea",
    "predicate2_mention": "seas",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Europe",
    "entity1_mention": "europe",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3002",
    "question": "Name the basketball player who played for Phoenix Suns and Los Angeles Clippers was his draft team?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Phoenix_Suns> . ?uri <http://dbpedia.org/property/draftTeam> <http://dbpedia.org/resource/Los_Angeles_Clippers>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/team",
    "predicate1_mention": "team",
    "predicate2_uri": "http://dbpedia.org/property/draftTeam",
    "predicate2_mention": "draft team",
    "type_uri": "http://dbpedia.org/ontology/BasketballPlayer",
    "type_mention": "basketball player",
    "entity1_uri": "http://dbpedia.org/resource/Phoenix_Suns",
    "entity1_mention": "phoenix suns",
    "entity2_uri": "http://dbpedia.org/resource/Los_Angeles_Clippers",
    "entity2_mention": "Los Angeles Clippers"
},
{
    "id": "3003",
    "question": "Who are the key people of FWD.us?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/FWD.us> <http://dbpedia.org/property/keyPeople> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/keyPeople",
    "predicate1_mention": "key people",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/FWD.us",
    "entity1_mention": "fwd.us",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3004",
    "question": "What is the birth place of the successor of Ella T. Grasso ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ella_T._Grasso> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/successor",
    "predicate1_mention": "successor",
    "predicate2_uri": "http://dbpedia.org/property/birthPlace",
    "predicate2_mention": "birth place",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ella_T._Grasso",
    "entity1_mention": "Ella T. Grasso",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3006",
    "question": "Which country is the birth place of Marcus Samuelsson and Samuel of Waldebba ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marcus_Samuelsson> <http://dbpedia.org/property/birthPlace> ?uri. <http://dbpedia.org/resource/Samuel_of_Waldebba> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/birthPlace",
    "predicate1_mention": "birth place",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Marcus_Samuelsson",
    "entity1_mention": "Marcus Samuelsson",
    "entity2_uri": "http://dbpedia.org/resource/Samuel_of_Waldebba",
    "entity2_mention": "Samuel of Waldebba"
},
{
    "id": "3007",
    "question": "What is the television show whose executive producer is Steven Peterman?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/executiveProducer> <http://dbpedia.org/resource/Steven_Peterman>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/executiveProducer",
    "predicate1_mention": "executive producer",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "television show",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Steven_Peterman",
    "entity1_mention": "Steven Peterman",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3008",
    "question": "Which river's source place is Gloucestershire and mouth in North Sea?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Gloucestershire> . ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/North_Sea>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/sourcePlace",
    "predicate1_mention": "source place",
    "predicate2_uri": "http://dbpedia.org/ontology/riverMouth",
    "predicate2_mention": "river's source",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "river's",
    "entity1_uri": "http://dbpedia.org/resource/Gloucestershire",
    "entity1_mention": "gloucestershire",
    "entity2_uri": "http://dbpedia.org/resource/North_Sea",
    "entity2_mention": "north sea"
},
{
    "id": "3010",
    "question": "which award has been won by Claudia Moro?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Claudia_Moro> <http://dbpedia.org/property/title> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/title",
    "predicate1_mention": "award",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Claudia_Moro",
    "entity1_mention": "claudia moro",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3011",
    "question": "How many schools have a bison as their mascot?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/mascot> <http://dbpedia.org/resource/Bison>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/mascot",
    "predicate1_mention": "mascot",
    "predicate2_uri": "http://dbpedia.org/ontology/School",
    "predicate2_mention": "schools",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bison",
    "entity1_mention": "bison",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3012",
    "question": "Where was Henri Duke of Rohan laid to rest?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Henri,_Duke_of_Rohan> <http://dbpedia.org/ontology/placeOfBurial> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/placeOfBurial",
    "predicate1_mention": "laid",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Henri,_Duke_of_Rohan",
    "entity1_mention": "Henri Duke of Rohan",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3013",
    "question": "Which institution of the Alton Ochsner is also the alma mater of John Michael Seabright ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alton_Ochsner> <http://dbpedia.org/ontology/institution> ?uri. <http://dbpedia.org/resource/John_Michael_Seabright> <http://dbpedia.org/ontology/almaMater> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/institution",
    "predicate1_mention": "institution",
    "predicate2_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate2_mention": "alma mater",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Alton_Ochsner",
    "entity1_mention": "Alton Ochsner",
    "entity2_uri": "http://dbpedia.org/resource/John_Michael_Seabright",
    "entity2_mention": "John Michael Seabright"
},
{
    "id": "3014",
    "question": "Who did the person whose predecessor is Arthur Slaght, play for?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Arthur_Slaght> . ?x <http://dbpedia.org/property/playedFor> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/predecessor",
    "predicate1_mention": "predecessor",
    "predicate2_uri": "http://dbpedia.org/property/playedFor",
    "predicate2_mention": "play for",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "person",
    "entity1_uri": "http://dbpedia.org/resource/Arthur_Slaght",
    "entity1_mention": "Arthur Slaght",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3015",
    "question": "Does the lena river flow into the Laptev Sea?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Lena_River> <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Laptev_Sea> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/mouthMountain",
    "predicate1_mention": "flow into",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lena_River",
    "entity1_mention": "lena river",
    "entity2_uri": "http://dbpedia.org/resource/Laptev_Sea",
    "entity2_mention": "laptev sea"
},
{
    "id": "3017",
    "question": "Who owns a bridge in Boston?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Boston> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/locatedInArea",
    "predicate1_mention": "boston",
    "predicate2_uri": "http://dbpedia.org/property/owner",
    "predicate2_mention": "owns",
    "type_uri": "http://dbpedia.org/ontology/Bridge",
    "type_mention": "bridge",
    "entity1_uri": "http://dbpedia.org/resource/Boston",
    "entity1_mention": "boston",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3018",
    "question": "Count the different types of Flatbread ?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Flatbread>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/type",
    "predicate1_mention": "types",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Flatbread",
    "entity1_mention": "flatbread",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3020",
    "question": "Which city near to Elliott Bay was the death place of George F. Moore ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elliott_Bay> <http://dbpedia.org/ontology/nearestCity> ?uri. <http://dbpedia.org/resource/George_F._Moore_(lieutenant_governor)> <http://dbpedia.org/property/placeOfDeath> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/nearestCity",
    "predicate1_mention": "city near",
    "predicate2_uri": "http://dbpedia.org/property/placeOfDeath",
    "predicate2_mention": "death place",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Elliott_Bay",
    "entity1_mention": "elliott bay",
    "entity2_uri": "http://dbpedia.org/resource/George_F._Moore_(lieutenant_governor)",
    "entity2_mention": "George F. Moore"
},
{
    "id": "3021",
    "question": "List the things for which people of New Orleans are famous for?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/New_Orleans> . ?x <http://dbpedia.org/property/knownFor> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/knownFor",
    "predicate2_mention": "famous for",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/New_Orleans",
    "entity1_mention": "New Orleans",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3022",
    "question": "The Other Side has hosted how many guests?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/The_Other_Side_(The_Outer_Limits)> <http://dbpedia.org/property/guests> ?uri  . }",
    "sparql_id": "102",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/guests",
    "predicate1_mention": "guests",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Other_Side_(The_Outer_Limits)",
    "entity1_mention": "The Other Side",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3023",
    "question": "What is the deathplace of the rugby player who is the relatives of Anton Oliver ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Anton_Oliver> <http://dbpedia.org/property/relatives> ?x . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/relatives",
    "predicate1_mention": "relatives",
    "predicate2_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate2_mention": "deathplace",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Anton_Oliver",
    "entity1_mention": "Anton Oliver",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3024",
    "question": "Who have children named James Roosevelt and Franklin Delano Roosevelt, Jr.?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/James_Roosevelt> . ?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Franklin_Delano_Roosevelt,_Jr.> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/children",
    "predicate1_mention": "children",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/James_Roosevelt",
    "entity1_mention": "James Roosevelt",
    "entity2_uri": "http://dbpedia.org/resource/Franklin_Delano_Roosevelt,_Jr.",
    "entity2_mention": "Franklin Delano Roosevelt, Jr."
},
{
    "id": "3025",
    "question": "Which scientist advised a doctoral student named Erban Ieica?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/\u0218erban_\u021ai\u021beica>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/doctoralStudents",
    "predicate1_mention": "doctoral student",
    "predicate2_uri": "http://dbpedia.org/ontology/Scientist",
    "predicate2_mention": "scientist",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/\u0218erban_\u021ai\u021beica",
    "entity1_mention": "Erban Ieica",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3026",
    "question": "Which artist was taught by Jos Ruiz y Blasco?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/training> <http://dbpedia.org/resource/Jos\u00e9_Ruiz_y_Blasco>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/training",
    "predicate1_mention": "taught",
    "predicate2_uri": "http://dbpedia.org/ontology/Artist",
    "predicate2_mention": "artist",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jos\u00e9_Ruiz_y_Blasco",
    "entity1_mention": "Jos Ruiz y Blasco",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3027",
    "question": "What are the houses of the Parliament Security Services and Parliament of India ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Parliament_Security_Services> <http://dbpedia.org/property/houses> ?uri. <http://dbpedia.org/resource/Parliament_of_India> <http://dbpedia.org/property/houses> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/houses",
    "predicate1_mention": "houses",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Parliament_Security_Services",
    "entity1_mention": "parliament security services",
    "entity2_uri": "http://dbpedia.org/resource/Parliament_of_India",
    "entity2_mention": "Parliament of India"
},
{
    "id": "3028",
    "question": "Was Zachary taylor a major general?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Zachary_Taylor> <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Major_general_(United_States)> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/rank",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Zachary_Taylor",
    "entity1_mention": "zachary taylor",
    "entity2_uri": "http://dbpedia.org/resource/Major_general_(United_States)",
    "entity2_mention": "major general"
},
{
    "id": "3029",
    "question": "For which team did both Butch Metzger and Brian Horwitz debuted ? ",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Butch_Metzger> <http://dbpedia.org/ontology/debutTeam> ?uri. <http://dbpedia.org/resource/Brian_Horwitz> <http://dbpedia.org/ontology/debutTeam> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/debutTeam",
    "predicate1_mention": "debuted",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Butch_Metzger",
    "entity1_mention": "Butch Metzger",
    "entity2_uri": "http://dbpedia.org/resource/Brian_Horwitz",
    "entity2_mention": "Brian Horwitz"
},
{
    "id": "3032",
    "question": "List down the cinematographers of Mickey's Mellerdrammer?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mickey's_Mellerdrammer> <http://dbpedia.org/property/cinematography> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/cinematography",
    "predicate1_mention": "cinematographers",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Mickey's_Mellerdrammer",
    "entity1_mention": "Mickey's Mellerdrammer",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3033",
    "question": "Which country's people have graduated from Ghana School of Law?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Ghana_School_of_Law> . ?x <http://dbpedia.org/ontology/nationality> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/almaMater",
    "predicate1_mention": "graduated from",
    "predicate2_uri": "http://dbpedia.org/ontology/nationality",
    "predicate2_mention": "country's",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "people",
    "entity1_uri": "http://dbpedia.org/resource/Ghana_School_of_Law",
    "entity1_mention": "Ghana School of Law",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3034",
    "question": "What awards have been given to the dude who made Shaun the Sheep?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Shaun_the_Sheep> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/notableworks",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/award",
    "predicate2_mention": "awards",
    "type_uri": "http://dbpedia.org/ontology/Person",
    "type_mention": "dude",
    "entity1_uri": "http://dbpedia.org/resource/Shaun_the_Sheep",
    "entity1_mention": "Shaun the Sheep",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3035",
    "question": "Where is  Dofinivka Estuary  located ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dofinivka_Estuary> <http://dbpedia.org/property/location> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/location",
    "predicate1_mention": "located",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Dofinivka_Estuary",
    "entity1_mention": "dofinivka estuary",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3036",
    "question": "Bridge that starts at Seberang Perai crosses over what?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/routeStart> <http://dbpedia.org/resource/Seberang_Perai> . ?x <http://dbpedia.org/property/crosses> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/routeStart",
    "predicate1_mention": "starts",
    "predicate2_uri": "http://dbpedia.org/property/crosses",
    "predicate2_mention": "crosses",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Seberang_Perai",
    "entity1_mention": "seberang perai",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3038",
    "question": "To which senator did military unit VMF 155 belong?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/VMF-155>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Senator>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/militaryUnit",
    "predicate1_mention": "military unit",
    "predicate2_uri": "http://dbpedia.org/ontology/Senator",
    "predicate2_mention": "senator",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/VMF-155",
    "entity1_mention": "vmf 155",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3039",
    "question": "What awards did Jos Rivera ( playwright ) win?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jos\u00e9_Rivera_(playwright)> <http://dbpedia.org/property/awards> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/awards",
    "predicate1_mention": "awards",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jos\u00e9_Rivera_(playwright)",
    "entity1_mention": "Jos Rivera ( playwright )",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3040",
    "question": "Who discovered Callisto ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Callisto_(moon)> <http://dbpedia.org/ontology/discoverer> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/discoverer",
    "predicate1_mention": "discovered",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Callisto_(moon)",
    "entity1_mention": "callisto",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3041",
    "question": "Does Shaun Thong a member of Audi?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Shaun_Thong> <http://dbpedia.org/property/currentTeam> <http://dbpedia.org/resource/Audi> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/currentTeam",
    "predicate1_mention": "member",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Shaun_Thong",
    "entity1_mention": "Shaun Thong",
    "entity2_uri": "http://dbpedia.org/resource/Audi",
    "entity2_mention": "audi"
},
{
    "id": "3042",
    "question": "Give me a list of computers whose CPU is in the US.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/locationCity> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/ontology/cpu> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/locationCity",
    "predicate1_mention": "list",
    "predicate2_uri": "http://dbpedia.org/ontology/cpu",
    "predicate2_mention": "cpu",
    "type_uri": "http://dbpedia.org/ontology/InformationAppliance",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_States",
    "entity1_mention": "US",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3043",
    "question": "Which musical artist associated with Tony Allen has label with Celluloid Records ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Tony_Allen_(musician)> . ?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Celluloid_Records>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
    "predicate1_mention": "musical artist associated",
    "predicate2_uri": "http://dbpedia.org/property/label",
    "predicate2_mention": "label",
    "type_uri": "http://dbpedia.org/ontology/MusicalArtist",
    "type_mention": "musical artist",
    "entity1_uri": "http://dbpedia.org/resource/Tony_Allen_(musician)",
    "entity1_mention": "Tony Allen",
    "entity2_uri": "http://dbpedia.org/resource/Celluloid_Records",
    "entity2_mention": "celluloid records"
},
{
    "id": "3044",
    "question": "Whose labels are Victor Entertainment and Celluloid Records?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Victor_Entertainment> . ?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Celluloid_Records> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/label",
    "predicate1_mention": "labels",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Victor_Entertainment",
    "entity1_mention": "Victor Entertainment",
    "entity2_uri": "http://dbpedia.org/resource/Celluloid_Records",
    "entity2_mention": "Celluloid Records"
},
{
    "id": "3045",
    "question": "Where does the river end, into which the Rakitnica flows?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/rightTributary> <http://dbpedia.org/resource/Rakitnica> . ?x <http://dbpedia.org/ontology/mouthCountry> ?uri  . }",
    "sparql_id": "5",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/rightTributary",
    "predicate1_mention": "river",
    "predicate2_uri": "http://dbpedia.org/ontology/mouthCountry",
    "predicate2_mention": "flows",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Rakitnica",
    "entity1_mention": "rakitnica",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3046",
    "question": "Where is the tombstone of the parliament members who served with James Roberts as the Vice President, US?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/vicePresident> <http://dbpedia.org/resource/James_Roberts_(trade_unionist)> . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MemberOfParliament>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/vicePresident",
    "predicate1_mention": "Vice President,",
    "predicate2_uri": "http://dbpedia.org/ontology/restingPlace",
    "predicate2_mention": "tombs",
    "type_uri": "http://dbpedia.org/ontology/MemberOfParliament",
    "type_mention": "parliament members",
    "entity1_uri": "http://dbpedia.org/resource/James_Roberts_(trade_unionist)",
    "entity1_mention": "James Roberts",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3047",
    "question": "Do the west coast airlines fly to seattle?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/West_Coast_Airlines> <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Seattle> }",
    "sparql_id": "152",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/ontology/targetAirport",
    "predicate1_mention": "airlines fly",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/West_Coast_Airlines",
    "entity1_mention": "west coast airlines",
    "entity2_uri": "http://dbpedia.org/resource/Seattle",
    "entity2_mention": "seattle"
},
{
    "id": "3048",
    "question": "Which school teams are there in schools of Arlington Heights, Illinois?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Arlington_Heights,_Illinois> . ?x <http://dbpedia.org/property/teamName> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/city",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/teamName",
    "predicate2_mention": "teams",
    "type_uri": "http://dbpedia.org/ontology/School",
    "type_mention": "school",
    "entity1_uri": "http://dbpedia.org/resource/Arlington_Heights,_Illinois",
    "entity1_mention": "Arlington Heights, Illinois",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3049",
    "question": "Who was the silver medalist of Gymnastics at the 2008 Summer Olympics Women's artistic individual all-around ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gymnastics_at_the_2008_Summer_Olympics_\u2013_Women's_artistic_individual_all-around> <http://dbpedia.org/ontology/silverMedalist> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/silverMedalist",
    "predicate1_mention": "silver medalist",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Gymnastics_at_the_2008_Summer_Olympics_\u2013_Women's_artistic_individual_all-around",
    "entity1_mention": "Gymnastics at the 2008 Summer Olympics Women's artistic individual all-around",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3050",
    "question": "Who  works  at the American Magazine and New York Post?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/The_American_Magazine> . ?uri <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/New_York_Post> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/employer",
    "predicate1_mention": "works at",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_American_Magazine",
    "entity1_mention": "the American Magazine",
    "entity2_uri": "http://dbpedia.org/resource/New_York_Post",
    "entity2_mention": "New York Post"
},
{
    "id": "3052",
    "question": "List the academic discipline of the journals whose publisher is SAGE Publications.",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/publisher> <http://dbpedia.org/resource/SAGE_Publications> . ?x <http://dbpedia.org/ontology/academicDiscipline> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AcademicJournal>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/publisher",
    "predicate1_mention": "publisher",
    "predicate2_uri": "http://dbpedia.org/ontology/academicDiscipline",
    "predicate2_mention": "academic discipline",
    "type_uri": "http://dbpedia.org/ontology/AcademicJournal",
    "type_mention": "academic discipline of the journals",
    "entity1_uri": "http://dbpedia.org/resource/SAGE_Publications",
    "entity1_mention": "SAGE Publications",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3053",
    "question": "Collaborators of Demis Roussos have composed music for which movies?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Demis_Roussos> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/associatedActs",
    "predicate1_mention": "collaborators",
    "predicate2_uri": "http://dbpedia.org/ontology/musicComposer",
    "predicate2_mention": "composed",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Demis_Roussos",
    "entity1_mention": "Demis Roussos",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3055",
    "question": "Who founded the city at the end of the Pittsburgh Line route?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pittsburgh_Line> <http://dbpedia.org/ontology/routeEnd> ?x . ?x <http://dbpedia.org/ontology/founder> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/routeEnd",
    "predicate1_mention": "end",
    "predicate2_uri": "http://dbpedia.org/ontology/founder",
    "predicate2_mention": "founded",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Pittsburgh_Line",
    "entity1_mention": "pittsburgh line",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3058",
    "question": "Which source of river Raa is the sovereign state of Adriatic sea ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ra\u0161a_(river)> <http://dbpedia.org/ontology/source> ?uri. <http://dbpedia.org/resource/Adriatic_Sea> <http://dbpedia.org/ontology/country> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/source",
    "predicate1_mention": "source",
    "predicate2_uri": "http://dbpedia.org/ontology/country",
    "predicate2_mention": "state",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Ra\u0161a_(river)",
    "entity1_mention": "river Raa",
    "entity2_uri": "http://dbpedia.org/resource/Adriatic_Sea",
    "entity2_mention": "adriatic sea"
},
{
    "id": "3061",
    "question": "Count  the journals in the field of Philosophy.",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/discipline> <http://dbpedia.org/resource/Philosophy>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AcademicJournal>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/discipline",
    "predicate1_mention": "field",
    "predicate2_uri": "http://dbpedia.org/ontology/AcademicJournal",
    "predicate2_mention": "journals",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Philosophy",
    "entity1_mention": "Philosophy",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3062",
    "question": "Which former team of the Harry Parker (baseball) is the  debut team of the Carl Sitton?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Harry_Parker_(baseball)> <http://dbpedia.org/ontology/formerTeam> ?uri. <http://dbpedia.org/resource/Carl_Sitton> <http://dbpedia.org/property/debutteam> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/formerTeam",
    "predicate1_mention": "former team",
    "predicate2_uri": "http://dbpedia.org/property/debutteam",
    "predicate2_mention": "debut team",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Harry_Parker_(baseball)",
    "entity1_mention": "Harry Parker (baseball)",
    "entity2_uri": "http://dbpedia.org/resource/Carl_Sitton",
    "entity2_mention": "Carl Sitton"
},
{
    "id": "3063",
    "question": "Who designed the bridge over the Valaichchenai lagoon?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/crosses> <http://dbpedia.org/resource/Valaichchenai_Lagoon> . ?x <http://dbpedia.org/property/designer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "sparql_id": "305",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/crosses",
    "predicate1_mention": "over",
    "predicate2_uri": "http://dbpedia.org/property/designer",
    "predicate2_mention": "designed",
    "type_uri": "http://dbpedia.org/ontology/Bridge",
    "type_mention": "bridge",
    "entity1_uri": "http://dbpedia.org/resource/Valaichchenai_Lagoon",
    "entity1_mention": "valaichchenai lagoon",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3064",
    "question": "List all the artist of the TV shows which has McClain as one of the artist ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/McClain_(band)> . ?x <http://dbpedia.org/property/artist> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/artist",
    "predicate1_mention": "artist",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "type_mention": "TV shows",
    "entity1_uri": "http://dbpedia.org/resource/McClain_(band)",
    "entity1_mention": "mcclain",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3065",
    "question": "Which fictional character is portrayed by Roger Barton ( film editor )?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/portrayer> <http://dbpedia.org/resource/Roger_Barton_(film_editor)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/portrayer",
    "predicate1_mention": "portrayed",
    "predicate2_uri": "http://dbpedia.org/ontology/FictionalCharacter",
    "predicate2_mention": "fictional character",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Roger_Barton_(film_editor)",
    "entity1_mention": "Roger Barton ( film editor )",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3066",
    "question": "Where did the film director of Kala Pani die?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kala_Pani_(1958_film)> <http://dbpedia.org/ontology/director> ?x . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/director",
    "predicate1_mention": "director",
    "predicate2_uri": "http://dbpedia.org/ontology/deathPlace",
    "predicate2_mention": "die",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Kala_Pani_(1958_film)",
    "entity1_mention": "Kala Pani",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3070",
    "question": "Name the nearest city to the historic place which has Englewood Colorado as one of them ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/nearestCity> <http://dbpedia.org/resource/Englewood,_Colorado> . ?x <http://dbpedia.org/ontology/nearestCity> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HistoricPlace>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/nearestCity",
    "predicate1_mention": "nearest city",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/HistoricPlace",
    "type_mention": "historic place",
    "entity1_uri": "http://dbpedia.org/resource/Englewood,_Colorado",
    "entity1_mention": "englewood colorado",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3071",
    "question": "Which movies have someone on their cast from Shelby County in Tennessee?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Shelby_County,_Tennessee> . ?uri <http://dbpedia.org/property/starring> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/hometown",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/property/starring",
    "predicate2_mention": "cast",
    "type_uri": "http://dbpedia.org/ontology/Film",
    "type_mention": "movies",
    "entity1_uri": "http://dbpedia.org/resource/Shelby_County,_Tennessee",
    "entity1_mention": "Shelby County in Tennessee",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3074",
    "question": "How many people are in the continental army?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Continental_Army>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/militaryBranch",
    "predicate1_mention": "",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Continental_Army",
    "entity1_mention": "continental army",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3075",
    "question": "List all the former partners of the figure skater whose one of the former partner was Andrea poapst ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/formerPartner> <http://dbpedia.org/resource/Andrea_Poapst> . ?x <http://dbpedia.org/ontology/formerPartner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FigureSkater>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/formerPartner",
    "predicate1_mention": "former partners",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/FigureSkater",
    "type_mention": "figure skater",
    "entity1_uri": "http://dbpedia.org/resource/Andrea_Poapst",
    "entity1_mention": "Andrea poapst",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3076",
    "question": "What river originates in the Connecticut Lakes?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Connecticut_Lakes>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/source",
    "predicate1_mention": "originates",
    "predicate2_uri": "http://dbpedia.org/ontology/River",
    "predicate2_mention": "river",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Connecticut_Lakes",
    "entity1_mention": "connecticut lakes",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3077",
    "question": "Which band made the song Take me There, and has collaborated with Blayse in the past?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Take_Me_There_(Blackstreet_&_M\u00fda_song)> <http://dbpedia.org/ontology/musicalBand> ?uri. <http://dbpedia.org/resource/Blayse> <http://dbpedia.org/ontology/associatedBand> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/musicalBand",
    "predicate1_mention": "band",
    "predicate2_uri": "http://dbpedia.org/ontology/associatedBand",
    "predicate2_mention": "collaborated",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Take_Me_There_(Blackstreet_&_M\u00fda_song)",
    "entity1_mention": "Take me There",
    "entity2_uri": "http://dbpedia.org/resource/Blayse",
    "entity2_mention": "blayse"
},
{
    "id": "3078",
    "question": "How many things are aired on BBC HD?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_HD>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/network",
    "predicate1_mention": "on",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/BBC_HD",
    "entity1_mention": "bbc hd",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3079",
    "question": "How many have order (taxonomy) as Bacillales and division as Firmicutes are there?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Bacillales> . ?uri <http://dbpedia.org/ontology/division> <http://dbpedia.org/resource/Firmicutes> } ",
    "sparql_id": "108",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/order",
    "predicate1_mention": "order",
    "predicate2_uri": "http://dbpedia.org/ontology/division",
    "predicate2_mention": "division",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Bacillales",
    "entity1_mention": "bacillales",
    "entity2_uri": "http://dbpedia.org/resource/Firmicutes",
    "entity2_mention": "firmicutes"
},
{
    "id": "3080",
    "question": "In which countries are there banks which came after the National Commercial Bank of Mauritius?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/National_Commercial_Bank_Mauritius> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/property/locationCountry> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/successor",
    "predicate1_mention": "came after",
    "predicate2_uri": "http://dbpedia.org/property/locationCountry",
    "predicate2_mention": "countries",
    "type_uri": "http://dbpedia.org/ontology/Bank",
    "type_mention": "bank",
    "entity1_uri": "http://dbpedia.org/resource/National_Commercial_Bank_Mauritius",
    "entity1_mention": "National Commercial Bank of Mauritius",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3081",
    "question": "How many have company as Paramount Television and network as NBC are there?",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Paramount_Television> . ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/NBC> } ",
    "sparql_id": "108",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/company",
    "predicate1_mention": "company",
    "predicate2_uri": "http://dbpedia.org/ontology/network",
    "predicate2_mention": "network",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Paramount_Television",
    "entity1_mention": "Paramount Television",
    "entity2_uri": "http://dbpedia.org/resource/NBC",
    "entity2_mention": "nbc"
},
{
    "id": "3082",
    "question": "What is the birthplace of the office holder who is the predecessor of Brian Peddle ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brian_Peddle> <http://dbpedia.org/property/predecessor> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/predecessor",
    "predicate1_mention": "predecessor",
    "predicate2_uri": "http://dbpedia.org/property/birthPlace",
    "predicate2_mention": "birthplace",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "office holder",
    "entity1_uri": "http://dbpedia.org/resource/Brian_Peddle",
    "entity1_mention": "Brian Peddle",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3083",
    "question": "What is the hometown of John Speraw ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Speraw> <http://dbpedia.org/property/hometown> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/hometown",
    "predicate1_mention": "hometown",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/John_Speraw",
    "entity1_mention": "John Speraw",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3084",
    "question": "What is the affiliation of Vanderbilt University Medical Center ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vanderbilt_University_Medical_Center> <http://dbpedia.org/property/affiliation> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/affiliation",
    "predicate1_mention": "affiliation",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Vanderbilt_University_Medical_Center",
    "entity1_mention": "vanderbilt university medical center",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3085",
    "question": "Which awards has been given to both michel hazanavicius and geoffrey rush?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michel_Hazanavicius> <http://dbpedia.org/property/awards> ?uri. <http://dbpedia.org/resource/Geoffrey_Rush> <http://dbpedia.org/property/awards> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/awards",
    "predicate1_mention": "awards",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Michel_Hazanavicius",
    "entity1_mention": "michel hazanavicius",
    "entity2_uri": "http://dbpedia.org/resource/Geoffrey_Rush",
    "entity2_mention": "geoffrey rush"
},
{
    "id": "3088",
    "question": "How many airlines have a hub at an airport run by LA World Airports?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/Los_Angeles_World_Airports> . ?uri <http://dbpedia.org/ontology/hubAirport> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "sparql_id": "406",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/ontology/operator",
    "predicate1_mention": "run by",
    "predicate2_uri": "http://dbpedia.org/ontology/hubAirport",
    "predicate2_mention": "hub at an airport",
    "type_uri": "http://dbpedia.org/ontology/Airline",
    "type_mention": "airlines",
    "entity1_uri": "http://dbpedia.org/resource/Los_Angeles_World_Airports",
    "entity1_mention": "LA World Airports",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3089",
    "question": "What are the main interests of Timothy Morton?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Timothy_Morton> <http://dbpedia.org/property/mainInterests> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/mainInterests",
    "predicate1_mention": "main interests",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Timothy_Morton",
    "entity1_mention": "timothy morton",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3091",
    "question": "List all the locations of the companies whose are also located in Rancho Cucamonga California ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/locationCountry> <http://dbpedia.org/resource/Rancho_Cucamonga,_California> . ?x <http://dbpedia.org/ontology/locationCountry> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "sparql_id": "311",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/locationCountry",
    "predicate1_mention": "locations",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/Company",
    "type_mention": "companies",
    "entity1_uri": "http://dbpedia.org/resource/Rancho_Cucamonga,_California",
    "entity1_mention": "Rancho Cucamonga California",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3093",
    "question": "Which are the television show which have been created by Donald Wilson?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Donald_Wilson_(writer_and_producer)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/creator",
    "predicate1_mention": "created",
    "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
    "predicate2_mention": "television show",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Donald_Wilson_(writer_and_producer)",
    "entity1_mention": "Donald Wilson",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3094",
    "question": "Whose successors are Robert P. Smith and Adrian A. Basora?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Robert_P._Smith> . ?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Adrian_A._Basora> . }",
    "sparql_id": "7",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/successor",
    "predicate1_mention": "successors",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Robert_P._Smith",
    "entity1_mention": "Robert P. Smith",
    "entity2_uri": "http://dbpedia.org/resource/Adrian_A._Basora",
    "entity2_mention": "Adrian A. Basora"
},
{
    "id": "3095",
    "question": "Who is the mayor of the city under which is the constituency of Zora Singh Maan?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Zora_Singh_Maan> <http://dbpedia.org/property/constituency> ?x . ?x <http://dbpedia.org/ontology/leaderName> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/constituency",
    "predicate1_mention": "constituency",
    "predicate2_uri": "http://dbpedia.org/ontology/leaderName",
    "predicate2_mention": "mayor",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Zora_Singh_Maan",
    "entity1_mention": "Zora Singh Maan",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3096",
    "question": "Did Jerry Siegel create Lois Lane?",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Lois_Lane> <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Jerry_Siegel> }",
    "sparql_id": "151",
    "classx": "4",
    "predicate1_uri": "http://dbpedia.org/property/creators",
    "predicate1_mention": "create",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Lois_Lane",
    "entity1_mention": "lois lane",
    "entity2_uri": "http://dbpedia.org/resource/Jerry_Siegel",
    "entity2_mention": "Jerry Siegel"
},
{
    "id": "3097",
    "question": "Which awards did the writer, who is  the creator of Creature Comforts, won ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Creature_Comforts> <http://dbpedia.org/property/creator> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/creator",
    "predicate1_mention": "creator",
    "predicate2_uri": "http://dbpedia.org/property/awards",
    "predicate2_mention": "awards",
    "type_uri": "http://dbpedia.org/ontology/Writer",
    "type_mention": "writer,",
    "entity1_uri": "http://dbpedia.org/resource/Creature_Comforts",
    "entity1_mention": "Creature Comforts",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3098",
    "question": "Who is the incumbent of Al Gore presidential campaign of 2000 ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Al_Gore_presidential_campaign,_2000> <http://dbpedia.org/ontology/incumbent> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/incumbent",
    "predicate1_mention": "incumbent",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Al_Gore_presidential_campaign,_2000",
    "entity1_mention": "Al Gore presidential campaign of 2000",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3100",
    "question": "Who is the former partner of the figure skater which was the former partner of Brynn Carman ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brynn_Carman> <http://dbpedia.org/ontology/formerPartner> ?x . ?x <http://dbpedia.org/ontology/formerPartner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FigureSkater>}",
    "sparql_id": "303",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/formerPartner",
    "predicate1_mention": "former partner",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/FigureSkater",
    "type_mention": "figure skater",
    "entity1_uri": "http://dbpedia.org/resource/Brynn_Carman",
    "entity1_mention": "Brynn Carman",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3101",
    "question": "England is the origin of how many things?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/origin> <http://dbpedia.org/resource/England>  . }",
    "sparql_id": "101",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/property/origin",
    "predicate1_mention": "origin",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/England",
    "entity1_mention": "england",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3102",
    "question": "What is the common debut team of the Butch Metzger and Dan Otero?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Butch_Metzger> <http://dbpedia.org/ontology/debutTeam> ?uri. <http://dbpedia.org/resource/Dan_Otero> <http://dbpedia.org/ontology/debutTeam> ?uri . }",
    "sparql_id": "15",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/debutTeam",
    "predicate1_mention": "debut team",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Butch_Metzger",
    "entity1_mention": "Butch Metzger",
    "entity2_uri": "http://dbpedia.org/resource/Dan_Otero",
    "entity2_mention": "Dan Otero"
},
{
    "id": "3103",
    "question": "What religion is followed by the commander of Defense Security Command?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Defense_Security_Command> <http://dbpedia.org/ontology/notableCommander> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "sparql_id": "3",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/notableCommander",
    "predicate1_mention": "commander",
    "predicate2_uri": "http://dbpedia.org/ontology/religion",
    "predicate2_mention": "religion",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Defense_Security_Command",
    "entity1_mention": "Defense Security Command",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3105",
    "question": "Who is  office holder of constituencies Duboce Triangle and Noe Valley ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco> . ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Noe_Valley,_San_Francisco> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "307",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/constituency",
    "predicate1_mention": "constituencies",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "office holder",
    "entity1_uri": "http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco",
    "entity1_mention": "Duboce Triangle",
    "entity2_uri": "http://dbpedia.org/resource/Noe_Valley,_San_Francisco",
    "entity2_mention": "Noe Valley"
},
{
    "id": "3106",
    "question": "For how many things are americans famous for?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . }",
    "sparql_id": "105",
    "classx": "3",
    "predicate1_uri": "http://dbpedia.org/property/placeOfBirth",
    "predicate1_mention": "",
    "predicate2_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate2_mention": "famous for",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/United_States",
    "entity1_mention": "americans",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3107",
    "question": "Which politician was succeeded by someone who graduated from the Instituts d'tudes politiques?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Instituts_d'\u00e9tudes_politiques> . ?uri <http://dbpedia.org/property/successor> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "sparql_id": "306",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/almaMater",
    "predicate1_mention": "graduated",
    "predicate2_uri": "http://dbpedia.org/property/successor",
    "predicate2_mention": "succeeded",
    "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
    "type_mention": "politician",
    "entity1_uri": "http://dbpedia.org/resource/Instituts_d'\u00e9tudes_politiques",
    "entity1_mention": "Instituts d'tudes politiques",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3109",
    "question": "Who created the world series of Poker?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/World_Series_of_Poker> <http://dbpedia.org/property/founded> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/founded",
    "predicate1_mention": "created",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/World_Series_of_Poker",
    "entity1_mention": "world series of Poker",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3111",
    "question": "Which countries came together to serve a greater purpose and founded South Asia Subregional Economic Cooperation?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Asia_Subregional_Economic_Cooperation> <http://dbpedia.org/property/membership> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/property/membership",
    "predicate1_mention": "countries",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/South_Asia_Subregional_Economic_Cooperation",
    "entity1_mention": "south asia subregional economic cooperation",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3112",
    "question": "Which musical artists have collaborated with Waylon Jennings?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Waylon_Jennings>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "sparql_id": "301",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
    "predicate1_mention": "collaborated with",
    "predicate2_uri": "http://dbpedia.org/ontology/MusicalArtist",
    "predicate2_mention": "musical artists",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Waylon_Jennings",
    "entity1_mention": "Waylon Jennings",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3113",
    "question": "where did soccer bowl take place in 76?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Soccer_Bowl_'76> <http://dbpedia.org/ontology/city> ?uri } ",
    "sparql_id": "2",
    "classx": "0",
    "predicate1_uri": "http://dbpedia.org/ontology/city",
    "predicate1_mention": "where",
    "predicate2_uri": "",
    "predicate2_mention": "",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Soccer_Bowl_'76",
    "entity1_mention": "soccer bowl take place in 76",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3114",
    "question": "Which owner of Drop.io made Sean Parker famous?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Drop.io> <http://dbpedia.org/property/owner> ?uri. <http://dbpedia.org/resource/Sean_Parker> <http://dbpedia.org/ontology/knownFor> ?uri . }",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/owner",
    "predicate1_mention": "owner",
    "predicate2_uri": "http://dbpedia.org/ontology/knownFor",
    "predicate2_mention": "famous",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Drop.io",
    "entity1_mention": "drop.io",
    "entity2_uri": "http://dbpedia.org/resource/Sean_Parker",
    "entity2_mention": "Sean Parker"
},
{
    "id": "3115",
    "question": "How many movies were cinematographed by Jordan Cronenweth?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Jordan_Cronenweth>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/cinematography",
    "predicate1_mention": "cinematographed",
    "predicate2_uri": "http://dbpedia.org/ontology/Film",
    "predicate2_mention": "movies",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Jordan_Cronenweth",
    "entity1_mention": "Jordan Cronenweth",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3116",
    "question": "Which kmascot od seneca Academy is also the species of The Fox and the Cat ?",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Fox_and_the_Cat> <http://dbpedia.org/property/species> ?uri. <http://dbpedia.org/resource/Seneca_Academy_and_Circle_School> <http://dbpedia.org/property/mascot> ?uri} ",
    "sparql_id": "16",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/property/species",
    "predicate1_mention": "species",
    "predicate2_uri": "http://dbpedia.org/property/mascot",
    "predicate2_mention": "kmascot",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/The_Fox_and_the_Cat",
    "entity1_mention": "The Fox and the Cat",
    "entity2_uri": "http://dbpedia.org/resource/Seneca_Academy_and_Circle_School",
    "entity2_mention": "seneca Academy"
},
{
    "id": "3119",
    "question": "Give me a count of airlines whose hub airport is Los Angeles International Airport?",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/hubAirport> <http://dbpedia.org/resource/Los_Angeles_International_Airport>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "sparql_id": "401",
    "classx": "2",
    "predicate1_uri": "http://dbpedia.org/ontology/hubAirport",
    "predicate1_mention": "hub airport",
    "predicate2_uri": "http://dbpedia.org/ontology/Airline",
    "predicate2_mention": "airlines",
    "type_uri": "",
    "type_mention": "",
    "entity1_uri": "http://dbpedia.org/resource/Los_Angeles_International_Airport",
    "entity1_mention": "Los Angeles International Airport",
    "entity2_uri": "",
    "entity2_mention": ""
},
{
    "id": "3121",
    "question": "Name the river whose source place is Gloucestershire and mouth place is Southend-on-Sea ?",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Gloucestershire> . ?uri <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/Southend-on-Sea>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "sparql_id": "308",
    "classx": "1",
    "predicate1_uri": "http://dbpedia.org/ontology/sourcePlace",
    "predicate1_mention": "source place",
    "predicate2_uri": "http://dbpedia.org/ontology/mouthPlace",
    "predicate2_mention": "mouth place",
    "type_uri": "http://dbpedia.org/ontology/River",
    "type_mention": "river",
    "entity1_uri": "http://dbpedia.org/resource/Gloucestershire",
    "entity1_mention": "gloucestershire",
    "entity2_uri": "http://dbpedia.org/resource/Southend-on-Sea",
    "entity2_mention": "southend-on-sea"
},
{
        "id": "3123",
        "question": "Momoko Kchi has acted in which movie ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Momoko_K\u014dchi>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/starring",
        "predicate1_mention": "acted in",
        "predicate2_uri": "http://dbpedia.org/ontology/Film",
        "predicate2_mention": "movie",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Momoko_K\u014dchi",
        "entity1_mention": "momoko kchi",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3125",
        "question": "Jimmie Fisher and Winston Bryant were governors under which president?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jimmie_Lou_Fisher> <http://dbpedia.org/property/governor> ?uri. <http://dbpedia.org/resource/Winston_Bryant> <http://dbpedia.org/property/governor> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/governor",
        "predicate1_mention": "governors",
        "predicate2_uri": "http://dbpedia.org/property/governor",
        "predicate2_mention": "governors",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Jimmie_Lou_Fisher",
        "entity1_mention": "jimmie fisher",
        "entity2_uri": "http://dbpedia.org/resource/Winston_Bryant",
        "entity2_mention": "winston bryant"
    },
    {
        "id": "3126",
        "question": "Which shows are similar to the ones produced by Phil Collinson?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Phil_Collinson> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/executiveProducer",
        "predicate1_mention": "produced",
        "predicate2_uri": "http://dbpedia.org/ontology/related",
        "predicate2_mention": "similar to",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "shows",
        "entity1_uri": "http://dbpedia.org/resource/Phil_Collinson",
        "entity1_mention": "phil collinson",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3127",
        "question": "How many movies did Michael Deeley produce?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Michael_Deeley>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "401",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/property/producer",
        "predicate1_mention": "produce",
        "predicate2_uri": "http://dbpedia.org/ontology/Film",
        "predicate2_mention": "movies",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Michael_Deeley",
        "entity1_mention": "michael deeley",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3128",
        "question": "Which college of the Luke List (golfer) is the alma mater of the Park Trammell ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Luke_List_(golfer)> <http://dbpedia.org/property/college> ?uri. <http://dbpedia.org/resource/Park_Trammell> <http://dbpedia.org/ontology/almaMater> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/college",
        "predicate1_mention": "college",
        "predicate2_uri": "http://dbpedia.org/ontology/almaMater",
        "predicate2_mention": "alma mater",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Luke_List_(golfer)",
        "entity1_mention": "Luke List (golfer)",
        "entity2_uri": "http://dbpedia.org/resource/Park_Trammell",
        "entity2_mention": "park trammell"
    },
    {
        "id": "3129",
        "question": "Spanish harlem incident was composed by whom ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Spanish_Harlem_Incident> <http://dbpedia.org/ontology/composer> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/composer",
        "predicate1_mention": "composed",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Spanish_Harlem_Incident",
        "entity1_mention": "Spanish harlem incident",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3130",
        "question": "Who is the fictional character who starred in The Dognapper?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/voice> <http://dbpedia.org/resource/The_Dognapper>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/voice",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "predicate2_mention": "fictional character",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/The_Dognapper",
        "entity1_mention": "The Dognapper",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3131",
        "question": "Count the movies edited by  Mark Stevens (film editor) and were directed by Joel Schumacher?",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Mark_Stevens_(film_editor)> . ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Joel_Schumacher> } ",
        "sparql_id": "108",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/editing",
        "predicate1_mention": "edited",
        "predicate2_uri": "http://dbpedia.org/ontology/director",
        "predicate2_mention": "directed",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Mark_Stevens_(film_editor)",
        "entity1_mention": "Mark Stevens (film editor)",
        "entity2_uri": "http://dbpedia.org/resource/Joel_Schumacher",
        "entity2_mention": "joel schumacher"
    },
    {
        "id": "3132",
        "question": "Enumerate all the first teams  which were held in Watkins Glen NY?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Watkins_Glen,_New_York> . ?x <http://dbpedia.org/property/firstTeam> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/location",
        "predicate1_mention": "were held in",
        "predicate2_uri": "http://dbpedia.org/property/firstTeam",
        "predicate2_mention": "first teams",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Watkins_Glen,_New_York",
        "entity1_mention": "Watkins Glen NY",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3133",
        "question": "List some songwriters whose work has been recorded in Miami?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/recordedIn> <http://dbpedia.org/resource/Miami> . ?x <http://dbpedia.org/property/writer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/recordedIn",
        "predicate1_mention": "recorded in",
        "predicate2_uri": "http://dbpedia.org/property/writer",
        "predicate2_mention": "songwriters",
        "type_uri": "http://dbpedia.org/ontology/Work",
        "type_mention": "work",
        "entity1_uri": "http://dbpedia.org/resource/Miami",
        "entity1_mention": "miami",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3134",
        "question": "Which fictional character portrayed by Roger barton has Darth Vader as family member ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/family> <http://dbpedia.org/resource/Darth_Vader> . ?uri <http://dbpedia.org/property/portrayer> <http://dbpedia.org/resource/Roger_Barton_(film_editor)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/family",
        "predicate1_mention": "family",
        "predicate2_uri": "http://dbpedia.org/property/portrayer",
        "predicate2_mention": "portrayed",
        "type_uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "type_mention": "fictional character",
        "entity1_uri": "http://dbpedia.org/resource/Darth_Vader",
        "entity1_mention": " darth vader",
        "entity2_uri": "http://dbpedia.org/resource/Roger_Barton_(film_editor)",
        "entity2_mention": "roger barton"
    },
    {
        "id": "3135",
        "question": "Elizabeth Alexander and Jared Bernstein served under which Vice President?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elizabeth_Alexander_(press_secretary)> <http://dbpedia.org/ontology/vicePresident> ?uri. <http://dbpedia.org/resource/Jared_Bernstein> <http://dbpedia.org/ontology/vicePresident> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/vicePresident",
        "predicate1_mention": "vice president",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Elizabeth_Alexander_(press_secretary)",
        "entity1_mention": "elizabeth alexander",
        "entity2_uri": "http://dbpedia.org/resource/Jared_Bernstein",
        "entity2_mention": "jared bernstein"
    },
    {
        "id": "3137",
        "question": "Which citys mayor is anne hidalgo?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Anne_Hidalgo>  . }",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/mayor",
        "predicate1_mention": "mayor",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Anne_Hidalgo",
        "entity1_mention": "anne hidalgo",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3138",
        "question": "Count the number of movies whose distributor is RKO Pictures and director of photography is Gregg Toland?",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/RKO_Pictures> . ?uri <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Gregg_Toland> } ",
        "sparql_id": "108",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/distributor",
        "predicate1_mention": "distributor",
        "predicate2_uri": "http://dbpedia.org/ontology/cinematography",
        "predicate2_mention": "photography",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/RKO_Pictures",
        "entity1_mention": "rko pictures",
        "entity2_uri": "http://dbpedia.org/resource/Gregg_Toland",
        "entity2_mention": " gregg toland"
    },
    {
        "id": "3139",
        "question": "What is the division of Serbia national American football team ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Serbia_national_American_football_team> <http://dbpedia.org/ontology/division> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/division",
        "predicate1_mention": "division",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Serbia_national_American_football_team",
        "entity1_mention": "Serbia national American football team",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3142",
        "question": "Who served a vice president buried in United First Parish Church?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/United_First_Parish_Church> . ?uri <http://dbpedia.org/ontology/vicePresident> ?x  . }",
        "sparql_id": "6",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/restingplace",
        "predicate1_mention": "buried in",
        "predicate2_uri": "http://dbpedia.org/ontology/vicePresident",
        "predicate2_mention": " vice president",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/United_First_Parish_Church",
        "entity1_mention": "united first parish church",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3143",
        "question": "Does Cohoes a junction on the NY State Route 470?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/New_York_State_Route_470> <http://dbpedia.org/ontology/routeJunction> <http://dbpedia.org/resource/Cohoes,_New_York> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/routeJunction",
        "predicate1_mention": "junction",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/New_York_State_Route_470",
        "entity1_mention": "state route 470",
        "entity2_uri": "http://dbpedia.org/resource/Cohoes,_New_York",
        "entity2_mention": "cohoes"
    },
    {
        "id": "3144",
        "question": "List the regions served by the company which serves in Pacific Ocean ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/regionServed> <http://dbpedia.org/resource/Pacific_Ocean> . ?x <http://dbpedia.org/ontology/regionServed> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/regionServed",
        "predicate1_mention": "regions served",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Company",
        "type_mention": "company",
        "entity1_uri": "http://dbpedia.org/resource/Pacific_Ocean",
        "entity1_mention": "pacific ocean",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3145",
        "question": "Who are the biological parents of Dannielynn Birkhead?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dannielynn_Birkhead> <http://dbpedia.org/ontology/parent> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/parent",
        "predicate1_mention": "parents",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Dannielynn_Birkhead",
        "entity1_mention": "dannielynn birkhead",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3148",
        "question": "Name the river with source as Columbia Lake and river mouth is located in Clatsop Country ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Clatsop_County,_Oregon> . ?uri <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Columbia_Lake>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/riverMouth",
        "predicate1_mention": "river mouth",
        "predicate2_uri": "http://dbpedia.org/ontology/source",
        "predicate2_mention": "source",
        "type_uri": "http://dbpedia.org/ontology/River",
        "type_mention": "river",
        "entity1_uri": "http://dbpedia.org/resource/Clatsop_County,_Oregon",
        "entity1_mention": "clatsop country",
        "entity2_uri": "http://dbpedia.org/resource/Columbia_Lake",
        "entity2_mention": "columbia lake"
    },
    {
        "id": "3149",
        "question": "Give me a count of movies whose music composer is Bernard Herrmann?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Bernard_Herrmann>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "401",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/ontology/musicComposer",
        "predicate1_mention": "music composer",
        "predicate2_uri": "http://dbpedia.org/ontology/Film",
        "predicate2_mention": "movies",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Bernard_Herrmann",
        "entity1_mention": "bernard herrmann",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3150",
        "question": "Is my truly truly fair the band of mitch miller?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/My_Truly,_Truly_Fair> <http://dbpedia.org/ontology/musicalBand> <http://dbpedia.org/resource/Mitch_Miller> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/musicalBand",
        "predicate1_mention": "band",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/My_Truly,_Truly_Fair",
        "entity1_mention": "truly fair",
        "entity2_uri": "http://dbpedia.org/resource/Mitch_Miller",
        "entity2_mention": "mitch miller"
    },
    {
        "id": "3151",
        "question": "What is the common product of the Apple Productivity Experience Group and services of the 21Vianet ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Apple_Productivity_Experience_Group> <http://dbpedia.org/ontology/product> ?uri. <http://dbpedia.org/resource/21Vianet> <http://dbpedia.org/property/services> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/product",
        "predicate1_mention": "product",
        "predicate2_uri": "http://dbpedia.org/property/services",
        "predicate2_mention": "services",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Apple_Productivity_Experience_Group",
        "entity1_mention": "Apple Productivity Experience Group",
        "entity2_uri": "http://dbpedia.org/resource/21Vianet",
        "entity2_mention": "21vianet"
    },
    {
        "id": "3153",
        "question": "Name the sovereign state of Wallington railway station ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wallington_railway_station> <http://dbpedia.org/ontology/country> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/country",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Wallington_railway_station",
        "entity1_mention": "wallington railway station",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3154",
        "question": "Which TV show's theme was composed by a band in which Todd Huth used to perform?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Todd_Huth> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/formerBandMember",
        "predicate1_mention": "band",
        "predicate2_uri": "http://dbpedia.org/property/themeMusicComposer",
        "predicate2_mention": "composed by",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "tv show's",
        "entity1_uri": "http://dbpedia.org/resource/Todd_Huth",
        "entity1_mention": "todd huth",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3155",
        "question": "Count all the Colonels?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Colonel_(United_States)>  . }",
        "sparql_id": "101",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/property/rank",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Colonel_(United_States)",
        "entity1_mention": "Colonels",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3156",
        "question": "Where is the main ground of soccer seasons whose chairman is Ronaldo?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Ronaldo> . ?x <http://dbpedia.org/ontology/ground> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/chairman",
        "predicate1_mention": "chairman",
        "predicate2_uri": "http://dbpedia.org/ontology/ground",
        "predicate2_mention": "ground",
        "type_uri": "http://dbpedia.org/ontology/SoccerClubSeason",
        "type_mention": "soccer",
        "entity1_uri": "http://dbpedia.org/resource/Ronaldo",
        "entity1_mention": "ronaldo",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3158",
        "question": "Which destination of the Novair International Airway is the source origin of Spaghetti squash ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Novair_International_Airways> <http://dbpedia.org/ontology/destination> ?uri. <http://dbpedia.org/resource/Spaghetti_squash> <http://dbpedia.org/ontology/origin> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/destination",
        "predicate1_mention": "destination",
        "predicate2_uri": "http://dbpedia.org/ontology/origin",
        "predicate2_mention": "origin",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Novair_International_Airways",
        "entity1_mention": "international",
        "entity2_uri": "http://dbpedia.org/resource/Spaghetti_squash",
        "entity2_mention": "spaghetti squash"
    },
    {
        "id": "3159",
        "question": "Who all have been canonized by Pope Paul VI",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/canonizedBy> <http://dbpedia.org/resource/Pope_Paul_VI> } ",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/canonizedBy",
        "predicate1_mention": "canonized by",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Pope_Paul_VI",
        "entity1_mention": "pope paul vi",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3160",
        "question": "Who are the parent  of the people that  has POD as Redding, Connecticut ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Redding,_Connecticut> . ?x <http://dbpedia.org/ontology/parent> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/deathPlace",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/parent",
        "predicate2_mention": "parent",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Redding,_Connecticut",
        "entity1_mention": "redding, connecticut",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3161",
        "question": "Who produces the trains operated by the MTR?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/MTR> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Train>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/operator",
        "predicate1_mention": "operated",
        "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
        "predicate2_mention": "mtr",
        "type_uri": "http://dbpedia.org/ontology/Train",
        "type_mention": "trains",
        "entity1_uri": "http://dbpedia.org/resource/MTR",
        "entity1_mention": "mtr",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3162",
        "question": "What religion did the spouse of Richie Aprile follow?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Richie_Aprile> <http://dbpedia.org/property/spouse> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/spouse",
        "predicate1_mention": "spouse",
        "predicate2_uri": "http://dbpedia.org/ontology/religion",
        "predicate2_mention": "religion",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Richie_Aprile",
        "entity1_mention": "richie aprile",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3163",
        "question": "Name the agency of Election Commission of Thailand ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Election_Commission_of_Thailand> <http://dbpedia.org/property/agencyName> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/agencyName",
        "predicate1_mention": "agency",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Election_Commission_of_Thailand",
        "entity1_mention": "Election Commission of Thailand",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3164",
        "question": "What is the second track list of Dschinghis Khan (song) ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dschinghis_Khan_(song)> <http://dbpedia.org/ontology/subsequentWork> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/subsequentWork",
        "predicate1_mention": "track",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Dschinghis_Khan_(song)",
        "entity1_mention": "dschinghis khan (song)",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3165",
        "question": "Which writer of Tales of Suspense is also the writer of karakuri Dji Ultimo ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tales_of_Suspense> <http://dbpedia.org/property/writers> ?uri. <http://dbpedia.org/resource/Karakuri_D\u00f4ji_Ultimo> <http://dbpedia.org/property/author> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/writers",
        "predicate1_mention": "writer",
        "predicate2_uri": "http://dbpedia.org/property/author",
        "predicate2_mention": "writer",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Tales_of_Suspense",
        "entity1_mention": "tales of suspense",
        "entity2_uri": "http://dbpedia.org/resource/Karakuri_D\u00f4ji_Ultimo",
        "entity2_mention": "karakuri dji ultimo"
    },
    {
        "id": "3166",
        "question": "Who was the influencer of Dave Attel who also starred in Adios Amigo?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dave_Attell> <http://dbpedia.org/ontology/influencedBy> ?uri. <http://dbpedia.org/resource/Adi\u00f3s_Amigo> <http://dbpedia.org/ontology/starring> ?uri . }",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/influencedBy",
        "predicate1_mention": "influencer",
        "predicate2_uri": "http://dbpedia.org/ontology/starring",
        "predicate2_mention": "starred",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Dave_Attell",
        "entity1_mention": "dave attel",
        "entity2_uri": "http://dbpedia.org/resource/Adi\u00f3s_Amigo",
        "entity2_mention": "adios amigo"
    },
    {
        "id": "3167",
        "question": "Who is the producer of the album, after which A Nice pair was released ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/A_Nice_Pair> <http://dbpedia.org/ontology/previousWork> ?x . ?x <http://dbpedia.org/property/producer> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/previousWork",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/producer",
        "predicate2_mention": "producer",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/A_Nice_Pair",
        "entity1_mention": "a nice pair",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3168",
        "question": "Who developed games based on the Cars series?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/series> <http://dbpedia.org/resource/Cars_(film)> . ?x <http://dbpedia.org/ontology/developer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/series",
        "predicate1_mention": "series",
        "predicate2_uri": "http://dbpedia.org/ontology/developer",
        "predicate2_mention": "developed",
        "type_uri": "http://dbpedia.org/ontology/VideoGame",
        "type_mention": "games",
        "entity1_uri": "http://dbpedia.org/resource/Cars_(film)",
        "entity1_mention": "cars",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3169",
        "question": "Which politicians live in a city led by T.S. Thakur?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/T._S._Thakur> . ?uri <http://dbpedia.org/ontology/residence> ?x  . }",
        "sparql_id": "6",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/leader",
        "predicate1_mention": "led",
        "predicate2_uri": "http://dbpedia.org/ontology/residence",
        "predicate2_mention": "live in",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/T._S._Thakur",
        "entity1_mention": "T.S. Thakur",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3172",
        "question": "Give me the count of artist in the company whose Artist is Jean Fran\u00e7ois Cot\u00e9 ?",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Jean-Fran\u00e7ois_Cot\u00e9> . ?x <http://dbpedia.org/property/artist> ?uri }",
        "sparql_id": "111",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/artist",
        "predicate1_mention": "artist",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Jean-Fran\u00e7ois_Cot\u00e9",
        "entity1_mention": "Jean Fran\u00e7ois Cot\u00e9",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3173",
        "question": "How many universities are located in a country led by Olemic Thommessen?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Olemic_Thommessen> . ?uri <http://dbpedia.org/ontology/country> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
        "sparql_id": "406",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/leaderName",
        "predicate1_mention": "led",
        "predicate2_uri": "http://dbpedia.org/ontology/country",
        "predicate2_mention": "country",
        "type_uri": "http://dbpedia.org/ontology/University",
        "type_mention": "universities",
        "entity1_uri": "http://dbpedia.org/resource/Olemic_Thommessen",
        "entity1_mention": "olemic thommessen",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3174",
        "question": "Give me a list of everyone who manages the famous rock art sites?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/architecture> <http://dbpedia.org/resource/Rock_art> . ?x <http://dbpedia.org/ontology/governingBody> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/architecture",
        "predicate1_mention": "art",
        "predicate2_uri": "http://dbpedia.org/ontology/governingBody",
        "predicate2_mention": "manages",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Rock_art",
        "entity1_mention": "rock art",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3176",
        "question": "To which family does korean fox belongs to ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Korean_fox> <http://dbpedia.org/ontology/family> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/family",
        "predicate1_mention": "family",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Korean_fox",
        "entity1_mention": "korean fox",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3178",
        "question": "Who is the compiler of British Gazette whose prime minister is also Peter Thorneycroft ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/British_Gazette> <http://dbpedia.org/property/editor> ?uri. <http://dbpedia.org/resource/Peter_Thorneycroft> <http://dbpedia.org/property/primeminister> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/editor",
        "predicate1_mention": "compiler",
        "predicate2_uri": "http://dbpedia.org/property/primeminister",
        "predicate2_mention": "prime minister",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/British_Gazette",
        "entity1_mention": "british gazette",
        "entity2_uri": "http://dbpedia.org/resource/Peter_Thorneycroft",
        "entity2_mention": "peter thorneycroft"
    },
    {
        "id": "3179",
        "question": "What is the route end of NorthSouth Transport Corridor ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/North\u2013South_Transport_Corridor> <http://dbpedia.org/ontology/routeEnd> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/routeEnd",
        "predicate1_mention": "route end",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/North\u2013South_Transport_Corridor",
        "entity1_mention": "NorthSouth Transport Corridor",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3180",
        "question": "What is the country which lies on the European route E8, and where Ragnhild Jolson was born?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/European_route_E8> <http://dbpedia.org/ontology/county> ?uri. <http://dbpedia.org/resource/Ragnhild_J\u00f8lsen> <http://dbpedia.org/property/birthplace> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/county",
        "predicate1_mention": "country",
        "predicate2_uri": "http://dbpedia.org/property/birthplace",
        "predicate2_mention": "born",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/European_route_E8",
        "entity1_mention": "european route e8",
        "entity2_uri": "http://dbpedia.org/resource/Ragnhild_J\u00f8lsen",
        "entity2_mention": "ragnhild jolson"
    },
    {
        "id": "3181",
        "question": "What are the television shows whose distributer is HBO?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/HBO>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/distributor",
        "predicate1_mention": "distributer",
        "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "predicate2_mention": "television",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/HBO",
        "entity1_mention": "hbo",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3182",
        "question": "Did Carolyn Heinrich study at the Vanderbilt?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Carolyn_Heinrich> <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/Vanderbilt_University> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/institution",
        "predicate1_mention": "study",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Carolyn_Heinrich",
        "entity1_mention": "carolyn heinrich",
        "entity2_uri": "http://dbpedia.org/resource/Vanderbilt_University",
        "entity2_mention": "vanderbilt"
    },
    {
        "id": "3184",
        "question": "To which company is Michael Dell a father company? ",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/Michael_Dell>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/owningCompany",
        "predicate1_mention": "father company",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Company",
        "type_mention": "company",
        "entity1_uri": "http://dbpedia.org/resource/Michael_Dell",
        "entity1_mention": "michael dell",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3185",
        "question": "How many cars succeeded the cars which were similar to Cadillac Fleetwood?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Cadillac_Fleetwood> <http://dbpedia.org/property/related> ?x . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
        "sparql_id": "403",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/related",
        "predicate1_mention": "similar to",
        "predicate2_uri": "http://dbpedia.org/ontology/predecessor",
        "predicate2_mention": "succeeded",
        "type_uri": "http://dbpedia.org/ontology/Automobile",
        "type_mention": "cars",
        "entity1_uri": "http://dbpedia.org/resource/Cadillac_Fleetwood",
        "entity1_mention": "cadillac fleetwood",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3186",
        "question": "What is the common region of the broad cast area of ITV and nationality of Ajahn Thate ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/ITV_(Thailand)> <http://dbpedia.org/property/broadcastArea> ?uri. <http://dbpedia.org/resource/Ajahn_Thate> <http://dbpedia.org/ontology/nationality> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/broadcastArea",
        "predicate1_mention": "broad cast area",
        "predicate2_uri": "http://dbpedia.org/ontology/nationality",
        "predicate2_mention": "nationality",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/ITV_(Thailand)",
        "entity1_mention": "itv",
        "entity2_uri": "http://dbpedia.org/resource/Ajahn_Thate",
        "entity2_mention": "ajahn thate"
    },
    {
        "id": "3187",
        "question": "Which person won Screen actors Guild Life Time Achievement award and has resting place in Palo Alto, California ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Palo_Alto,_California> . ?uri <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/restingPlace",
        "predicate1_mention": "resting place",
        "predicate2_uri": "http://dbpedia.org/ontology/award",
        "predicate2_mention": "award",
        "type_uri": "http://dbpedia.org/ontology/Person",
        "type_mention": "person",
        "entity1_uri": "http://dbpedia.org/resource/Palo_Alto,_California",
        "entity1_mention": "Palo Alto, California",
        "entity2_uri": "http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award",
        "entity2_mention": "Screen actors Guild Life Time Achievement award"
    },
    {
        "id": "3188",
        "question": "Give me a list of all the people driving at pole positions in the Grand Prixes where Renault was a first team?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/firstTeam> <http://dbpedia.org/resource/Renault_in_Formula_One> . ?x <http://dbpedia.org/ontology/poleDriver> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GrandPrix>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/firstTeam",
        "predicate1_mention": "first team",
        "predicate2_uri": "http://dbpedia.org/ontology/poleDriver",
        "predicate2_mention": "people driving at pole positions",
        "type_uri": "http://dbpedia.org/ontology/GrandPrix",
        "type_mention": "grand prixes",
        "entity1_uri": "http://dbpedia.org/resource/Renault_in_Formula_One",
        "entity1_mention": "renault",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3189",
        "question": "Which mainter of Cheasty Boulevard South is also the county seat of the King County, Washingtonsu ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cheasty_Boulevard_South> <http://dbpedia.org/ontology/maintainedBy> ?uri. <http://dbpedia.org/resource/King_County,_Washington> <http://dbpedia.org/ontology/countySeat> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/maintainedBy",
        "predicate1_mention": "mainter",
        "predicate2_uri": "http://dbpedia.org/ontology/countySeat",
        "predicate2_mention": "county seat",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Cheasty_Boulevard_South",
        "entity1_mention": "cheasty boulevard south",
        "entity2_uri": "http://dbpedia.org/resource/King_County,_Washington",
        "entity2_mention": "King County, Washingtonsu"
    },
    {
        "id": "3190",
        "question": "What work has been directed by Orson Welles and distributed by  RKO Pictures?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Orson_Welles> . ?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/RKO_Pictures>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/director",
        "predicate1_mention": "directed",
        "predicate2_uri": "http://dbpedia.org/property/distributor",
        "predicate2_mention": "distributed",
        "type_uri": "http://dbpedia.org/ontology/Work",
        "type_mention": "work",
        "entity1_uri": "http://dbpedia.org/resource/Orson_Welles",
        "entity1_mention": "orson welles",
        "entity2_uri": "http://dbpedia.org/resource/RKO_Pictures",
        "entity2_mention": "rko pictures"
    },
    {
        "id": "3192",
        "question": "Name the sea located near Europe and has a nearby city as Rostock ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Rostock> . ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Europe>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/cities",
        "predicate1_mention": "city",
        "predicate2_uri": "http://dbpedia.org/ontology/location",
        "predicate2_mention": "located",
        "type_uri": "http://dbpedia.org/ontology/Sea",
        "type_mention": "sea",
        "entity1_uri": "http://dbpedia.org/resource/Rostock",
        "entity1_mention": "rostock",
        "entity2_uri": "http://dbpedia.org/resource/Europe",
        "entity2_mention": "europe"
    },
    {
        "id": "3193",
        "question": "Which nearest city of LoDaisKa Site is also the location of Oskar Blues Brewery ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/LoDaisKa_Site> <http://dbpedia.org/ontology/nearestCity> ?uri. <http://dbpedia.org/resource/Oskar_Blues_Brewery> <http://dbpedia.org/property/location> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/nearestCity",
        "predicate1_mention": "nearest city",
        "predicate2_uri": "http://dbpedia.org/property/location",
        "predicate2_mention": "location",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/LoDaisKa_Site",
        "entity1_mention": "lodaiska site",
        "entity2_uri": "http://dbpedia.org/resource/Oskar_Blues_Brewery",
        "entity2_mention": "oskar blues brewery"
    },
    {
        "id": "3194",
        "question": "What city is the place of birth of Alexander Morozevich which is also the official residence of Dmitri Nossov ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alexander_Morozevich> <http://dbpedia.org/ontology/birthPlace> ?uri. <http://dbpedia.org/resource/Dmitri_Nossov> <http://dbpedia.org/property/residence> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/birthPlace",
        "predicate1_mention": "place of birth",
        "predicate2_uri": "http://dbpedia.org/property/residence",
        "predicate2_mention": "residence",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Alexander_Morozevich",
        "entity1_mention": "alexander morozevich",
        "entity2_uri": "http://dbpedia.org/resource/Dmitri_Nossov",
        "entity2_mention": "dmitri nossov"
    },
    {
        "id": "3195",
        "question": "Which team's players have played in the national hockey league?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/National_Hockey_League> . ?x <http://dbpedia.org/ontology/team> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/league",
        "predicate1_mention": "league",
        "predicate2_uri": "http://dbpedia.org/ontology/team",
        "predicate2_mention": "team's",
        "type_uri": "http://dbpedia.org/ontology/Athlete",
        "type_mention": "players",
        "entity1_uri": "http://dbpedia.org/resource/National_Hockey_League",
        "entity1_mention": "national hockey league",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3196",
        "question": "Which founder of European School, karlsruhe is also the jursdiction of Eurpoean Border of Coast guard ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/European_Border_and_Coast_Guard> <http://dbpedia.org/property/jurisdiction> ?uri. <http://dbpedia.org/resource/European_School,_Karlsruhe> <http://dbpedia.org/property/founder> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/jurisdiction",
        "predicate1_mention": "jursdiction",
        "predicate2_uri": "http://dbpedia.org/property/founder",
        "predicate2_mention": "founder",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/European_Border_and_Coast_Guard",
        "entity1_mention": "Eurpoean Border of Coast guard",
        "entity2_uri": "http://dbpedia.org/resource/European_School,_Karlsruhe",
        "entity2_mention": "european school, karlsruhe"
    },
    {
        "id": "3197",
        "question": "What is that show whose theme was composed by Joel Goodman?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Joel_Goodman> . ?x <http://dbpedia.org/property/showName> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/themeMusicComposer",
        "predicate1_mention": "composed by",
        "predicate2_uri": "http://dbpedia.org/property/showName",
        "predicate2_mention": "show",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "show",
        "entity1_uri": "http://dbpedia.org/resource/Joel_Goodman",
        "entity1_mention": "joel goodman",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3198",
        "question": "What is the academic discipline of Journal of Cerebral Blood Flow & Metabolism ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_&_Metabolism> <http://dbpedia.org/ontology/academicDiscipline> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/academicDiscipline",
        "predicate1_mention": "academic discipline",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_&_Metabolism",
        "entity1_mention": " journal of cerebral blood flow & metabolism",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3199",
        "question": "Trevor Peacock has narrated in which movie?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/narrator> <http://dbpedia.org/resource/Trevor_Peacock>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/narrator",
        "predicate1_mention": "narrated",
        "predicate2_uri": "http://dbpedia.org/ontology/Film",
        "predicate2_mention": "movie",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Trevor_Peacock",
        "entity1_mention": "trevor peacock",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3200",
        "question": "What are some gymnasts coached by Amanda Reddin?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/headcoach> <http://dbpedia.org/resource/Amanda_Reddin>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Gymnast>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/headcoach",
        "predicate1_mention": "coached",
        "predicate2_uri": "http://dbpedia.org/ontology/Gymnast",
        "predicate2_mention": "gymnasts",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Amanda_Reddin",
        "entity1_mention": "amanda reddin",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3201",
        "question": "What team has Sam Keller and Jim McMilin played for?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sam_Keller> <http://dbpedia.org/ontology/formerTeam> ?uri. <http://dbpedia.org/resource/Jim_McMillin> <http://dbpedia.org/ontology/team> ?uri . }",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/formerTeam",
        "predicate1_mention": "team",
        "predicate2_uri": "http://dbpedia.org/ontology/team",
        "predicate2_mention": "team",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Sam_Keller",
        "entity1_mention": "sam keller",
        "entity2_uri": "http://dbpedia.org/resource/Jim_McMillin",
        "entity2_mention": "Jim McMilin"
    },
    {
        "id": "3203",
        "question": "Which gadgets are made by companies of New Taipei City?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/locationCity> <http://dbpedia.org/resource/New_Taipei_City> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }",
        "sparql_id": "6",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/locationCity",
        "predicate1_mention": "city",
        "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
        "predicate2_mention": "made by",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/New_Taipei_City",
        "entity1_mention": "New Taipei City",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3204",
        "question": "Which work institutions of the Andrew Schally is the  alma mater of the Mara Eugenia Rojas Correa ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Andrew_Schally> <http://dbpedia.org/property/workInstitutions> ?uri. <http://dbpedia.org/resource/Mar\u00eda_Eugenia_Rojas_Correa> <http://dbpedia.org/property/almaMater> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/workInstitutions",
        "predicate1_mention": "work institutions",
        "predicate2_uri": "http://dbpedia.org/property/almaMater",
        "predicate2_mention": "alma mater",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Andrew_Schally",
        "entity1_mention": "andrew schally",
        "entity2_uri": "http://dbpedia.org/resource/Mar\u00eda_Eugenia_Rojas_Correa",
        "entity2_mention": "eugenia rojas correa"
    },
    {
        "id": "3206",
        "question": "What are the universities where athletics is regulated by National Collegiate Athletic Association?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/athletics> <http://dbpedia.org/resource/National_Collegiate_Athletic_Association>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/athletics",
        "predicate1_mention": "athletics",
        "predicate2_uri": "http://dbpedia.org/ontology/University",
        "predicate2_mention": "universities",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/National_Collegiate_Athletic_Association",
        "entity1_mention": "National Collegiate Athletic Association",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3207",
        "question": "Who is the owner of Ford Motor Credit comapny which is also the builder of FORD SHO V8 engine ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Motor_Credit_Company> <http://dbpedia.org/property/owner> ?uri. <http://dbpedia.org/resource/Ford_SHO_V8_engine> <http://dbpedia.org/ontology/manufacturer> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/owner",
        "predicate1_mention": "owner",
        "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
        "predicate2_mention": "builder",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Ford_Motor_Credit_Company",
        "entity1_mention": "credit",
        "entity2_uri": "http://dbpedia.org/resource/Ford_SHO_V8_engine",
        "entity2_mention": "FORD SHO V8 engine"
    },
    {
        "id": "3209",
        "question": "Name the person whose relation is Dee Dee Warwick?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Dee_Dee_Warwick>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/relation",
        "predicate1_mention": "relation",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Person",
        "type_mention": "person",
        "entity1_uri": "http://dbpedia.org/resource/Dee_Dee_Warwick",
        "entity1_mention": "dee dee warwick",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3210",
        "question": "who are some miss michigan usa?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Miss_Michigan_USA>  . }",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/title",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Miss_Michigan_USA",
        "entity1_mention": "miss michigan usa",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3211",
        "question": "What are the films whose atleast one cast member died due to Colorectal cancer?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathCause> <http://dbpedia.org/resource/Colorectal_cancer> . ?uri <http://dbpedia.org/property/starring> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/deathCause",
        "predicate1_mention": "died",
        "predicate2_uri": "http://dbpedia.org/property/starring",
        "predicate2_mention": "cast member",
        "type_uri": "http://dbpedia.org/ontology/Film",
        "type_mention": "films",
        "entity1_uri": "http://dbpedia.org/resource/Colorectal_cancer",
        "entity1_mention": "colorectal cancer",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3213",
        "question": "What is the draft team of the ice hockey players whose position is Centre ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Centre_(ice_hockey)> . ?x <http://dbpedia.org/ontology/draftTeam> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/IceHockeyPlayer>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/position",
        "predicate1_mention": "position",
        "predicate2_uri": "http://dbpedia.org/ontology/draftTeam",
        "predicate2_mention": "draft team",
        "type_uri": "http://dbpedia.org/ontology/IceHockeyPlayer",
        "type_mention": "hockey players",
        "entity1_uri": "http://dbpedia.org/resource/Centre_(ice_hockey)",
        "entity1_mention": "centre",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3214",
        "question": "Harry Huston and Dick Spalding played their first match for which team?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Harry_Huston> <http://dbpedia.org/property/debutteam> ?uri. <http://dbpedia.org/resource/Dick_Spalding> <http://dbpedia.org/property/debutteam> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/debutteam",
        "predicate1_mention": "team",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Harry_Huston",
        "entity1_mention": "harry huston",
        "entity2_uri": "http://dbpedia.org/resource/Dick_Spalding",
        "entity2_mention": "dick Spalding"
    },
    {
        "id": "3216",
        "question": "What are some neighboring cities of cologny?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Cologny>  . }",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/neighboringMunicipalities",
        "predicate1_mention": "neighboring",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Cologny",
        "entity1_mention": "cologny",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3217",
        "question": "Whose relatives are Uncle Henry (Oz) and Aunt Em?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Uncle_Henry_(Oz)> . ?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Aunt_Em> . }",
        "sparql_id": "7",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/relative",
        "predicate1_mention": "relatives",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Uncle_Henry_(Oz)",
        "entity1_mention": "uncle henry (oz)",
        "entity2_uri": "http://dbpedia.org/resource/Aunt_Em",
        "entity2_mention": "aunt em"
    },
    {
        "id": "3218",
        "question": "Give me the count of interests of the philosopher whose primary interest is Metaphysics ?",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/Metaphysics> . ?x <http://dbpedia.org/property/mainInterests> ?uri }",
        "sparql_id": "111",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/mainInterests",
        "predicate1_mention": "interests",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Metaphysics",
        "entity1_mention": "metaphysics",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3220",
        "question": "Was Henry Knox a major general?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Henry_Knox> <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/Major_general_(United_States)> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/militaryRank",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Henry_Knox",
        "entity1_mention": "henry knox",
        "entity2_uri": "http://dbpedia.org/resource/Major_general_(United_States)",
        "entity2_mention": "major general"
    },
    {
        "id": "3221",
        "question": "List the common prime minister of the Robert Ray and graham richardson ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Ray_(Australian_politician)> <http://dbpedia.org/ontology/primeMinister> ?uri. <http://dbpedia.org/resource/Graham_Richardson> <http://dbpedia.org/ontology/primeMinister> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/primeMinister",
        "predicate1_mention": "prime minister",
        "predicate2_uri": "",
        "predicate2_mention": "r",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Robert_Ray_(Australian_politician)",
        "entity1_mention": "robert ray",
        "entity2_uri": "http://dbpedia.org/resource/Graham_Richardson",
        "entity2_mention": "graham richardson"
    },
    {
        "id": "3223",
        "question": "List the common religion affiliation of khadra Haji Ismail and Yasmin khatun ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Khadra_Haji_Ismail_Geid> <http://dbpedia.org/property/religion> ?uri. <http://dbpedia.org/resource/Yasmin_Khatun> <http://dbpedia.org/ontology/religion> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/religion",
        "predicate1_mention": "religion",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Khadra_Haji_Ismail_Geid",
        "entity1_mention": "khadra haji ismail",
        "entity2_uri": "http://dbpedia.org/resource/Yasmin_Khatun",
        "entity2_mention": "yasmin khatun"
    },
    {
        "id": "3224",
        "question": "What does the bridge go over, which is in Katima Mulilo?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Katima_Mulilo> . ?x <http://dbpedia.org/property/crosses> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/locatedInArea",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/crosses",
        "predicate2_mention": "go over",
        "type_uri": "http://dbpedia.org/ontology/Bridge",
        "type_mention": "bridge",
        "entity1_uri": "http://dbpedia.org/resource/Katima_Mulilo",
        "entity1_mention": "katima mulilo",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3225",
        "question": "What are the television shows whose distributor is a division of Warner Bros. International TV?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/divisions> <http://dbpedia.org/resource/Warner_Bros._International_Television> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/divisions",
        "predicate1_mention": "division",
        "predicate2_uri": "http://dbpedia.org/property/distributor",
        "predicate2_mention": "distributor",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "television shows",
        "entity1_uri": "http://dbpedia.org/resource/Warner_Bros._International_Television",
        "entity1_mention": "Warner Bros. International TV",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3226",
        "question": "Cleopatra V of Egypt is father to which royalty?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Cleopatra_V_of_Egypt> } ",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/mother",
        "predicate1_mention": "father",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Cleopatra_V_of_Egypt",
        "entity1_mention": "cleopatra v of egypt",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3227",
        "question": "Which founder of sea Gayle Music is also the judge of Rising Star ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sea_Gayle_Music> <http://dbpedia.org/property/founder> ?uri. <http://dbpedia.org/resource/Rising_Star_(U.S._TV_series)> <http://dbpedia.org/property/judges> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/founder",
        "predicate1_mention": "founder",
        "predicate2_uri": "http://dbpedia.org/property/judges",
        "predicate2_mention": "judge",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Sea_Gayle_Music",
        "entity1_mention": "sea Gayle Music",
        "entity2_uri": "http://dbpedia.org/resource/Rising_Star_(U.S._TV_series)",
        "entity2_mention": "rising star"
    },
    {
        "id": "3229",
        "question": "Name the award given in Norway and presented by Swedish Academy ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Swedish_Academy> . ?uri <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Norway>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/presenter",
        "predicate1_mention": "presented",
        "predicate2_uri": "http://dbpedia.org/ontology/country",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Award",
        "type_mention": "award",
        "entity1_uri": "http://dbpedia.org/resource/Swedish_Academy",
        "entity1_mention": "swedish academy",
        "entity2_uri": "http://dbpedia.org/resource/Norway",
        "entity2_mention": "norway"
    },
    {
        "id": "3230",
        "question": "How many TV show has distributor located in Burbank California ?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Burbank,_California> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "406",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/locationCity",
        "predicate1_mention": "located in",
        "predicate2_uri": "http://dbpedia.org/property/distributor",
        "predicate2_mention": "distributor",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "show",
        "entity1_uri": "http://dbpedia.org/resource/Burbank,_California",
        "entity1_mention": "burbank california",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3231",
        "question": "NAme the employer for whihc Manu cornet has worked and also written in Google Web Toolkit ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Manu_Cornet> <http://dbpedia.org/property/employer> ?uri. <http://dbpedia.org/resource/Google_Web_Toolkit> <http://dbpedia.org/ontology/author> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/employer",
        "predicate1_mention": "employer",
        "predicate2_uri": "http://dbpedia.org/ontology/author",
        "predicate2_mention": "written",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Manu_Cornet",
        "entity1_mention": "manu cornet",
        "entity2_uri": "http://dbpedia.org/resource/Google_Web_Toolkit",
        "entity2_mention": "google web toolkit"
    },
    {
        "id": "3232",
        "question": "How many people have been canonized by Pope Benedict XVI?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/canonizedBy> <http://dbpedia.org/resource/Pope_Benedict_XVI>  . }",
        "sparql_id": "101",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/property/canonizedBy",
        "predicate1_mention": "canonized by",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Pope_Benedict_XVI",
        "entity1_mention": "pope benedict xvi",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3233",
        "question": "List the total number of awards of the musicals who have won Tony Award?",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Tony_Award> . ?x <http://dbpedia.org/property/awards> ?uri }",
        "sparql_id": "111",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/awards",
        "predicate1_mention": "awards",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Tony_Award",
        "entity1_mention": "Tony award",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3235",
        "question": "Where was the movie after Khiladi 786 recorded?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Khiladi_786> <http://dbpedia.org/property/nextAlbum> ?x . ?x <http://dbpedia.org/property/recorded> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/nextAlbum",
        "predicate1_mention": "after",
        "predicate2_uri": "http://dbpedia.org/property/recorded",
        "predicate2_mention": "recorded",
        "type_uri": "http://dbpedia.org/ontology/Film",
        "type_mention": "movie",
        "entity1_uri": "http://dbpedia.org/resource/Khiladi_786",
        "entity1_mention": "khiladi 786",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3237",
        "question": "Does Sonny Bill Williams belong in the Canterbury Bankstown Bulldogs club?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Sonny_Bill_Williams> <http://dbpedia.org/property/club> <http://dbpedia.org/resource/Canterbury-Bankstown_Bulldogs> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/club",
        "predicate1_mention": "club",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Sonny_Bill_Williams",
        "entity1_mention": "sonny bill williams",
        "entity2_uri": "http://dbpedia.org/resource/Canterbury-Bankstown_Bulldogs",
        "entity2_mention": "canterbury bankstown bulldogs"
    },
    {
        "id": "3238",
        "question": "Name the university which has Lieutenaunt general as superintendent and mascot as Gyrfalcon ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/superintendent> <http://dbpedia.org/resource/Lieutenant_general_(United_States)> . ?uri <http://dbpedia.org/property/mascot> <http://dbpedia.org/resource/Gyrfalcon>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/superintendent",
        "predicate1_mention": "superintendent",
        "predicate2_uri": "http://dbpedia.org/property/mascot",
        "predicate2_mention": "mascot",
        "type_uri": "http://dbpedia.org/ontology/University",
        "type_mention": "university",
        "entity1_uri": "http://dbpedia.org/resource/Lieutenant_general_(United_States)",
        "entity1_mention": "Lieutenaunt general",
        "entity2_uri": "http://dbpedia.org/resource/Gyrfalcon",
        "entity2_mention": "gyrfalcon"
    },
    {
        "id": "3239",
        "question": "What are the prizes awarded to the main members of DisneyToon Studios?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/DisneyToon_Studios> <http://dbpedia.org/ontology/keyPerson> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/keyPerson",
        "predicate1_mention": "main members",
        "predicate2_uri": "http://dbpedia.org/ontology/award",
        "predicate2_mention": "awarded",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/DisneyToon_Studios",
        "entity1_mention": "disneytoon studios",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3240",
        "question": "Humes High School is alma mater to which person?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/education> <http://dbpedia.org/resource/Humes_High_School>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/education",
        "predicate1_mention": "alma mater",
        "predicate2_uri": "http://dbpedia.org/ontology/Person",
        "predicate2_mention": "person",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Humes_High_School",
        "entity1_mention": "humes high school",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3241",
        "question": "What is the birth place of music artists which were associated with Albert Ayler ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Albert_Ayler> <http://dbpedia.org/property/associatedActs> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/associatedActs",
        "predicate1_mention": "associated",
        "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
        "predicate2_mention": "birth place",
        "type_uri": "http://dbpedia.org/ontology/MusicalArtist",
        "type_mention": "artists",
        "entity1_uri": "http://dbpedia.org/resource/Albert_Ayler",
        "entity1_mention": "albert ayler",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3243",
        "question": "List all the houses of United States Congress ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_States_Congress> <http://dbpedia.org/property/houses> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/houses",
        "predicate1_mention": "houses",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/United_States_Congress",
        "entity1_mention": "united states congress",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3244",
        "question": "Which sitcom is broadcasted by FOX and presented by Brian Dunkleman?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company> . ?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Brian_Dunkleman>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/channel",
        "predicate1_mention": "broadcasted by",
        "predicate2_uri": "http://dbpedia.org/property/presenter",
        "predicate2_mention": "presented by",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "sitcom",
        "entity1_uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company",
        "entity1_mention": "FOX",
        "entity2_uri": "http://dbpedia.org/resource/Brian_Dunkleman",
        "entity2_mention": "brian dunkleman"
    },
    {
        "id": "3245",
        "question": "Mota Engil built bridges over which rivers?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/builder> <http://dbpedia.org/resource/Mota-Engil> . ?x <http://dbpedia.org/ontology/crosses> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/builder",
        "predicate1_mention": "built",
        "predicate2_uri": "http://dbpedia.org/ontology/crosses",
        "predicate2_mention": "over",
        "type_uri": "http://dbpedia.org/ontology/Bridge",
        "type_mention": "bridges",
        "entity1_uri": "http://dbpedia.org/resource/Mota-Engil",
        "entity1_mention": "mota engil",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3247",
        "question": "Which university provides license for WRVU ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WRVU> <http://dbpedia.org/property/licensee> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/licensee",
        "predicate1_mention": "license",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/WRVU",
        "entity1_mention": "wrvu",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3248",
        "question": "UEM group have made bridges crossing over what?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/UEM_Group> . ?x <http://dbpedia.org/property/crosses> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/designer",
        "predicate1_mention": "made",
        "predicate2_uri": "http://dbpedia.org/property/crosses",
        "predicate2_mention": "crossing",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/UEM_Group",
        "entity1_mention": "uem group",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3249",
        "question": "Which distributer of Glover (video game) is also the  publisher of the Super Mario Adventures ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Glover_(video_game)> <http://dbpedia.org/ontology/distributor> ?uri. <http://dbpedia.org/resource/Super_Mario_Adventures> <http://dbpedia.org/property/publisher> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/distributor",
        "predicate1_mention": "distributer",
        "predicate2_uri": "http://dbpedia.org/property/publisher",
        "predicate2_mention": "publisher",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Glover_(video_game)",
        "entity1_mention": "glover (video game)",
        "entity2_uri": "http://dbpedia.org/resource/Super_Mario_Adventures",
        "entity2_mention": "super mario adventures"
    },
    {
        "id": "3250",
        "question": "What is the area of Tar Heel Sports Network ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tar_Heel_Sports_Network> <http://dbpedia.org/property/area> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/area",
        "predicate1_mention": "area",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Tar_Heel_Sports_Network",
        "entity1_mention": "Tar Heel Sports Network",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3252",
        "question": "List the party of the office holder which also has the affiliation with Congress Socialist party ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/otherParty> <http://dbpedia.org/resource/Congress_Socialist_Party> . ?x <http://dbpedia.org/ontology/otherParty> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/otherParty",
        "predicate1_mention": "party",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
        "type_mention": "office holder",
        "entity1_uri": "http://dbpedia.org/resource/Congress_Socialist_Party",
        "entity1_mention": "congress socialist party",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3253",
        "question": "Which shows have voices from people signed up with ABC Records?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/ABC_Records> . ?uri <http://dbpedia.org/property/voices> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/label",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/voices",
        "predicate2_mention": "voices",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "shows",
        "entity1_uri": "http://dbpedia.org/resource/ABC_Records",
        "entity1_mention": "abc records",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3254",
        "question": "Whose deputy was Franz von Papen?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Franz_von_Papen> } ",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/deputy",
        "predicate1_mention": "deputy",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Franz_von_Papen",
        "entity1_mention": "franz von papen",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3256",
        "question": "Gamini Seneviratne and Katyayana are two followers of which religion?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gamini_Seneviratne> <http://dbpedia.org/property/religion> ?uri. <http://dbpedia.org/resource/Katyayana_(Buddhist)> <http://dbpedia.org/property/religion> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/religion",
        "predicate1_mention": "religion",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Gamini_Seneviratne",
        "entity1_mention": "gamini seneviratne",
        "entity2_uri": "http://dbpedia.org/resource/Katyayana_(Buddhist)",
        "entity2_mention": "katyayana"
    },
    {
        "id": "3257",
        "question": "Give me some administrators of bridges over which cars can go?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/carries> <http://dbpedia.org/resource/Motor_vehicle> . ?x <http://dbpedia.org/ontology/maintainedBy> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/carries",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/maintainedBy",
        "predicate2_mention": "administrators",
        "type_uri": "http://dbpedia.org/ontology/Bridge",
        "type_mention": "bridges",
        "entity1_uri": "http://dbpedia.org/resource/Motor_vehicle",
        "entity1_mention": "cars",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3258",
        "question": "Whose artworks are in Sao Paulo Museum of Art?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/museum> <http://dbpedia.org/resource/S\u00e3o_Paulo_Museum_of_Art> . ?x <http://dbpedia.org/property/artist> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artwork>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/museum",
        "predicate1_mention": "museum",
        "predicate2_uri": "http://dbpedia.org/property/artist",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Artwork",
        "type_mention": "artworks",
        "entity1_uri": "http://dbpedia.org/resource/S\u00e3o_Paulo_Museum_of_Art",
        "entity1_mention": "Sao Paulo Museum of Art",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3259",
        "question": "Through which states does the road go, which has a junction on Keningston Maryland?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/routeJunction> <http://dbpedia.org/resource/Kensington,_Maryland> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Road>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/routeJunction",
        "predicate1_mention": "junction",
        "predicate2_uri": "http://dbpedia.org/ontology/state",
        "predicate2_mention": "states",
        "type_uri": "http://dbpedia.org/ontology/Road",
        "type_mention": "road",
        "entity1_uri": "http://dbpedia.org/resource/Kensington,_Maryland",
        "entity1_mention": "Keningston Maryland",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3260",
        "question": "After the death of which political figure, did the Coalition Provisional Authority came into power?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Coalition_Provisional_Authority>  . }",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/successor",
        "predicate1_mention": "came into power",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Coalition_Provisional_Authority",
        "entity1_mention": "coalition provisional authority",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3262",
        "question": "Name the scientist who is known for inventing Anthrax and was a member of Royal Society?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Anthrax> . ?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Royal_Society>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/knownFor",
        "predicate1_mention": "known for",
        "predicate2_uri": "http://dbpedia.org/property/prizes",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Scientist",
        "type_mention": "scientist",
        "entity1_uri": "http://dbpedia.org/resource/Anthrax",
        "entity1_mention": "anthrax",
        "entity2_uri": "http://dbpedia.org/resource/Royal_Society",
        "entity2_mention": "royal society"
    },
    {
        "id": "3263",
        "question": "Who were the opponents of the people buried in the tower of London?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Tower_of_London> . ?x <http://dbpedia.org/ontology/opponent> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/restingPlace",
        "predicate1_mention": "buried in",
        "predicate2_uri": "http://dbpedia.org/ontology/opponent",
        "predicate2_mention": "opponents",
        "type_uri": "http://dbpedia.org/ontology/Person",
        "type_mention": "people",
        "entity1_uri": "http://dbpedia.org/resource/Tower_of_London",
        "entity1_mention": "tower of london",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3264",
        "question": "How many factions have fought when Egushawa was a commander?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Egushawa> . ?x <http://dbpedia.org/property/combatant> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/commander",
        "predicate1_mention": "commander",
        "predicate2_uri": "http://dbpedia.org/property/combatant",
        "predicate2_mention": "factions",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Egushawa",
        "entity1_mention": "egushawa",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3265",
        "question": "Which terrotory of Tonkin campaign also the death bed of Thophane Vnard ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tonkin_Campaign> <http://dbpedia.org/ontology/territory> ?uri. <http://dbpedia.org/resource/Th\u00e9ophane_V\u00e9nard> <http://dbpedia.org/ontology/deathPlace> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/territory",
        "predicate1_mention": "terrotory",
        "predicate2_uri": "http://dbpedia.org/ontology/deathPlace",
        "predicate2_mention": "death bed",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Tonkin_Campaign",
        "entity1_mention": "tonkin campaign",
        "entity2_uri": "http://dbpedia.org/resource/Th\u00e9ophane_V\u00e9nard",
        "entity2_mention": "Thophane Vnard"
    },
    {
        "id": "3268",
        "question": "How many titles were given to people who engaged in the Operation Dragoon?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Operation_Dragoon> . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/battles",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/award",
        "predicate2_mention": "titles",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Operation_Dragoon",
        "entity1_mention": "operation dragoon",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3269",
        "question": "Who is the stockholder of Paphos International Airport ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Paphos_International_Airport> <http://dbpedia.org/property/owner> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/owner",
        "predicate1_mention": "stockholder",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Paphos_International_Airport",
        "entity1_mention": "Paphos International Airport",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3270",
        "question": "How many other important things has the painter of Sarah Jane Adventures done?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/The_Sarah_Jane_Adventures> <http://dbpedia.org/property/creator> ?x . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . }",
        "sparql_id": "103",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/creator",
        "predicate1_mention": "painter",
        "predicate2_uri": "http://dbpedia.org/ontology/notableWork",
        "predicate2_mention": "important things",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures",
        "entity1_mention": "sarah jane adventures",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3271",
        "question": "Count all the universities who participated in the tournament won by Alabama Crimson Tides in 2015 ?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/champion> <http://dbpedia.org/resource/2015_Alabama_Crimson_Tide_football_team> . ?uri <http://dbpedia.org/property/athletics> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
        "sparql_id": "406",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/champion",
        "predicate1_mention": "won",
        "predicate2_uri": "http://dbpedia.org/property/athletics",
        "predicate2_mention": "participated",
        "type_uri": "http://dbpedia.org/ontology/University",
        "type_mention": "universities",
        "entity1_uri": "http://dbpedia.org/resource/2015_Alabama_Crimson_Tide_football_team",
        "entity1_mention": "Alabama Crimson Tides",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3273",
        "question": "What is the currency of the country of Kerguelen Islands?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kerguelen_Islands> <http://dbpedia.org/ontology/governmentType> ?x . ?x <http://dbpedia.org/ontology/currency> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/governmentType",
        "predicate1_mention": "country",
        "predicate2_uri": "http://dbpedia.org/ontology/currency",
        "predicate2_mention": "currency",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Kerguelen_Islands",
        "entity1_mention": "kerguelen islands",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3274",
        "question": "What is the region of Lumberjack  ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lumberjack_100> <http://dbpedia.org/property/region> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/region",
        "predicate1_mention": "region",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Lumberjack_100",
        "entity1_mention": "lumberjack",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3275",
        "question": "For which country did Alexander Lippisch design airplanes?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Alexander_Lippisch> . ?x <http://dbpedia.org/property/nationalOrigin> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Aircraft>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/designer",
        "predicate1_mention": "design",
        "predicate2_uri": "http://dbpedia.org/property/nationalOrigin",
        "predicate2_mention": "country",
        "type_uri": "http://dbpedia.org/ontology/Aircraft",
        "type_mention": "airplanes",
        "entity1_uri": "http://dbpedia.org/resource/Alexander_Lippisch",
        "entity1_mention": "alexander lippisch",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3276",
        "question": "Where did george f hoar and willian langer spend the most important time of their political career?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_Frisbie_Hoar> <http://dbpedia.org/property/order> ?uri. <http://dbpedia.org/resource/William_Langer> <http://dbpedia.org/property/order> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/order",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/order",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/George_Frisbie_Hoar",
        "entity1_mention": "george f hoar",
        "entity2_uri": "http://dbpedia.org/resource/William_Langer",
        "entity2_mention": "willian langer"
    },
    {
        "id": "3277",
        "question": "What were the occupations of Marcus Floyd?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marcus_Floyd> <http://dbpedia.org/ontology/occupation> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/occupation",
        "predicate1_mention": "occupations",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Marcus_Floyd",
        "entity1_mention": "marcus floyd",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3279",
        "question": "What is the country whose speaker is Pandikar Amin Mulia?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Pandikar_Amin_Mulia>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/leaderName",
        "predicate1_mention": "speaker",
        "predicate2_uri": "http://dbpedia.org/ontology/Country",
        "predicate2_mention": "country",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Pandikar_Amin_Mulia",
        "entity1_mention": "pandikar amin mulia",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3280",
        "question": "Who is the Pole driver of 1997 Canadian Grand Prix ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1997_Canadian_Grand_Prix> <http://dbpedia.org/property/poleDriver> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/poleDriver",
        "predicate1_mention": "pole driver",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/1997_Canadian_Grand_Prix",
        "entity1_mention": "1997 Canadian Grand Prix",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3282",
        "question": "How many different things are used as ingredients in Sweden?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Sweden> . ?x <http://dbpedia.org/ontology/ingredient> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/country",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/ingredient",
        "predicate2_mention": "ingredients",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Sweden",
        "entity1_mention": "sweden",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3285",
        "question": "Who composed the lyrics of Holler If Ya Hear Me ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Holler_If_Ya_Hear_Me_(musical)> <http://dbpedia.org/property/lyrics> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/lyrics",
        "predicate1_mention": "lyrics",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Holler_If_Ya_Hear_Me_(musical)",
        "entity1_mention": " lyrics of holler if ya hear me",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3286",
        "question": "Which ground of 2016 Fort Lauderdale Strikers season is the place of birth of Kaitlyn Ashley ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2016_Fort_Lauderdale_Strikers_season> <http://dbpedia.org/ontology/ground> ?uri. <http://dbpedia.org/resource/Kaitlyn_Ashley> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/ground",
        "predicate1_mention": "ground",
        "predicate2_uri": "http://dbpedia.org/property/placeOfBirth",
        "predicate2_mention": "place of birth",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/2016_Fort_Lauderdale_Strikers_season",
        "entity1_mention": "2016 Fort Lauderdale Strikers season",
        "entity2_uri": "http://dbpedia.org/resource/Kaitlyn_Ashley",
        "entity2_mention": "kaitlyn ashley"
    },
    {
        "id": "3288",
        "question": "Under which president did Loretta Ucelli and Ann Lewis hold an office?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Loretta_Ucelli> <http://dbpedia.org/ontology/president> ?uri. <http://dbpedia.org/resource/Ann_Lewis> <http://dbpedia.org/ontology/president> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/president",
        "predicate1_mention": "president",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Loretta_Ucelli",
        "entity1_mention": "loretta ucelli",
        "entity2_uri": "http://dbpedia.org/resource/Ann_Lewis",
        "entity2_mention": "ann lewis"
    },
    {
        "id": "3289",
        "question": "What are the things whose director of photography died in United States?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/cinematography> ?x  . }",
        "sparql_id": "6",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/deathPlace",
        "predicate1_mention": "died",
        "predicate2_uri": "http://dbpedia.org/property/cinematography",
        "predicate2_mention": "photography",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/United_States",
        "entity1_mention": "united states",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3290",
        "question": "Paul Leonard's work can be divided into how many series?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Paul_Leonard_(writer)> . ?x <http://dbpedia.org/ontology/series> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/author",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/series",
        "predicate2_mention": "series",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Paul_Leonard_(writer)",
        "entity1_mention": "Paul Leonard",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3291",
        "question": "List the mountains of the range Sierra Nevada (U.S.) located in  California?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mountainRange> <http://dbpedia.org/resource/Sierra_Nevada_(U.S.)> . ?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/California>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/mountainRange",
        "predicate1_mention": "mountains",
        "predicate2_uri": "http://dbpedia.org/ontology/locatedInArea",
        "predicate2_mention": "located",
        "type_uri": "http://dbpedia.org/ontology/Mountain",
        "type_mention": "mountains",
        "entity1_uri": "http://dbpedia.org/resource/Sierra_Nevada_(U.S.)",
        "entity1_mention": "sierra nevada (u.s.)",
        "entity2_uri": "http://dbpedia.org/resource/California",
        "entity2_mention": "california"
    },
    {
        "id": "3292",
        "question": "Where did Marvo originate?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mavro> <http://dbpedia.org/ontology/origin> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/origin",
        "predicate1_mention": "originate",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Mavro",
        "entity1_mention": "Marvo",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3295",
        "question": "In which company's boards does the founder of Bomis sit?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bomis> <http://dbpedia.org/ontology/foundedBy> ?x . ?x <http://dbpedia.org/ontology/board> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/foundedBy",
        "predicate1_mention": "founder",
        "predicate2_uri": "http://dbpedia.org/ontology/board",
        "predicate2_mention": "boards",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Bomis",
        "entity1_mention": "bomis",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3296",
        "question": "Who narrated the albums in which Harry Nilsson performed?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Harry_Nilsson> . ?x <http://dbpedia.org/property/narrated> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/artist",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/narrated",
        "predicate2_mention": "narrated",
        "type_uri": "http://dbpedia.org/ontology/Album",
        "type_mention": "albums",
        "entity1_uri": "http://dbpedia.org/resource/Harry_Nilsson",
        "entity1_mention": "harry nilsson",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3297",
        "question": "How many religion's commanders have served in the Royal Thai Army?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Royal_Thai_Army> <http://dbpedia.org/property/notableCommanders> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
        "sparql_id": "103",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/notableCommanders",
        "predicate1_mention": "commanders",
        "predicate2_uri": "http://dbpedia.org/ontology/religion",
        "predicate2_mention": "religion's",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Royal_Thai_Army",
        "entity1_mention": "royal thai army",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3298",
        "question": "What do craig Van tilbury and karen Grigorian do for a living?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Karen_Grigorian> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/Craig_Van_Tilbury> <http://dbpedia.org/ontology/occupation> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/occupation",
        "predicate1_mention": "do for a living",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Karen_Grigorian",
        "entity1_mention": "karen grigorian",
        "entity2_uri": "http://dbpedia.org/resource/Craig_Van_Tilbury",
        "entity2_mention": "craig Van tilbury"
    },
    {
        "id": "3299",
        "question": "What is the hub of Wan Air ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wan_Air> <http://dbpedia.org/property/hubs> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/hubs",
        "predicate1_mention": "hub",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Wan_Air",
        "entity1_mention": "wan air",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3300",
        "question": "What is the debut team of Tom O'Malley ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tom_O'Malley> <http://dbpedia.org/property/debutteam> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/debutteam",
        "predicate1_mention": "debut team",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Tom_O'Malley",
        "entity1_mention": "Tom O'Malley",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3303",
        "question": "Is Denver the largest city of Colorado?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Colorado> <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Denver> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/largestCity",
        "predicate1_mention": "largest city",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Colorado",
        "entity1_mention": "colorado",
        "entity2_uri": "http://dbpedia.org/resource/Denver",
        "entity2_mention": "denver"
    },
    {
        "id": "3305",
        "question": "Which is the largest city of Union State ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Union_State> <http://dbpedia.org/property/largestCity> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/largestCity",
        "predicate1_mention": "largest city",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Union_State",
        "entity1_mention": "union state",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3306",
        "question": "Where is the tunnel, which is operated by BNSF railways?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/operatedBy> <http://dbpedia.org/resource/BNSF_Railway> . ?x <http://dbpedia.org/property/location> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RailwayTunnel>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/operatedBy",
        "predicate1_mention": "operated by",
        "predicate2_uri": "http://dbpedia.org/property/location",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/RailwayTunnel",
        "type_mention": "railways",
        "entity1_uri": "http://dbpedia.org/resource/BNSF_Railway",
        "entity1_mention": "BNSF railways",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3307",
        "question": "What is the mascot of the military unit in which Ronald Wilson served?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ronald_Wilson> <http://dbpedia.org/property/branch> ?x . ?x <http://dbpedia.org/property/mascot> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/branch",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/mascot",
        "predicate2_mention": "mascot",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Ronald_Wilson",
        "entity1_mention": "ronald wilson",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3308",
        "question": "Name the capital of Barony of Caux ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Barony_of_Caux> <http://dbpedia.org/ontology/capital> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/capital",
        "predicate1_mention": "capital",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Barony_of_Caux",
        "entity1_mention": "barony of caux",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3309",
        "question": "Who battled under commander Egushawa in a conflict?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Egushawa> . ?x <http://dbpedia.org/property/combatant> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/commander",
        "predicate1_mention": "commander",
        "predicate2_uri": "http://dbpedia.org/property/combatant",
        "predicate2_mention": "battled",
        "type_uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "type_mention": "conflict",
        "entity1_uri": "http://dbpedia.org/resource/Egushawa",
        "entity1_mention": "egushawa",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3310",
        "question": "In which country is Bocas del toro a capital of some region?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/capital> <http://dbpedia.org/resource/Bocas_Town,_Bocas_del_Toro> . ?x <http://dbpedia.org/property/country> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/capital",
        "predicate1_mention": "capital",
        "predicate2_uri": "http://dbpedia.org/property/country",
        "predicate2_mention": "country",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Bocas_Town,_Bocas_del_Toro",
        "entity1_mention": "Bocas del toro",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3311",
        "question": "List the launch site of the rockets whose one of the launch site has been Cape Canaveral Air Force Station Launch Complex 26 ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station_Launch_Complex_26> . ?x <http://dbpedia.org/ontology/launchSite> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Rocket>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/launchSite",
        "predicate1_mention": "launch",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Rocket",
        "type_mention": "rockets",
        "entity1_uri": "http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station_Launch_Complex_26",
        "entity1_mention": "cape canaveral air force station launch complex 26",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3312",
        "question": "What products are made by Tehran based companies?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Tehran> . ?x <http://dbpedia.org/ontology/product> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/location",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/product",
        "predicate2_mention": "products",
        "type_uri": "http://dbpedia.org/ontology/Company",
        "type_mention": "companies",
        "entity1_uri": "http://dbpedia.org/resource/Tehran",
        "entity1_mention": "tehran",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3313",
        "question": "What are some causes of death of European Americans?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/ethnicity> <http://dbpedia.org/resource/European_Americans> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/ethnicity",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/deathCause",
        "predicate2_mention": "death",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/European_Americans",
        "entity1_mention": "european americans",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3315",
        "question": "List the writers of Tales of Suspense ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tales_of_Suspense> <http://dbpedia.org/property/writers> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/writers",
        "predicate1_mention": "writers",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Tales_of_Suspense",
        "entity1_mention": "tales of suspense",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3316",
        "question": "Which settlement's neighboring municipalities are Cologny and Pregny-Chambsy?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Cologny> . ?uri <http://dbpedia.org/ontology/neighboringMunicipality> <http://dbpedia.org/resource/Pregny-Chamb\u00e9sy>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/neighboringMunicipalities",
        "predicate1_mention": "neighboring municipalities",
        "predicate2_uri": "http://dbpedia.org/ontology/neighboringMunicipality",
        "predicate2_mention": "neighboring municipalities",
        "type_uri": "http://dbpedia.org/ontology/Settlement",
        "type_mention": "settlement's",
        "entity1_uri": "http://dbpedia.org/resource/Cologny",
        "entity1_mention": "cologny",
        "entity2_uri": "http://dbpedia.org/resource/Pregny-Chamb\u00e9sy",
        "entity2_mention": "Pregny-Chambsy"
    },
    {
        "id": "3317",
        "question": "In how many nations can I find people related to the feminist movement?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/movement> <http://dbpedia.org/resource/Feminism> . ?x <http://dbpedia.org/ontology/nationality> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/movement",
        "predicate1_mention": "movement",
        "predicate2_uri": "http://dbpedia.org/ontology/nationality",
        "predicate2_mention": "nations",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Feminism",
        "entity1_mention": "feminist",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3318",
        "question": "Name the home ground of  2015 Fort Lauderdale Strikers season ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2015_Fort_Lauderdale_Strikers_season> <http://dbpedia.org/ontology/ground> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/ground",
        "predicate1_mention": "ground",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/2015_Fort_Lauderdale_Strikers_season",
        "entity1_mention": "2015 Fort Lauderdale Strikers season",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3319",
        "question": "What kind of things are on the radio stations affiliated with the Baltimore Ravens?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Baltimore_Ravens> . ?x <http://dbpedia.org/ontology/programmeFormat> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/affiliations",
        "predicate1_mention": "affiliated",
        "predicate2_uri": "http://dbpedia.org/ontology/programmeFormat",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/RadioStation",
        "type_mention": "stations",
        "entity1_uri": "http://dbpedia.org/resource/Baltimore_Ravens",
        "entity1_mention": "baltimore ravens",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3320",
        "question": "Count the awards won by the people who graduated from the National and Kapodistrian University of Athens.",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_and_Kapodistrian_University_of_Athens> . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/almaMater",
        "predicate1_mention": "graduated from",
        "predicate2_uri": "http://dbpedia.org/ontology/award",
        "predicate2_mention": "awards",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/National_and_Kapodistrian_University_of_Athens",
        "entity1_mention": "National and Kapodistrian University of Athens",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3321",
        "question": "Which current member of Insect vs Robots is also the music composer of Kenny Dies ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Insects_vs_Robots> <http://dbpedia.org/property/currentMembers> ?uri. <http://dbpedia.org/resource/Kenny_Dies> <http://dbpedia.org/ontology/musicComposer> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/currentMembers",
        "predicate1_mention": "current member",
        "predicate2_uri": "http://dbpedia.org/ontology/musicComposer",
        "predicate2_mention": "music composer",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Insects_vs_Robots",
        "entity1_mention": "Insect vs Robots",
        "entity2_uri": "http://dbpedia.org/resource/Kenny_Dies",
        "entity2_mention": "kenny dies"
    },
    {
        "id": "3322",
        "question": "who was the president under which Joe Purcell is a lieutenant?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/lieutenant> <http://dbpedia.org/resource/Joe_Purcell> } ",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/lieutenant",
        "predicate1_mention": "lieutenant",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Joe_Purcell",
        "entity1_mention": "joe purcell",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3323",
        "question": "Name the narrators of the album which has been narrated by Alan Thicke ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/narrated> <http://dbpedia.org/resource/Alan_Thicke> . ?x <http://dbpedia.org/property/narrated> ?uri  . }",
        "sparql_id": "11",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/narrated",
        "predicate1_mention": "narrated",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Alan_Thicke",
        "entity1_mention": "alan thicke",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3326",
        "question": "Which pole driver of 1989 Portuguese Grand Prix was also the first driver of 1993 European Grand Prix ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1993_European_Grand_Prix> <http://dbpedia.org/property/firstDriver> ?uri. <http://dbpedia.org/resource/1989_Portuguese_Grand_Prix> <http://dbpedia.org/ontology/poleDriver> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/firstDriver",
        "predicate1_mention": "first driver",
        "predicate2_uri": "http://dbpedia.org/ontology/poleDriver",
        "predicate2_mention": "pole driver",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/1993_European_Grand_Prix",
        "entity1_mention": "1993 European Grand Prix",
        "entity2_uri": "http://dbpedia.org/resource/1989_Portuguese_Grand_Prix",
        "entity2_mention": "1989 Portuguese Grand Prix"
    },
    {
        "id": "3328",
        "question": "Does the Jordan River start in the Golan Heights?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jordan_River> <http://dbpedia.org/ontology/sourceRegion> <http://dbpedia.org/resource/Golan_Heights> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/sourceRegion",
        "predicate1_mention": "start",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Jordan_River",
        "entity1_mention": "jordan river",
        "entity2_uri": "http://dbpedia.org/resource/Golan_Heights",
        "entity2_mention": "golan heights"
    },
    {
        "id": "3329",
        "question": "Give me all office holders who finally retired in Montpelier Orange Virgina?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/restingplace",
        "predicate1_mention": "retired in",
        "predicate2_uri": "http://dbpedia.org/ontology/OfficeHolder",
        "predicate2_mention": "office holders",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)",
        "entity1_mention": "Montpelier Orange Virgina",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3331",
        "question": "Name the wine regions of Bogdanua ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bogdanu\u0161a> <http://dbpedia.org/ontology/wineRegion> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/wineRegion",
        "predicate1_mention": "wine regions",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Bogdanu\u0161a",
        "entity1_mention": "Bogdanua",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3332",
        "question": "In which company is Raymond Conner at an important position?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Raymond_Conner> } ",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/keyPerson",
        "predicate1_mention": "important position",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Raymond_Conner",
        "entity1_mention": "raymond conner",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3333",
        "question": "In which city are the schools whose district is Mumbai Suburban?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/district> <http://dbpedia.org/resource/Mumbai_Suburban_district> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/district",
        "predicate1_mention": "district",
        "predicate2_uri": "http://dbpedia.org/ontology/city",
        "predicate2_mention": "city",
        "type_uri": "http://dbpedia.org/ontology/School",
        "type_mention": "schools",
        "entity1_uri": "http://dbpedia.org/resource/Mumbai_Suburban_district",
        "entity1_mention": "Mumbai Suburban",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3334",
        "question": "Which military people served their allegiance to Union ( American Civil War )?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/allegiance> <http://dbpedia.org/resource/Union_(American_Civil_War)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/allegiance",
        "predicate1_mention": "allegiance",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/MilitaryPerson",
        "type_mention": "military people",
        "entity1_uri": "http://dbpedia.org/resource/Union_(American_Civil_War)",
        "entity1_mention": "Union ( American Civil War )",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3335",
        "question": "Name the actors of the TV show which has an episode named The Five ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Five_(The_Vampire_Diaries)> <http://dbpedia.org/property/series> ?x . ?x <http://dbpedia.org/property/starring> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/series",
        "predicate1_mention": "episode",
        "predicate2_uri": "http://dbpedia.org/property/starring",
        "predicate2_mention": "actors",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "tv show",
        "entity1_uri": "http://dbpedia.org/resource/The_Five_(The_Vampire_Diaries)",
        "entity1_mention": "the five",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3336",
        "question": "Where are the National Academy Museum and School awardwinners buried?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/National_Academy_Museum_and_School> . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/award",
        "predicate1_mention": "awardwinners",
        "predicate2_uri": "http://dbpedia.org/ontology/restingPlace",
        "predicate2_mention": "buried",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/National_Academy_Museum_and_School",
        "entity1_mention": "national academy museum and school",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3337",
        "question": "Give me a count of movies whose film editor is Anthony Harvey?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Anthony_Harvey>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "401",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/property/editing",
        "predicate1_mention": "editor",
        "predicate2_uri": "http://dbpedia.org/ontology/Film",
        "predicate2_mention": "film",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Anthony_Harvey",
        "entity1_mention": "anthony harvey",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3338",
        "question": "Which species' members are there in the animal kingdom?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/kingdom> <http://dbpedia.org/resource/Animal> . ?x <http://dbpedia.org/ontology/species> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/kingdom",
        "predicate1_mention": "kingdom",
        "predicate2_uri": "http://dbpedia.org/ontology/species",
        "predicate2_mention": "species'",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Animal",
        "entity1_mention": "animal",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3339",
        "question": "What is the common location of  tomb of the Elizabeth of Rhuddlan and Isabel of Cambridge?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elizabeth_of_Rhuddlan> <http://dbpedia.org/property/placeOfBurial> ?uri. <http://dbpedia.org/resource/Isabel_of_Cambridge,_Countess_of_Essex> <http://dbpedia.org/property/placeOfBurial> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/placeOfBurial",
        "predicate1_mention": "location of tomb",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Elizabeth_of_Rhuddlan",
        "entity1_mention": "elizabeth of rhuddlan",
        "entity2_uri": "http://dbpedia.org/resource/Isabel_of_Cambridge,_Countess_of_Essex",
        "entity2_mention": "isabel of cambridge"
    },
    {
        "id": "3340",
        "question": "Is camel  of the chordate phylum?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Camel> <http://dbpedia.org/property/phylum> <http://dbpedia.org/resource/Chordate> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/phylum",
        "predicate1_mention": "phylum",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Camel",
        "entity1_mention": "camel",
        "entity2_uri": "http://dbpedia.org/resource/Chordate",
        "entity2_mention": "chordate"
    },
    {
        "id": "3341",
        "question": "Which company had built the rockets launched at the Cape Canaveral Air Force Station Space Launch Complex 17?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station_Space_Launch_Complex_17> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/launchSite",
        "predicate1_mention": "launched",
        "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
        "predicate2_mention": "built",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station_Space_Launch_Complex_17",
        "entity1_mention": "Cape Canaveral Air Force Station Space Launch Complex 17",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3344",
        "question": "What are the former team of the american football players who played at gridiron football position ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Tackle_(gridiron_football_position)> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/position",
        "predicate1_mention": "position",
        "predicate2_uri": "http://dbpedia.org/ontology/formerTeam",
        "predicate2_mention": "former team",
        "type_uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
        "type_mention": "american football players",
        "entity1_uri": "http://dbpedia.org/resource/Tackle_(gridiron_football_position)",
        "entity1_mention": "gridiron football position",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3346",
        "question": "What  is the meaning of the Isa (name) which is also a relegion of Sacred Heart Convent School (Bangkok) ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Isa_(name)> <http://dbpedia.org/property/meaning> ?uri. <http://dbpedia.org/resource/Sacred_Heart_Convent_School_(Bangkok)> <http://dbpedia.org/ontology/type> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/meaning",
        "predicate1_mention": "meaning",
        "predicate2_uri": "http://dbpedia.org/ontology/type",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Isa_(name)",
        "entity1_mention": "Isa (name)",
        "entity2_uri": "http://dbpedia.org/resource/Sacred_Heart_Convent_School_(Bangkok)",
        "entity2_mention": "Sacred Heart Convent School (Bangkok)"
    },
    {
        "id": "3347",
        "question": "Who are the managers of clubs participating in the 2014-2015 Football League Championship?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/season> <http://dbpedia.org/resource/2014\u201315_Football_League_Championship> . ?uri <http://dbpedia.org/ontology/managerClub> ?x  . }",
        "sparql_id": "6",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/season",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/managerClub",
        "predicate2_mention": "managers",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/2014\u201315_Football_League_Championship",
        "entity1_mention": "2014-2015 Football League Championship",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3349",
        "question": "Which official residence of Nikos Pateras is also the stadium of anionios G.S.S. season 2014-15 ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2014\u201315_Panionios_G.S.S._season> <http://dbpedia.org/property/stadium> ?uri. <http://dbpedia.org/resource/Nikos_Pateras> <http://dbpedia.org/ontology/residence> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/stadium",
        "predicate1_mention": "stadium",
        "predicate2_uri": "http://dbpedia.org/ontology/residence",
        "predicate2_mention": "residence",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/2014\u201315_Panionios_G.S.S._season",
        "entity1_mention": "anionios G.S.S. season",
        "entity2_uri": "http://dbpedia.org/resource/Nikos_Pateras",
        "entity2_mention": "nikos pateras"
    },
    {
        "id": "3350",
        "question": "Joe Shuster has created how many comics character ?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Joe_Shuster>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>}",
        "sparql_id": "401",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/property/creators",
        "predicate1_mention": "created",
        "predicate2_uri": "http://dbpedia.org/ontology/ComicsCharacter",
        "predicate2_mention": "comics character",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Joe_Shuster",
        "entity1_mention": "joe shuster",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3351",
        "question": "In which part of the world can i find Xynisteri and Mavro?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Xynisteri> <http://dbpedia.org/ontology/origin> ?uri. <http://dbpedia.org/resource/Mavro> <http://dbpedia.org/ontology/origin> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/origin",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/origin",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Xynisteri",
        "entity1_mention": "xynisteri",
        "entity2_uri": "http://dbpedia.org/resource/Mavro",
        "entity2_mention": "mavro"
    },
    {
        "id": "3352",
        "question": "What are the awards won by the parent of Daniel Bergmans?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Daniel_Bergman> <http://dbpedia.org/ontology/parent> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/parent",
        "predicate1_mention": "parent",
        "predicate2_uri": "http://dbpedia.org/property/awards",
        "predicate2_mention": "awards",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Daniel_Bergman",
        "entity1_mention": "Daniel Bergmans",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3353",
        "question": "What is the country of the Hirth Acrostar and the Cobra missile?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hirth_Acrostar> <http://dbpedia.org/ontology/origin> ?uri. <http://dbpedia.org/resource/Cobra_(missile)> <http://dbpedia.org/ontology/origin> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/origin",
        "predicate1_mention": "country",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Hirth_Acrostar",
        "entity1_mention": "hirth acrostar",
        "entity2_uri": "http://dbpedia.org/resource/Cobra_(missile)",
        "entity2_mention": "cobra missile"
    },
    {
        "id": "3355",
        "question": "Collect and return a list of things in the area where Spanish language is used?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/language> <http://dbpedia.org/resource/Spanish_language> . ?uri <http://dbpedia.org/ontology/location> ?x  . }",
        "sparql_id": "6",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/language",
        "predicate1_mention": "language",
        "predicate2_uri": "http://dbpedia.org/ontology/location",
        "predicate2_mention": "area",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Spanish_language",
        "entity1_mention": "spanish language",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3357",
        "question": "Is GIMP written in C?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/GIMP> <http://dbpedia.org/ontology/programmingLanguage> <http://dbpedia.org/resource/C_(programming_language)> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/programmingLanguage",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/GIMP",
        "entity1_mention": "gimp",
        "entity2_uri": "http://dbpedia.org/resource/C_(programming_language)",
        "entity2_mention": "C"
    },
    {
        "id": "3358",
        "question": "What are all the countires where food related to tuna salad is consumed ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/Tuna_salad> . ?x <http://dbpedia.org/property/country> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/related",
        "predicate1_mention": "related",
        "predicate2_uri": "http://dbpedia.org/property/country",
        "predicate2_mention": "countires",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Tuna_salad",
        "entity1_mention": "tuna salad",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3359",
        "question": "Who is the founder of Pittsburgh ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pittsburgh> <http://dbpedia.org/ontology/founder> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/founder",
        "predicate1_mention": "founder",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Pittsburgh",
        "entity1_mention": "pittsburgh",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3360",
        "question": "How many different genres led to other genres where drums are important?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/instruments> <http://dbpedia.org/resource/Drum_kit> . ?x <http://dbpedia.org/ontology/stylisticOrigin> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicGenre>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/instruments",
        "predicate1_mention": "drums",
        "predicate2_uri": "http://dbpedia.org/ontology/stylisticOrigin",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/MusicGenre",
        "type_mention": "genres",
        "entity1_uri": "http://dbpedia.org/resource/Drum_kit",
        "entity1_mention": "drums",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3361",
        "question": "How many people have played for the NBA?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/league> <http://dbpedia.org/resource/National_Basketball_Association>  . }",
        "sparql_id": "101",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/property/league",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/National_Basketball_Association",
        "entity1_mention": "NBA",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3362",
        "question": "Name the river  whose source location is Nevado Mismi and region is Arequipa Region?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Nevado_Mismi> . ?uri <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/Arequipa_Region>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/sourceLocation",
        "predicate1_mention": "source location",
        "predicate2_uri": "http://dbpedia.org/property/sourceRegion",
        "predicate2_mention": "region",
        "type_uri": "http://dbpedia.org/ontology/River",
        "type_mention": "river",
        "entity1_uri": "http://dbpedia.org/resource/Nevado_Mismi",
        "entity1_mention": "nevado mismi",
        "entity2_uri": "http://dbpedia.org/resource/Arequipa_Region",
        "entity2_mention": "arequipa region"
    },
    {
        "id": "3363",
        "question": "Where is the headquarters of the public transit system which operators Go-to-card ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Go-To_card> <http://dbpedia.org/property/operator> ?x . ?x <http://dbpedia.org/property/headquarters> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PublicTransitSystem>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/operator",
        "predicate1_mention": "operators",
        "predicate2_uri": "http://dbpedia.org/property/headquarters",
        "predicate2_mention": "headquarters",
        "type_uri": "http://dbpedia.org/ontology/PublicTransitSystem",
        "type_mention": "public transit system",
        "entity1_uri": "http://dbpedia.org/resource/Go-To_card",
        "entity1_mention": "Go-to-card",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3364",
        "question": "How many people played for Newell's Old Boys?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/youthclubs> <http://dbpedia.org/resource/Newell's_Old_Boys>  . }",
        "sparql_id": "101",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/property/youthclubs",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Newell's_Old_Boys",
        "entity1_mention": "newell's old boys",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3365",
        "question": "What is the citizenship of Ren Romano ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ren\u00e9_Romano> <http://dbpedia.org/property/citizenship> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/citizenship",
        "predicate1_mention": "citizenship",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Ren\u00e9_Romano",
        "entity1_mention": "ren romano",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3366",
        "question": "Where was the company who is the operator of Harihar Airport founded ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Harihar_Airport> <http://dbpedia.org/ontology/operator> ?x . ?x <http://dbpedia.org/property/foundation> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/operator",
        "predicate1_mention": "operator",
        "predicate2_uri": "http://dbpedia.org/property/foundation",
        "predicate2_mention": "founded",
        "type_uri": "http://dbpedia.org/ontology/Company",
        "type_mention": "company",
        "entity1_uri": "http://dbpedia.org/resource/Harihar_Airport",
        "entity1_mention": "harihar airport",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3370",
        "question": "Who wrote the US steel hour?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_United_States_Steel_Hour> <http://dbpedia.org/ontology/writer> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/writer",
        "predicate1_mention": "wrote",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/The_United_States_Steel_Hour",
        "entity1_mention": "steel hour",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3371",
        "question": "What is the occupation of the band members of The Shirelles?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Shirelles> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "predicate1_mention": "band members",
        "predicate2_uri": "http://dbpedia.org/ontology/occupation",
        "predicate2_mention": "occupation",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/The_Shirelles",
        "entity1_mention": "the shirelles",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3372",
        "question": "Which tv series have a score composed by judy hard angelo?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/Judy_Hart_Angelo>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/composer",
        "predicate1_mention": "composed by" ,
        "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "predicate2_mention": "tv series",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Judy_Hart_Angelo",
        "entity1_mention": "judy hard angelo",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3375",
        "question": "What is the former partner of the figure skaters whose current partner is Alexa Scimeca?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/currentPartner> <http://dbpedia.org/resource/Alexa_Scimeca> . ?x <http://dbpedia.org/ontology/formerPartner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FigureSkater>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/currentPartner",
        "predicate1_mention": "current partner",
        "predicate2_uri": "http://dbpedia.org/ontology/formerPartner",
        "predicate2_mention": "former partner",
        "type_uri": "http://dbpedia.org/ontology/FigureSkater",
        "type_mention": "figure",
        "entity1_uri": "http://dbpedia.org/resource/Alexa_Scimeca",
        "entity1_mention": "alexa scimeca",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3377",
        "question": "Name all the broadcast area of the TV stations which has Rodrigues ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/broadcastArea> <http://dbpedia.org/resource/Rodrigues> . ?x <http://dbpedia.org/property/broadcastArea> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionStation>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/broadcastArea",
        "predicate1_mention": "broadcast area",
        "predicate2_uri": "http://dbpedia.org/ontology/TelevisionStation",
        "predicate2_mention": "tv stations",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Rodrigues",
        "entity1_mention": "rodrigues",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3378",
        "question": "What band has Joe Hahn and Chester Bennington?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Joe_Hahn> . ?uri <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Chester_Bennington> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
        "sparql_id": "307",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/currentMembers",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/currentMembers",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Band",
        "type_mention": "band",
        "entity1_uri": "http://dbpedia.org/resource/Joe_Hahn",
        "entity1_mention": "joe hahn",
        "entity2_uri": "http://dbpedia.org/resource/Chester_Bennington",
        "entity2_mention": "chester bennington"
    },
    {
        "id": "3379",
        "question": "In which cities are there american football teams where Matt Snorton played?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Matt_Snorton> <http://dbpedia.org/property/pastteams> ?x . ?x <http://dbpedia.org/ontology/locationCity> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballTeam>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/pastteams",
        "predicate1_mention": "teams",
        "predicate2_uri": "http://dbpedia.org/ontology/locationCity",
        "predicate2_mention": "cities",
        "type_uri": "http://dbpedia.org/ontology/AmericanFootballTeam",
        "type_mention": "american football teams",
        "entity1_uri": "http://dbpedia.org/resource/Matt_Snorton",
        "entity1_mention": "matt snorton",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3380",
        "question": "With which musical artist is the producer of Spotlight associated ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Spotlight_(Jennifer_Hudson_song)> <http://dbpedia.org/ontology/producer> ?x . ?x <http://dbpedia.org/property/associatedActs> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/producer",
        "predicate1_mention": "producer",
        "predicate2_uri": "http://dbpedia.org/property/associatedActs",
        "predicate2_mention": "associated",
        "type_uri": "http://dbpedia.org/ontology/MusicalArtist",
        "type_mention": "musical artist",
        "entity1_uri": "http://dbpedia.org/resource/Spotlight_(Jennifer_Hudson_song)",
        "entity1_mention": "spotlight",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3381",
        "question": "Name the office holder whose constituency is Noe Valley, San Francisco and belongs to military unit USS Kittiwake (ASR-13)?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Noe_Valley,_San_Francisco> . ?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/USS_Kittiwake_(ASR-13)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/constituency",
        "predicate1_mention": "constituency",
        "predicate2_uri": "http://dbpedia.org/ontology/militaryUnit",
        "predicate2_mention": "military unit",
        "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
        "type_mention": "office holder",
        "entity1_uri": "http://dbpedia.org/resource/Noe_Valley,_San_Francisco",
        "entity1_mention": "Noe Valley, San Francisco",
        "entity2_uri": "http://dbpedia.org/resource/USS_Kittiwake_(ASR-13)",
        "entity2_mention": "USS Kittiwake (ASR-13)"
    },
    {
        "id": "3382",
        "question": "How many awards have the french people received?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/stateOfOrigin> <http://dbpedia.org/resource/French_people> . ?x <http://dbpedia.org/property/awards> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/awards",
        "predicate2_mention": "awards",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/French_people",
        "entity1_mention": "french people",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3383",
        "question": "Where is the VP buried, which was served by Frederick Cooke?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Frederick_Cooke_(socialist)> <http://dbpedia.org/ontology/vicePresident> ?x . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/vicePresident",
        "predicate1_mention": "VP",
        "predicate2_uri": "http://dbpedia.org/ontology/restingPlace",
        "predicate2_mention": "buried,",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Frederick_Cooke_(socialist)",
        "entity1_mention": "frederick cooke",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3384",
        "question": "What is the sea connected to Oulu and Turku?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Oulu> . ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Turku> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
        "sparql_id": "307",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/cities",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/cities",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Sea",
        "type_mention": "sea",
        "entity1_uri": "http://dbpedia.org/resource/Oulu",
        "entity1_mention": "oulu",
        "entity2_uri": "http://dbpedia.org/resource/Turku",
        "entity2_mention": "turku"
    },
    {
        "id": "3386",
        "question": "What country did the successor of William Ofori Atta swear his oath to?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/William_Ofori_Atta> . ?x <http://dbpedia.org/property/allegiance> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/predecessor",
        "predicate1_mention": "successor",
        "predicate2_uri": "http://dbpedia.org/property/allegiance",
        "predicate2_mention": "country",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/William_Ofori_Atta",
        "entity1_mention": "william ofori atta",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3387",
        "question": "Through which label has Katy B released her singles?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Katy_B> . ?x <http://dbpedia.org/ontology/recordLabel> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/writer",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/recordLabel",
        "predicate2_mention": "label",
        "type_uri": "http://dbpedia.org/ontology/Single",
        "type_mention": "singles",
        "entity1_uri": "http://dbpedia.org/resource/Katy_B",
        "entity1_mention": "katy b",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3388",
        "question": "What are some awards given to the french people?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/stateOfOrigin> <http://dbpedia.org/resource/French_people> . ?x <http://dbpedia.org/property/awards> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/awards",
        "predicate2_mention": "awards",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/French_people",
        "entity1_mention": "french people",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3390",
        "question": "Where is Lao Plaza Hotel located?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lao_Plaza_Hotel> <http://dbpedia.org/property/developer> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/developer",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Lao_Plaza_Hotel",
        "entity1_mention": "Lao Plaza Hotel",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3392",
        "question": "In how many nations does Rhaetian Railways own train stations?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/owningOrganisation> <http://dbpedia.org/resource/Rhaetian_Railway> . ?x <http://dbpedia.org/ontology/country> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/owningOrganisation",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/country",
        "predicate2_mention": "nations",
        "type_uri": "http://dbpedia.org/ontology/Country",
        "type_mention": "nations",
        "entity1_uri": "http://dbpedia.org/resource/Rhaetian_Railway",
        "entity1_mention": "Rhaetian Railways",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3393",
        "question": "Where are the burial grounds of Willem Cornelis Janse van Rensburg and Thomas Franois Burgers?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Willem_Cornelis_Janse_van_Rensburg> <http://dbpedia.org/property/restingplace> ?uri. <http://dbpedia.org/resource/Thomas_Fran\u00e7ois_Burgers> <http://dbpedia.org/property/restingplace> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/restingplace",
        "predicate1_mention": "burial grounds",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Willem_Cornelis_Janse_van_Rensburg",
        "entity1_mention": "Willem Cornelis Janse van Rensburg",
        "entity2_uri": "http://dbpedia.org/resource/Thomas_Fran\u00e7ois_Burgers",
        "entity2_mention": "Thomas Franois Burgers"
    },
    {
        "id": "3395",
        "question": "Who had headed the governmental agencies whose admin HQ was in Niederkirchnerstrasse?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Niederkirchnerstra\u00dfe> . ?x <http://dbpedia.org/ontology/leader> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/headquarter",
        "predicate1_mention": "headed",
        "predicate2_uri": "http://dbpedia.org/ontology/leader",
        "predicate2_mention": "headed",
        "type_uri": "http://dbpedia.org/ontology/GovernmentAgency",
        "type_mention": "governmental",
        "entity1_uri": "http://dbpedia.org/resource/Niederkirchnerstra\u00dfe",
        "entity1_mention": "Niederkirchnerstrasse",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3396",
        "question": "In which city was the company founded , which owns Grasim Bhiwani Textiles?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Grasim_Bhiwani_Textiles> <http://dbpedia.org/property/parent> ?x . ?x <http://dbpedia.org/property/foundation> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/parent",
        "predicate1_mention": "owns",
        "predicate2_uri": "http://dbpedia.org/property/foundation",
        "predicate2_mention": "founded",
        "type_uri": "http://dbpedia.org/ontology/Company",
        "type_mention": "company",
        "entity1_uri": "http://dbpedia.org/resource/Grasim_Bhiwani_Textiles",
        "entity1_mention": "Grasim Bhiwani Textiles",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3398",
        "question": "Who is the opponent of United States House of Representatives elections in Ohio 2010 ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_States_House_of_Representatives_elections_in_Ohio,_2010> <http://dbpedia.org/property/opponent> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/opponent",
        "predicate1_mention": "opponent",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections_in_Ohio,_2010",
        "entity1_mention": "united states house of representatives elections in ohio 2010",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3399",
        "question": "Which district of Robert William Wilcox os the place of birth of Kamaloohua ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_William_Wilcox> <http://dbpedia.org/property/district> ?uri. <http://dbpedia.org/resource/Kamaloohua> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/district",
        "predicate1_mention": "district",
        "predicate2_uri": "http://dbpedia.org/property/placeOfBirth",
        "predicate2_mention": "place of birth",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Robert_William_Wilcox",
        "entity1_mention": "Robert William Wilcox",
        "entity2_uri": "http://dbpedia.org/resource/Kamaloohua",
        "entity2_mention": "kamaloohua"
    },
    {
        "id": "3400",
        "question": "Name the commander of Battle of the Thames ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Battle_of_the_Thames> <http://dbpedia.org/ontology/commander> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/commander",
        "predicate1_mention": "commander",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Battle_of_the_Thames",
        "entity1_mention": "Battle of the Thames",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3401",
        "question": "Name the states which have been billed by the wrestlers who has also billed Georgia ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/billed> <http://dbpedia.org/resource/Georgia_(U.S._state)> . ?x <http://dbpedia.org/property/billed> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Wrestler>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/billed",
        "predicate1_mention": "billed",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Wrestler",
        "type_mention": "wrestlers",
        "entity1_uri": "http://dbpedia.org/resource/Georgia_(U.S._state)",
        "entity1_mention": "georgia",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3402",
        "question": "Which country has outflow of  Lake Uniamsi and  inflows of the Cahora Bassa?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lake_Uniam\u00e9si> <http://dbpedia.org/property/outflow> ?uri. <http://dbpedia.org/resource/Cahora_Bassa> <http://dbpedia.org/property/inflow> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/outflow",
        "predicate1_mention": "outflow",
        "predicate2_uri": "http://dbpedia.org/property/inflow",
        "predicate2_mention": "inflows",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Lake_Uniam\u00e9si",
        "entity1_mention": "Lake Uniamsi",
        "entity2_uri": "http://dbpedia.org/resource/Cahora_Bassa",
        "entity2_mention": "cahora bassa"
    },
    {
        "id": "3403",
        "question": "Count the number of  sport played by the school which also plays Association football ?",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Association_football> . ?x <http://dbpedia.org/ontology/sport> ?uri }",
        "sparql_id": "111",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/sport",
        "predicate1_mention": "sport",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Association_football",
        "entity1_mention": "association football",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3404",
        "question": "Which city's neighboring municipalities are Lancy and  Pregny-Chambsy?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Lancy> . ?uri <http://dbpedia.org/ontology/neighboringMunicipality> <http://dbpedia.org/resource/Pregny-Chamb\u00e9sy>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/neighboringMunicipalities",
        "predicate1_mention": "neighboring municipalities",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Location",
        "type_mention": "city",
        "entity1_uri": "http://dbpedia.org/resource/Lancy",
        "entity1_mention": "lancy",
        "entity2_uri": "http://dbpedia.org/resource/Pregny-Chamb\u00e9sy",
        "entity2_mention": "Pregny-Chambsy"
    },
    {
        "id": "3405",
        "question": "Give me the total number of Guests of the television episodes whose one of the  Guests is Michael Cristofer?",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/guests> <http://dbpedia.org/resource/Michael_Cristofer> . ?x <http://dbpedia.org/property/guests> ?uri }",
        "sparql_id": "111",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/guests",
        "predicate1_mention": "guests",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Michael_Cristofer",
        "entity1_mention": "michael cristofer",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3406",
        "question": "Were the 1995 south pacific games hosted in tahiti?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/1995_South_Pacific_Games> <http://dbpedia.org/property/hostCity> <http://dbpedia.org/resource/Tahiti> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/hostCity",
        "predicate1_mention": "hosted",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/1995_South_Pacific_Games",
        "entity1_mention": "1995 south pacific games",
        "entity2_uri": "http://dbpedia.org/resource/Tahiti",
        "entity2_mention": "tahiti"
    },
    {
        "id": "3407",
        "question": "Which division of the Runewaker Entertainment is also the  destinations of the Airtours International Airways?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Runewaker_Entertainment> <http://dbpedia.org/ontology/division> ?uri. <http://dbpedia.org/resource/Airtours_International_Airways> <http://dbpedia.org/property/destinations> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/division",
        "predicate1_mention": "division",
        "predicate2_uri": "http://dbpedia.org/property/destinations",
        "predicate2_mention": "destinations",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Runewaker_Entertainment",
        "entity1_mention": "Runewaker Entertainment",
        "entity2_uri": "http://dbpedia.org/resource/Airtours_International_Airways",
        "entity2_mention": "Airtours International Airways"
    },
    {
        "id": "3408",
        "question": "Give me an estimate number of races where horses grandsired by the Wild Risk have raced in?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/grandsire> <http://dbpedia.org/resource/Wild_Risk> . ?x <http://dbpedia.org/property/race> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HorseRace>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/grandsire",
        "predicate1_mention": "grandsired",
        "predicate2_uri": "http://dbpedia.org/property/race",
        "predicate2_mention": "races",
        "type_uri": "http://dbpedia.org/ontology/HorseRace",
        "type_mention": "horses",
        "entity1_uri": "http://dbpedia.org/resource/Wild_Risk",
        "entity1_mention": "wild risk",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3409",
        "question": "List the awards won by the cinematographer of Mickey's Mellerdrammer?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mickey's_Mellerdrammer> <http://dbpedia.org/property/cinematography> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/cinematography",
        "predicate1_mention": "cinematographer",
        "predicate2_uri": "http://dbpedia.org/ontology/award",
        "predicate2_mention": "awards",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Mickey's_Mellerdrammer",
        "entity1_mention": "mickey's mellerdrammer",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3410",
        "question": "Where is the garrison of Western Naval Command ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Western_Naval_Command> <http://dbpedia.org/property/garrison> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/garrison",
        "predicate1_mention": "garrison",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Western_Naval_Command",
        "entity1_mention": "western naval command",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3411",
        "question": "Count the number of books whose author's were born in Alcal de Henares ?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Alcal\u00e1_de_Henares> . ?uri <http://dbpedia.org/ontology/author> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
        "sparql_id": "406",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/birthPlace",
        "predicate1_mention": "born",
        "predicate2_uri": "http://dbpedia.org/ontology/author",
        "predicate2_mention": "author's",
        "type_uri": "http://dbpedia.org/ontology/Book",
        "type_mention": "books",
        "entity1_uri": "http://dbpedia.org/resource/Alcal\u00e1_de_Henares",
        "entity1_mention": "Alcal de Henares",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3412",
        "question": "List the film starring of the movies whose editor is Harvey  Rosenstock ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/editing> <http://dbpedia.org/resource/Harvey_Rosenstock> . ?x <http://dbpedia.org/property/starring> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/editing",
        "predicate1_mention": "editor",
        "predicate2_uri": "http://dbpedia.org/property/starring",
        "predicate2_mention": "starring",
        "type_uri": "http://dbpedia.org/ontology/Film",
        "type_mention": "film",
        "entity1_uri": "http://dbpedia.org/resource/Harvey_Rosenstock",
        "entity1_mention": "harvey rosenstock",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3413",
        "question": "What is the name of the person who has relations with Dionne Warwick and Gary Garland?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Dionne_Warwick> . ?uri <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Gary_Garland> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "307",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/relation",
        "predicate1_mention": "relations",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Person",
        "type_mention": "person",
        "entity1_uri": "http://dbpedia.org/resource/Dionne_Warwick",
        "entity1_mention": "dionne warwick",
        "entity2_uri": "http://dbpedia.org/resource/Gary_Garland",
        "entity2_mention": "gary garland"
    },
    {
        "id": "3414",
        "question": "Which military battles are associated with Israel?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Israel>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/place",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "predicate2_mention": "military",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Israel",
        "entity1_mention": "israel",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3415",
        "question": "Which city has it's landmark as Cheasty Boulevard South?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cheasty_Boulevard_South> <http://dbpedia.org/ontology/maintainedBy> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/maintainedBy",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Cheasty_Boulevard_South",
        "entity1_mention": "cheasty boulevard south",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3416",
        "question": "Which region of English American is also the place of Death of Brent Darby ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/English_Americans> <http://dbpedia.org/property/region> ?uri. <http://dbpedia.org/resource/Brent_Darby> <http://dbpedia.org/property/placeOfDeath> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/region",
        "predicate1_mention": "region",
        "predicate2_uri": "http://dbpedia.org/property/placeOfDeath",
        "predicate2_mention": "place of death",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/English_Americans",
        "entity1_mention": "english american",
        "entity2_uri": "http://dbpedia.org/resource/Brent_Darby",
        "entity2_mention": "brent darby"
    },
    {
        "id": "3418",
        "question": "What are some short story kind of Books?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Short_story> } ",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/literaryGenre",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Short_story",
        "entity1_mention": "short story",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3422",
        "question": "Who employed the person famous for the Boeing fa18ef Super Hornet?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet> . ?x <http://dbpedia.org/property/employer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/knownFor",
        "predicate1_mention": "famous for",
        "predicate2_uri": "http://dbpedia.org/property/employer",
        "predicate2_mention": "employed",
        "type_uri": "http://dbpedia.org/ontology/Person",
        "type_mention": "person",
        "entity1_uri": "http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet",
        "entity1_mention": "super hornet",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3423",
        "question": "List the relatives of clay Aiken ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Clay_Aiken>  . }",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/relatives",
        "predicate1_mention": "relatives",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Clay_Aiken",
        "entity1_mention": "clay aiken",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3424",
        "question": "List the resting place of the people who served in Norwalk Trainband.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/Norwalk_Trainband> . ?x <http://dbpedia.org/property/restingplace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/militaryUnit",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/restingplace",
        "predicate2_mention": "resting place",
        "type_uri": "http://dbpedia.org/ontology/Person",
        "type_mention": "people",
        "entity1_uri": "http://dbpedia.org/resource/Norwalk_Trainband",
        "entity1_mention": "Norwalk Trainband",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3425",
        "question": "Which are the cities on the river which also flows in Tukwila Washington ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Tukwila,_Washington> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/city",
        "predicate1_mention": "cities",
        "predicate2_uri": "http://dbpedia.org/ontology/River",
        "predicate2_mention": "river",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Tukwila,_Washington",
        "entity1_mention": "tukwila washington",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3426",
        "question": "List all the narrator of the albums which had Alan Barzman as one of the narrator ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/narrated> <http://dbpedia.org/resource/Alan_Barzman> . ?x <http://dbpedia.org/property/narrated> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/narrated",
        "predicate1_mention": "narrator",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Album",
        "type_mention": "albums",
        "entity1_uri": "http://dbpedia.org/resource/Alan_Barzman",
        "entity1_mention": "alan barzman",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3427",
        "question": "is Mazhar Ul Haq High School Beerwah is affiliated to Islamic Religion",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mazhar_Ul_Haq_High_School,_Beerwah> <http://dbpedia.org/property/religiousAffiliation> <http://dbpedia.org/resource/Islam> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/religiousAffiliation",
        "predicate1_mention": "affiliated",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Mazhar_Ul_Haq_High_School,_Beerwah",
        "entity1_mention": "Mazhar Ul Haq High School Beerwah",
        "entity2_uri": "http://dbpedia.org/resource/Islam",
        "entity2_mention": "Islamic Religion"
    },
    {
        "id": "3428",
        "question": "In which state does the university which is the alma mater of Mateusz Morawiecki lie?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mateusz_Morawiecki> <http://dbpedia.org/property/almaMater> ?x . ?x <http://dbpedia.org/property/state> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/almaMater",
        "predicate1_mention": "alma mater",
        "predicate2_uri": "http://dbpedia.org/property/state",
        "predicate2_mention": "state",
        "type_uri": "http://dbpedia.org/ontology/University",
        "type_mention": "university",
        "entity1_uri": "http://dbpedia.org/resource/Mateusz_Morawiecki",
        "entity1_mention": "mateusz morawiecki",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3429",
        "question": "Give me all tv shows which are based in boston and massachusetts?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Boston> . ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Massachusetts> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "307",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/location",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "tv shows",
        "entity1_uri": "http://dbpedia.org/resource/Boston",
        "entity1_mention": "boston",
        "entity2_uri": "http://dbpedia.org/resource/Massachusetts",
        "entity2_mention": "massachusetts"
    },
    {
        "id": "3430",
        "question": "Who is married to a Miss Louisiana, USA?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Miss_Louisiana_USA> . ?uri <http://dbpedia.org/property/spouse> ?x  . }",
        "sparql_id": "6",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/title",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/spouse",
        "predicate2_mention": "married to",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Miss_Louisiana_USA",
        "entity1_mention": "Miss Louisiana, USA",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3431",
        "question": "Who has produced movies that have a James Horner score?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/James_Horner> . ?x <http://dbpedia.org/property/producer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/music",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/producer",
        "predicate2_mention": "produced",
        "type_uri": "http://dbpedia.org/ontology/Film",
        "type_mention": "movies",
        "entity1_uri": "http://dbpedia.org/resource/James_Horner",
        "entity1_mention": "james horner",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3433",
        "question": "What team did the players start their careers with, who right now play for Fleisher Yarn?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Fleisher_Yarn> . ?x <http://dbpedia.org/property/debutteam> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/team",
        "predicate1_mention": "team",
        "predicate2_uri": "http://dbpedia.org/property/debutteam",
        "predicate2_mention": "team",
        "type_uri": "http://dbpedia.org/ontology/Athlete",
        "type_mention": "players",
        "entity1_uri": "http://dbpedia.org/resource/Fleisher_Yarn",
        "entity1_mention": "fleisher yarn",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3434",
        "question": "List the significant buildings of the arch. whose one of the important work is Government Building Kiev ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/significantBuilding> <http://dbpedia.org/resource/Government_Building,_Kiev> . ?x <http://dbpedia.org/ontology/significantBuilding> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/significantBuilding",
        "predicate1_mention": "significant buildings",
        "predicate2_uri": "http://dbpedia.org/ontology/Architect",
        "predicate2_mention": "arch.",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Government_Building,_Kiev",
        "entity1_mention": "government building Kiev",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3435",
        "question": "What is the alma mater of Fikret Orman?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fikret_Orman> <http://dbpedia.org/property/almaMater> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/almaMater",
        "predicate1_mention": "alma mater",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Fikret_Orman",
        "entity1_mention": "fikret orman",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3437",
        "question": "Count all the awards which were presented by something located in California.",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/California> . ?uri <http://dbpedia.org/ontology/presenter> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}",
        "sparql_id": "406",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/headquarter",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/presenter",
        "predicate2_mention": "presented",
        "type_uri": "http://dbpedia.org/ontology/Award",
        "type_mention": "awards",
        "entity1_uri": "http://dbpedia.org/resource/California",
        "entity1_mention": "California",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3438",
        "question": "what are some players of England national football team?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/England_national_football_team> } ",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/nationalteam",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/England_national_football_team",
        "entity1_mention": "England national football team",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3439",
        "question": "Where did the aristocrats die whose mother was Maria Ludwika Krasiska?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Maria_Ludwika_Krasi\u0144ska> . ?x <http://dbpedia.org/property/deathPlace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/mother",
        "predicate1_mention": "mother",
        "predicate2_uri": "http://dbpedia.org/property/deathPlace",
        "predicate2_mention": "die",
        "type_uri": "http://dbpedia.org/ontology/Royalty",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Maria_Ludwika_Krasi\u0144ska",
        "entity1_mention": "Maria Ludwika Krasiska",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3441",
        "question": "What is the subject of The Prodigal son ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Prodigal_Son_(play)> <http://dbpedia.org/property/subject> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/subject",
        "predicate1_mention": "subject",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/The_Prodigal_Son_(play)",
        "entity1_mention": "the prodigal son",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3442",
        "question": "What water bodies are nearest to Helsinki city?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/nearestCity> <http://dbpedia.org/resource/Helsinki>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BodyOfWater>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/nearestCity",
        "predicate1_mention": "nearest",
        "predicate2_uri": "http://dbpedia.org/ontology/BodyOfWater",
        "predicate2_mention": "water bodies",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Helsinki",
        "entity1_mention": "helsinki",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3443",
        "question": "Find the total number of  ingredient of the recepies whose ingredient is common Mushroom ?",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Agaricus_bisporus> . ?x <http://dbpedia.org/ontology/ingredient> ?uri }",
        "sparql_id": "111",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/ingredient",
        "predicate1_mention": "ingredient",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Agaricus_bisporus",
        "entity1_mention": "common mushroom",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3447",
        "question": "How many teams have used the stadiums which have been rented by the Canadian Hockey team?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Hockey_Canada> . ?x <http://dbpedia.org/property/tenants> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/tenant",
        "predicate1_mention": "rented by",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Hockey_Canada",
        "entity1_mention": "Canadian Hockey",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3450",
        "question": "Is facebook a public company?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Facebook> <http://dbpedia.org/property/companyType> <http://dbpedia.org/resource/Public_company> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/companyType",
        "predicate1_mention": "company",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Facebook",
        "entity1_mention": "facebook",
        "entity2_uri": "http://dbpedia.org/resource/Public_company",
        "entity2_mention": "public company"
    },
    {
        "id": "3451",
        "question": "What religions are followed by economists?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Economist> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/profession",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/religion",
        "predicate2_mention": "religions",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Economist",
        "entity1_mention": "economists",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3452",
        "question": "Is Rajya Sabha a house of parliament in India?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Parliament_of_India> <http://dbpedia.org/property/houses> <http://dbpedia.org/resource/Rajya_Sabha> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/houses",
        "predicate1_mention": "house",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Parliament_of_India",
        "entity1_mention": "parliament in india",
        "entity2_uri": "http://dbpedia.org/resource/Rajya_Sabha",
        "entity2_mention": "rajya sabha"
    },
    {
        "id": "3453",
        "question": "Was Gerald Gibbs the cinematographer of X the unknown?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/X_the_Unknown> <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Gerald_Gibbs_(cinematographer)> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/cinematography",
        "predicate1_mention": "cinematographer",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/X_the_Unknown",
        "entity1_mention": "the unknown",
        "entity2_uri": "http://dbpedia.org/resource/Gerald_Gibbs_(cinematographer)",
        "entity2_mention": "Gerald Gibbs the cinematographer"
    },
    {
        "id": "3454",
        "question": "List the architect of the buildings whose one of the  architect is Philip Webb?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/architect> <http://dbpedia.org/resource/Philip_Webb> . ?x <http://dbpedia.org/property/architect> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/architect",
        "predicate1_mention": "architect",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Building",
        "type_mention": "buildings",
        "entity1_uri": "http://dbpedia.org/resource/Philip_Webb",
        "entity1_mention": "philip webb",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3455",
        "question": "List the trainers of Shinya Aoki ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Shinya_Aoki> <http://dbpedia.org/ontology/trainer> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/trainer",
        "predicate1_mention": "trainers",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Shinya_Aoki",
        "entity1_mention": "shinya aoki",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3456",
        "question": "How many software run on operating system is Microsoft Windows?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
        "sparql_id": "401",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/ontology/operatingSystem",
        "predicate1_mention": "operating system",
        "predicate2_uri": "http://dbpedia.org/ontology/Software",
        "predicate2_mention": "software",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Microsoft_Windows",
        "entity1_mention": "microsoft windows",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3458",
        "question": "Where was Babita born ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Babita> <http://dbpedia.org/property/birthplace> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/birthplace",
        "predicate1_mention": "born",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Babita",
        "entity1_mention": "babita",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3459",
        "question": "Give me the mascot of the military unit in which Stewart Bovell served?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Stewart_Bovell> <http://dbpedia.org/ontology/militaryBranch> ?x . ?x <http://dbpedia.org/property/mascot> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/militaryBranch",
        "predicate1_mention": "military",
        "predicate2_uri": "http://dbpedia.org/property/mascot",
        "predicate2_mention": "mascot",
        "type_uri": "http://dbpedia.org/ontology/MilitaryUnit",
        "type_mention": "military unit",
        "entity1_uri": "http://dbpedia.org/resource/Stewart_Bovell",
        "entity1_mention": "stewart bovell",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3460",
        "question": "Name some politicians buried in a place near Orange Virginia?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/nearestCity> <http://dbpedia.org/resource/Orange,_Virginia> . ?uri <http://dbpedia.org/property/restingplace> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/nearestCity",
        "predicate1_mention": "near",
        "predicate2_uri": "http://dbpedia.org/property/restingplace",
        "predicate2_mention": "buried in",
        "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
        "type_mention": "politicians",
        "entity1_uri": "http://dbpedia.org/resource/Orange,_Virginia",
        "entity1_mention": "orange virginia",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3462",
        "question": "Which manufacturer of  Ford Y-block engine is the parent of  Ford Air Transport Service ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Y-block_engine> <http://dbpedia.org/ontology/manufacturer> ?uri. <http://dbpedia.org/resource/Ford_Air_Transport_Service> <http://dbpedia.org/property/parent> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/manufacturer",
        "predicate1_mention": "manufacturer",
        "predicate2_uri": "http://dbpedia.org/property/parent",
        "predicate2_mention": "parent",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Ford_Y-block_engine",
        "entity1_mention": "Ford Y-block engine",
        "entity2_uri": "http://dbpedia.org/resource/Ford_Air_Transport_Service",
        "entity2_mention": "Ford Air Transport Service"
    },
    {
        "id": "3463",
        "question": "How many games have a composer who worked for the Creatures?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Creatures_(company)> . ?uri <http://dbpedia.org/property/composer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
        "sparql_id": "406",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/occupation",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/composer",
        "predicate2_mention": "composer",
        "type_uri": "http://dbpedia.org/ontology/VideoGame",
        "type_mention": "games",
        "entity1_uri": "http://dbpedia.org/resource/Creatures_(company)",
        "entity1_mention": "creatures",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3464",
        "question": "How many awards have been given to the participants of the Lawrence Realization Stakes?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/race> <http://dbpedia.org/resource/Lawrence_Realization_Stakes> . ?x <http://dbpedia.org/ontology/honours> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/race",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/honours",
        "predicate2_mention": "awards",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Lawrence_Realization_Stakes",
        "entity1_mention": "lawrence realization stakes",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3466",
        "question": "Where did Paul Jones do his highschool?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Paul_Jones_(American_football)> <http://dbpedia.org/property/highschool> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/highschool",
        "predicate1_mention": "highschool",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Paul_Jones_(American_football)",
        "entity1_mention": "jones",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3467",
        "question": "Which state is the birth location of Ann Monroe Gilchrist Strong? ",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ann_Monroe_Gilchrist_Strong> <http://dbpedia.org/ontology/birthPlace> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/birthPlace",
        "predicate1_mention": "birth location",
        "predicate2_uri": "http://dbpedia.org/ontology/country",
        "predicate2_mention": "state",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Ann_Monroe_Gilchrist_Strong",
        "entity1_mention": "monroe gilchrist",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3468",
        "question": "Bud Adams owns which american football team?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/owner> <http://dbpedia.org/resource/Bud_Adams>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballTeam>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/owner",
        "predicate1_mention": "owns",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/AmericanFootballTeam",
        "type_mention": "american football team",
        "entity1_uri": "http://dbpedia.org/resource/Bud_Adams",
        "entity1_mention": "bud adams",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3469",
        "question": "Which licensee of EXXV-TV is also the licensee of WXXV-DT2 ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/EXXV-TV> <http://dbpedia.org/property/licensee> ?uri. <http://dbpedia.org/resource/WXXV-DT2> <http://dbpedia.org/property/licensee> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/licensee",
        "predicate1_mention": "licensee",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/EXXV-TV",
        "entity1_mention": "exxv-tv",
        "entity2_uri": "http://dbpedia.org/resource/WXXV-DT2",
        "entity2_mention": "wxxv-dt2"
    },
    {
        "id": "3470",
        "question": "Give me all martial artists trained by Joe Schilling.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/trainer> <http://dbpedia.org/resource/Joe_Schilling>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MartialArtist>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/trainer",
        "predicate1_mention": "trained",
        "predicate2_uri": "http://dbpedia.org/ontology/MartialArtist",
        "predicate2_mention": "martial artists",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Joe_Schilling",
        "entity1_mention": "Joe Schilling",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3471",
        "question": "What magazine published Allal and is the employer of Peter Bergman?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Allal> <http://dbpedia.org/ontology/publisher> ?uri. <http://dbpedia.org/resource/Peter_Bergman_(comedian)> <http://dbpedia.org/ontology/employer> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/publisher",
        "predicate1_mention": "published",
        "predicate2_uri": "http://dbpedia.org/ontology/employer",
        "predicate2_mention": "employer",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Allal",
        "entity1_mention": "allal",
        "entity2_uri": "http://dbpedia.org/resource/Peter_Bergman_(comedian)",
        "entity2_mention": "peter bergman"
    },
    {
        "id": "3473",
        "question": "Name the common institution of the Erica Frank and Douglass North?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Erica_Frank> <http://dbpedia.org/ontology/institution> ?uri. <http://dbpedia.org/resource/Douglass_North> <http://dbpedia.org/ontology/institution> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/institution",
        "predicate1_mention": "institution",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Erica_Frank",
        "entity1_mention": "erica frank",
        "entity2_uri": "http://dbpedia.org/resource/Douglass_North",
        "entity2_mention": "douglass north"
    },
    {
        "id": "3475",
        "question": "What is the ethicity of Ted Falon?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ted_Failon> <http://dbpedia.org/ontology/ethnicity> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/ethnicity",
        "predicate1_mention": "ethicity",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Ted_Failon",
        "entity1_mention": "Ted Falon",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3477",
        "question": "Name the person whose mother name is Cedella Booker and has a son named Sharon Marley?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Cedella_Booker> . ?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Sharon_Marley>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/parent",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/children",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Person",
        "type_mention": "person",
        "entity1_uri": "http://dbpedia.org/resource/Cedella_Booker",
        "entity1_mention": "cedella booker",
        "entity2_uri": "http://dbpedia.org/resource/Sharon_Marley",
        "entity2_mention": "sharon marley"
    },
    {
        "id": "3478",
        "question": "Which kind of buildings are found in England?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/locationCountry> <http://dbpedia.org/resource/England> . ?x <http://dbpedia.org/ontology/type> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/locationCountry",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/type",
        "predicate2_mention": "kind of",
        "type_uri": "http://dbpedia.org/ontology/Building",
        "type_mention": "buildings",
        "entity1_uri": "http://dbpedia.org/resource/England",
        "entity1_mention": "england",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3479",
        "question": "What is the county seat of Moscow Governorate ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moscow_Governorate> <http://dbpedia.org/ontology/capital> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/capital",
        "predicate1_mention": "county seat",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Moscow_Governorate",
        "entity1_mention": "moscow governorate",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3480",
        "question": "ARM Architecture acts as a game platform for how many things?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/ARM_architecture>  . }",
        "sparql_id": "101",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/ontology/computingPlatform",
        "predicate1_mention": "platform",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/ARM_architecture",
        "entity1_mention": "arm architecture",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3481",
        "question": "What all has been created by Jerry Siegel?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Jerry_Siegel> } ",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/creators",
        "predicate1_mention": "created by",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Jerry_Siegel",
        "entity1_mention": "jerry siegel",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3482",
        "question": "Is David Cameron the prime minister of Nick Clegg?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Nick_Clegg> <http://dbpedia.org/ontology/primeMinister> <http://dbpedia.org/resource/David_Cameron> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/primeMinister",
        "predicate1_mention": "prime minister",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Nick_Clegg",
        "entity1_mention": "nick clegg",
        "entity2_uri": "http://dbpedia.org/resource/David_Cameron",
        "entity2_mention": "david cameron"
    },
    {
        "id": "3483",
        "question": "Cricket is played by which countries' citizens?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Cricket> . ?x <http://dbpedia.org/ontology/stateOfOrigin> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/occupation",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "predicate2_mention": "citizens",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Cricket",
        "entity1_mention": "cricket",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3484",
        "question": "What things have founded place as United States and New Mexico?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/New_Mexico> . }",
        "sparql_id": "7",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/foundation",
        "predicate1_mention": "founded place",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/United_States",
        "entity1_mention": "united states",
        "entity2_uri": "http://dbpedia.org/resource/New_Mexico",
        "entity2_mention": "new mexico"
    },
    {
        "id": "3485",
        "question": "Does Saneh Lungkeaw play for the Thailand's national team?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Saneh_Lungkeaw> <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Thailand> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/nationalteam",
        "predicate1_mention": "national team",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Saneh_Lungkeaw",
        "entity1_mention": "saneh lungkeaw",
        "entity2_uri": "http://dbpedia.org/resource/Thailand",
        "entity2_mention": "Thailand"
    },
    {
        "id": "3487",
        "question": "What tv shows were born out of a collaboration of playtone and dreamworks?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/Playtone> . ?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/DreamWorks_Television> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "307",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/company",
        "predicate1_mention": "playtone",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "tv shows",
        "entity1_uri": "http://dbpedia.org/resource/Playtone",
        "entity1_mention": "playtone",
        "entity2_uri": "http://dbpedia.org/resource/DreamWorks_Television",
        "entity2_mention": "dreamworks"
    },
    {
        "id": "3488",
        "question": "Who all have written songs that were then recorded in the Criteria Studios?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/recordedIn> <http://dbpedia.org/resource/Criteria_Studios> . ?x <http://dbpedia.org/property/writer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/recordedIn",
        "predicate1_mention": "recorded in",
        "predicate2_uri": "http://dbpedia.org/property/writer",
        "predicate2_mention": "written",
        "type_uri": "http://dbpedia.org/ontology/MusicalWork",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Criteria_Studios",
        "entity1_mention": "criteria studios",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3489",
        "question": "What are all the religions that have been followed by the Sir Lankan attorneys?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Attorneys_in_Sri_Lanka> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/profession",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/religion",
        "predicate2_mention": "religions",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Attorneys_in_Sri_Lanka",
        "entity1_mention": "Sir Lankan attorneys",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3491",
        "question": "Name the common former team of Marv mcFadden and Carlos Emmons ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marv_McFadden> <http://dbpedia.org/property/pastteams> ?uri. <http://dbpedia.org/resource/Carlos_Emmons_(American_football)> <http://dbpedia.org/ontology/formerTeam> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/pastteams",
        "predicate1_mention": "team",
        "predicate2_uri": "http://dbpedia.org/ontology/formerTeam",
        "predicate2_mention": "former team",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Marv_McFadden",
        "entity1_mention": "marv mcfadden",
        "entity2_uri": "http://dbpedia.org/resource/Carlos_Emmons_(American_football)",
        "entity2_mention": "Carlos Emmons"
    },
    {
        "id": "3492",
        "question": "Through how many labels has Katy B released her singles?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Katy_B> . ?x <http://dbpedia.org/ontology/recordLabel> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/writer",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/recordLabel",
        "predicate2_mention": "labels",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Katy_B",
        "entity1_mention": "katy",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3493",
        "question": "Which newspaper is owned by people living in Oslo?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Oslo> . ?uri <http://dbpedia.org/property/owners> ?x  . }",
        "sparql_id": "6",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/location",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/owners",
        "predicate2_mention": "owned",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Oslo",
        "entity1_mention": "oslo",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3494",
        "question": "How many people have written for Gangan Comics?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/magazine> <http://dbpedia.org/resource/Gangan_Comics> . ?x <http://dbpedia.org/property/author> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/magazine",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/author",
        "predicate2_mention": "written",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Gangan_Comics",
        "entity1_mention": "gangan comics",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3496",
        "question": "Name a company with key person as Dennis Muilenburg and Raymond Conner ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Dennis_Muilenburg> . ?uri <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Raymond_Conner>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/keyPeople",
        "predicate1_mention": "key person",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Company",
        "type_mention": "company",
        "entity1_uri": "http://dbpedia.org/resource/Dennis_Muilenburg",
        "entity1_mention": "dennis muilenburg",
        "entity2_uri": "http://dbpedia.org/resource/Raymond_Conner",
        "entity2_mention": "raymond conner"
    },
    {
        "id": "3497",
        "question": "Name the common institute of Robert hall and Erica Frank ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Hall_(economist)> <http://dbpedia.org/ontology/institution> ?uri. <http://dbpedia.org/resource/Erica_Frank> <http://dbpedia.org/ontology/institution> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/institution",
        "predicate1_mention": "institute",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Robert_Hall_(economist)",
        "entity1_mention": "robert hall",
        "entity2_uri": "http://dbpedia.org/resource/Erica_Frank",
        "entity2_mention": "erica frank"
    },
    {
        "id": "3499",
        "question": "What were robert sarvis and JAck Ryan nominated for ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Sarvis> <http://dbpedia.org/ontology/nominee> ?uri. <http://dbpedia.org/resource/Jack_Ryan_(politician)> <http://dbpedia.org/ontology/nominee> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/nominee",
        "predicate1_mention": "nominated",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Robert_Sarvis",
        "entity1_mention": "robert sarvis",
        "entity2_uri": "http://dbpedia.org/resource/Jack_Ryan_(politician)",
        "entity2_mention": "jack ryan"
    },
    {
        "id": "3500",
        "question": "List the ideologies of the party of Boonchu Rojanastien?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Boonchu_Rojanastien> <http://dbpedia.org/property/party> ?x . ?x <http://dbpedia.org/ontology/ideology> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/party",
        "predicate1_mention": "party",
        "predicate2_uri": "http://dbpedia.org/ontology/ideology",
        "predicate2_mention": "ideologies",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Boonchu_Rojanastien",
        "entity1_mention": "boonchu rojanastien",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3501",
        "question": "How many other important work has been done by the writers of Sarah Jane Adventures?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/The_Sarah_Jane_Adventures> . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/notableworks",
        "predicate1_mention": "important work",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures",
        "entity1_mention": "Sarah Jane Adventures",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3503",
        "question": "Is GIMP written in GTK+?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/GIMP> <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/GTK+> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/programmingLanguage",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/GIMP",
        "entity1_mention": "gimp",
        "entity2_uri": "http://dbpedia.org/resource/GTK+",
        "entity2_mention": "gtk+"
    },
    {
        "id": "3504",
        "question": "What is the common place where USS Camp DE-251 was built, and is one of the destinations of Emerald Air?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/USS_Camp_(DE-251)> <http://dbpedia.org/property/shipBuilder> ?uri. <http://dbpedia.org/resource/Emerald_Air_(United_States)> <http://dbpedia.org/ontology/destination> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/shipBuilder",
        "predicate1_mention": "built,",
        "predicate2_uri": "http://dbpedia.org/ontology/destination",
        "predicate2_mention": "destinations",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/USS_Camp_(DE-251)",
        "entity1_mention": "USS Camp DE-251",
        "entity2_uri": "http://dbpedia.org/resource/Emerald_Air_(United_States)",
        "entity2_mention": "emerald air"
    },
    {
        "id": "3505",
        "question": "Whose families are Buccinoidea and Buccinidae?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Buccinoidea> . ?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Buccinidae> . }",
        "sparql_id": "7",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/family",
        "predicate1_mention": "families",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Buccinoidea",
        "entity1_mention": "buccinoidea",
        "entity2_uri": "http://dbpedia.org/resource/Buccinidae",
        "entity2_mention": "buccinidae"
    },
    {
        "id": "3508",
        "question": "How many shows are aired on Comedy Central?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/Comedy_Central>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "401",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/property/network",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "predicate2_mention": "shows",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Comedy_Central",
        "entity1_mention": "comedy central",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3509",
        "question": "Whose theme music is composed by the band one of whose member is Les Claypool?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Les_Claypool> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . }",
        "sparql_id": "6",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/bandMember",
        "predicate1_mention": "member",
        "predicate2_uri": "http://dbpedia.org/property/themeMusicComposer",
        "predicate2_mention": "composed",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Les_Claypool",
        "entity1_mention": "les claypool",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3511",
        "question": "Where did the conflict take place where Liu Mingchuan fought?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Liu_Mingchuan> <http://dbpedia.org/property/battles> ?x . ?x <http://dbpedia.org/ontology/territory> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/battles",
        "predicate1_mention": "conflict",
        "predicate2_uri": "http://dbpedia.org/ontology/territory",
        "predicate2_mention": "take place",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Liu_Mingchuan",
        "entity1_mention": "liu mingchuan",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3513",
        "question": "How many movies are directed by the spouse of Dolores del Ro?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/partner> <http://dbpedia.org/resource/Dolores_del_R\u00edo> . ?uri <http://dbpedia.org/property/director> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "406",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/partner",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/director",
        "predicate2_mention": "directed",
        "type_uri": "http://dbpedia.org/ontology/Film",
        "type_mention": "movies",
        "entity1_uri": "http://dbpedia.org/resource/Dolores_del_R\u00edo",
        "entity1_mention": "dolores del ro",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3515",
        "question": "Which planet was first discovered by Johann Gottfried Galle?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/discoverer> <http://dbpedia.org/resource/Johann_Gottfried_Galle>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Planet>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/discoverer",
        "predicate1_mention": "discovered",
        "predicate2_uri": "http://dbpedia.org/ontology/Planet",
        "predicate2_mention": "planet",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Johann_Gottfried_Galle",
        "entity1_mention": "johann gottfried galle",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3516",
        "question": "what mountains are in sierra nevada?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mountainRange> <http://dbpedia.org/resource/Sierra_Nevada_(U.S.)>  . }",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/mountainRange",
        "predicate1_mention": "mountains",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Sierra_Nevada_(U.S.)",
        "entity1_mention": "sierra nevada",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3518",
        "question": "Who is the nominee of Jack Ryan ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jack_Ryan_(politician)> <http://dbpedia.org/ontology/nominee> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/nominee",
        "predicate1_mention": "nominee",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Jack_Ryan_(politician)",
        "entity1_mention": "jack ryan",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3519",
        "question": "Name the wine regions of Baco noir?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Baco_noir> <http://dbpedia.org/ontology/wineRegion> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/wineRegion",
        "predicate1_mention": "regions",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Baco_noir",
        "entity1_mention": "baco noir",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3520",
        "question": "Which religion is followed by the PM who was served by Chea Sim?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chea_Sim> <http://dbpedia.org/property/primeminister> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/primeminister",
        "predicate1_mention": "PM",
        "predicate2_uri": "http://dbpedia.org/ontology/religion",
        "predicate2_mention": "religion",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Chea_Sim",
        "entity1_mention": "chea sim",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3521",
        "question": "What are the television shows of a company headquartered in Geneva?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Geneva> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/headquarters",
        "predicate1_mention": "headquartered",
        "predicate2_uri": "http://dbpedia.org/property/company",
        "predicate2_mention": "company",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "television shows",
        "entity1_uri": "http://dbpedia.org/resource/Geneva",
        "entity1_mention": "geneva",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3523",
        "question": "Name the parts of the settlements which has New Braunfels as one of the parts ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/part> <http://dbpedia.org/resource/New_Braunfels,_Texas> . ?x <http://dbpedia.org/ontology/part> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/part",
        "predicate1_mention": "parts",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Settlement",
        "type_mention": "settlements",
        "entity1_uri": "http://dbpedia.org/resource/New_Braunfels,_Texas",
        "entity1_mention": "new braunfels",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3524",
        "question": "How many party are there of the office holders whose one of the party is Janata Dal ?",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/otherParty> <http://dbpedia.org/resource/Janata_Dal> . ?x <http://dbpedia.org/ontology/otherParty> ?uri }",
        "sparql_id": "111",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/otherParty",
        "predicate1_mention": "party",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Janata_Dal",
        "entity1_mention": "janata dal",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3525",
        "question": "Who is the headcoach of 2014 15 Virginia Tech Hokies men basketball team ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2014\u201315_Virginia_Tech_Hokies_men's_basketball_team> <http://dbpedia.org/property/headcoach> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/headcoach",
        "predicate1_mention": "headcoach",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/2014\u201315_Virginia_Tech_Hokies_men's_basketball_team",
        "entity1_mention": "2014 15 virginia tech hokies men basketball team",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3526",
        "question": "name the home stadium of FC Spartak Moscow season 2011-12",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2011\u201312_FC_Spartak_Moscow_season> <http://dbpedia.org/ontology/homeStadium> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/homeStadium",
        "predicate1_mention": "home stadium",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/2011\u201312_FC_Spartak_Moscow_season",
        "entity1_mention": "spartak moscow season",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3527",
        "question": "How many causes of death have been associated with American citizens?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/citizenship> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/citizenship",
        "predicate1_mention": "citizens",
        "predicate2_uri": "http://dbpedia.org/ontology/deathCause",
        "predicate2_mention": "causes of death",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/United_States",
        "entity1_mention": "American",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3528",
        "question": "Give me a list of everyone who married the musicians signed up with Pablo Records?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Pablo_Records> . ?uri <http://dbpedia.org/ontology/spouse> ?x  . }",
        "sparql_id": "6",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/label",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/spouse",
        "predicate2_mention": "married",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Pablo_Records",
        "entity1_mention": "pablo records",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3529",
        "question": "Is Bluebird the grandsire of Miss Potential?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Miss_Potential> <http://dbpedia.org/ontology/grandsire> <http://dbpedia.org/resource/Bluebird> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/grandsire",
        "predicate1_mention": "grandsire",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Miss_Potential",
        "entity1_mention": "miss potential",
        "entity2_uri": "http://dbpedia.org/resource/Bluebird",
        "entity2_mention": "bluebird"
    },
    {
        "id": "3532",
        "question": "List everyone who got their training in the city of California?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/California> . ?uri <http://dbpedia.org/property/training> ?x  . }",
        "sparql_id": "6",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/city",
        "predicate1_mention": "city",
        "predicate2_uri": "http://dbpedia.org/property/training",
        "predicate2_mention": "training",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/California",
        "entity1_mention": "california",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3534",
        "question": "Who made the singles on the famous album Aida?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/album> <http://dbpedia.org/resource/Elton_John_and_Tim_Rice's_Aida> . ?x <http://dbpedia.org/ontology/musicalArtist> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/album",
        "predicate1_mention": "album",
        "predicate2_uri": "http://dbpedia.org/ontology/musicalArtist",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Single",
        "type_mention": "singles",
        "entity1_uri": "http://dbpedia.org/resource/Elton_John_and_Tim_Rice's_Aida",
        "entity1_mention": "aida",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3535",
        "question": "Who is the associate of Thomas Bryan Martin ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thomas_Bryan_Martin> <http://dbpedia.org/ontology/associate> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/associate",
        "predicate1_mention": "associate",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Thomas_Bryan_Martin",
        "entity1_mention": "thomas bryan martin",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3536",
        "question": "What sport played in Polytechnic uni of San Juan has also made advocate nasiruddin famous?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Advocate_Nasiruddin> <http://dbpedia.org/ontology/knownFor> ?uri. <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_San_Juan> <http://dbpedia.org/ontology/sport> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/knownFor",
        "predicate1_mention": "famous",
        "predicate2_uri": "http://dbpedia.org/ontology/sport",
        "predicate2_mention": "sport",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Advocate_Nasiruddin",
        "entity1_mention": "advocate nasiruddin",
        "entity2_uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_San_Juan",
        "entity2_mention": "polytechnic"
    },
    {
        "id": "3537",
        "question": "Where is the fictional character from, whose last appearance was in the Avengers, 1998?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/last> <http://dbpedia.org/resource/The_Avengers_(1998_film)> . ?x <http://dbpedia.org/property/nationality> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/last",
        "predicate1_mention": "last",
        "predicate2_uri": "http://dbpedia.org/property/nationality",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "type_mention": "fictional character",
        "entity1_uri": "http://dbpedia.org/resource/The_Avengers_(1998_film)",
        "entity1_mention": "the Avengers, 1998",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3538",
        "question": "List the academic discipline of the journals whose one of the discipline is neuro imaging ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/academicDiscipline> <http://dbpedia.org/resource/Neuroimaging> . ?x <http://dbpedia.org/ontology/academicDiscipline> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AcademicJournal>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/academicDiscipline",
        "predicate1_mention": "academic discipline",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/AcademicJournal",
        "type_mention": "journals",
        "entity1_uri": "http://dbpedia.org/resource/Neuroimaging",
        "entity1_mention": "neuro imaging",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3539",
        "question": "Which countries were led by Pietro Parolin?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Pietro_Parolin>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/leader",
        "predicate1_mention": "led by",
        "predicate2_uri": "http://dbpedia.org/ontology/Country",
        "predicate2_mention": "countries",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Pietro_Parolin",
        "entity1_mention": "pietro parolin",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3540",
        "question": "was the first national bank and trust building architectured by Chicago?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/First_National_Bank_and_Trust_Building_(Lima,_Ohio)> <http://dbpedia.org/ontology/architecturalStyle> <http://dbpedia.org/resource/Chicago> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/architecturalStyle",
        "predicate1_mention": "architectured",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/First_National_Bank_and_Trust_Building_(Lima,_Ohio)",
        "entity1_mention": "first national bank and trust building",
        "entity2_uri": "http://dbpedia.org/resource/Chicago",
        "entity2_mention": "chicago"
    },
    {
        "id": "3541",
        "question": "Where does the road starting from Madison, Wisconsin end?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/routeEnd> <http://dbpedia.org/resource/Madison,_Wisconsin> . ?x <http://dbpedia.org/ontology/routeStart> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Road>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/routeEnd",
        "predicate1_mention": "end",
        "predicate2_uri": "http://dbpedia.org/ontology/routeStart",
        "predicate2_mention": "starting",
        "type_uri": "http://dbpedia.org/ontology/Road",
        "type_mention": "road",
        "entity1_uri": "http://dbpedia.org/resource/Madison,_Wisconsin",
        "entity1_mention": "madison, wisconsin",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3542",
        "question": "What are the movies with Daniel Waters as screenwriter?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Daniel_Waters_(screenwriter)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/screenplay",
        "predicate1_mention": "screenwriter",
        "predicate2_uri": "http://dbpedia.org/ontology/Film",
        "predicate2_mention": "movies",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Daniel_Waters_(screenwriter)",
        "entity1_mention": "Daniel Waters as screenwriter",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3543",
        "question": "What sports are played in schools in the capital region?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/region> <http://dbpedia.org/resource/Capital_region> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/region",
        "predicate1_mention": "region",
        "predicate2_uri": "http://dbpedia.org/ontology/sport",
        "predicate2_mention": "sports",
        "type_uri": "http://dbpedia.org/ontology/School",
        "type_mention": "schools",
        "entity1_uri": "http://dbpedia.org/resource/Capital_region",
        "entity1_mention": "capital region",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3544",
        "question": "Where are the tombs of alumni of ational academy museum and school?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/training> <http://dbpedia.org/resource/National_Academy_Museum_and_School> . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/training",
        "predicate1_mention": "alumni",
        "predicate2_uri": "http://dbpedia.org/ontology/restingPlace",
        "predicate2_mention": "tombs",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/National_Academy_Museum_and_School",
        "entity1_mention": "ational academy museum and school",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3545",
        "question": "What beverage was launched by Ferrero SpA?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Ferrero_SpA>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Food>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/creator",
        "predicate1_mention": "launched",
        "predicate2_uri": "http://dbpedia.org/ontology/Food",
        "predicate2_mention": "beverage",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Ferrero_SpA",
        "entity1_mention": "ferrero spa",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3547",
        "question": "Name the TV show with Simon Fuller as artist and Fox as the channel ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller> . ?uri <http://dbpedia.org/property/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/creator",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/channel",
        "predicate2_mention": "channel",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "tv show",
        "entity1_uri": "http://dbpedia.org/resource/Simon_Fuller",
        "entity1_mention": "simon fuller",
        "entity2_uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company",
        "entity2_mention": "Fox"
    },
    {
        "id": "3548",
        "question": "How many bands began in Birmingham?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/origin> <http://dbpedia.org/resource/Birmingham>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
        "sparql_id": "401",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/property/origin",
        "predicate1_mention": "began in",
        "predicate2_uri": "http://dbpedia.org/ontology/Band",
        "predicate2_mention": "bands",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Birmingham",
        "entity1_mention": "birmingham",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3549",
        "question": "How many athletic associations are there in all of the private universities?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/type> <http://dbpedia.org/resource/Private_university> . ?x <http://dbpedia.org/property/athletics> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/type",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/athletics",
        "predicate2_mention": "athletic",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Private_university",
        "entity1_mention": "private universities",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3550",
        "question": "Which licensee of the WRVU is also the alma mater of the Todd J. Campbell ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WRVU> <http://dbpedia.org/property/licensee> ?uri. <http://dbpedia.org/resource/Todd_J._Campbell> <http://dbpedia.org/ontology/almaMater> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/licensee",
        "predicate1_mention": "licensee",
        "predicate2_uri": "http://dbpedia.org/ontology/almaMater",
        "predicate2_mention": "alma mater",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/WRVU",
        "entity1_mention": "wrvu",
        "entity2_uri": "http://dbpedia.org/resource/Todd_J._Campbell",
        "entity2_mention": "todd j. campbell"
    },
    {
        "id": "3551",
        "question": "Which currency of Republic of Montenegro is also the currency of the French Southern and Antarctic Lands ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/French_Southern_and_Antarctic_Lands> <http://dbpedia.org/ontology/currency> ?uri. <http://dbpedia.org/resource/Republic_of_Montenegro_(1992\u20132006)> <http://dbpedia.org/property/currency> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/currency",
        "predicate1_mention": "currency",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/French_Southern_and_Antarctic_Lands",
        "entity1_mention": "French Southern and Antarctic Lands",
        "entity2_uri": "http://dbpedia.org/resource/Republic_of_Montenegro_(1992\u20132006)",
        "entity2_mention": "republic of montenegro"
    },
    {
        "id": "3552",
        "question": "Name the Chris Marve's school ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chris_Marve> <http://dbpedia.org/ontology/school> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/school",
        "predicate1_mention": "school",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Chris_Marve",
        "entity1_mention": "chris marve",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3553",
        "question": "Which set of researchers won the Gold Medal of the Royal Astronomical Society award?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Gold_Medal_of_the_Royal_Astronomical_Society>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/prizes",
        "predicate1_mention": "award",
        "predicate2_uri": "http://dbpedia.org/ontology/Scientist",
        "predicate2_mention": "researchers",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Gold_Medal_of_the_Royal_Astronomical_Society",
        "entity1_mention": "the Gold Medal of the Royal Astronomical Society award",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3554",
        "question": "In how many areas do the networks broadcast, which also broadcasts in North Carolina?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/broadcastArea> <http://dbpedia.org/resource/North_Carolina> . ?x <http://dbpedia.org/property/area> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/broadcastArea",
        "predicate1_mention": "broadcasts",
        "predicate2_uri": "http://dbpedia.org/property/area",
        "predicate2_mention": "areas",
        "type_uri": "http://dbpedia.org/ontology/Place",
        "type_mention": "areas",
        "entity1_uri": "http://dbpedia.org/resource/North_Carolina",
        "entity1_mention": "north carolina",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3555",
        "question": "Name the movie whose director of photography is Gregg Toland and Bernard Herrmann was the music composer?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Gregg_Toland> . ?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Bernard_Herrmann>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/cinematography",
        "predicate1_mention": "photography",
        "predicate2_uri": "http://dbpedia.org/ontology/musicComposer",
        "predicate2_mention": "music composer",
        "type_uri": "http://dbpedia.org/ontology/Film",
        "type_mention": "movie",
        "entity1_uri": "http://dbpedia.org/resource/Gregg_Toland",
        "entity1_mention": "gregg toland",
        "entity2_uri": "http://dbpedia.org/resource/Bernard_Herrmann",
        "entity2_mention": "bernard herrmann"
    },
    {
        "id": "3557",
        "question": "What are the awrds won by Laemmle Theatres ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Laemmle_Theatres> <http://dbpedia.org/ontology/service> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/service",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Laemmle_Theatres",
        "entity1_mention": "laemmle theatres",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3558",
        "question": "People of which religion have been the members of parliament, and are from the Kalutara Electoral district?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/region> <http://dbpedia.org/resource/Kalutara_Electoral_District> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MemberOfParliament>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/region",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/religion",
        "predicate2_mention": "religion",
        "type_uri": "http://dbpedia.org/ontology/MemberOfParliament",
        "type_mention": "members of parliament",
        "entity1_uri": "http://dbpedia.org/resource/Kalutara_Electoral_District",
        "entity1_mention": "Kalutara Electoral district",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3559",
        "question": "Name a company with one of the key person as Edwin Catmull and produces RenderMan?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Edwin_Catmull> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/RenderMan_(software)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/keyPerson",
        "predicate1_mention": "key person",
        "predicate2_uri": "http://dbpedia.org/property/products",
        "predicate2_mention": "produces",
        "type_uri": "http://dbpedia.org/ontology/Company",
        "type_mention": "company",
        "entity1_uri": "http://dbpedia.org/resource/Edwin_Catmull",
        "entity1_mention": "edwin catmull",
        "entity2_uri": "http://dbpedia.org/resource/RenderMan_(software)",
        "entity2_mention": "renderman"
    },
    {
        "id": "3560",
        "question": "Give me a count of movies distributed by Warner Bros?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Warner_Bros.>  . }",
        "sparql_id": "101",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/property/distributor",
        "predicate1_mention": "distributed",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Warner_Bros.",
        "entity1_mention": "warner bros",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3562",
        "question": "Who owns the broadcast network founded by CNN?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/CNN> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BroadcastNetwork>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/foundedBy",
        "predicate1_mention": "founded by",
        "predicate2_uri": "http://dbpedia.org/property/owner",
        "predicate2_mention": "owns",
        "type_uri": "http://dbpedia.org/ontology/BroadcastNetwork",
        "type_mention": "broadcast network",
        "entity1_uri": "http://dbpedia.org/resource/CNN",
        "entity1_mention": "cnn",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3563",
        "question": "From how many different cities have people gone to the Illinois Fighting Illini men's basketball?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/college> <http://dbpedia.org/resource/Illinois_Fighting_Illini_men's_basketball> . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/college",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/placeOfBirth",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Place",
        "type_mention": "gone to",
        "entity1_uri": "http://dbpedia.org/resource/Illinois_Fighting_Illini_men's_basketball",
        "entity1_mention": "Illinois Fighting Illini men's basketball",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3564",
        "question": "Name the television show with opening theme as Te Deum and is composed by Marc-Antoine Charpentier?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Te_Deum_(Charpentier)> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Marc-Antoine_Charpentier>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/openingTheme",
        "predicate1_mention": "opening theme",
        "predicate2_uri": "http://dbpedia.org/property/themeMusicComposer",
        "predicate2_mention": "composed by",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "television show",
        "entity1_uri": "http://dbpedia.org/resource/Te_Deum_(Charpentier)",
        "entity1_mention": "charpentier",
        "entity2_uri": "http://dbpedia.org/resource/Marc-Antoine_Charpentier",
        "entity2_mention": "marc-antoine charpentier"
    },
    {
        "id": "3565",
        "question": "What is the name of the river whose mouth country is Mozambique and source region is North-Western Province, Zambia?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mouthCountry> <http://dbpedia.org/resource/Mozambique> . ?uri <http://dbpedia.org/ontology/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/mouthCountry",
        "predicate1_mention": "mouth country",
        "predicate2_uri": "http://dbpedia.org/ontology/sourceRegion",
        "predicate2_mention": "source region",
        "type_uri": "http://dbpedia.org/ontology/River",
        "type_mention": "river",
        "entity1_uri": "http://dbpedia.org/resource/Mozambique",
        "entity1_mention": "mozambique",
        "entity2_uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia",
        "entity2_mention": "north-western province, zambia"
    },
    {
        "id": "3566",
        "question": "Did nokia 215 has the series 30+ OS?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Nokia_215> <http://dbpedia.org/property/os> <http://dbpedia.org/resource/Series_30+> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/os",
        "predicate1_mention": "os",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Nokia_215",
        "entity1_mention": "nokia 215",
        "entity2_uri": "http://dbpedia.org/resource/Series_30+",
        "entity2_mention": "series 30+"
    },
    {
        "id": "3567",
        "question": "Sampson Cudjoe plays for the Ghana national team?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Sampson_Cudjoe> <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Ghana> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/nationalteam",
        "predicate1_mention": "national team",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Sampson_Cudjoe",
        "entity1_mention": "sampson cudjoe",
        "entity2_uri": "http://dbpedia.org/resource/Ghana",
        "entity2_mention": "ghana"
    },
    {
        "id": "3568",
        "question": "How many owners owned the clubs participating in the Premier leagues of '14?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/season> <http://dbpedia.org/resource/2014\u201315_Premier_League> . ?x <http://dbpedia.org/property/owner> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/season",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/owner",
        "predicate2_mention": "owners",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/2014\u201315_Premier_League",
        "entity1_mention": "premier",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3569",
        "question": "What is the producer of the television shows whose channel is CBBC?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/channel> <http://dbpedia.org/resource/CBBC_(TV_channel)> . ?x <http://dbpedia.org/ontology/producer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/channel",
        "predicate1_mention": "channel",
        "predicate2_uri": "http://dbpedia.org/ontology/producer",
        "predicate2_mention": "producer",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "television shows",
        "entity1_uri": "http://dbpedia.org/resource/CBBC_(TV_channel)",
        "entity1_mention": "cbbc",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3570",
        "question": "List the interest of the scientists whose one of the field is Chinese poetry ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/fields> <http://dbpedia.org/resource/Chinese_poetry> . ?x <http://dbpedia.org/property/fields> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/fields",
        "predicate1_mention": "field",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Scientist",
        "type_mention": "scientists",
        "entity1_uri": "http://dbpedia.org/resource/Chinese_poetry",
        "entity1_mention": "chinese poetry",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3571",
        "question": "Which writer of A literary Nightmare also extended the work of The Apple tree ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Apple_Tree> <http://dbpedia.org/ontology/basedOn> ?uri. <http://dbpedia.org/resource/A_Literary_Nightmare> <http://dbpedia.org/ontology/author> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/basedOn",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/author",
        "predicate2_mention": "writer",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/The_Apple_Tree",
        "entity1_mention": "the apple tree",
        "entity2_uri": "http://dbpedia.org/resource/A_Literary_Nightmare",
        "entity2_mention": "literary nightmare"
    },
    {
        "id": "3573",
        "question": "How many licensee are there, of the radio stations whose area is Nashville, Tennessee ?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/area> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?x <http://dbpedia.org/property/licensee> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/area",
        "predicate1_mention": "area",
        "predicate2_uri": "http://dbpedia.org/property/licensee",
        "predicate2_mention": "licensee",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Nashville,_Tennessee",
        "entity1_mention": "nashville, tennessee",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3574",
        "question": "Who has a  child named Lori Black and is resting place as Palo Alto, California?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Lori_Black> . ?uri <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Palo_Alto,_California>  . }",
        "sparql_id": "8",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/children",
        "predicate1_mention": "child",
        "predicate2_uri": "http://dbpedia.org/property/restingPlace",
        "predicate2_mention": "resting place",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Lori_Black",
        "entity1_mention": "lori black",
        "entity2_uri": "http://dbpedia.org/resource/Palo_Alto,_California",
        "entity2_mention": "Palo Alto, California"
    },
    {
        "id": "3575",
        "question": "Who is the artist of the album which has the song I Can't Change the World ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/I_Can't_Change_the_World> <http://dbpedia.org/property/album> ?x . ?x <http://dbpedia.org/property/artist> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/album",
        "predicate1_mention": "album",
        "predicate2_uri": "http://dbpedia.org/property/artist",
        "predicate2_mention": "artist",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/I_Can't_Change_the_World",
        "entity1_mention": "I Can't Change the World",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3576",
        "question": "What are the movies whose cast members are signed up with Point Blank Records?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Point_Blank_Records> . ?uri <http://dbpedia.org/property/starring> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/label",
        "predicate1_mention": "signed up with",
        "predicate2_uri": "http://dbpedia.org/property/starring",
        "predicate2_mention": "cast members",
        "type_uri": "http://dbpedia.org/ontology/Film",
        "type_mention": "movie",
        "entity1_uri": "http://dbpedia.org/resource/Point_Blank_Records",
        "entity1_mention": "Point Blank Records",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3578",
        "question": "How many people are in the band with Juelz Santana?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Juelz_Santana> . ?x <http://dbpedia.org/ontology/bandMember> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/currentMembers",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/bandMember",
        "predicate2_mention": "band",
        "type_uri": "http://dbpedia.org/ontology/Person",
        "type_mention": "people",
        "entity1_uri": "http://dbpedia.org/resource/Juelz_Santana",
        "entity1_mention": "juelz santana",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3580",
        "question": "In which country is the Duong river?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/\u0110u\u1ed1ng_River> <http://dbpedia.org/ontology/sourceCountry> ?uri  . }",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/sourceCountry",
        "predicate1_mention": "country",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/\u0110u\u1ed1ng_River",
        "entity1_mention": "Duong river",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3583",
        "question": "Which band's past member are Joe Jonas and Nick Jonas?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Joe_Jonas> . ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Nick_Jonas> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
        "sparql_id": "307",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/pastMembers",
        "predicate1_mention": "past member",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Band",
        "type_mention": "band",
        "entity1_uri": "http://dbpedia.org/resource/Joe_Jonas",
        "entity1_mention": "joe jonas",
        "entity2_uri": "http://dbpedia.org/resource/Nick_Jonas",
        "entity2_mention": "nick jonas"
    },
    {
        "id": "3585",
        "question": "List the common official language of the ladonia and Empire of Atlantium ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ladonia_(micronation)> <http://dbpedia.org/ontology/officialLanguage> ?uri. <http://dbpedia.org/resource/Empire_of_Atlantium> <http://dbpedia.org/ontology/officialLanguage> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/officialLanguage",
        "predicate1_mention": "official language",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Ladonia_(micronation)",
        "entity1_mention": "ladonia",
        "entity2_uri": "http://dbpedia.org/resource/Empire_of_Atlantium",
        "entity2_mention": "empire of atlantium"
    },
    {
        "id": "3586",
        "question": "What is the name of the characters created by Frank Miller?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Frank_Miller_(comics)> . ?x <http://dbpedia.org/property/characterName> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/creators",
        "predicate1_mention": "created",
        "predicate2_uri": "http://dbpedia.org/property/characterName",
        "predicate2_mention": "name of the characters",
        "type_uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "type_mention": "characters",
        "entity1_uri": "http://dbpedia.org/resource/Frank_Miller_(comics)",
        "entity1_mention": "frank miller",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3587",
        "question": "Does the stylistic origins of Plena lie in the Caribbean?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Plena> <http://dbpedia.org/property/stylisticOrigins> <http://dbpedia.org/resource/Caribbean> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/stylisticOrigins",
        "predicate1_mention": "stylistic origins",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Plena",
        "entity1_mention": "plena",
        "entity2_uri": "http://dbpedia.org/resource/Caribbean",
        "entity2_mention": "caribbean"
    },
    {
        "id": "3588",
        "question": "From which genres of music did those genres emerge where drums are important?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/instruments> <http://dbpedia.org/resource/Drum_kit> . ?x <http://dbpedia.org/ontology/stylisticOrigin> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicGenre>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/instruments",
        "predicate1_mention": "drums",
        "predicate2_uri": "http://dbpedia.org/ontology/stylisticOrigin",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/MusicGenre",
        "type_mention": "music",
        "entity1_uri": "http://dbpedia.org/resource/Drum_kit",
        "entity1_mention": "drums",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3589",
        "question": "What is the service of the Laemmle Theatres and is also the award of the Jos Rivera (playwright)?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Laemmle_Theatres> <http://dbpedia.org/ontology/service> ?uri. <http://dbpedia.org/resource/Jos\u00e9_Rivera_(playwright)> <http://dbpedia.org/property/awards> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/service",
        "predicate1_mention": "service",
        "predicate2_uri": "http://dbpedia.org/property/awards",
        "predicate2_mention": "award",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Laemmle_Theatres",
        "entity1_mention": "laemmle theatres",
        "entity2_uri": "http://dbpedia.org/resource/Jos\u00e9_Rivera_(playwright)",
        "entity2_mention": "Jos Rivera (playwright)"
    },
    {
        "id": "3590",
        "question": "Whci co founder of Sea gayle Music is also the artist of Brad Paisley Discography /",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brad_Paisley_discography> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/Sea_Gayle_Music> <http://dbpedia.org/property/founder> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/artist",
        "predicate1_mention": "artist",
        "predicate2_uri": "http://dbpedia.org/property/founder",
        "predicate2_mention": "founder",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Brad_Paisley_discography",
        "entity1_mention": "Brad Paisley Discography",
        "entity2_uri": "http://dbpedia.org/resource/Sea_Gayle_Music",
        "entity2_mention": "Sea gayle Music"
    },
    {
        "id": "3591",
        "question": "Whose album is Haiti, I am sorry?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Haiti_I_Am_Sorry> <http://dbpedia.org/ontology/album> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/album",
        "predicate1_mention": "album",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Haiti_I_Am_Sorry",
        "entity1_mention": "Haiti, I am sorry",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3592",
        "question": "In which other places are there companies which are in Ontario, too?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Ontario> . ?x <http://dbpedia.org/property/locations> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/locationCity",
        "predicate1_mention": "places",
        "predicate2_uri": "http://dbpedia.org/property/locations",
        "predicate2_mention": "companies",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Ontario",
        "entity1_mention": "Ontario",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3593",
        "question": "What is the american football league whose champion is from Kansas City, Missouri?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Kansas_City,_Missouri> . ?uri <http://dbpedia.org/property/champion> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballLeague>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/city",
        "predicate1_mention": "city,",
        "predicate2_uri": "http://dbpedia.org/property/champion",
        "predicate2_mention": "champion",
        "type_uri": "http://dbpedia.org/ontology/AmericanFootballLeague",
        "type_mention": "american football league",
        "entity1_uri": "http://dbpedia.org/resource/Kansas_City,_Missouri",
        "entity1_mention": "kansas city, missouri",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3594",
        "question": "Where did the music genre of Harry and the Potters originate?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Harry_and_the_Potters_(album)> <http://dbpedia.org/ontology/genre> ?x . ?x <http://dbpedia.org/ontology/stylisticOrigin> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/genre",
        "predicate1_mention": "genre",
        "predicate2_uri": "http://dbpedia.org/ontology/stylisticOrigin",
        "predicate2_mention": "originate",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Harry_and_the_Potters_(album)",
        "entity1_mention": "Harry and the Potters",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3595",
        "question": "For which other teams have the past Boston Bruins members played?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Boston_Bruins> . ?x <http://dbpedia.org/property/playedFor> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/formerTeam",
        "predicate1_mention": "teams",
        "predicate2_uri": "http://dbpedia.org/property/playedFor",
        "predicate2_mention": "played",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Boston_Bruins",
        "entity1_mention": "boston bruins",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3598",
        "question": "Who used to skate with the pupils of Laureano Ibarra?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Laureano_Ibarra> . ?x <http://dbpedia.org/ontology/formerPartner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FigureSkater>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/coach",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/formerPartner",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/FigureSkater",
        "type_mention": "skate",
        "entity1_uri": "http://dbpedia.org/resource/Laureano_Ibarra",
        "entity1_mention": "laureano ibarra",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3599",
        "question": "What is the religion of the member of parliament who is a relative of Sarathchandra Rajakaruna?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Sarathchandra_Rajakaruna> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MemberOfParliament>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/relation",
        "predicate1_mention": "relative of",
        "predicate2_uri": "http://dbpedia.org/ontology/religion",
        "predicate2_mention": "religion",
        "type_uri": "http://dbpedia.org/ontology/MemberOfParliament",
        "type_mention": "member of parliament",
        "entity1_uri": "http://dbpedia.org/resource/Sarathchandra_Rajakaruna",
        "entity1_mention": "sarathchandra rajakaruna",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3601",
        "question": "What television show is magistrated by Harry Connick Jr?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Harry_Connick,_Jr.>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/judges",
        "predicate1_mention": "magistrated by",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "television show",
        "entity1_uri": "http://dbpedia.org/resource/Harry_Connick,_Jr.",
        "entity1_mention": "harry connick jr",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3603",
        "question": "From how many different places did the weapons used in the American Indian wars originate?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/usedInWar> <http://dbpedia.org/resource/American_Indian_Wars> . ?x <http://dbpedia.org/property/origin> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/usedInWar",
        "predicate1_mention": "used in",
        "predicate2_uri": "http://dbpedia.org/property/origin",
        "predicate2_mention": "originate",
        "type_uri": "http://dbpedia.org/ontology/Place",
        "type_mention": "places",
        "entity1_uri": "http://dbpedia.org/resource/American_Indian_Wars",
        "entity1_mention": "american indian wars",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3604",
        "question": "From where does the river start, which flows into the Conowingo dam?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Conowingo_Dam> . ?x <http://dbpedia.org/ontology/source> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/riverMouth",
        "predicate1_mention": "river start",
        "predicate2_uri": "http://dbpedia.org/ontology/source",
        "predicate2_mention": "start",
        "type_uri": "http://dbpedia.org/ontology/River",
        "type_mention": "river",
        "entity1_uri": "http://dbpedia.org/resource/Conowingo_Dam",
        "entity1_mention": "conowingo dam",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3605",
        "question": "List all the parents of writers coming from the Great Missenden ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/homeTown> <http://dbpedia.org/resource/Great_Missenden> . ?x <http://dbpedia.org/ontology/parent> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/homeTown",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/parent",
        "predicate2_mention": "parents",
        "type_uri": "http://dbpedia.org/ontology/Writer",
        "type_mention": "writers",
        "entity1_uri": "http://dbpedia.org/resource/Great_Missenden",
        "entity1_mention": "great missenden",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3606",
        "question": "What state has a Brideun School for Exception Children and is the birthplace  of B J Crombeen?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brideun_School_for_Exceptional_Children> <http://dbpedia.org/property/state> ?uri. <http://dbpedia.org/resource/B._J._Crombeen> <http://dbpedia.org/ontology/birthPlace> ?uri . }",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/state",
        "predicate1_mention": "state",
        "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
        "predicate2_mention": "birthplace",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Brideun_School_for_Exceptional_Children",
        "entity1_mention": "Brideun School for Exception Children",
        "entity2_uri": "http://dbpedia.org/resource/B._J._Crombeen",
        "entity2_mention": "crombeen"
    },
    {
        "id": "3607",
        "question": "What is the total number of politicians whose predecessor's deputy is Jenny Macklin?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Jenny_Macklin> . ?uri <http://dbpedia.org/property/predecessor> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_id": "406",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/deputy",
        "predicate1_mention": "deputy",
        "predicate2_uri": "http://dbpedia.org/property/predecessor",
        "predicate2_mention": "predecessor's",
        "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
        "type_mention": "politicians",
        "entity1_uri": "http://dbpedia.org/resource/Jenny_Macklin",
        "entity1_mention": "jenny macklin",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3608",
        "question": "Count all the shows whose music composers are in Oysterhead.",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Oysterhead> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "406",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "predicate1_mention": "music composers",
        "predicate2_uri": "http://dbpedia.org/property/themeMusicComposer",
        "predicate2_mention": "composers",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "shows",
        "entity1_uri": "http://dbpedia.org/resource/Oysterhead",
        "entity1_mention": "Oysterhead",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3609",
        "question": "Which awards have Ingmar Bergman won?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ingmar_Bergman> <http://dbpedia.org/property/awards> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/awards",
        "predicate1_mention": "awards",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Ingmar_Bergman",
        "entity1_mention": "ingmar bergman",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3610",
        "question": "In which timezone does Khok Kwang lie?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Khok_Kwang> <http://dbpedia.org/ontology/timeZone> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/timeZone",
        "predicate1_mention": "timezone",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Khok_Kwang",
        "entity1_mention": "khok kwang",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3611",
        "question": "What is the scientist whose PhD students are Erich Bagge and erban ieica?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Erich_Bagge> . ?uri <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/\u0218erban_\u021ai\u021beica> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
        "sparql_id": "307",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/doctoralStudents",
        "predicate1_mention": "phD students",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Scientist",
        "type_mention": "scientist",
        "entity1_uri": "http://dbpedia.org/resource/Erich_Bagge",
        "entity1_mention": "erich bagge",
        "entity2_uri": "http://dbpedia.org/resource/\u0218erban_\u021ai\u021beica",
        "entity2_mention": "erban ieica"
    },
    {
        "id": "3612",
        "question": "How many bands have members currently playing the Fender Stratocaster?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Fender_Stratocaster> . ?uri <http://dbpedia.org/property/currentMembers> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
        "sparql_id": "406",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/notableInstruments",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/currentMembers",
        "predicate2_mention": "members currently",
        "type_uri": "http://dbpedia.org/ontology/Band",
        "type_mention": "bands",
        "entity1_uri": "http://dbpedia.org/resource/Fender_Stratocaster",
        "entity1_mention": "fender stratocaster",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3613",
        "question": "Which country has leaders  Karu Jayasuriya and Ranil Wickremesinghe?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Karu_Jayasuriya> . ?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Ranil_Wickremesinghe> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
        "sparql_id": "307",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/leader",
        "predicate1_mention": "leaders",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Country",
        "type_mention": "country",
        "entity1_uri": "http://dbpedia.org/resource/Karu_Jayasuriya",
        "entity1_mention": "karu jayasuriya",
        "entity2_uri": "http://dbpedia.org/resource/Ranil_Wickremesinghe",
        "entity2_mention": "ranil wickremesinghe"
    },
    {
        "id": "3614",
        "question": "List the software which uses Microsoft Windows as their operating system ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/operatingSystem",
        "predicate1_mention": "operating system",
        "predicate2_uri": "http://dbpedia.org/ontology/Software",
        "predicate2_mention": "software",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Microsoft_Windows",
        "entity1_mention": "microsoft windows",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3615",
        "question": "What is the deathplace of people who have worked in Ethics?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/Ethics> . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/mainInterests",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/placeOfDeath",
        "predicate2_mention": "deathplace",
        "type_uri": "http://dbpedia.org/ontology/Person",
        "type_mention": "people",
        "entity1_uri": "http://dbpedia.org/resource/Ethics",
        "entity1_mention": "ethics",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3616",
        "question": "How many religions have the relatives of waxiangs followed?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Waxiang_people> <http://dbpedia.org/property/related> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
        "sparql_id": "103",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/related",
        "predicate1_mention": "relatives",
        "predicate2_uri": "http://dbpedia.org/ontology/religion",
        "predicate2_mention": "religions",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Waxiang_people",
        "entity1_mention": "waxiangs",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3617",
        "question": "Where did Louis chevrolet die ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Louis_Chevrolet> <http://dbpedia.org/property/deathPlace> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/deathPlace",
        "predicate1_mention": "die",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Louis_Chevrolet",
        "entity1_mention": "louis chevrolet",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3618",
        "question": "who married crystal harris?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Crystal_Harris>  . }",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/spouse",
        "predicate1_mention": "married",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Crystal_Harris",
        "entity1_mention": "crystal harris",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3619",
        "question": "What kind of games does Blizzard games develop?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Blizzard_Entertainment> . ?x <http://dbpedia.org/ontology/genre> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/developer",
        "predicate1_mention": "develop",
        "predicate2_uri": "http://dbpedia.org/ontology/genre",
        "predicate2_mention": "kind of",
        "type_uri": "http://dbpedia.org/ontology/VideoGame",
        "type_mention": "games",
        "entity1_uri": "http://dbpedia.org/resource/Blizzard_Entertainment",
        "entity1_mention": "blizzard",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3620",
        "question": "Who is the parent of FD Roosevelt JR?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Franklin_Delano_Roosevelt,_Jr.>  . }",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/children",
        "predicate1_mention": "parent",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Franklin_Delano_Roosevelt,_Jr.",
        "entity1_mention": "fd roosevelt jr",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3621",
        "question": "Which expertise of the Menetries's warbler is the  nationality of the Jeyhun Abiyev ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Menetries's_warbler> <http://dbpedia.org/ontology/binomialAuthority> ?uri. <http://dbpedia.org/resource/Jeyhun_Abiyev> <http://dbpedia.org/ontology/nationality> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/binomialAuthority",
        "predicate1_mention": "nationality",
        "predicate2_uri": "http://dbpedia.org/ontology/nationality",
        "predicate2_mention": "nationality",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Menetries's_warbler",
        "entity1_mention": "menetries's warbler",
        "entity2_uri": "http://dbpedia.org/resource/Jeyhun_Abiyev",
        "entity2_mention": "jeyhun abiyev"
    },
    {
        "id": "3622",
        "question": "In how many places can I find wine made of Vitis vinifera grapes?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/Vitis_vinifera> . ?x <http://dbpedia.org/ontology/wineRegion> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/species",
        "predicate1_mention": "places",
        "predicate2_uri": "http://dbpedia.org/ontology/wineRegion",
        "predicate2_mention": "wine",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Vitis_vinifera",
        "entity1_mention": "vitis vinifera",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3623",
        "question": "What have been made in the state whose capital is Boston?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/capital> <http://dbpedia.org/resource/Boston> . ?uri <http://dbpedia.org/ontology/location> ?x  . }",
        "sparql_id": "6",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/capital",
        "predicate1_mention": "capital",
        "predicate2_uri": "http://dbpedia.org/ontology/location",
        "predicate2_mention": "state",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Boston",
        "entity1_mention": "boston",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3624",
        "question": "Name the royalty whose spouse was Cleopatra V of Egypt and one of his parent was Ptolemy XII Auletes?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Cleopatra_V_of_Egypt> . ?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ptolemy_XII_Auletes>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/mother",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/parent",
        "predicate2_mention": "parent",
        "type_uri": "http://dbpedia.org/ontology/Royalty",
        "type_mention": "royalty",
        "entity1_uri": "http://dbpedia.org/resource/Cleopatra_V_of_Egypt",
        "entity1_mention": "Cleopatra V of Egypt",
        "entity2_uri": "http://dbpedia.org/resource/Ptolemy_XII_Auletes",
        "entity2_mention": "ptolemy xii auletes"
    },
    {
        "id": "3625",
        "question": "What is the information appliance whose successor is PlayStation 4 and maker is Foxconn?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/PlayStation_4> . ?uri <http://dbpedia.org/property/manufacturer> <http://dbpedia.org/resource/Foxconn>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/successor",
        "predicate1_mention": "successor",
        "predicate2_uri": "http://dbpedia.org/property/manufacturer",
        "predicate2_mention": "maker",
        "type_uri": "http://dbpedia.org/ontology/InformationAppliance",
        "type_mention": "information appliance",
        "entity1_uri": "http://dbpedia.org/resource/PlayStation_4",
        "entity1_mention": "playstation",
        "entity2_uri": "http://dbpedia.org/resource/Foxconn",
        "entity2_mention": "foxconn"
    },
    {
        "id": "3626",
        "question": "List all the bands which have members of the band Guy in them?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Guy_(band)> <http://dbpedia.org/ontology/bandMember> ?x . ?x <http://dbpedia.org/ontology/associatedBand> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/bandMember",
        "predicate1_mention": "members",
        "predicate2_uri": "http://dbpedia.org/ontology/associatedBand",
        "predicate2_mention": "band",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Guy_(band)",
        "entity1_mention": "band",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3628",
        "question": "Which route junction of the Rhode Island Route 15 is the place of birth of the Michael Poulin?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rhode_Island_Route_15> <http://dbpedia.org/ontology/routeJunction> ?uri. <http://dbpedia.org/resource/Michael_Poulin> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/routeJunction",
        "predicate1_mention": "route junction",
        "predicate2_uri": "http://dbpedia.org/property/placeOfBirth",
        "predicate2_mention": "place of birth",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Rhode_Island_Route_15",
        "entity1_mention": "Rhode Island Route",
        "entity2_uri": "http://dbpedia.org/resource/Michael_Poulin",
        "entity2_mention": "michael poulin"
    },
    {
        "id": "3629",
        "question": "Name a fictional character whose relative is Uncle Henry and species is Human?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Uncle_Henry_(Oz)> . ?uri <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/Human>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/relative",
        "predicate1_mention": "relative",
        "predicate2_uri": "http://dbpedia.org/ontology/species",
        "predicate2_mention": "species",
        "type_uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "type_mention": "fictional character",
        "entity1_uri": "http://dbpedia.org/resource/Uncle_Henry_(Oz)",
        "entity1_mention": "uncle henry",
        "entity2_uri": "http://dbpedia.org/resource/Human",
        "entity2_mention": "human"
    },
    {
        "id": "3630",
        "question": "Which show's theme music composer's label is MapleMusic Recordings?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/MapleMusic_Recordings> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/recordLabel",
        "predicate1_mention": "label",
        "predicate2_uri": "http://dbpedia.org/property/themeMusicComposer",
        "predicate2_mention": "theme music composer's",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "show's",
        "entity1_uri": "http://dbpedia.org/resource/MapleMusic_Recordings",
        "entity1_mention": "maplemusic recordings",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3631",
        "question": "List down the schools whose mascot is an animal from the order of Even toed Ungulates?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Bjarne_Stroustrup> . ?uri <http://dbpedia.org/property/programmingLanguage> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/designer",
        "predicate1_mention": "order",
        "predicate2_uri": "http://dbpedia.org/property/programmingLanguage",
        "predicate2_mention": "ungulates",
        "type_uri": "http://dbpedia.org/ontology/School",
        "type_mention": "schools",
        "entity1_uri": "http://dbpedia.org/resource/Bjarne_Stroustrup",
        "entity1_mention": "mascot",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3632",
        "question": "What is the draft team of Dale Mitchell ( ice hockey ) ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dale_Mitchell_(ice_hockey)> <http://dbpedia.org/ontology/draftTeam> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/draftTeam",
        "predicate1_mention": "draft team",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Dale_Mitchell_(ice_hockey)",
        "entity1_mention": "Dale Mitchell ( ice hockey )",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3633",
        "question": "Was the skeleton dance animated by Walt Disney?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Skeleton_Dance> <http://dbpedia.org/ontology/animator> <http://dbpedia.org/resource/Walt_Disney> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/animator",
        "predicate1_mention": "animated",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/The_Skeleton_Dance",
        "entity1_mention": "the skeleton dance",
        "entity2_uri": "http://dbpedia.org/resource/Walt_Disney",
        "entity2_mention": "walt disney"
    },
    {
        "id": "3634",
        "question": "To which educational institutions did Lesli Sanchez go for her studies?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Leslie_Sanchez> <http://dbpedia.org/ontology/education> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/education",
        "predicate1_mention": "educational",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Leslie_Sanchez",
        "entity1_mention": "lesli sanchez",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3635",
        "question": "Who was the coach of 1972 Oakland Raiders season ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1972_Oakland_Raiders_season> <http://dbpedia.org/ontology/coach> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/coach",
        "predicate1_mention": "coach",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/1972_Oakland_Raiders_season",
        "entity1_mention": "1972 oakland raiders season",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3638",
        "question": "How many developers make software for Unix like operating systems?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/operatingSystem> <http://dbpedia.org/resource/Unix-like> . ?x <http://dbpedia.org/ontology/developer> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/operatingSystem",
        "predicate1_mention": "operating systems",
        "predicate2_uri": "http://dbpedia.org/ontology/developer",
        "predicate2_mention": "developers",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Unix-like",
        "entity1_mention": "unix like",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3639",
        "question": "Name the river whose mouth is located in Limerick and location is Dowra?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Limerick> . ?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Dowra>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/mouthLocation",
        "predicate1_mention": "mouth",
        "predicate2_uri": "http://dbpedia.org/property/sourceLocation",
        "predicate2_mention": "location",
        "type_uri": "http://dbpedia.org/ontology/River",
        "type_mention": "river",
        "entity1_uri": "http://dbpedia.org/resource/Limerick",
        "entity1_mention": "limerick",
        "entity2_uri": "http://dbpedia.org/resource/Dowra",
        "entity2_mention": "dowra"
    },
    {
        "id": "3640",
        "question": "What religion does roshan ranasinghe and nhiek tioulong follow?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Roshan_Ranasinghe> <http://dbpedia.org/property/religion> ?uri. <http://dbpedia.org/resource/Nhiek_Tioulong> <http://dbpedia.org/ontology/religion> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/religion",
        "predicate1_mention": "religion",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Roshan_Ranasinghe",
        "entity1_mention": "roshan ranasinghe",
        "entity2_uri": "http://dbpedia.org/resource/Nhiek_Tioulong",
        "entity2_mention": "nhiek tioulong"
    },
    {
        "id": "3641",
        "question": "Name the scientist who become the part of Royal Society and had academic advisor as Karl Ewald Hasse?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Royal_Society> . ?uri <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/Karl_Ewald_Hasse>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/prizes",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/academicAdvisor",
        "predicate2_mention": "academic advisor",
        "type_uri": "http://dbpedia.org/ontology/Scientist",
        "type_mention": "scientist",
        "entity1_uri": "http://dbpedia.org/resource/Royal_Society",
        "entity1_mention": "royal society",
        "entity2_uri": "http://dbpedia.org/resource/Karl_Ewald_Hasse",
        "entity2_mention": "Karl Ewald Hasse"
    },
    {
        "id": "3642",
        "question": "What is the place where the mayor's wife is Jean-Marc Germain?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Jean-Marc_Germain> . ?uri <http://dbpedia.org/ontology/mayor> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/spouse",
        "predicate1_mention": "wife",
        "predicate2_uri": "http://dbpedia.org/ontology/mayor",
        "predicate2_mention": "mayor's",
        "type_uri": "http://dbpedia.org/ontology/Place",
        "type_mention": "place",
        "entity1_uri": "http://dbpedia.org/resource/Jean-Marc_Germain",
        "entity1_mention": "jean-marc germain",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3646",
        "question": "List the destination of Novair International Airways ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Novair_International_Airways> <http://dbpedia.org/ontology/destination> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/destination",
        "predicate1_mention": "destination",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Novair_International_Airways",
        "entity1_mention": "novair international airways",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3647",
        "question": "How many states are in the Mediterranean Basketball Association?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Mediterranean_Basketball_Association> <http://dbpedia.org/ontology/country> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
        "sparql_id": "402",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/ontology/country",
        "predicate1_mention": "states",
        "predicate2_uri": "http://dbpedia.org/ontology/Place",
        "predicate2_mention": "states",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Mediterranean_Basketball_Association",
        "entity1_mention": "mediterranean basketball association",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3648",
        "question": "What is the ethnicity of the people working for the Philippines house of representatives?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/House_of_Representatives_of_the_Philippines> . ?x <http://dbpedia.org/ontology/ethnicity> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/occupation",
        "predicate1_mention": "working",
        "predicate2_uri": "http://dbpedia.org/ontology/ethnicity",
        "predicate2_mention": "ethnicity",
        "type_uri": "http://dbpedia.org/ontology/Person",
        "type_mention": "people",
        "entity1_uri": "http://dbpedia.org/resource/House_of_Representatives_of_the_Philippines",
        "entity1_mention": "philippines house of representatives",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3649",
        "question": "Name some people who are buried in a place governed by the US Department of the Interior?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/United_States_Department_of_the_Interior> . ?uri <http://dbpedia.org/property/restingplace> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/governingBody",
        "predicate1_mention": "governed",
        "predicate2_uri": "http://dbpedia.org/property/restingplace",
        "predicate2_mention": "buried in a place",
        "type_uri": "http://dbpedia.org/ontology/Person",
        "type_mention": "people",
        "entity1_uri": "http://dbpedia.org/resource/United_States_Department_of_the_Interior",
        "entity1_mention": "US Department of the Interior",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3650",
        "question": "Name the television show whose subsequent work is Frasier and opening theme is Where Everybody Knows Your Name?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Frasier> . ?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/subsequentWork",
        "predicate1_mention": "subsequent work",
        "predicate2_uri": "http://dbpedia.org/ontology/openingTheme",
        "predicate2_mention": "opening theme",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "television show",
        "entity1_uri": "http://dbpedia.org/resource/Frasier",
        "entity1_mention": "frasier",
        "entity2_uri": "http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name",
        "entity2_mention": "everybody"
    },
    {
        "id": "3651",
        "question": "What things canonized John of Damascus and and also venerated the Edwin of Northumbria ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_of_Damascus> <http://dbpedia.org/ontology/canonizedBy> ?uri. <http://dbpedia.org/resource/Edwin_of_Northumbria> <http://dbpedia.org/property/veneratedIn> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/canonizedBy",
        "predicate1_mention": "canonized",
        "predicate2_uri": "http://dbpedia.org/property/veneratedIn",
        "predicate2_mention": "venerated",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/John_of_Damascus",
        "entity1_mention": "john of damascus",
        "entity2_uri": "http://dbpedia.org/resource/Edwin_of_Northumbria",
        "entity2_mention": "edwin of northumbria"
    },
    {
        "id": "3652",
        "question": "Where is the football team located in which Josh Bell did his debut?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Josh_Bell_(gridiron_football)> <http://dbpedia.org/ontology/debutTeam> ?x . ?x <http://dbpedia.org/ontology/locationCity> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/debutTeam",
        "predicate1_mention": "debut",
        "predicate2_uri": "http://dbpedia.org/ontology/locationCity",
        "predicate2_mention": "located",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Josh_Bell_(gridiron_football)",
        "entity1_mention": "josh bell",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3653",
        "question": "Who was engaged in wars of Fort Gadsden and Fort Barrancas?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Fort_Gadsden> . ?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Fort_Barrancas> . }",
        "sparql_id": "7",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/battle",
        "predicate1_mention": "wars",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Fort_Gadsden",
        "entity1_mention": "fort gadsden",
        "entity2_uri": "http://dbpedia.org/resource/Fort_Barrancas",
        "entity2_mention": "fort barrancas"
    },
    {
        "id": "3654",
        "question": "List the religions of the commanders of Royal Thai Army.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Royal_Thai_Army> <http://dbpedia.org/property/notableCommanders> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/notableCommanders",
        "predicate1_mention": "commanders",
        "predicate2_uri": "http://dbpedia.org/ontology/religion",
        "predicate2_mention": "religions",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Royal_Thai_Army",
        "entity1_mention": "royal thai",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3655",
        "question": "The president served by Haqqi al-Azm died where?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Haqqi_al-Azm> <http://dbpedia.org/property/president> ?x . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/president",
        "predicate1_mention": "president",
        "predicate2_uri": "http://dbpedia.org/property/placeOfDeath",
        "predicate2_mention": "died",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Haqqi_al-Azm",
        "entity1_mention": "Haqqi al-Azm",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3656",
        "question": "What are some awards given to people who were born in sweden?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Sweden> . ?x <http://dbpedia.org/property/awards> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/birthPlace",
        "predicate1_mention": "born",
        "predicate2_uri": "http://dbpedia.org/property/awards",
        "predicate2_mention": "awards",
        "type_uri": "http://dbpedia.org/ontology/Person",
        "type_mention": "people",
        "entity1_uri": "http://dbpedia.org/resource/Sweden",
        "entity1_mention": "sweden",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3657",
        "question": "Name the office holder who was married to Dolley Madison and has resting place as Montpelier ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Dolley_Madison> . ?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/spouse",
        "predicate1_mention": "married",
        "predicate2_uri": "http://dbpedia.org/property/restingplace",
        "predicate2_mention": "resting place",
        "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
        "type_mention": "office holder",
        "entity1_uri": "http://dbpedia.org/resource/Dolley_Madison",
        "entity1_mention": "dolley madison",
        "entity2_uri": "http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)",
        "entity2_mention": "montpelier"
    },
    {
        "id": "3658",
        "question": "Is Hard Candy Fitness one of the divisions of Moscow?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hard_Candy_Fitness> <http://dbpedia.org/property/divisions> <http://dbpedia.org/resource/Moscow> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/divisions",
        "predicate1_mention": "divisions",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Hard_Candy_Fitness",
        "entity1_mention": "Hard Candy Fitness",
        "entity2_uri": "http://dbpedia.org/resource/Moscow",
        "entity2_mention": "moscow"
    },
    {
        "id": "3659",
        "question": "What are the awards won by the person who is an authority of Latania verschaffeltii ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Latania_verschaffeltii> <http://dbpedia.org/property/binomialAuthority> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/binomialAuthority",
        "predicate1_mention": "authority",
        "predicate2_uri": "http://dbpedia.org/property/awards",
        "predicate2_mention": "awards",
        "type_uri": "http://dbpedia.org/ontology/Person",
        "type_mention": "person",
        "entity1_uri": "http://dbpedia.org/resource/Latania_verschaffeltii",
        "entity1_mention": "latania verschaffeltii",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3660",
        "question": "Is WP 8.1 the OS on Lumia 830?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Nokia_Lumia_830> <http://dbpedia.org/property/os> <http://dbpedia.org/resource/Windows_Phone_8.1> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/os",
        "predicate1_mention": "os",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Nokia_Lumia_830",
        "entity1_mention": "lumia 830",
        "entity2_uri": "http://dbpedia.org/resource/Windows_Phone_8.1",
        "entity2_mention": "8.1"
    },
    {
        "id": "3661",
        "question": "Which parent comapny of hypnotize Minds is the label of the Producers , a 2005 film ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hypnotize_Minds> <http://dbpedia.org/property/parent> ?uri. <http://dbpedia.org/resource/The_Producers_(2005_film)> <http://dbpedia.org/property/label> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/parent",
        "predicate1_mention": "parent",
        "predicate2_uri": "http://dbpedia.org/property/label",
        "predicate2_mention": "label",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Hypnotize_Minds",
        "entity1_mention": "hypnotize minds",
        "entity2_uri": "http://dbpedia.org/resource/The_Producers_(2005_film)",
        "entity2_mention": "Producers , a 2005 film"
    },
    {
        "id": "3662",
        "question": "Which companies make cars with a front engine, rear wheel drive layout?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/automobilePlatform> <http://dbpedia.org/resource/Front-engine,_rear-wheel-drive_layout> . ?x <http://dbpedia.org/ontology/parentCompany> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/automobilePlatform",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/parentCompany",
        "predicate2_mention": "companies",
        "type_uri": "http://dbpedia.org/ontology/Automobile",
        "type_mention": "cars",
        "entity1_uri": "http://dbpedia.org/resource/Front-engine,_rear-wheel-drive_layout",
        "entity1_mention": "engine, rear wheel drive layout",
        "entity2_uri": "",
        "entity2_mention": ""
    },
      {
        "id": "3663",
        "question": "Name the software whose operating system is Mac OS and programming language is C++ ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Mac_OS> . ?uri <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/C++>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/operatingSystem",
        "predicate1_mention": "operating system",
        "predicate2_uri": "http://dbpedia.org/property/programmingLanguage",
        "predicate2_mention": "programming language",
        "type_uri": "http://dbpedia.org/ontology/Software",
        "type_mention": "software",
        "entity1_uri": "http://dbpedia.org/resource/Mac_OS",
        "entity1_mention": "mac os",
        "entity2_uri": "http://dbpedia.org/resource/C++",
        "entity2_mention": "c++"
    },
    {
        "id": "3664",
        "question": "Do the polet airlines fly to moscow?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Polet_Airlines> <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Moscow> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/targetAirport",
        "predicate1_mention": "polet",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Polet_Airlines",
        "entity1_mention": "polet airlines",
        "entity2_uri": "http://dbpedia.org/resource/Moscow",
        "entity2_mention": "moscow"
    },
    {
        "id": "3665",
        "question": "Is Trevor Peacock the narrator of Fred Claus?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Fred_Claus> <http://dbpedia.org/property/narrator> <http://dbpedia.org/resource/Trevor_Peacock> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/narrator",
        "predicate1_mention": "narrator",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Fred_Claus",
        "entity1_mention": "fred claus",
        "entity2_uri": "http://dbpedia.org/resource/Trevor_Peacock",
        "entity2_mention": "trevor peacock"
    },
    {
        "id": "3666",
        "question": "In which state is the alma mater of Jan Paulsen located ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jan_Paulsen> <http://dbpedia.org/ontology/almaMater> ?x . ?x <http://dbpedia.org/property/state> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/almaMater",
        "predicate1_mention": "alma mater",
        "predicate2_uri": "http://dbpedia.org/property/state",
        "predicate2_mention": "state",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Jan_Paulsen",
        "entity1_mention": "jan paulsen",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3667",
        "question": "Name some islands in a pacific archipelago?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Pacific_Ocean> . ?uri <http://dbpedia.org/property/archipelago> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Island>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/location",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/archipelago",
        "predicate2_mention": "archipelago",
        "type_uri": "http://dbpedia.org/ontology/Island",
        "type_mention": "islands",
        "entity1_uri": "http://dbpedia.org/resource/Pacific_Ocean",
        "entity1_mention": "pacific",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3668",
        "question": "List few authors whose education took place in Saint Petersburg ?   ",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/education> <http://dbpedia.org/resource/Saint_Petersburg>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/education",
        "predicate1_mention": "education",
        "predicate2_uri": "http://dbpedia.org/ontology/Writer",
        "predicate2_mention": "list",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Saint_Petersburg",
        "entity1_mention": "saint petersburg",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3669",
        "question": "What all are written in the C programming language?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/C_(programming_language)> } ",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/programmingLanguage",
        "predicate1_mention": "programming language",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/C_(programming_language)",
        "entity1_mention": "c programming language",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3670",
        "question": "List the producer of the TV shows whose company is HBO.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/HBO> . ?x <http://dbpedia.org/ontology/producer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/company",
        "predicate1_mention": "company",
        "predicate2_uri": "http://dbpedia.org/ontology/producer",
        "predicate2_mention": "producer",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "shows",
        "entity1_uri": "http://dbpedia.org/resource/HBO",
        "entity1_mention": "HBO",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3671",
        "question": "What is the alma mater of the senator who is the successor of Warren Magnuson ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Warren_Magnuson> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/property/almaMater> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Senator>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/successor",
        "predicate1_mention": "successor",
        "predicate2_uri": "http://dbpedia.org/property/almaMater",
        "predicate2_mention": "alma mater",
        "type_uri": "http://dbpedia.org/ontology/Senator",
        "type_mention": "senator",
        "entity1_uri": "http://dbpedia.org/resource/Warren_Magnuson",
        "entity1_mention": "warren magnuson",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3673",
        "question": "What is the mascot of Blytheville High School ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Blytheville_High_School> <http://dbpedia.org/property/mascot> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/mascot",
        "predicate1_mention": "mascot",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Blytheville_High_School",
        "entity1_mention": "Blytheville High School",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3674",
        "question": "List all the operators of the train who operates in Budapest ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/Budapest> . ?x <http://dbpedia.org/ontology/operator> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Train>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/operator",
        "predicate1_mention": "operators",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Train",
        "type_mention": "train",
        "entity1_uri": "http://dbpedia.org/resource/Budapest",
        "entity1_mention": "budapest",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3676",
        "question": "Is Eddie Bravo the trainer of Alan Jouban",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Alan_Jouban> <http://dbpedia.org/ontology/trainer> <http://dbpedia.org/resource/Eddie_Bravo> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/trainer",
        "predicate1_mention": "trainer",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Alan_Jouban",
        "entity1_mention": "alan jouban",
        "entity2_uri": "http://dbpedia.org/resource/Eddie_Bravo",
        "entity2_mention": "eddie bravo"
    },
    {
        "id": "3678",
        "question": "What are some common ingredients used in Swedish dishes?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Sweden> . ?x <http://dbpedia.org/ontology/ingredient> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/country",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/ingredient",
        "predicate2_mention": "ingredients",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Sweden",
        "entity1_mention": "Swedish",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3679",
        "question": "Where did the genres originate, which were in the Harry and the Potters album?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Harry_and_the_Potters_(album)> <http://dbpedia.org/ontology/genre> ?x . ?x <http://dbpedia.org/ontology/stylisticOrigin> ?uri  . }",
        "sparql_id": "103",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/genre",
        "predicate1_mention": "genres",
        "predicate2_uri": "http://dbpedia.org/ontology/stylisticOrigin",
        "predicate2_mention": "originate,",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Harry_and_the_Potters_(album)",
        "entity1_mention": "Harry and the Potters album",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3680",
        "question": "Into which water bodies does Lake Uniamsi outflow?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lake_Uniam\u00e9si> <http://dbpedia.org/property/outflow> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/outflow",
        "predicate1_mention": "outflow",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Lake_Uniam\u00e9si",
        "entity1_mention": "Lake Uniamsi",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3681",
        "question": "What is the mascot of the army unit whose commander is Peter Cosgrove ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Peter_Cosgrove> . ?x <http://dbpedia.org/property/mascot> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/commander",
        "predicate1_mention": "commander",
        "predicate2_uri": "http://dbpedia.org/property/mascot",
        "predicate2_mention": "mascot",
        "type_uri": "http://dbpedia.org/ontology/MilitaryUnit",
        "type_mention": "army unit",
        "entity1_uri": "http://dbpedia.org/resource/Peter_Cosgrove",
        "entity1_mention": "peter cosgrove",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3682",
        "question": "Whose former teams are Indianapolis Colts and Carolina Panthers?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Indianapolis_Colts> . ?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Carolina_Panthers> . }",
        "sparql_id": "7",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/formerTeam",
        "predicate1_mention": "former teams",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Indianapolis_Colts",
        "entity1_mention": "indianapolis colts",
        "entity2_uri": "http://dbpedia.org/resource/Carolina_Panthers",
        "entity2_mention": "carolina panthers"
    },
    {
        "id": "3683",
        "question": "Name the river with mouth place Essex and source place as Gloucestershire ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/Essex> . ?uri <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Gloucestershire>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/mouthPlace",
        "predicate1_mention": "mouth place",
        "predicate2_uri": "http://dbpedia.org/ontology/sourcePlace",
        "predicate2_mention": "source place",
        "type_uri": "http://dbpedia.org/ontology/River",
        "type_mention": "river",
        "entity1_uri": "http://dbpedia.org/resource/Essex",
        "entity1_mention": "essex",
        "entity2_uri": "http://dbpedia.org/resource/Gloucestershire",
        "entity2_mention": "gloucestershire"
    },
    {
        "id": "3684",
        "question": "Who was the narrator of the show who's music is composed by John Douglas?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/John_Douglas_(conductor)> . ?x <http://dbpedia.org/property/narrated> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/composer",
        "predicate1_mention": "composed",
        "predicate2_uri": "http://dbpedia.org/property/narrated",
        "predicate2_mention": "narrator",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "show",
        "entity1_uri": "http://dbpedia.org/resource/John_Douglas_(conductor)",
        "entity1_mention": "john douglas",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3685",
        "question": "Where was the current champion of Egyptian Open born ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Egyptian_Open> <http://dbpedia.org/ontology/champion> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/champion",
        "predicate1_mention": "champion",
        "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
        "predicate2_mention": "born",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Egyptian_Open",
        "entity1_mention": "egyptian open",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3686",
        "question": "Was Castillo discovered by Galileo?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Callisto_(moon)> <http://dbpedia.org/property/discoverer> <http://dbpedia.org/resource/Galileo_Galilei> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/discoverer",
        "predicate1_mention": "discovered",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Callisto_(moon)",
        "entity1_mention": "Castillo",
        "entity2_uri": "http://dbpedia.org/resource/Galileo_Galilei",
        "entity2_mention": "galileo"
    },
    {
        "id": "3688",
        "question": "Who are the chancellors of universities which is affiliated with Plymouth University?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Plymouth_University> . ?x <http://dbpedia.org/property/chancellor> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/affiliations",
        "predicate1_mention": "affiliated",
        "predicate2_uri": "http://dbpedia.org/property/chancellor",
        "predicate2_mention": "chancellors",
        "type_uri": "http://dbpedia.org/ontology/University",
        "type_mention": "university",
        "entity1_uri": "http://dbpedia.org/resource/Plymouth_University",
        "entity1_mention": "plymouth university",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3689",
        "question": "What common relegion affiliation exists for udit Raj and Wickramabahu Central College ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Udit_Raj> <http://dbpedia.org/ontology/religion> ?uri. <http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)> <http://dbpedia.org/property/religiousAffiliation> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/religion",
        "predicate1_mention": "relegion",
        "predicate2_uri": "http://dbpedia.org/property/religiousAffiliation",
        "predicate2_mention": "affiliation",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Udit_Raj",
        "entity1_mention": "udit raj",
        "entity2_uri": "http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)",
        "entity2_mention": "wickramabahu"
    },
    {
        "id": "3690",
        "question": "Name the console whose successor is PlayStation 4 and predecessor is PlayStation 2?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/PlayStation_4> . ?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/PlayStation_2>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/successor",
        "predicate1_mention": "successor",
        "predicate2_uri": "http://dbpedia.org/property/predecessor",
        "predicate2_mention": "predecessor",
        "type_uri": "http://dbpedia.org/ontology/InformationAppliance",
        "type_mention": "playstation",
        "entity1_uri": "http://dbpedia.org/resource/PlayStation_4",
        "entity1_mention": "playstation 4",
        "entity2_uri": "http://dbpedia.org/resource/PlayStation_2",
        "entity2_mention": "playstation 2"
    },
    {
        "id": "3691",
        "question": "What are the common sports played by jamiatu Muslim mindanao and Polytechnic University of Philippines Taguig ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao> <http://dbpedia.org/ontology/athletics> ?uri. <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig> <http://dbpedia.org/ontology/sport> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/athletics",
        "predicate1_mention": "play",
        "predicate2_uri": "http://dbpedia.org/ontology/sport",
        "predicate2_mention": "sports",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao",
        "entity1_mention": "jamiatu Muslim mindanao",
        "entity2_uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig",
        "entity2_mention": "Polytechnic University of Philippines Taguig"
    },
    {
        "id": "3692",
        "question": "Among the countries using Aureus as currency which had Nicomedia as an important place ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Nicomedia> . ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Aureus>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/capital",
        "predicate1_mention": "important place",
        "predicate2_uri": "http://dbpedia.org/ontology/currency",
        "predicate2_mention": "currency",
        "type_uri": "http://dbpedia.org/ontology/Country",
        "type_mention": "countries",
        "entity1_uri": "http://dbpedia.org/resource/Nicomedia",
        "entity1_mention": "nicomedia",
        "entity2_uri": "http://dbpedia.org/resource/Aureus",
        "entity2_mention": "aureus"
    },
    {
        "id": "3693",
        "question": "British people have edited which movies?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/United_Kingdom> . ?uri <http://dbpedia.org/property/editing> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/birthPlace",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/editing",
        "predicate2_mention": "edited",
        "type_uri": "http://dbpedia.org/ontology/Film",
        "type_mention": "movies",
        "entity1_uri": "http://dbpedia.org/resource/United_Kingdom",
        "entity1_mention": "British",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3694",
        "question": "Where did chancellor served by Rudolf Kirchschlger die?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rudolf_Kirchschl\u00e4ger> <http://dbpedia.org/property/chancellor> ?x . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/chancellor",
        "predicate1_mention": "chancellor",
        "predicate2_uri": "http://dbpedia.org/ontology/deathPlace",
        "predicate2_mention": "die",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Rudolf_Kirchschl\u00e4ger",
        "entity1_mention": "Rudolf Kirchschlger",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3695",
        "question": "Who are the trainersof Candice Michelle?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Candice_Michelle> <http://dbpedia.org/ontology/trainer> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/trainer",
        "predicate1_mention": "trainersof",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Candice_Michelle",
        "entity1_mention": "candice michelle",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3697",
        "question": "Name the music artist which collaborated with the spouse of Jessi Colter?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Jessi_Colter> . ?uri <http://dbpedia.org/ontology/associatedMusicalArtist> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/spouse",
        "predicate1_mention": "spouse",
        "predicate2_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "predicate2_mention": "collaborated with",
        "type_uri": "http://dbpedia.org/ontology/MusicalArtist",
        "type_mention": "music artist",
        "entity1_uri": "http://dbpedia.org/resource/Jessi_Colter",
        "entity1_mention": "jessi colter",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3698",
        "question": "Which notable commanders of the Army Group Oberrhein (Germany) is the  leader of the Kriminalpolizei?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Army_Group_Oberrhein_(Germany)> <http://dbpedia.org/property/notableCommanders> ?uri. <http://dbpedia.org/resource/Kriminalpolizei> <http://dbpedia.org/ontology/leader> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/notableCommanders",
        "predicate1_mention": "notable commanders",
        "predicate2_uri": "http://dbpedia.org/ontology/leader",
        "predicate2_mention": "leader",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Army_Group_Oberrhein_(Germany)",
        "entity1_mention": "Army Group Oberrhein (Germany)",
        "entity2_uri": "http://dbpedia.org/resource/Kriminalpolizei",
        "entity2_mention": "kriminalpolizei"
    },
    {
        "id": "3699",
        "question": "Who is the prime minister of the successor of Kingsley Wood?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kingsley_Wood> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/property/primeminister> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/successor",
        "predicate1_mention": "successor",
        "predicate2_uri": "http://dbpedia.org/property/primeminister",
        "predicate2_mention": "prime minister",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Kingsley_Wood",
        "entity1_mention": "kingsley wood",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3700",
        "question": "which band was Roger waters in?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Roger_Waters> } ",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/formerBandMember",
        "predicate1_mention": "band",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Roger_Waters",
        "entity1_mention": "roger waters",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3702",
        "question": "What is the region of Kim Sawchuk ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kim_Sawchuk> <http://dbpedia.org/property/region> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/region",
        "predicate1_mention": "region",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Kim_Sawchuk",
        "entity1_mention": "kim sawchuk",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3703",
        "question": "Which colored race horses have won the Grand National?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/honours> <http://dbpedia.org/resource/Grand_National> . ?x <http://dbpedia.org/ontology/colour> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RaceHorse>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/honours",
        "predicate1_mention": "won",
        "predicate2_uri": "http://dbpedia.org/ontology/colour",
        "predicate2_mention": "colored",
        "type_uri": "http://dbpedia.org/ontology/RaceHorse",
        "type_mention": "horses",
        "entity1_uri": "http://dbpedia.org/resource/Grand_National",
        "entity1_mention": "grand national",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3704",
        "question": "Was Beth Tweddle primarily coached by Amanda Reddin?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Beth_Tweddle> <http://dbpedia.org/property/headcoach> <http://dbpedia.org/resource/Amanda_Reddin> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/headcoach",
        "predicate1_mention": "coached",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Beth_Tweddle",
        "entity1_mention": "beth tweddle",
        "entity2_uri": "http://dbpedia.org/resource/Amanda_Reddin",
        "entity2_mention": "amanda reddin"
    },
    {
        "id": "3705",
        "question": "What is the television show whose judges is Randy Jackson?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Randy_Jackson>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/judges",
        "predicate1_mention": "judges",
        "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "predicate2_mention": "television show",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Randy_Jackson",
        "entity1_mention": "randy jackson",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3706",
        "question": "What is the Band whose band member is Mark Middleton?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Middleton> } ",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/bandMember",
        "predicate1_mention": "band member",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Mark_Middleton",
        "entity1_mention": "mark middleton",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3707",
        "question": "Was the cover of The adventures of Tom Sawyer designed by Mark Twain?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer> <http://dbpedia.org/ontology/coverArtist> <http://dbpedia.org/resource/Mark_Twain> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/coverArtist",
        "predicate1_mention": "cover",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer",
        "entity1_mention": "The adventures of Tom Sawyer",
        "entity2_uri": "http://dbpedia.org/resource/Mark_Twain",
        "entity2_mention": "mark twain"
    },
    {
        "id": "3708",
        "question": "Which president of William Eustus also married to Dolley Madison ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dolley_Madison> <http://dbpedia.org/ontology/spouse> ?uri. <http://dbpedia.org/resource/William_Eustis> <http://dbpedia.org/property/president> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/spouse",
        "predicate1_mention": "married to",
        "predicate2_uri": "http://dbpedia.org/property/president",
        "predicate2_mention": "president",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Dolley_Madison",
        "entity1_mention": "dolley madison",
        "entity2_uri": "http://dbpedia.org/resource/William_Eustis",
        "entity2_mention": "william eustus"
    },
    {
        "id": "3710",
        "question": "How many kings and queens have died in the Arabian Peninsula?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Arabian_Peninsula>  . }",
        "sparql_id": "101",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/ontology/deathPlace",
        "predicate1_mention": "died",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Arabian_Peninsula",
        "entity1_mention": "arabian peninsula",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3711",
        "question": "Name a movie with actor as Momoko Kchi and music by Akira Ifukube?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Momoko_K\u014dchi> . ?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Akira_Ifukube>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/starring",
        "predicate1_mention": "actor",
        "predicate2_uri": "http://dbpedia.org/property/music",
        "predicate2_mention": "music",
        "type_uri": "http://dbpedia.org/ontology/Film",
        "type_mention": "movie",
        "entity1_uri": "http://dbpedia.org/resource/Momoko_K\u014dchi",
        "entity1_mention": "momoko kchi",
        "entity2_uri": "http://dbpedia.org/resource/Akira_Ifukube",
        "entity2_mention": "akira ifukube"
    },
    {
        "id": "3712",
        "question": "Who are relatives of Ozzy Osbourne and Kelly Osbourne?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Ozzy_Osbourne> . ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Kelly_Osbourne> . }",
        "sparql_id": "7",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/relatives",
        "predicate1_mention": "relatives",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Ozzy_Osbourne",
        "entity1_mention": "ozzy osbourne",
        "entity2_uri": "http://dbpedia.org/resource/Kelly_Osbourne",
        "entity2_mention": "kelly osbourne"
    },
    {
        "id": "3714",
        "question": "Who manages the operator of Norman Park Branch, CTA?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Normal_Park_branch_(CTA)> <http://dbpedia.org/property/operator> ?x . ?x <http://dbpedia.org/ontology/operatedBy> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/operator",
        "predicate1_mention": "operator",
        "predicate2_uri": "http://dbpedia.org/ontology/operatedBy",
        "predicate2_mention": "operator",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Normal_Park_branch_(CTA)",
        "entity1_mention": "Norman Park Branch, CTA",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3715",
        "question": "Name the HBO TV show written by Erik jendresen  ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/HBO> . ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Erik_Jendresen>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/company",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/writer",
        "predicate2_mention": "written",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "tv show",
        "entity1_uri": "http://dbpedia.org/resource/HBO",
        "entity1_mention": "hbo",
        "entity2_uri": "http://dbpedia.org/resource/Erik_Jendresen",
        "entity2_mention": "erik jendresen"
    },
    {
        "id": "3716",
        "question": "What team did Joe Porter and Eddie Anderson play for?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eddie_Anderson_(safety)> <http://dbpedia.org/ontology/team> ?uri. <http://dbpedia.org/resource/Joe_Porter_(American_football)> <http://dbpedia.org/ontology/formerTeam> ?uri . }",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/team",
        "predicate1_mention": "team",
        "predicate2_uri": "http://dbpedia.org/ontology/formerTeam",
        "predicate2_mention": "team",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Eddie_Anderson_(safety)",
        "entity1_mention": "eddie anderson",
        "entity2_uri": "http://dbpedia.org/resource/Joe_Porter_(American_football)",
        "entity2_mention": "Joe porter"
    },
    {
        "id": "3717",
        "question": "Whay common comic is written by Karakuri Dji Ultimo and narrated by The Incredible Hulk ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Karakuri_D\u00f4ji_Ultimo> <http://dbpedia.org/property/author> ?uri. <http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)> <http://dbpedia.org/property/narrated> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/author",
        "predicate1_mention": "written by",
        "predicate2_uri": "http://dbpedia.org/property/narrated",
        "predicate2_mention": "narrated",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Karakuri_D\u00f4ji_Ultimo",
        "entity1_mention": "karakuri dji ultimo",
        "entity2_uri": "http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)",
        "entity2_mention": "The incredible hulk"
    },
    {
        "id": "3718",
        "question": "What are the movies whose director of photography is Jordan Cronenweth?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/cinematography> <http://dbpedia.org/resource/Jordan_Cronenweth>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/cinematography",
        "predicate1_mention": "photography",
        "predicate2_uri": "http://dbpedia.org/ontology/Film",
        "predicate2_mention": "movies",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Jordan_Cronenweth",
        "entity1_mention": "jordan cronenweth",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3720",
        "question": "Which city has radio stations which are Religious ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/format> <http://dbpedia.org/resource/Religion> . ?x <http://dbpedia.org/property/city> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/format",
        "predicate1_mention": "radio",
        "predicate2_uri": "http://dbpedia.org/property/city",
        "predicate2_mention": "city",
        "type_uri": "http://dbpedia.org/ontology/RadioStation",
        "type_mention": "stations",
        "entity1_uri": "http://dbpedia.org/resource/Religion",
        "entity1_mention": "Religious",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3721",
        "question": "Producers of what have died in Mississippi?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Mississippi> . ?uri <http://dbpedia.org/ontology/producer> ?x  . }",
        "sparql_id": "6",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/deathPlace",
        "predicate1_mention": "died in",
        "predicate2_uri": "http://dbpedia.org/ontology/producer",
        "predicate2_mention": "producers",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Mississippi",
        "entity1_mention": "mississippi",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3722",
        "question": "Those seasons which have been played in Fort Lauderdale Florida now host their games where?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/stadium> <http://dbpedia.org/resource/Fort_Lauderdale,_Florida> . ?x <http://dbpedia.org/ontology/ground> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/stadium",
        "predicate1_mention": "host",
        "predicate2_uri": "http://dbpedia.org/ontology/ground",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/SoccerClubSeason",
        "type_mention": "seasons",
        "entity1_uri": "http://dbpedia.org/resource/Fort_Lauderdale,_Florida",
        "entity1_mention": "Fort Lauderdale Florida",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3724",
        "question": "Name some sports played in institutions of Maharashtra?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/state> <http://dbpedia.org/resource/Maharashtra> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/state",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/sport",
        "predicate2_mention": "sports",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Maharashtra",
        "entity1_mention": "maharashtra",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3725",
        "question": "Current players of Colorado Avalanche have previously played for how many different teams?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Colorado_Avalanche> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/team",
        "predicate1_mention": "teams",
        "predicate2_uri": "http://dbpedia.org/ontology/formerTeam",
        "predicate2_mention": "teams",
        "type_uri": "http://dbpedia.org/ontology/SportsTeam",
        "type_mention": "teams",
        "entity1_uri": "http://dbpedia.org/resource/Colorado_Avalanche",
        "entity1_mention": "colorado avalanche",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3726",
        "question": "Was 2658 Gingerich invented in Harvard?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/2658_Gingerich> <http://dbpedia.org/ontology/discoverer> <http://dbpedia.org/resource/Harvard_College> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/discoverer",
        "predicate1_mention": "invented",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/2658_Gingerich",
        "entity1_mention": "2658 gingerich",
        "entity2_uri": "http://dbpedia.org/resource/Harvard_College",
        "entity2_mention": "harvard"
    },
    {
        "id": "3727",
        "question": "How many other people are in a band with Robert de Niro?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Robert_De_Niro> . ?x <http://dbpedia.org/ontology/bandMember> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/currentMembers",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/bandMember",
        "predicate2_mention": "band",
        "type_uri": "http://dbpedia.org/ontology/Person",
        "type_mention": "people",
        "entity1_uri": "http://dbpedia.org/resource/Robert_De_Niro",
        "entity1_mention": "robert de niro",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3728",
        "question": "Who created the stadiums who have been rented by the Boston Red Sox?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Boston_Red_Sox> . ?x <http://dbpedia.org/property/architect> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/tenant",
        "predicate1_mention": "rented",
        "predicate2_uri": "http://dbpedia.org/property/architect",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Stadium",
        "type_mention": "stadiums",
        "entity1_uri": "http://dbpedia.org/resource/Boston_Red_Sox",
        "entity1_mention": "boston",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3729",
        "question": "What is the mascot of the unit whose garrison is Canberra ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/garrison> <http://dbpedia.org/resource/Canberra> . ?x <http://dbpedia.org/property/mascot> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/garrison",
        "predicate1_mention": "garrison",
        "predicate2_uri": "http://dbpedia.org/property/mascot",
        "predicate2_mention": "mascot",
        "type_uri": "http://dbpedia.org/ontology/MilitaryUnit",
        "type_mention": "unit",
        "entity1_uri": "http://dbpedia.org/resource/Canberra",
        "entity1_mention": "canberra",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3731",
        "question": "Is Philosophy the academic discipline of Think (journal)?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Think_(journal)> <http://dbpedia.org/ontology/academicDiscipline> <http://dbpedia.org/resource/Philosophy> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/academicDiscipline",
        "predicate1_mention": "academic discipline",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Think_(journal)",
        "entity1_mention": "Think (journal)",
        "entity2_uri": "http://dbpedia.org/resource/Philosophy",
        "entity2_mention": "philosophy"
    },
    {
        "id": "3732",
        "question": "What is the highschool of the american football player who joined the Robert Morris Colonials program?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/school> <http://dbpedia.org/resource/Robert_Morris_Colonials_football> . ?x <http://dbpedia.org/property/highschool> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/school",
        "predicate1_mention": "highschool",
        "predicate2_uri": "http://dbpedia.org/property/highschool",
        "predicate2_mention": "highschool",
        "type_uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
        "type_mention": "american football player",
        "entity1_uri": "http://dbpedia.org/resource/Robert_Morris_Colonials_football",
        "entity1_mention": "Robert Morris Colonials program",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3733",
        "question": "Which clubs play in the La Liga?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/La_Liga> . ?x <http://dbpedia.org/property/name> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/league",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/name",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/SoccerClub",
        "type_mention": "clubs",
        "entity1_uri": "http://dbpedia.org/resource/La_Liga",
        "entity1_mention": "la liga",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3734",
        "question": "Who are the parents of writers born and bred in Buckinghamshire?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/homeTown> <http://dbpedia.org/resource/Buckinghamshire> . ?x <http://dbpedia.org/ontology/parent> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/homeTown",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/parent",
        "predicate2_mention": "parents",
        "type_uri": "http://dbpedia.org/ontology/Writer",
        "type_mention": "writers",
        "entity1_uri": "http://dbpedia.org/resource/Buckinghamshire",
        "entity1_mention": "buckinghamshire",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3738",
        "question": "What are the relatives of the rugby player one of whose relatives is Nick Williams?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Nick_Williams> . ?x <http://dbpedia.org/ontology/relative> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RugbyPlayer>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/relatives",
        "predicate1_mention": "relatives",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/RugbyPlayer",
        "type_mention": "rugby player",
        "entity1_uri": "http://dbpedia.org/resource/Nick_Williams",
        "entity1_mention": "nick williams",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3739",
        "question": "Name the other wine region of the grapes whose one of the wine region is Michigan?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/wineRegion> <http://dbpedia.org/resource/Michigan> . ?x <http://dbpedia.org/ontology/wineRegion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Grape>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/wineRegion",
        "predicate1_mention": "wine region",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Grape",
        "type_mention": "grapes",
        "entity1_uri": "http://dbpedia.org/resource/Michigan",
        "entity1_mention": "michigan",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3740",
        "question": "Which shows' opening themes was used to make If We Were a Movie?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/If_We_Were_a_Movie> . ?uri <http://dbpedia.org/ontology/openingTheme> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/subsequentWork",
        "predicate1_mention": "used",
        "predicate2_uri": "http://dbpedia.org/ontology/openingTheme",
        "predicate2_mention": "opening themes",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "shows'",
        "entity1_uri": "http://dbpedia.org/resource/If_We_Were_a_Movie",
        "entity1_mention": "If We Were a Movie",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3741",
        "question": "Where is the venue of the History of Penny Arcade Expo located?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/History_of_Penny_Arcade_Expo> <http://dbpedia.org/property/venue> ?x . ?x <http://dbpedia.org/property/address> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/venue",
        "predicate1_mention": "venue",
        "predicate2_uri": "http://dbpedia.org/property/address",
        "predicate2_mention": "located",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/History_of_Penny_Arcade_Expo",
        "entity1_mention": "History of Penny Arcade Expo",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3742",
        "question": "Which European Broadcasting Union's TV show has opening theme as Te Deum ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/European_Broadcasting_Union> . ?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Te_Deum_(Charpentier)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/company",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/openingTheme",
        "predicate2_mention": "opening theme",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "tv show",
        "entity1_uri": "http://dbpedia.org/resource/European_Broadcasting_Union",
        "entity1_mention": "European Broadcasting Union's",
        "entity2_uri": "http://dbpedia.org/resource/Te_Deum_(Charpentier)",
        "entity2_mention": "Te Deum"
    },
    {
        "id": "3745",
        "question": "Does GeneWeb have the GPL license?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/GeneWeb> <http://dbpedia.org/property/license> <http://dbpedia.org/resource/GNU_General_Public_License> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/license",
        "predicate1_mention": "license",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/GeneWeb",
        "entity1_mention": "geneweb",
        "entity2_uri": "http://dbpedia.org/resource/GNU_General_Public_License",
        "entity2_mention": "license"
    },
    {
        "id": "3747",
        "question": "Name the famous employee of open society foundations ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/Open_Society_Foundations>  . }",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/employer",
        "predicate1_mention": "employee",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Open_Society_Foundations",
        "entity1_mention": "open society foundations",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3749",
        "question": "What is the affiliation of Lumbini Bauddha University ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lumbini_Bauddha_University> <http://dbpedia.org/property/affiliation> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/affiliation",
        "predicate1_mention": "affiliation",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Lumbini_Bauddha_University",
        "entity1_mention": "Lumbini Bauddha University",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3750",
        "question": "What are the death place of the models whose hair color was Red?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/hairColor> <http://dbpedia.org/resource/Red_hair> . ?x <http://dbpedia.org/property/deathPlace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/hairColor",
        "predicate1_mention": "hair color",
        "predicate2_uri": "http://dbpedia.org/property/deathPlace",
        "predicate2_mention": "death place",
        "type_uri": "http://dbpedia.org/ontology/Model",
        "type_mention": "models",
        "entity1_uri": "http://dbpedia.org/resource/Red_hair",
        "entity1_mention": "red",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3751",
        "question": "Which city amongst the one which belongs to Boundary Dam was the palce for Soccer Bowl '76 ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Soccer_Bowl_'76> <http://dbpedia.org/ontology/city> ?uri. <http://dbpedia.org/resource/Boundary_Dam> <http://dbpedia.org/property/owner> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/city",
        "predicate1_mention": "city",
        "predicate2_uri": "http://dbpedia.org/property/owner",
        "predicate2_mention": "belongs to",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Soccer_Bowl_'76",
        "entity1_mention": "soccer bowl '76",
        "entity2_uri": "http://dbpedia.org/resource/Boundary_Dam",
        "entity2_mention": "boundary dam"
    },
    {
        "id": "3752",
        "question": "What are the beverages whose origin is England?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/origin> <http://dbpedia.org/resource/England> } ",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/origin",
        "predicate1_mention": "origin",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/England",
        "entity1_mention": "england",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3753",
        "question": "List down the opponents of Frank Stilwell?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Frank_Stilwell> <http://dbpedia.org/ontology/opponent> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/opponent",
        "predicate1_mention": "opponents",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Frank_Stilwell",
        "entity1_mention": "frank stilwell",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3754",
        "question": "What is the label of I Pray on Christmas ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/I_Pray_on_Christmas> <http://dbpedia.org/property/label> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/label",
        "predicate1_mention": "label",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/I_Pray_on_Christmas",
        "entity1_mention": "I pray on christmas",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3755",
        "question": "Which company owns GetTV and Hypnotize minds ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/GetTV> <http://dbpedia.org/property/parent> ?uri. <http://dbpedia.org/resource/Hypnotize_Minds> <http://dbpedia.org/property/parent> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/parent",
        "predicate1_mention": "owns",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/GetTV",
        "entity1_mention": "gettv",
        "entity2_uri": "http://dbpedia.org/resource/Hypnotize_Minds",
        "entity2_mention": "hypnotize minds"
    },
    {
        "id": "3757",
        "question": "Miguel de Cervantes wrote the musical extended from which book?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Miguel_de_Cervantes> . ?x <http://dbpedia.org/ontology/basedOn> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/author",
        "predicate1_mention": "wrote",
        "predicate2_uri": "http://dbpedia.org/ontology/basedOn",
        "predicate2_mention": "extended from",
        "type_uri": "http://dbpedia.org/ontology/Musical",
        "type_mention": "musical",
        "entity1_uri": "http://dbpedia.org/resource/Miguel_de_Cervantes",
        "entity1_mention": "Miguel de Cervantes",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3758",
        "question": "Is Olyokma River the right tributary of Lena River?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Lena_River> <http://dbpedia.org/ontology/rightTributary> <http://dbpedia.org/resource/Olyokma_River> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/rightTributary",
        "predicate1_mention": "right tributary",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Lena_River",
        "entity1_mention": "lena river",
        "entity2_uri": "http://dbpedia.org/resource/Olyokma_River",
        "entity2_mention": "olyokma river"
    },
    {
        "id": "3759",
        "question": "What is the debut team of the football player whose college is UCLA Bruins football?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/college> <http://dbpedia.org/resource/UCLA_Bruins_football> . ?x <http://dbpedia.org/ontology/debutTeam> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GridironFootballPlayer>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/college",
        "predicate1_mention": "college",
        "predicate2_uri": "http://dbpedia.org/ontology/debutTeam",
        "predicate2_mention": "debut team",
        "type_uri": "http://dbpedia.org/ontology/GridironFootballPlayer",
        "type_mention": "football player",
        "entity1_uri": "http://dbpedia.org/resource/UCLA_Bruins_football",
        "entity1_mention": "ucla bruins football",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3760",
        "question": "What is the capital of the region which maintains the South Park Bridge ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Park_Bridge> <http://dbpedia.org/ontology/maintainedBy> ?x . ?x <http://dbpedia.org/ontology/countySeat> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/maintainedBy",
        "predicate1_mention": "maintains",
        "predicate2_uri": "http://dbpedia.org/ontology/countySeat",
        "predicate2_mention": "capital",
        "type_uri": "http://dbpedia.org/ontology/Region",
        "type_mention": "region",
        "entity1_uri": "http://dbpedia.org/resource/South_Park_Bridge",
        "entity1_mention": "South Park Bridge",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3761",
        "question": "Who has military branches are Colonial troops and Continental Army?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Colonial_troops> . ?uri <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Continental_Army> . }",
        "sparql_id": "7",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/militaryBranch",
        "predicate1_mention": "military branches",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Colonial_troops",
        "entity1_mention": "colonial troops",
        "entity2_uri": "http://dbpedia.org/resource/Continental_Army",
        "entity2_mention": "continental army"
    },
    {
        "id": "3764",
        "question": "What is the company whose one of the key person is Dennis Muilenburg and produces Boeing CH-47 Chinook ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Dennis_Muilenburg> . ?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Boeing_CH-47_Chinook>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/keyPeople",
        "predicate1_mention": "key person",
        "predicate2_uri": "http://dbpedia.org/ontology/product",
        "predicate2_mention": "produces",
        "type_uri": "http://dbpedia.org/ontology/Company",
        "type_mention": "company",
        "entity1_uri": "http://dbpedia.org/resource/Dennis_Muilenburg",
        "entity1_mention": "dennis muilenburg",
        "entity2_uri": "http://dbpedia.org/resource/Boeing_CH-47_Chinook",
        "entity2_mention": "Boeing CH-47 Chinook"
    },
    {
        "id": "3765",
        "question": "Name the cause of death of Martino Martini ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Martino_Martini> <http://dbpedia.org/ontology/deathCause> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/deathCause",
        "predicate1_mention": "cause of death",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Martino_Martini",
        "entity1_mention": "martino martini",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3767",
        "question": "What is the label of Next Thing ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Next_Thing> <http://dbpedia.org/ontology/recordLabel> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/recordLabel",
        "predicate1_mention": "label",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Next_Thing",
        "entity1_mention": "next thing",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3768",
        "question": "Name the scientist whose doctoral supervisor's doctoral student is John Bowlby?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/John_Bowlby> . ?uri <http://dbpedia.org/property/doctoralAdvisor> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/doctoralStudent",
        "predicate1_mention": "doctoral student",
        "predicate2_uri": "http://dbpedia.org/property/doctoralAdvisor",
        "predicate2_mention": "doctoral supervisor's",
        "type_uri": "http://dbpedia.org/ontology/Scientist",
        "type_mention": "scientist",
        "entity1_uri": "http://dbpedia.org/resource/John_Bowlby",
        "entity1_mention": "john bowlby",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3770",
        "question": "What are some other children of the father of Marvin Bush?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Marvin_Bush> . ?x <http://dbpedia.org/property/children> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/child",
        "predicate1_mention": "children",
        "predicate2_uri": "http://dbpedia.org/property/children",
        "predicate2_mention": "children",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Marvin_Bush",
        "entity1_mention": "marvin bush",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3771",
        "question": "Which  writer has childrens named Mother Mary Alphonsa and Julian Hawthorne?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Mother_Mary_Alphonsa> . ?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Julian_Hawthorne> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
        "sparql_id": "307",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/children",
        "predicate1_mention": "childrens",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Writer",
        "type_mention": "writer",
        "entity1_uri": "http://dbpedia.org/resource/Mother_Mary_Alphonsa",
        "entity1_mention": "Mother Mary Alphonsa",
        "entity2_uri": "http://dbpedia.org/resource/Julian_Hawthorne",
        "entity2_mention": "julian hawthorne"
    },
    {
        "id": "3773",
        "question": "What are some other products of the banks which makes Postbanken?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Postbanken> . ?x <http://dbpedia.org/property/products> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/product",
        "predicate1_mention": "products",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Bank",
        "type_mention": "banks",
        "entity1_uri": "http://dbpedia.org/resource/Postbanken",
        "entity1_mention": "postbanken",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3774",
        "question": "What are some cartoons distributed by a subsidiary of Time Warner?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/parentCompany> <http://dbpedia.org/resource/Time_Warner> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cartoon>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/parentCompany",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/distributor",
        "predicate2_mention": "distributed by",
        "type_uri": "http://dbpedia.org/ontology/Cartoon",
        "type_mention": "cartoons",
        "entity1_uri": "http://dbpedia.org/resource/Time_Warner",
        "entity1_mention": "time warner",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3776",
        "question": "What is the total number of fictional characters whose created by  Greg Daniels and series is The Office (U.S. TV series)?",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Greg_Daniels> . ?uri <http://dbpedia.org/ontology/series> <http://dbpedia.org/resource/The_Office_(U.S._TV_series)> } ",
        "sparql_id": "108",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/creator",
        "predicate1_mention": "created",
        "predicate2_uri": "http://dbpedia.org/ontology/series",
        "predicate2_mention": "series",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Greg_Daniels",
        "entity1_mention": "greg daniels",
        "entity2_uri": "http://dbpedia.org/resource/The_Office_(U.S._TV_series)",
        "entity2_mention": "The Office (U.S. TV series)"
    },
    {
        "id": "3778",
        "question": "Fairfield, Connecticut is hometown to which persons?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Fairfield,_Connecticut>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/hometown",
        "predicate1_mention": "hometown",
        "predicate2_uri": "http://dbpedia.org/ontology/Person",
        "predicate2_mention": "persons",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Fairfield,_Connecticut",
        "entity1_mention": "fairfield, connecticut",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3779",
        "question": "Which borough of the Corringham railway station is also the local authority of Buckhurst Hill County High School ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Corringham_railway_station> <http://dbpedia.org/property/borough> ?uri. <http://dbpedia.org/resource/Buckhurst_Hill_County_High_School> <http://dbpedia.org/ontology/localAuthority> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/borough",
        "predicate1_mention": "borough",
        "predicate2_uri": "http://dbpedia.org/ontology/localAuthority",
        "predicate2_mention": "local authority",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Corringham_railway_station",
        "entity1_mention": "corringham railway station",
        "entity2_uri": "http://dbpedia.org/resource/Buckhurst_Hill_County_High_School",
        "entity2_mention": "Buckhurst Hill County High School"
    },
    {
        "id": "3780",
        "question": "Where is the tombstone of Johannes Gerhardus Strijdom?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Johannes_Gerhardus_Strijdom> <http://dbpedia.org/property/restingplace> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/restingplace",
        "predicate1_mention": "tombstone",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Johannes_Gerhardus_Strijdom",
        "entity1_mention": "johannes gerhardus strijdom",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3781",
        "question": "Which administrative region leader is Sukhumbhand Paribatra and was founded by  Rama I?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/leaderName> <http://dbpedia.org/resource/Sukhumbhand_Paribatra> . ?uri <http://dbpedia.org/ontology/founder> <http://dbpedia.org/resource/Rama_I>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/leaderName",
        "predicate1_mention": "leader",
        "predicate2_uri": "http://dbpedia.org/ontology/founder",
        "predicate2_mention": "founded",
        "type_uri": "http://dbpedia.org/ontology/AdministrativeRegion",
        "type_mention": "administrative region",
        "entity1_uri": "http://dbpedia.org/resource/Sukhumbhand_Paribatra",
        "entity1_mention": "sukhumbhand paribatra",
        "entity2_uri": "http://dbpedia.org/resource/Rama_I",
        "entity2_mention": "rama I"
    },
    {
        "id": "3782",
        "question": "Who owns the bridge which crosses the Orange Line of MBTA?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/crosses> <http://dbpedia.org/resource/Orange_Line_(MBTA)> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/crosses",
        "predicate1_mention": "crosses",
        "predicate2_uri": "http://dbpedia.org/property/owner",
        "predicate2_mention": "owns",
        "type_uri": "http://dbpedia.org/ontology/Bridge",
        "type_mention": "bridge",
        "entity1_uri": "http://dbpedia.org/resource/Orange_Line_(MBTA)",
        "entity1_mention": "Orange Line of MBTA",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3783",
        "question": "Who designed Oddamavadi Bridge?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Oddamavadi_Bridge> <http://dbpedia.org/property/designer> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/designer",
        "predicate1_mention": "designed",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Oddamavadi_Bridge",
        "entity1_mention": "oddamavadi bridge",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3784",
        "question": "What are the television shows whose company is European Broadcasting Union?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/European_Broadcasting_Union>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/company",
        "predicate1_mention": "company",
        "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "predicate2_mention": "television shows",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/European_Broadcasting_Union",
        "entity1_mention": "European Broadcasting Union",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3785",
        "question": "Is Luigi Brugnaro the mayor of Venice?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Venice> <http://dbpedia.org/property/mayor> <http://dbpedia.org/resource/Luigi_Brugnaro> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/mayor",
        "predicate1_mention": "mayor",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Venice",
        "entity1_mention": "venice",
        "entity2_uri": "http://dbpedia.org/resource/Luigi_Brugnaro",
        "entity2_mention": "luigi brugnaro"
    },
    {
        "id": "3786",
        "question": "List all important people of the non profit organization which has Hilary Clinton as a key person ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Hillary_Clinton> . ?x <http://dbpedia.org/property/keyPeople> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Non-ProfitOrganisation>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/keyPeople",
        "predicate1_mention": "key person",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Non-ProfitOrganisation",
        "type_mention": "non profit organization",
        "entity1_uri": "http://dbpedia.org/resource/Hillary_Clinton",
        "entity1_mention": "Hilary clinton",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3787",
        "question": "Where did Allama Matthews study?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Allama_Matthews> <http://dbpedia.org/ontology/college> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/college",
        "predicate1_mention": "study",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Allama_Matthews",
        "entity1_mention": "allama matthews",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3788",
        "question": "Politicians born in Bangalore are now in which parties?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/homeTown> <http://dbpedia.org/resource/Bangalore> . ?x <http://dbpedia.org/ontology/party> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/homeTown",
        "predicate1_mention": "born in",
        "predicate2_uri": "http://dbpedia.org/ontology/party",
        "predicate2_mention": "parties",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Bangalore",
        "entity1_mention": "bangalore",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3789",
        "question": "What is the nationality of the chancellor who was served by Michael Mayr?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Mayr> <http://dbpedia.org/ontology/deputy> ?x . ?x <http://dbpedia.org/ontology/nationality> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Chancellor>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/deputy",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/nationality",
        "predicate2_mention": "nationality",
        "type_uri": "http://dbpedia.org/ontology/Chancellor",
        "type_mention": "chancellor",
        "entity1_uri": "http://dbpedia.org/resource/Michael_Mayr",
        "entity1_mention": "michael mayr",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3790",
        "question": "Is joel quenneville the main coach of Chicago Blackhawks?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Chicago_Blackhawks> <http://dbpedia.org/property/headCoach> <http://dbpedia.org/resource/Joel_Quenneville> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/headCoach",
        "predicate1_mention": "main coach",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Chicago_Blackhawks",
        "entity1_mention": "chicago blackhawks",
        "entity2_uri": "http://dbpedia.org/resource/Joel_Quenneville",
        "entity2_mention": "joel quenneville"
    },
    {
        "id": "3792",
        "question": "How many genres gave birth to other genres which emphasize Bass Guitars?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/instruments> <http://dbpedia.org/resource/Bass_guitar> . ?x <http://dbpedia.org/ontology/stylisticOrigin> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicGenre>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/instruments",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/stylisticOrigin",
        "predicate2_mention": "gave birth to",
        "type_uri": "http://dbpedia.org/ontology/MusicGenre",
        "type_mention": "genres",
        "entity1_uri": "http://dbpedia.org/resource/Bass_guitar",
        "entity1_mention": "Bass Guitars",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3793",
        "question": "Which info. appliance is manufactured by Asus and is the predecessor of PS 2?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/PlayStation_2> . ?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Asus>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/predecessor",
        "predicate1_mention": "predecessor",
        "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
        "predicate2_mention": "manufactured",
        "type_uri": "http://dbpedia.org/ontology/InformationAppliance",
        "type_mention": "appliance",
        "entity1_uri": "http://dbpedia.org/resource/PlayStation_2",
        "entity1_mention": "PS 2",
        "entity2_uri": "http://dbpedia.org/resource/Asus",
        "entity2_mention": "asus"
    },
    {
        "id": "3794",
        "question": "Where do employees of Deroit Red Wings live?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/Detroit_Red_Wings> . ?x <http://dbpedia.org/ontology/residence> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/employer",
        "predicate1_mention": "employees",
        "predicate2_uri": "http://dbpedia.org/ontology/residence",
        "predicate2_mention": "red",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Detroit_Red_Wings",
        "entity1_mention": "Deroit Red Wings",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3795",
        "question": "Who developed the software for the operating system of Macintosh Quadra 660AV ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Macintosh_Quadra_660AV> <http://dbpedia.org/ontology/operatingSystem> ?x . ?x <http://dbpedia.org/ontology/developer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/operatingSystem",
        "predicate1_mention": "operating system",
        "predicate2_uri": "http://dbpedia.org/ontology/developer",
        "predicate2_mention": "developed",
        "type_uri": "http://dbpedia.org/ontology/Software",
        "type_mention": "software",
        "entity1_uri": "http://dbpedia.org/resource/Macintosh_Quadra_660AV",
        "entity1_mention": "macintosh quadra 660av",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3796",
        "question": "Who is the writer with notable works like Adventures of Huckleberry Finn and The Adventures of Tom Sawyer?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/Adventures_of_Huckleberry_Finn> . ?uri <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
        "sparql_id": "307",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/notableWork",
        "predicate1_mention": "notable works",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Writer",
        "type_mention": "writer",
        "entity1_uri": "http://dbpedia.org/resource/Adventures_of_Huckleberry_Finn",
        "entity1_mention": "Adventures of Huckleberry Finn",
        "entity2_uri": "http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer",
        "entity2_mention": "The Adventures of Tom Sawyer"
    },
    {
        "id": "3799",
        "question": "How many shows are made by Playtone?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Playtone>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "401",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/property/company",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "predicate2_mention": "shows",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Playtone",
        "entity1_mention": "playtone",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3800",
        "question": "Name the monarch of L Buwei ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/L\u00fc_Buwei> <http://dbpedia.org/ontology/monarch> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/monarch",
        "predicate1_mention": "monarch",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/L\u00fc_Buwei",
        "entity1_mention": "l buwei",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3801",
        "question": "Which soccer clubs are in the Liga Divisi Utama?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/season> <http://dbpedia.org/resource/Liga_Divisi_Utama> . ?x <http://dbpedia.org/property/name> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/season",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/name",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/SoccerClub",
        "type_mention": "soccer clubs",
        "entity1_uri": "http://dbpedia.org/resource/Liga_Divisi_Utama",
        "entity1_mention": "Liga Divisi Utama",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3802",
        "question": "Who were the commanders during the events which took place in Sandusky County, Ohio?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sandusky_County,_Ohio> . ?x <http://dbpedia.org/ontology/commander> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/place",
        "predicate1_mention": "place",
        "predicate2_uri": "http://dbpedia.org/ontology/commander",
        "predicate2_mention": "commanders",
        "type_uri": "http://dbpedia.org/ontology/Event",
        "type_mention": "events",
        "entity1_uri": "http://dbpedia.org/resource/Sandusky_County,_Ohio",
        "entity1_mention": "sandusky county, ohio",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3803",
        "question": "What religion is practiced by Hirunika Premachandra, and many others south asians in Hong Kong?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Asians_in_Hong_Kong> <http://dbpedia.org/ontology/religion> ?uri. <http://dbpedia.org/resource/Hirunika_Premachandra> <http://dbpedia.org/property/religion> ?uri . }",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/religion",
        "predicate1_mention": "religion",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/South_Asians_in_Hong_Kong",
        "entity1_mention": "south asians in Hong Kong",
        "entity2_uri": "http://dbpedia.org/resource/Hirunika_Premachandra",
        "entity2_mention": "Hirunika Premachandra"
    },
    {
        "id": "3804",
        "question": "What are the movies whose editor died in Westwood, Los Angeles?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Westwood,_Los_Angeles> . ?uri <http://dbpedia.org/ontology/editing> ?x  . }",
        "sparql_id": "6",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/deathPlace",
        "predicate1_mention": "died in",
        "predicate2_uri": "http://dbpedia.org/ontology/editing",
        "predicate2_mention": "editor",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Westwood,_Los_Angeles",
        "entity1_mention": "westwood, Los angeles",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3805",
        "question": "Who is the distributer of Rev ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rev_(drink)> <http://dbpedia.org/property/distributor> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/distributor",
        "predicate1_mention": "distributer",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Rev_(drink)",
        "entity1_mention": "rev",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3806",
        "question": "In how many places can I find people who were the architects of the Dundas Castle?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Dundas_Castle_(Roscoe,_New_York)> <http://dbpedia.org/property/architecture> ?x . ?x <http://dbpedia.org/property/region> ?uri  . }",
        "sparql_id": "103",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/architecture",
        "predicate1_mention": "architects",
        "predicate2_uri": "http://dbpedia.org/property/region",
        "predicate2_mention": "places",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Dundas_Castle_(Roscoe,_New_York)",
        "entity1_mention": "dundas castle",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3807",
        "question": "Which TNT show has Christopher Franke as artist?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Christopher_Franke> . ?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/TNT_(TV_channel)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/artist",
        "predicate1_mention": "artist",
        "predicate2_uri": "http://dbpedia.org/property/network",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "show",
        "entity1_uri": "http://dbpedia.org/resource/Christopher_Franke",
        "entity1_mention": "christopher franke",
        "entity2_uri": "http://dbpedia.org/resource/TNT_(TV_channel)",
        "entity2_mention": "tnt"
    },
    {
        "id": "3808",
        "question": "List all that flows into the north sea?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/North_Sea> <http://dbpedia.org/property/inflow> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/inflow",
        "predicate1_mention": "flows",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/North_Sea",
        "entity1_mention": "north sea",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3809",
        "question": "List the relatives of Lyubov Dostoyevskaya ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lyubov_Dostoyevskaya> <http://dbpedia.org/property/relatives> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/relatives",
        "predicate1_mention": "relatives",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Lyubov_Dostoyevskaya",
        "entity1_mention": "lyubov dostoyevskaya",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3810",
        "question": "Where did the genres originate which can found in The Mudbloods?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Mudbloods> <http://dbpedia.org/property/genre> ?x . ?x <http://dbpedia.org/ontology/stylisticOrigin> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/genre",
        "predicate1_mention": "genres",
        "predicate2_uri": "http://dbpedia.org/ontology/stylisticOrigin",
        "predicate2_mention": "originate",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/The_Mudbloods",
        "entity1_mention": "the mudbloods",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3811",
        "question": "List all the record label distributed by the distributor of Zune ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Zune> . ?x <http://dbpedia.org/property/distributor> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RecordLabel>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/distributor",
        "predicate1_mention": "distributor",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/RecordLabel",
        "type_mention": "record label",
        "entity1_uri": "http://dbpedia.org/resource/Zune",
        "entity1_mention": "zune",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3813",
        "question": "Name the artist of Brad Paisley discography ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brad_Paisley_discography> <http://dbpedia.org/property/artist> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/artist",
        "predicate1_mention": "artist",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Brad_Paisley_discography",
        "entity1_mention": "brad paisley discography",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3814",
        "question": "From how many works is the musical derived, whose lyrics are written by Sheldon Harnick?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/lyrics> <http://dbpedia.org/resource/Sheldon_Harnick> . ?x <http://dbpedia.org/ontology/basedOn> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/lyrics",
        "predicate1_mention": "lyrics",
        "predicate2_uri": "http://dbpedia.org/ontology/basedOn",
        "predicate2_mention": "derived",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Sheldon_Harnick",
        "entity1_mention": "sheldon harnick",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3815",
        "question": "In which fields are pupils of Edouard Chavannes working?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/\u00c9douard_Chavannes> . ?x <http://dbpedia.org/property/fields> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/academicAdvisor",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/fields",
        "predicate2_mention": "fields",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/\u00c9douard_Chavannes",
        "entity1_mention": "Edouard chavannes",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3816",
        "question": "Name the  borough of the Bordesley railway station which is also the route end of the Birmingham and Oxford Junction Railway?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bordesley_railway_station> <http://dbpedia.org/property/borough> ?uri. <http://dbpedia.org/resource/Birmingham_and_Oxford_Junction_Railway> <http://dbpedia.org/ontology/routeEnd> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/borough",
        "predicate1_mention": "borough",
        "predicate2_uri": "http://dbpedia.org/ontology/routeEnd",
        "predicate2_mention": "route end",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Bordesley_railway_station",
        "entity1_mention": "bordesley railway station",
        "entity2_uri": "http://dbpedia.org/resource/Birmingham_and_Oxford_Junction_Railway",
        "entity2_mention": "birmingham and Oxford Junction Railway"
    },
    {
        "id": "3817",
        "question": "List all discipline of the journals whose one of the discipline is Cerebral blood flow ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/academicDiscipline> <http://dbpedia.org/resource/Cerebral_blood_flow> . ?x <http://dbpedia.org/ontology/academicDiscipline> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AcademicJournal>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/academicDiscipline",
        "predicate1_mention": "discipline",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/AcademicJournal",
        "type_mention": "journals",
        "entity1_uri": "http://dbpedia.org/resource/Cerebral_blood_flow",
        "entity1_mention": "cerebral blood flow",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3819",
        "question": "Matthew kane and Park rankin are citizens of which country?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Matthew_Kane_(actor)> <http://dbpedia.org/ontology/citizenship> ?uri. <http://dbpedia.org/resource/Park_Rankin> <http://dbpedia.org/ontology/citizenship> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/citizenship",
        "predicate1_mention": "citizens",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Matthew_Kane_(actor)",
        "entity1_mention": "matthew kane",
        "entity2_uri": "http://dbpedia.org/resource/Park_Rankin",
        "entity2_mention": "park rankin"
    },
    {
        "id": "3820",
        "question": "In how many places can I find people whose alma mater was in bachelor of arts?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Bachelor_of_Arts> . ?x <http://dbpedia.org/ontology/residence> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/almaMater",
        "predicate1_mention": "alma mater",
        "predicate2_uri": "http://dbpedia.org/ontology/residence",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Place",
        "type_mention": "places",
        "entity1_uri": "http://dbpedia.org/resource/Bachelor_of_Arts",
        "entity1_mention": "bachelor of arts",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3821",
        "question": "Which maintainer of Cheasty Boulevard South is also the city of Soccer Bowl' 76 ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Soccer_Bowl_'76> <http://dbpedia.org/ontology/city> ?uri. <http://dbpedia.org/resource/Cheasty_Boulevard_South> <http://dbpedia.org/ontology/maintainedBy> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/city",
        "predicate1_mention": "city",
        "predicate2_uri": "http://dbpedia.org/ontology/maintainedBy",
        "predicate2_mention": "maintainer",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Soccer_Bowl_'76",
        "entity1_mention": "soccer Bowl' 76",
        "entity2_uri": "http://dbpedia.org/resource/Cheasty_Boulevard_South",
        "entity2_mention": "Cheasty Boulevard South"
    },
    {
        "id": "3822",
        "question": "Whose associate is Publius Servilius Vatia Isauricus and has predecessor as Lucius Cornelius Lentulus Crus?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/associate> <http://dbpedia.org/resource/Publius_Servilius_Vatia_Isauricus_(consul_48_BC)> . ?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Lucius_Cornelius_Lentulus_Crus>  . }",
        "sparql_id": "8",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/associate",
        "predicate1_mention": "associate",
        "predicate2_uri": "http://dbpedia.org/ontology/predecessor",
        "predicate2_mention": "predecessor",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Publius_Servilius_Vatia_Isauricus_(consul_48_BC)",
        "entity1_mention": "Publius Servilius Vatia Isauricus",
        "entity2_uri": "http://dbpedia.org/resource/Lucius_Cornelius_Lentulus_Crus",
        "entity2_mention": "Lucius Cornelius Lentulus Crus"
    },
    {
        "id": "3824",
        "question": "What was the stadium of Panionios G.S.S. in 2014-15 season ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2014\u201315_Panionios_G.S.S._season> <http://dbpedia.org/property/stadium> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/stadium",
        "predicate1_mention": "stadium",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/2014\u201315_Panionios_G.S.S._season",
        "entity1_mention": "Panionios G.S.S. in 2014-15 season",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3825",
        "question": "Where is the debut team of Shaquil Barrett located?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Shaquil_Barrett> <http://dbpedia.org/property/debutteam> ?x . ?x <http://dbpedia.org/ontology/locationCity> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/debutteam",
        "predicate1_mention": "debut team",
        "predicate2_uri": "http://dbpedia.org/ontology/locationCity",
        "predicate2_mention": "located",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Shaquil_Barrett",
        "entity1_mention": "shaquil barrett",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3826",
        "question": "What are the musicals based on, whose lyricist was Shelon Harnick?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/lyrics> <http://dbpedia.org/resource/Sheldon_Harnick> . ?x <http://dbpedia.org/ontology/basedOn> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/lyrics",
        "predicate1_mention": "lyricist",
        "predicate2_uri": "http://dbpedia.org/ontology/basedOn",
        "predicate2_mention": "based on",
        "type_uri": "http://dbpedia.org/ontology/Musical",
        "type_mention": "musicals",
        "entity1_uri": "http://dbpedia.org/resource/Sheldon_Harnick",
        "entity1_mention": "Shelon Harnick",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3827",
        "question": "Who wrote a rose for emily?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/A_Rose_for_Emily>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/notableWork",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/Writer",
        "predicate2_mention": "wrote",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/A_Rose_for_Emily",
        "entity1_mention": "a rose for emily",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3828",
        "question": "Which were the philosophers whose primary interest was Natural philosophy?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/Natural_philosophy>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Philosopher>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/mainInterests",
        "predicate1_mention": "primary interest",
        "predicate2_uri": "http://dbpedia.org/ontology/Philosopher",
        "predicate2_mention": "philosophers",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Natural_philosophy",
        "entity1_mention": "philosophy",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3829",
        "question": "Which animator of Tommy Ticker's Tooth is also the director of The Haunted house ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tommy_Tucker's_Tooth> <http://dbpedia.org/property/animator> ?uri. <http://dbpedia.org/resource/The_Haunted_House_(1929_film)> <http://dbpedia.org/ontology/director> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/animator",
        "predicate1_mention": "animator",
        "predicate2_uri": "http://dbpedia.org/ontology/director",
        "predicate2_mention": "director",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Tommy_Tucker's_Tooth",
        "entity1_mention": "Tommy Ticker's Tooth",
        "entity2_uri": "http://dbpedia.org/resource/The_Haunted_House_(1929_film)",
        "entity2_mention": "The haunted house"
    },
    {
        "id": "3830",
        "question": "Who is relative of the people died in Bergen-Belsen concentration camp ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Bergen-Belsen_concentration_camp> . ?x <http://dbpedia.org/ontology/relative> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/deathPlace",
        "predicate1_mention": "died in",
        "predicate2_uri": "http://dbpedia.org/ontology/relative",
        "predicate2_mention": "relative",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Bergen-Belsen_concentration_camp",
        "entity1_mention": "bergen-belsen concentration camp",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3831",
        "question": "How many games are played at universities affiliated with the Association of Southeast Asian Institutions of Higher Learning?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/affiliation> <http://dbpedia.org/resource/Association_of_Southeast_Asian_Institutions_of_Higher_Learning> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/affiliation",
        "predicate1_mention": "affiliated",
        "predicate2_uri": "http://dbpedia.org/ontology/sport",
        "predicate2_mention": "games",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Association_of_Southeast_Asian_Institutions_of_Higher_Learning",
        "entity1_mention": "Association of Southeast Asian Institutions of Higher Learning",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3832",
        "question": "From which country did the Mauritius bank and the national commerce bank emerge?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/National_Commercial_Bank_Mauritius> <http://dbpedia.org/property/locationCountry> ?uri. <http://dbpedia.org/resource/Mauritius_Bank> <http://dbpedia.org/property/locationCountry> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/locationCountry",
        "predicate1_mention": "country",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/National_Commercial_Bank_Mauritius",
        "entity1_mention": "national commerce bank emerge",
        "entity2_uri": "http://dbpedia.org/resource/Mauritius_Bank",
        "entity2_mention": "mauritius bank"
    },
    {
        "id": "3833",
        "question": "Was the Lotuspool Records distributed by Napster?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Lotuspool_Records> <http://dbpedia.org/ontology/distributingLabel> <http://dbpedia.org/resource/Napster> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/distributingLabel",
        "predicate1_mention": "distributed",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Lotuspool_Records",
        "entity1_mention": "lotuspool records",
        "entity2_uri": "http://dbpedia.org/resource/Napster",
        "entity2_mention": "napster"
    },
    {
        "id": "3834",
        "question": "List all the artist of albums which have been produced by Stephen Kozmeniuk ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Stephen_Kozmeniuk> . ?x <http://dbpedia.org/property/artist> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/producer",
        "predicate1_mention": "produced",
        "predicate2_uri": "http://dbpedia.org/property/artist",
        "predicate2_mention": "artist",
        "type_uri": "http://dbpedia.org/ontology/Album",
        "type_mention": "albums",
        "entity1_uri": "http://dbpedia.org/resource/Stephen_Kozmeniuk",
        "entity1_mention": "stephen kozmeniuk",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3835",
        "question": "Count the tenants of the stadiums designed by Populous?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Populous_(company)> . ?x <http://dbpedia.org/ontology/tenant> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/architect",
        "predicate1_mention": "stadiums",
        "predicate2_uri": "http://dbpedia.org/ontology/tenant",
        "predicate2_mention": "tenants",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Populous_(company)",
        "entity1_mention": "populous",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3836",
        "question": "Where does the network cofounded by Seewoosagur Ramgoolam air its shows?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Seewoosagur_Ramgoolam> . ?x <http://dbpedia.org/property/broadcastArea> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BroadcastNetwork>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/founder",
        "predicate1_mention": "cofounded",
        "predicate2_uri": "http://dbpedia.org/property/broadcastArea",
        "predicate2_mention": "ramgoolam",
        "type_uri": "http://dbpedia.org/ontology/BroadcastNetwork",
        "type_mention": "network",
        "entity1_uri": "http://dbpedia.org/resource/Seewoosagur_Ramgoolam",
        "entity1_mention": "seewoosagur ramgoolam",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3837",
        "question": "Which sports exist in the universities whose president is Emanuel de Guzman?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/president> <http://dbpedia.org/resource/Emanuel_de_Guzman> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/president",
        "predicate1_mention": "president",
        "predicate2_uri": "http://dbpedia.org/ontology/sport",
        "predicate2_mention": "sports",
        "type_uri": "http://dbpedia.org/ontology/University",
        "type_mention": "universities",
        "entity1_uri": "http://dbpedia.org/resource/Emanuel_de_Guzman",
        "entity1_mention": "emanuel de guzman",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3838",
        "question": "Count the different number of academic areas covered by publications of SAGE?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/publisher> <http://dbpedia.org/resource/SAGE_Publications> . ?x <http://dbpedia.org/ontology/academicDiscipline> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/publisher",
        "predicate1_mention": "publications",
        "predicate2_uri": "http://dbpedia.org/ontology/academicDiscipline",
        "predicate2_mention": "academic areas",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/SAGE_Publications",
        "entity1_mention": "publications of sage",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3839",
        "question": "Which memeber of South Asia SubRegional Economic cooperation is also the nationality of Aishath saffa ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Asia_Subregional_Economic_Cooperation> <http://dbpedia.org/property/membership> ?uri. <http://dbpedia.org/resource/Aishath_Saffa> <http://dbpedia.org/property/nationality> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/membership",
        "predicate1_mention": "memeber",
        "predicate2_uri": "http://dbpedia.org/property/nationality",
        "predicate2_mention": "nationality",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/South_Asia_Subregional_Economic_Cooperation",
        "entity1_mention": "South Asia SubRegional Economic cooperation",
        "entity2_uri": "http://dbpedia.org/resource/Aishath_Saffa",
        "entity2_mention": "aishath saffa"
    },
    {
        "id": "3841",
        "question": "What is the purpose of Maharashtra Chess Association ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maharashtra_Chess_Association> <http://dbpedia.org/property/purpose> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/purpose",
        "predicate1_mention": "purpose",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Maharashtra_Chess_Association",
        "entity1_mention": "maharashtra chess association",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3842",
        "question": "What is the address of Federal Reserve Bank Building?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Federal_Reserve_Bank_Building_(Seattle)> <http://dbpedia.org/property/address> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/address",
        "predicate1_mention": "address",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Federal_Reserve_Bank_Building_(Seattle)",
        "entity1_mention": "Federal Reserve Bank Building",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3844",
        "question": "What is the common official residence of Lezlee Westine and Arnold W. Braswell?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lezlee_Westine> <http://dbpedia.org/property/residence> ?uri. <http://dbpedia.org/resource/Arnold_W._Braswell> <http://dbpedia.org/property/residence> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/residence",
        "predicate1_mention": "residence",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Lezlee_Westine",
        "entity1_mention": "lezlee westine",
        "entity2_uri": "http://dbpedia.org/resource/Arnold_W._Braswell",
        "entity2_mention": "Arnold W. Braswell"
    },
    {
        "id": "3845",
        "question": "Louis Dunbar is the coach of which basketball team ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Louis_Dunbar>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballTeam>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/coach",
        "predicate1_mention": "coach",
        "predicate2_uri": "http://dbpedia.org/ontology/BasketballTeam",
        "predicate2_mention": "basketball team",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Louis_Dunbar",
        "entity1_mention": "louis dunbar",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3846",
        "question": "Do the White Plains Road lie in the Bronx county?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/White_Plains_Road> <http://dbpedia.org/property/counties> <http://dbpedia.org/resource/The_Bronx> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/counties",
        "predicate1_mention": "county",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/White_Plains_Road",
        "entity1_mention": "White Plains Road",
        "entity2_uri": "http://dbpedia.org/resource/The_Bronx",
        "entity2_mention": "the bronx"
    },
    {
        "id": "3848",
        "question": "Is US Navy garrisoned at Arlington County, Virginia?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/property/garrison> <http://dbpedia.org/resource/Arlington_County,_Virginia> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/garrison",
        "predicate1_mention": "garrisoned",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/United_States_Navy",
        "entity1_mention": "us navy",
        "entity2_uri": "http://dbpedia.org/resource/Arlington_County,_Virginia",
        "entity2_mention": "Arlington County, Virginia"
    },
    {
        "id": "3849",
        "question": "Which university attended by Franklin W. Olin was also the alma mater of Patty Lin ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Patty_Lin> <http://dbpedia.org/property/almaMater> ?uri. <http://dbpedia.org/resource/Franklin_W._Olin> <http://dbpedia.org/property/education> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/almaMater",
        "predicate1_mention": "alma mater",
        "predicate2_uri": "http://dbpedia.org/property/education",
        "predicate2_mention": "university",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Patty_Lin",
        "entity1_mention": "patty lin",
        "entity2_uri": "http://dbpedia.org/resource/Franklin_W._Olin",
        "entity2_mention": "Franklin W. Olin"
    },
    {
        "id": "3852",
        "question": "What is the country of origin of the president of Skai group?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Skai_Group> <http://dbpedia.org/ontology/keyPerson> ?x . ?x <http://dbpedia.org/ontology/stateOfOrigin> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/keyPerson",
        "predicate1_mention": "president",
        "predicate2_uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "predicate2_mention": "origin",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Skai_Group",
        "entity1_mention": "skai group",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3853",
        "question": "Name the company who owns HBO division?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/divisions> <http://dbpedia.org/resource/HBO>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/divisions",
        "predicate1_mention": "division",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Company",
        "type_mention": "company",
        "entity1_uri": "http://dbpedia.org/resource/HBO",
        "entity1_mention": "hbo",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3855",
        "question": "Name the movies distributed by Cinema International Corporation and edited by Hulian Doyle ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Cinema_International_Corporation> . ?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Julian_Doyle_(filmmaker)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/distributor",
        "predicate1_mention": "distributed",
        "predicate2_uri": "http://dbpedia.org/property/editing",
        "predicate2_mention": "edited",
        "type_uri": "http://dbpedia.org/ontology/Film",
        "type_mention": "movies",
        "entity1_uri": "http://dbpedia.org/resource/Cinema_International_Corporation",
        "entity1_mention": "cinema international corporation",
        "entity2_uri": "http://dbpedia.org/resource/Julian_Doyle_(filmmaker)",
        "entity2_mention": "hulian doyle"
    },
    {
        "id": "3856",
        "question": "Name a writer who was educated in Saint Petersburg and had a son named Lyubov Dostoyevskaya ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/education> <http://dbpedia.org/resource/Saint_Petersburg> . ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Lyubov_Dostoyevskaya>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/education",
        "predicate1_mention": "educated",
        "predicate2_uri": "http://dbpedia.org/ontology/child",
        "predicate2_mention": "son",
        "type_uri": "http://dbpedia.org/ontology/Writer",
        "type_mention": "writer",
        "entity1_uri": "http://dbpedia.org/resource/Saint_Petersburg",
        "entity1_mention": "saint petersburg",
        "entity2_uri": "http://dbpedia.org/resource/Lyubov_Dostoyevskaya",
        "entity2_mention": "lyubov dostoyevskaya"
    },
    {
        "id": "3857",
        "question": "What is the source location of Thornton Creek ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thornton_Creek> <http://dbpedia.org/property/sourceLocation> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/sourceLocation",
        "predicate1_mention": "source location",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Thornton_Creek",
        "entity1_mention": "thornton creek",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3858",
        "question": "What are shows whose theme music composer's home town is New York?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/New_York> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/hometown",
        "predicate1_mention": "home town",
        "predicate2_uri": "http://dbpedia.org/property/themeMusicComposer",
        "predicate2_mention": "e music composer's",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "shows",
        "entity1_uri": "http://dbpedia.org/resource/New_York",
        "entity1_mention": "new york",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3859",
        "question": "What is the common relegion of Miao people  and the country where Guru Purnima is celebrated ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Miao_people> <http://dbpedia.org/ontology/religion> ?uri. <http://dbpedia.org/resource/Guru_Purnima> <http://dbpedia.org/ontology/country> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/religion",
        "predicate1_mention": "relegion",
        "predicate2_uri": "http://dbpedia.org/ontology/country",
        "predicate2_mention": "country",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Miao_people",
        "entity1_mention": "miao people",
        "entity2_uri": "http://dbpedia.org/resource/Guru_Purnima",
        "entity2_mention": "guru purnima"
    },
    {
        "id": "3860",
        "question": "Where did the relatives of Gustavo Rojas Pinilla study?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Gustavo_Rojas_Pinilla> . ?x <http://dbpedia.org/property/almaMater> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/relation",
        "predicate1_mention": "relatives",
        "predicate2_uri": "http://dbpedia.org/property/almaMater",
        "predicate2_mention": "study",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Gustavo_Rojas_Pinilla",
        "entity1_mention": "Gustavo Rojas Pinilla",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3861",
        "question": "List the magazines published by Playboy Enterprises ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Playboy_Enterprises>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/publisher",
        "predicate1_mention": "published",
        "predicate2_uri": "http://dbpedia.org/ontology/Magazine",
        "predicate2_mention": "magazines",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Playboy_Enterprises",
        "entity1_mention": "playboy enterprises",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3862",
        "question": "Is the song Killing is Out, School is in belong in the The Next Step?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Killing_Is_Out,_School_Is_In> <http://dbpedia.org/property/album> <http://dbpedia.org/resource/The_Next_Step_(James_Brown_album)> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/album",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Killing_Is_Out,_School_Is_In",
        "entity1_mention": "Killing is Out, School is in",
        "entity2_uri": "http://dbpedia.org/resource/The_Next_Step_(James_Brown_album)",
        "entity2_mention": "the next step"
    },
    {
        "id": "3864",
        "question": "Who is the author of Heroman is also the author of Karakuri Dji Ultimo ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Heroman> <http://dbpedia.org/property/author> ?uri. <http://dbpedia.org/resource/Karakuri_D\u00f4ji_Ultimo> <http://dbpedia.org/ontology/author> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/author",
        "predicate1_mention": "author",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Heroman",
        "entity1_mention": "heroman",
        "entity2_uri": "http://dbpedia.org/resource/Karakuri_D\u00f4ji_Ultimo",
        "entity2_mention": "karakuri dji ultimo"
    },
    {
        "id": "3865",
        "question": "Which appliance's CPU is Cell (microprocessor) and predecessor is PlayStation 2?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/cpu> <http://dbpedia.org/resource/Cell_(microprocessor)> . ?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/PlayStation_2>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/cpu",
        "predicate1_mention": "cpu",
        "predicate2_uri": "http://dbpedia.org/ontology/predecessor",
        "predicate2_mention": "predecessor",
        "type_uri": "http://dbpedia.org/ontology/InformationAppliance",
        "type_mention": "appliance's",
        "entity1_uri": "http://dbpedia.org/resource/Cell_(microprocessor)",
        "entity1_mention": "(microprocessor)",
        "entity2_uri": "http://dbpedia.org/resource/PlayStation_2",
        "entity2_mention": "playstation 2"
    },
    {
        "id": "3866",
        "question": "Name the television show which was developed by Brian Graden and distributed by Comedy Central?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/developer> <http://dbpedia.org/resource/Brian_Graden> . ?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Comedy_Central>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/developer",
        "predicate1_mention": "developed by",
        "predicate2_uri": "http://dbpedia.org/property/distributor",
        "predicate2_mention": "distributed",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "television show",
        "entity1_uri": "http://dbpedia.org/resource/Brian_Graden",
        "entity1_mention": "brian graden",
        "entity2_uri": "http://dbpedia.org/resource/Comedy_Central",
        "entity2_mention": "comedy central"
    },
    {
        "id": "3867",
        "question": "Was Blade Runner cinematographed by Jordan Cronenweth?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Blade_Runner> <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Jordan_Cronenweth> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/cinematography",
        "predicate1_mention": "cinematographed",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Blade_Runner",
        "entity1_mention": "blade runner",
        "entity2_uri": "http://dbpedia.org/resource/Jordan_Cronenweth",
        "entity2_mention": "Jordan Cronenweth"
    },
    {
        "id": "3868",
        "question": "What team had the debut of Marv Throneberry and Curt Coleman?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marv_Throneberry> <http://dbpedia.org/property/debutteam> ?uri. <http://dbpedia.org/resource/Curt_Coleman> <http://dbpedia.org/ontology/debutTeam> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/debutteam",
        "predicate1_mention": "debut",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Marv_Throneberry",
        "entity1_mention": "marv throneberry",
        "entity2_uri": "http://dbpedia.org/resource/Curt_Coleman",
        "entity2_mention": "curt coleman"
    },
    {
        "id": "3869",
        "question": "Count the number of software which runs on Microsoft Windows and mac OS ?",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows> . ?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Mac_OS>} ",
        "sparql_id": "107",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/operatingSystem",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Microsoft_Windows",
        "entity1_mention": "microsoft windows",
        "entity2_uri": "http://dbpedia.org/resource/Mac_OS",
        "entity2_mention": "mac"
    },
    {
        "id": "3870",
        "question": "What has Carl Sagan written his books about?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Carl_Sagan> . ?x <http://dbpedia.org/property/subject> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/author",
        "predicate1_mention": "written",
        "predicate2_uri": "http://dbpedia.org/property/subject",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Book",
        "type_mention": "books",
        "entity1_uri": "http://dbpedia.org/resource/Carl_Sagan",
        "entity1_mention": "carl sagan",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3871",
        "question": "How many characters are there in The Office?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/series> <http://dbpedia.org/resource/The_Office_(U.S._TV_series)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
        "sparql_id": "401",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/ontology/series",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "predicate2_mention": "characters",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/The_Office_(U.S._TV_series)",
        "entity1_mention": "The office",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3872",
        "question": "What is the place of death of the lieutenant of Frank Steunenberg?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Frank_Steunenberg> <http://dbpedia.org/property/lieutenant> ?x . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/lieutenant",
        "predicate1_mention": "lieutenant",
        "predicate2_uri": "http://dbpedia.org/property/placeOfDeath",
        "predicate2_mention": "place of death",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Frank_Steunenberg",
        "entity1_mention": "frank steunenberg",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3873",
        "question": "What are the awards won by the film editor of World of Tomorrow ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/World_of_Tomorrow_(film)> <http://dbpedia.org/ontology/editing> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/editing",
        "predicate1_mention": "editor",
        "predicate2_uri": "http://dbpedia.org/ontology/award",
        "predicate2_mention": "awards",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/World_of_Tomorrow_(film)",
        "entity1_mention": "World of Tomorrow",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3875",
        "question": "What are some TV shows similar to the one produced by Susie Liggat?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Susie_Liggat> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/producer",
        "predicate1_mention": "produced",
        "predicate2_uri": "http://dbpedia.org/ontology/related",
        "predicate2_mention": "similar to",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "tv shows",
        "entity1_uri": "http://dbpedia.org/resource/Susie_Liggat",
        "entity1_mention": "susie liggat",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3878",
        "question": "Which soccer players are currently playing for NYC FC?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/New_York_City_FC>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/currentclub",
        "predicate1_mention": "currently playing for",
        "predicate2_uri": "http://dbpedia.org/ontology/SoccerPlayer",
        "predicate2_mention": "soccer players",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/New_York_City_FC",
        "entity1_mention": "NYC FC",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3879",
        "question": "Where does the river end which starts in Mazabuka?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Mazabuka> . ?x <http://dbpedia.org/ontology/riverMouth> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/city",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/riverMouth",
        "predicate2_mention": "river end",
        "type_uri": "http://dbpedia.org/ontology/River",
        "type_mention": "river",
        "entity1_uri": "http://dbpedia.org/resource/Mazabuka",
        "entity1_mention": "mazabuka",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3880",
        "question": "How many things are located in Ridgewood, New Jersey?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Ridgewood,_New_Jersey>  . }",
        "sparql_id": "101",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/property/birthPlace",
        "predicate1_mention": "located",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Ridgewood,_New_Jersey",
        "entity1_mention": "Ridgewood, New Jersey",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3881",
        "question": "Name the mountain located in California and has parent peak as Nevado de Toluca ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/California> . ?uri <http://dbpedia.org/ontology/parentMountainPeak> <http://dbpedia.org/resource/Nevado_de_Toluca>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/locatedInArea",
        "predicate1_mention": "located in",
        "predicate2_uri": "http://dbpedia.org/ontology/parentMountainPeak",
        "predicate2_mention": "parent peak",
        "type_uri": "http://dbpedia.org/ontology/Mountain",
        "type_mention": "mountain",
        "entity1_uri": "http://dbpedia.org/resource/California",
        "entity1_mention": "california",
        "entity2_uri": "http://dbpedia.org/resource/Nevado_de_Toluca",
        "entity2_mention": "Nevado de Toluca"
    },
    {
        "id": "3882",
        "question": "What award has been given to Roy Walker as well as Walt Disney?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Roy_Walker_(production_designer)> <http://dbpedia.org/ontology/award> ?uri. <http://dbpedia.org/resource/Walt_Disney> <http://dbpedia.org/ontology/award> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/award",
        "predicate1_mention": "award",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Roy_Walker_(production_designer)",
        "entity1_mention": "roy walker",
        "entity2_uri": "http://dbpedia.org/resource/Walt_Disney",
        "entity2_mention": "walt disney"
    },
    {
        "id": "3883",
        "question": "Name the branch of Carroll E. Lanier ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Carroll_E._Lanier> <http://dbpedia.org/property/branch> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/branch",
        "predicate1_mention": "branch",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Carroll_E._Lanier",
        "entity1_mention": "carroll E. lanier",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3885",
        "question": "Which television show's company is Paramount Television and is located in Boston?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Paramount_Television> . ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Boston>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/company",
        "predicate1_mention": "company",
        "predicate2_uri": "http://dbpedia.org/ontology/location",
        "predicate2_mention": "located",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "television",
        "entity1_uri": "http://dbpedia.org/resource/Paramount_Television",
        "entity1_mention": "paramount television",
        "entity2_uri": "http://dbpedia.org/resource/Boston",
        "entity2_mention": "boston"
    },
    {
        "id": "3886",
        "question": "Which magazines were founded by Jann Wenner ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/founder> <http://dbpedia.org/resource/Jann_Wenner>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/founder",
        "predicate1_mention": "founded",
        "predicate2_uri": "http://dbpedia.org/ontology/Magazine",
        "predicate2_mention": "magazines",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Jann_Wenner",
        "entity1_mention": "jann wenner",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3887",
        "question": "What is the area of ITV (Thailand) ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/ITV_(Thailand)> <http://dbpedia.org/property/area> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/area",
        "predicate1_mention": "area",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/ITV_(Thailand)",
        "entity1_mention": "itv (thailand)",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3888",
        "question": "Name the presenter of Shirley Temple's Storybook ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Shirley_Temple's_Storybook> <http://dbpedia.org/property/presenter> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/presenter",
        "predicate1_mention": "presenter",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Shirley_Temple's_Storybook",
        "entity1_mention": "shirley temple's storybook",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3889",
        "question": "Where was the trainer of Java Gold born?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Java_Gold> <http://dbpedia.org/property/trainer> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/trainer",
        "predicate1_mention": "trainer",
        "predicate2_uri": "http://dbpedia.org/property/birthPlace",
        "predicate2_mention": "born",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Java_Gold",
        "entity1_mention": "java gold",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3891",
        "question": "Name the common managing club of the Ivan Toplak and Bret Simon?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ivan_Toplak> <http://dbpedia.org/ontology/managerClub> ?uri. <http://dbpedia.org/resource/Bret_Simon> <http://dbpedia.org/ontology/managerClub> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/managerClub",
        "predicate1_mention": "managing club",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Ivan_Toplak",
        "entity1_mention": "ivan toplak",
        "entity2_uri": "http://dbpedia.org/resource/Bret_Simon",
        "entity2_mention": "bret simon"
    },
    {
        "id": "3892",
        "question": "What are the movies whose editor is Robert Wise?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/editing> <http://dbpedia.org/resource/Robert_Wise>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/editing",
        "predicate1_mention": "editor",
        "predicate2_uri": "http://dbpedia.org/ontology/Film",
        "predicate2_mention": "movies",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Robert_Wise",
        "entity1_mention": "robert wise",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3893",
        "question": "Name the river on Batoka Gorge Hydroelectric Power Station ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Batoka_Gorge_Hydroelectric_Power_Station> <http://dbpedia.org/ontology/river> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/river",
        "predicate1_mention": "river",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Batoka_Gorge_Hydroelectric_Power_Station",
        "entity1_mention": "Batoka Gorge Hydroelectric Power Station",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3894",
        "question": "Race horses whose grandsire is Wild  Risk have taken part in which races?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/grandsire> <http://dbpedia.org/resource/Wild_Risk> . ?x <http://dbpedia.org/property/race> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RaceHorse>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/grandsire",
        "predicate1_mention": "grandsire",
        "predicate2_uri": "http://dbpedia.org/property/race",
        "predicate2_mention": "race",
        "type_uri": "http://dbpedia.org/ontology/RaceHorse",
        "type_mention": "Race horses",
        "entity1_uri": "http://dbpedia.org/resource/Wild_Risk",
        "entity1_mention": "wild risk",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3895",
        "question": "Did Johann Gottfried Galle invent Neptune?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Neptune> <http://dbpedia.org/property/discoverer> <http://dbpedia.org/resource/Johann_Gottfried_Galle> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/discoverer",
        "predicate1_mention": "invent",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Neptune",
        "entity1_mention": "neptune",
        "entity2_uri": "http://dbpedia.org/resource/Johann_Gottfried_Galle",
        "entity2_mention": "Johann Gottfried Galle"
    },
    {
        "id": "3896",
        "question": "Where is the T.I. Ahmadiyya Girls Senior High School?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/T.I._Ahmadiyya_Girls_Senior_High_School,_Asokore> <http://dbpedia.org/ontology/denomination> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/denomination",
        "predicate1_mention": "senior",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/T.I._Ahmadiyya_Girls_Senior_High_School,_Asokore",
        "entity1_mention": "T.I. Ahmadiyya Girls Senior High School",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3897",
        "question": "How many information appliance are manufactured by companies located in Taiwan?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/locationCity> <http://dbpedia.org/resource/Taiwan> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}",
        "sparql_id": "406",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/locationCity",
        "predicate1_mention": "located",
        "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
        "predicate2_mention": "manufactured",
        "type_uri": "http://dbpedia.org/ontology/InformationAppliance",
        "type_mention": "information appliance",
        "entity1_uri": "http://dbpedia.org/resource/Taiwan",
        "entity1_mention": "taiwan",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3898",
        "question": "Which office holder's military unit is USS Kittiwake  and constituency is Castro District, San Francisco ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/USS_Kittiwake_(ASR-13)> . ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Castro_District,_San_Francisco>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/militaryUnit",
        "predicate1_mention": "military unit",
        "predicate2_uri": "http://dbpedia.org/property/constituency",
        "predicate2_mention": "constituency",
        "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
        "type_mention": "office holder's",
        "entity1_uri": "http://dbpedia.org/resource/USS_Kittiwake_(ASR-13)",
        "entity1_mention": "uss kittiwake",
        "entity2_uri": "http://dbpedia.org/resource/Castro_District,_San_Francisco",
        "entity2_mention": "Castro District, San Francisco"
    },
    {
        "id": "3899",
        "question": "Which driver came first in the 1993 European Grand Prix ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1993_European_Grand_Prix> <http://dbpedia.org/property/firstDriver> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/firstDriver",
        "predicate1_mention": "driver came first",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/1993_European_Grand_Prix",
        "entity1_mention": "1993 European Grand Prix",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3901",
        "question": "Which office holder's  military branch is Continental Army and vice president is John Adams?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Continental_Army> . ?uri <http://dbpedia.org/ontology/vicePresident> <http://dbpedia.org/resource/John_Adams>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/militaryBranch",
        "predicate1_mention": "military branch",
        "predicate2_uri": "http://dbpedia.org/ontology/vicePresident",
        "predicate2_mention": "vice president",
        "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
        "type_mention": "office holder's",
        "entity1_uri": "http://dbpedia.org/resource/Continental_Army",
        "entity1_mention": "continental army",
        "entity2_uri": "http://dbpedia.org/resource/John_Adams",
        "entity2_mention": "john adams"
    },
    {
        "id": "3902",
        "question": "Into what military organizations is the United States Department of Defense divided?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_Defense> } ",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/commandStructure",
        "predicate1_mention": "military organizations",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/United_States_Department_of_Defense",
        "entity1_mention": "United States Department of Defense",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3903",
        "question": "Who have been the manager of national team of Spain?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Spain_national_football_team>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/nationalteam",
        "predicate1_mention": "national team",
        "predicate2_uri": "http://dbpedia.org/ontology/SoccerManager",
        "predicate2_mention": "manager",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Spain_national_football_team",
        "entity1_mention": "national team of Spain",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3904",
        "question": "Where was James McClure born ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/James_McClure_(table_tennis)> <http://dbpedia.org/property/birthPlace> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/birthPlace",
        "predicate1_mention": "born",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/James_McClure_(table_tennis)",
        "entity1_mention": "james mcclure",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3905",
        "question": "Name all sitcoms whose theme music is made by Miley Cyrus?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/musicalBand> <http://dbpedia.org/resource/Miley_Cyrus> . ?uri <http://dbpedia.org/ontology/openingTheme> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/musicalBand",
        "predicate1_mention": "music",
        "predicate2_uri": "http://dbpedia.org/ontology/openingTheme",
        "predicate2_mention": "theme",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "sitcoms",
        "entity1_uri": "http://dbpedia.org/resource/Miley_Cyrus",
        "entity1_mention": "miley cyrus",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3906",
        "question": "Does the Toyota Verossa have the front engine design platform?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Toyota_Verossa> <http://dbpedia.org/ontology/automobilePlatform> <http://dbpedia.org/resource/Front-engine_design>  . }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/automobilePlatform",
        "predicate1_mention": "platform",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Toyota_Verossa",
        "entity1_mention": "toyota verossa",
        "entity2_uri": "http://dbpedia.org/resource/Front-engine_design",
        "entity2_mention": "front engine design"
    },
    {
        "id": "3907",
        "question": "The official residence of Sukhumbhand paribatra ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sukhumbhand_Paribatra> <http://dbpedia.org/property/residence> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/residence",
        "predicate1_mention": "residence",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Sukhumbhand_Paribatra",
        "entity1_mention": "sukhumbhand paribatra",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3908",
        "question": "What is the debut team of people born in Vargas?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Vargas_(state)> . ?x <http://dbpedia.org/property/debutteam> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/birthPlace",
        "predicate1_mention": "born",
        "predicate2_uri": "http://dbpedia.org/property/debutteam",
        "predicate2_mention": "debut team",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Vargas_(state)",
        "entity1_mention": "vargas",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3909",
        "question": "Which companies have Kumho Asiana Group as their parent company?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/parentCompany> <http://dbpedia.org/resource/Kumho_Asiana_Group> } ",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/parentCompany",
        "predicate1_mention": "parent company",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Kumho_Asiana_Group",
        "entity1_mention": "Kumho Asiana Group",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3910",
        "question": "Was Neil Armstrong on the Gemini 8 mission?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Neil_Armstrong> <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Gemini_8> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/mission",
        "predicate1_mention": "mission",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Neil_Armstrong",
        "entity1_mention": "neil armstrong",
        "entity2_uri": "http://dbpedia.org/resource/Gemini_8",
        "entity2_mention": "gemini 8"
    },
    {
        "id": "3911",
        "question": "What is the profession of the children of Herbert Pell ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Herbert_Pell> <http://dbpedia.org/property/children> ?x . ?x <http://dbpedia.org/ontology/profession> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/children",
        "predicate1_mention": "children",
        "predicate2_uri": "http://dbpedia.org/ontology/profession",
        "predicate2_mention": "profession",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Herbert_Pell",
        "entity1_mention": "herbert pell",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3912",
        "question": "Name the sitcom with theme music composer as Julian Gingell and channel as Fox Broadcasting Company?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Julian_Gingell> . ?uri <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/themeMusicComposer",
        "predicate1_mention": "theme music composer",
        "predicate2_uri": "http://dbpedia.org/ontology/channel",
        "predicate2_mention": "channel",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "sitcom",
        "entity1_uri": "http://dbpedia.org/resource/Julian_Gingell",
        "entity1_mention": "julian gingell",
        "entity2_uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company",
        "entity2_mention": "fox broadcasting company"
    },
    {
        "id": "3914",
        "question": "What product is made by Sony and Foxconn togather?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Sony> . ?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Foxconn> . }",
        "sparql_id": "7",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/manufacturer",
        "predicate1_mention": "made by",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Sony",
        "entity1_mention": "sony",
        "entity2_uri": "http://dbpedia.org/resource/Foxconn",
        "entity2_mention": "foxconn"
    },
    {
        "id": "3915",
        "question": "Name the death location of Judson Huss ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Judson_Huss> <http://dbpedia.org/property/deathPlace> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/deathPlace",
        "predicate1_mention": "death location",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Judson_Huss",
        "entity1_mention": "judson huss",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3916",
        "question": "What is the country whose leader was once Valentina Matviyenko?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Valentina_Matviyenko>  . }",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/leader",
        "predicate1_mention": "leader",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Valentina_Matviyenko",
        "entity1_mention": "valentina matviyenko",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3917",
        "question": "Give me all the alma mater of the relatives of Samuek Moreno Rojas ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Samuel_Moreno_Rojas> <http://dbpedia.org/ontology/relation> ?x . ?x <http://dbpedia.org/property/almaMater> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/relation",
        "predicate1_mention": "relatives",
        "predicate2_uri": "http://dbpedia.org/property/almaMater",
        "predicate2_mention": "alma mater",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Samuel_Moreno_Rojas",
        "entity1_mention": "Samuek Moreno Rojas",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3918",
        "question": "Is Julia Gillard the prime minister of Kate Lundy?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Kate_Lundy> <http://dbpedia.org/ontology/primeMinister> <http://dbpedia.org/resource/Julia_Gillard> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/primeMinister",
        "predicate1_mention": "prime minister",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Kate_Lundy",
        "entity1_mention": "kate lundy",
        "entity2_uri": "http://dbpedia.org/resource/Julia_Gillard",
        "entity2_mention": "julia gillard"
    },
    {
        "id": "3919",
        "question": "Where does Truman McGill Hobbs United States District Judge live?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Truman_McGill_Hobbs> <http://dbpedia.org/property/residence> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/residence",
        "predicate1_mention": "live",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Truman_McGill_Hobbs",
        "entity1_mention": "truman mcgill hobbs united states district judge",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3920",
        "question": "What is the country whose leader name is Grard Larcher?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/G\u00e9rard_Larcher>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/leaderName",
        "predicate1_mention": "leader name",
        "predicate2_uri": "http://dbpedia.org/ontology/Country",
        "predicate2_mention": "country",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/G\u00e9rard_Larcher",
        "entity1_mention": "grard larcher",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3921",
        "question": "Name the television program voiced by Isaac Hayes and aired on Comedy Central?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Isaac_Hayes> . ?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/Comedy_Central>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/voices",
        "predicate1_mention": "voiced",
        "predicate2_uri": "http://dbpedia.org/property/network",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "television program",
        "entity1_uri": "http://dbpedia.org/resource/Isaac_Hayes",
        "entity1_mention": "isaac hayes",
        "entity2_uri": "http://dbpedia.org/resource/Comedy_Central",
        "entity2_mention": "comedy central"
    },
    {
        "id": "3922",
        "question": "Which company manufactures cars like the Opel Karl ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/related> <http://dbpedia.org/resource/Opel_Karl> . ?x <http://dbpedia.org/property/parentCompany> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/related",
        "predicate1_mention": "like",
        "predicate2_uri": "http://dbpedia.org/property/parentCompany",
        "predicate2_mention": "company",
        "type_uri": "http://dbpedia.org/ontology/Automobile",
        "type_mention": "cars",
        "entity1_uri": "http://dbpedia.org/resource/Opel_Karl",
        "entity1_mention": "opel karl",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3924",
        "question": "Name the mammals which are primate and belongs to family of ape ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Primate> . ?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Ape>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/order",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/family",
        "predicate2_mention": "family",
        "type_uri": "http://dbpedia.org/ontology/Mammal",
        "type_mention": "mammals",
        "entity1_uri": "http://dbpedia.org/resource/Primate",
        "entity1_mention": "primate",
        "entity2_uri": "http://dbpedia.org/resource/Ape",
        "entity2_mention": "ape"
    },
    {
        "id": "3926",
        "question": "How many guests have been there on broadway?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/On_Broadway_(Smash)> <http://dbpedia.org/property/guests> ?uri  . }",
        "sparql_id": "102",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/property/guests",
        "predicate1_mention": "guests",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/On_Broadway_(Smash)",
        "entity1_mention": "on broadway",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3927",
        "question": "What is the county seat of the county which has an Evergreen High School?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Evergreen_High_School_(King_County,_Washington)> <http://dbpedia.org/ontology/county> ?x . ?x <http://dbpedia.org/ontology/countySeat> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/county",
        "predicate1_mention": "county",
        "predicate2_uri": "http://dbpedia.org/ontology/countySeat",
        "predicate2_mention": "county seat",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Evergreen_High_School_(King_County,_Washington)",
        "entity1_mention": "Evergreen High School",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3928",
        "question": "What countries used Solidus as currency?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Solidus_(coin)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/currency",
        "predicate1_mention": "currency",
        "predicate2_uri": "http://dbpedia.org/ontology/Country",
        "predicate2_mention": "countries",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Solidus_(coin)",
        "entity1_mention": "solidus",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3929",
        "question": "In which areas can I find wine made of Vitis vinifera grapes?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/Vitis_vinifera> . ?x <http://dbpedia.org/ontology/wineRegion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Grape>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/species",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/wineRegion",
        "predicate2_mention": "wine",
        "type_uri": "http://dbpedia.org/ontology/Grape",
        "type_mention": "grapes",
        "entity1_uri": "http://dbpedia.org/resource/Vitis_vinifera",
        "entity1_mention": "vitis vinifera",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3930",
        "question": "In how many different teams have all those who have played as a defenceman been?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Defenceman> . ?x <http://dbpedia.org/property/playedFor> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/position",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/playedFor",
        "predicate2_mention": "played",
        "type_uri": "http://dbpedia.org/ontology/SportsTeam",
        "type_mention": "teams",
        "entity1_uri": "http://dbpedia.org/resource/Defenceman",
        "entity1_mention": "defenceman",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3931",
        "question": "Who discovered Europa and Callisto?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Europa_(moon)> <http://dbpedia.org/property/discoverer> ?uri. <http://dbpedia.org/resource/Callisto_(moon)> <http://dbpedia.org/ontology/discoverer> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/discoverer",
        "predicate1_mention": "discovered",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Europa_(moon)",
        "entity1_mention": "europa",
        "entity2_uri": "http://dbpedia.org/resource/Callisto_(moon)",
        "entity2_mention": "callisto"
    },
    {
        "id": "3932",
        "question": "List  bacterias whose orde is Bacillales and division is Firmicutes?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Bacillales> . ?uri <http://dbpedia.org/ontology/division> <http://dbpedia.org/resource/Firmicutes>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bacteria>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/order",
        "predicate1_mention": "orde",
        "predicate2_uri": "http://dbpedia.org/ontology/division",
        "predicate2_mention": "division",
        "type_uri": "http://dbpedia.org/ontology/Bacteria",
        "type_mention": "bacterias",
        "entity1_uri": "http://dbpedia.org/resource/Bacillales",
        "entity1_mention": "bacillales",
        "entity2_uri": "http://dbpedia.org/resource/Firmicutes",
        "entity2_mention": "firmicutes"
    },
    {
        "id": "3933",
        "question": "Which ceremonial County of the East Tilbury is also the local authority of the Buckhurst Hill County High School ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/East_Tilbury> <http://dbpedia.org/ontology/ceremonialCounty> ?uri. <http://dbpedia.org/resource/Buckhurst_Hill_County_High_School> <http://dbpedia.org/ontology/localAuthority> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/ceremonialCounty",
        "predicate1_mention": "ceremonial county",
        "predicate2_uri": "http://dbpedia.org/ontology/localAuthority",
        "predicate2_mention": "local authority",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/East_Tilbury",
        "entity1_mention": "east tilbury",
        "entity2_uri": "http://dbpedia.org/resource/Buckhurst_Hill_County_High_School",
        "entity2_mention": "Buckhurst Hill County High School"
    },
    {
        "id": "3934",
        "question": "What are some other destinations covered by the airlines whose flights go to the Mediterranean sea?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/destinations> <http://dbpedia.org/resource/Mediterranean_Sea> . ?x <http://dbpedia.org/ontology/destination> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/destinations",
        "predicate1_mention": "destinations",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Airline",
        "type_mention": "airlines",
        "entity1_uri": "http://dbpedia.org/resource/Mediterranean_Sea",
        "entity1_mention": "mediterranean",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3935",
        "question": "Who was buried at St. Mary's Church and fought the battle of  Benedict Arnold's expedition to Quebec ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Benedict_Arnold's_expedition_to_Quebec> . ?uri <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/St_Mary's_Church,_Battersea>  . }",
        "sparql_id": "8",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/battle",
        "predicate1_mention": "battle",
        "predicate2_uri": "http://dbpedia.org/property/placeofburial",
        "predicate2_mention": "buried at",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Benedict_Arnold's_expedition_to_Quebec",
        "entity1_mention": " Benedict Arnold's expedition to Quebec",
        "entity2_uri": "http://dbpedia.org/resource/St_Mary's_Church,_Battersea",
        "entity2_mention": "St. Mary's Church"
    },
    {
        "id": "3936",
        "question": "How many companies have developed cross platformed softwares?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/operatingSystem> <http://dbpedia.org/resource/Cross-platform> . ?x <http://dbpedia.org/ontology/developer> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/operatingSystem",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/developer",
        "predicate2_mention": "developed",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Cross-platform",
        "entity1_mention": "cross platformed",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3937",
        "question": "How many cars are the predecessor of cars similar to the Pontiac G8?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Pontiac_G8> <http://dbpedia.org/ontology/relatedMeanOfTransportation> ?x . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
        "sparql_id": "403",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/relatedMeanOfTransportation",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/predecessor",
        "predicate2_mention": "predecessor",
        "type_uri": "http://dbpedia.org/ontology/Automobile",
        "type_mention": "cars",
        "entity1_uri": "http://dbpedia.org/resource/Pontiac_G8",
        "entity1_mention": "pontiac g8",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3938",
        "question": "Was Class Conflict an interest of Karl Marx?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Karl_Marx> <http://dbpedia.org/ontology/mainInterest> <http://dbpedia.org/resource/Class_conflict> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/mainInterest",
        "predicate1_mention": "interest",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Karl_Marx",
        "entity1_mention": "karl marx",
        "entity2_uri": "http://dbpedia.org/resource/Class_conflict",
        "entity2_mention": "class conflict"
    },
    {
        "id": "3939",
        "question": "What are some famous artists who rocked a Les Paul?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Gibson_Les_Paul>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/notableInstruments",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/MusicalArtist",
        "predicate2_mention": "artists",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Gibson_Les_Paul",
        "entity1_mention": "les paul",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3940",
        "question": "Whichi office of Walter Evnas Edge is also the part of Atlantic seaboard fall lines ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Atlantic_Seaboard_fall_line> <http://dbpedia.org/ontology/part> ?uri. <http://dbpedia.org/resource/Walter_Evans_Edge> <http://dbpedia.org/property/office> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/part",
        "predicate1_mention": "part",
        "predicate2_uri": "http://dbpedia.org/property/office",
        "predicate2_mention": "office",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Atlantic_Seaboard_fall_line",
        "entity1_mention": "Atlantic seaboard fall lines",
        "entity2_uri": "http://dbpedia.org/resource/Walter_Evans_Edge",
        "entity2_mention": "walter Evnas edge"
    },
    {
        "id": "3941",
        "question": "Which new Mexico based company produces Surface ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/New_Mexico> . ?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Microsoft_Surface>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/foundation",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/product",
        "predicate2_mention": "produces",
        "type_uri": "http://dbpedia.org/ontology/Company",
        "type_mention": "company",
        "entity1_uri": "http://dbpedia.org/resource/New_Mexico",
        "entity1_mention": "new mexico",
        "entity2_uri": "http://dbpedia.org/resource/Microsoft_Surface",
        "entity2_mention": "surface"
    },
    {
        "id": "3942",
        "question": "What is the casting of the movie directed by Justin Zackham ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Justin_Zackham> . ?x <http://dbpedia.org/property/starring> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/director",
        "predicate1_mention": "directed",
        "predicate2_uri": "http://dbpedia.org/property/starring",
        "predicate2_mention": "casting",
        "type_uri": "http://dbpedia.org/ontology/Film",
        "type_mention": "movie",
        "entity1_uri": "http://dbpedia.org/resource/Justin_Zackham",
        "entity1_mention": "justin zackham",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3944",
        "question": "What are some countries where companies headquartered in the Klang Valley operate?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Klang_Valley> . ?x <http://dbpedia.org/property/country> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/headquarters",
        "predicate1_mention": "headquartered",
        "predicate2_uri": "http://dbpedia.org/property/country",
        "predicate2_mention": "countries",
        "type_uri": "http://dbpedia.org/ontology/Company",
        "type_mention": "companies",
        "entity1_uri": "http://dbpedia.org/resource/Klang_Valley",
        "entity1_mention": "klang valley",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3945",
        "question": "How many different organizations own the railway lines which are a part of Norfolk Southern Railway?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/system> <http://dbpedia.org/resource/Norfolk_Southern_Railway> . ?x <http://dbpedia.org/property/owner> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/system",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/owner",
        "predicate2_mention": "own",
        "type_uri": "http://dbpedia.org/ontology/Organisation",
        "type_mention": "organizations",
        "entity1_uri": "http://dbpedia.org/resource/Norfolk_Southern_Railway",
        "entity1_mention": "Norfolk Southern Railway",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3946",
        "question": "What is the job of the George Arceneaux, Jr. which is also the office of the Blanche Bruce",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_Arceneaux,_Jr.> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/Blanche_Bruce> <http://dbpedia.org/property/office> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/occupation",
        "predicate1_mention": "job",
        "predicate2_uri": "http://dbpedia.org/property/office",
        "predicate2_mention": "office",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/George_Arceneaux,_Jr.",
        "entity1_mention": "George Arceneaux, Jr.",
        "entity2_uri": "http://dbpedia.org/resource/Blanche_Bruce",
        "entity2_mention": "blanche bruce"
    },
    {
        "id": "3947",
        "question": "What are the party of the politicians whose deputy was Chaudhary Devi Lal?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Chaudhary_Devi_Lal> . ?x <http://dbpedia.org/ontology/otherParty> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/deputy",
        "predicate1_mention": "deputy",
        "predicate2_uri": "http://dbpedia.org/ontology/otherParty",
        "predicate2_mention": "party",
        "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
        "type_mention": "chaudhary",
        "entity1_uri": "http://dbpedia.org/resource/Chaudhary_Devi_Lal",
        "entity1_mention": "chaudhary devi lal",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3948",
        "question": "Name the street address of Rhodes Haverty Building ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rhodes-Haverty_Building> <http://dbpedia.org/property/address> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/address",
        "predicate1_mention": "address",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Rhodes-Haverty_Building",
        "entity1_mention": "rhodes haverty building",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3949",
        "question": "Which royalty's spouse is Ptolemy XIV of Egypt?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ptolemy_XIV_of_Egypt>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/spouse",
        "predicate1_mention": "spouse",
        "predicate2_uri": "http://dbpedia.org/ontology/Royalty",
        "predicate2_mention": "royalty's",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Ptolemy_XIV_of_Egypt",
        "entity1_mention": "Ptolemy XIV of Egypt",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3950",
        "question": "Which race is the  Best Mate is also the race of the Martin Molony?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Best_Mate> <http://dbpedia.org/property/race> ?uri. <http://dbpedia.org/resource/Martin_Molony> <http://dbpedia.org/ontology/race> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/race",
        "predicate1_mention": "race",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Best_Mate",
        "entity1_mention": "best mate",
        "entity2_uri": "http://dbpedia.org/resource/Martin_Molony",
        "entity2_mention": "martin molony"
    },
    {
        "id": "3951",
        "question": "List the parts of Greater San Antonio?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Greater_San_Antonio> <http://dbpedia.org/ontology/part> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/part",
        "predicate1_mention": "parts",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Greater_San_Antonio",
        "entity1_mention": "Greater San Antonio",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3954",
        "question": "List down all the baseball teams whose team manager was a Catcher?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/position> <http://dbpedia.org/resource/Catcher> . ?uri <http://dbpedia.org/ontology/manager> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballTeam>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/position",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/manager",
        "predicate2_mention": "manager",
        "type_uri": "http://dbpedia.org/ontology/BaseballTeam",
        "type_mention": "baseball team",
        "entity1_uri": "http://dbpedia.org/resource/Catcher",
        "entity1_mention": "catcher",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3955",
        "question": "Was the body of Elsie Paroubek discovered in Chicago?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Elsie_Paroubek> <http://dbpedia.org/ontology/bodyDiscovered> <http://dbpedia.org/resource/Chicago> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/bodyDiscovered",
        "predicate1_mention": "discovered",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Elsie_Paroubek",
        "entity1_mention": "elsie paroubek",
        "entity2_uri": "http://dbpedia.org/resource/Chicago",
        "entity2_mention": "chicago"
    },
    {
        "id": "3956",
        "question": "who operates the south side elevated railroad?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Side_Elevated_Railroad> <http://dbpedia.org/ontology/operatedBy> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/operatedBy",
        "predicate1_mention": "operates",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/South_Side_Elevated_Railroad",
        "entity1_mention": "south side elevated railroad",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3957",
        "question": "Did Dean Wurzberger manage a club at the santa clara university?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Dean_Wurzberger> <http://dbpedia.org/property/managerclubs> <http://dbpedia.org/resource/Santa_Clara_University> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/managerclubs",
        "predicate1_mention": "manage a club",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Dean_Wurzberger",
        "entity1_mention": "dean wurzberger",
        "entity2_uri": "http://dbpedia.org/resource/Santa_Clara_University",
        "entity2_mention": "santa clara university"
    },
    {
        "id": "3958",
        "question": "Who wrote the play in which Blanche DuBois is a character?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/characters> <http://dbpedia.org/resource/Blanche_DuBois> . ?x <http://dbpedia.org/property/writer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Play>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/characters",
        "predicate1_mention": "character",
        "predicate2_uri": "http://dbpedia.org/property/writer",
        "predicate2_mention": "wrote",
        "type_uri": "http://dbpedia.org/ontology/Play",
        "type_mention": "play",
        "entity1_uri": "http://dbpedia.org/resource/Blanche_DuBois",
        "entity1_mention": "blanche dubois",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3959",
        "question": "Which founding cities of Young Americans Bank is also the location of Denver Broncos ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Young_Americans_Bank> <http://dbpedia.org/property/foundation> ?uri. <http://dbpedia.org/resource/Denver_Broncos> <http://dbpedia.org/ontology/locationCity> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/foundation",
        "predicate1_mention": "founding",
        "predicate2_uri": "http://dbpedia.org/ontology/locationCity",
        "predicate2_mention": "location",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Young_Americans_Bank",
        "entity1_mention": "young americans",
        "entity2_uri": "http://dbpedia.org/resource/Denver_Broncos",
        "entity2_mention": "denver broncos"
    },
    {
        "id": "3960",
        "question": "What is the college of Malik Ausean which is also the college of Kyle Fuller ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Malik_Ausean_Evans> <http://dbpedia.org/ontology/college> ?uri. <http://dbpedia.org/resource/Kyle_Fuller_(basketball)> <http://dbpedia.org/property/college> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/college",
        "predicate1_mention": "college",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Malik_Ausean_Evans",
        "entity1_mention": "malik ausean",
        "entity2_uri": "http://dbpedia.org/resource/Kyle_Fuller_(basketball)",
        "entity2_mention": "kyle fuller"
    },
    {
        "id": "3961",
        "question": "Name the university with affiliations as Graham Holdings Company and campus at Indiana?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Graham_Holdings_Company> . ?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Indiana>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/affiliations",
        "predicate1_mention": "affiliations",
        "predicate2_uri": "http://dbpedia.org/ontology/campus",
        "predicate2_mention": "campus",
        "type_uri": "http://dbpedia.org/ontology/University",
        "type_mention": "university",
        "entity1_uri": "http://dbpedia.org/resource/Graham_Holdings_Company",
        "entity1_mention": "Graham Holdings Company",
        "entity2_uri": "http://dbpedia.org/resource/Indiana",
        "entity2_mention": "indiana"
    },
    {
        "id": "3963",
        "question": "Is the hyundai elantra related to hyundai lavita?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hyundai_Lavita> <http://dbpedia.org/ontology/relatedMeanOfTransportation> <http://dbpedia.org/resource/Hyundai_Elantra> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/relatedMeanOfTransportation",
        "predicate1_mention": "related",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Hyundai_Lavita",
        "entity1_mention": "hyundai lavita",
        "entity2_uri": "http://dbpedia.org/resource/Hyundai_Elantra",
        "entity2_mention": "hyundai elantra"
    },
    {
        "id": "3964",
        "question": "Who designed the stadiums which have been rented by Oakland athletics?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Oakland_Athletics> . ?x <http://dbpedia.org/property/architect> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/tenant",
        "predicate1_mention": "rented",
        "predicate2_uri": "http://dbpedia.org/property/architect",
        "predicate2_mention": "athletics",
        "type_uri": "http://dbpedia.org/ontology/Stadium",
        "type_mention": "stadiums",
        "entity1_uri": "http://dbpedia.org/resource/Oakland_Athletics",
        "entity1_mention": "oakland athletics",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3965",
        "question": "Which team did Michael and Ryan Powell play for?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Powell_(lacrosse)> <http://dbpedia.org/ontology/team> ?uri. <http://dbpedia.org/resource/Ryan_Powell_(lacrosse)> <http://dbpedia.org/ontology/team> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/team",
        "predicate1_mention": "team",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Michael_Powell_(lacrosse)",
        "entity1_mention": "michael",
        "entity2_uri": "http://dbpedia.org/resource/Ryan_Powell_(lacrosse)",
        "entity2_mention": "ryan powell"
    },
    {
        "id": "3966",
        "question": "How many different people have been in any political seat in places which are under the Indian Standard timezone?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Indian_Standard_Time> . ?x <http://dbpedia.org/ontology/leaderName> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/timeZone",
        "predicate1_mention": "timezone",
        "predicate2_uri": "http://dbpedia.org/ontology/leaderName",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Indian_Standard_Time",
        "entity1_mention": "indian standard timezone",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3967",
        "question": "Who manufactured the Delta III and the Space Shuttle?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Delta_III> <http://dbpedia.org/ontology/manufacturer> ?uri. <http://dbpedia.org/resource/Space_Shuttle> <http://dbpedia.org/ontology/manufacturer> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/manufacturer",
        "predicate1_mention": "manufactured",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Delta_III",
        "entity1_mention": "delta iii",
        "entity2_uri": "http://dbpedia.org/resource/Space_Shuttle",
        "entity2_mention": "space shuttle"
    },
    {
        "id": "3968",
        "question": "Which nation hosts the WTA Tour Championships?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WTA_Tour_Championships> <http://dbpedia.org/property/country> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/country",
        "predicate1_mention": "tour",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/WTA_Tour_Championships",
        "entity1_mention": " the wta tour championships",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3970",
        "question": "Bridges over which rivers are made of Wrought Iron?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/material> <http://dbpedia.org/resource/Wrought_iron> . ?x <http://dbpedia.org/ontology/river> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/material",
        "predicate1_mention": "made",
        "predicate2_uri": "http://dbpedia.org/ontology/river",
        "predicate2_mention": "rivers",
        "type_uri": "http://dbpedia.org/ontology/Bridge",
        "type_mention": "bridges",
        "entity1_uri": "http://dbpedia.org/resource/Wrought_iron",
        "entity1_mention": "wrought iron",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3971",
        "question": "Give me the total number of lines owned by owner of Mwtro-Noth Railroad ?",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/owner> <http://dbpedia.org/resource/Metro-North_Railroad> . ?x <http://dbpedia.org/property/owner> ?uri }",
        "sparql_id": "111",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/owner",
        "predicate1_mention": "owner",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Metro-North_Railroad",
        "entity1_mention": "Mwtro-Noth Railroad",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3972",
        "question": "Where was Liliya Lobanova born?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Liliya_Lobanova> <http://dbpedia.org/property/birthplace> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/birthplace",
        "predicate1_mention": "born",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Liliya_Lobanova",
        "entity1_mention": "liliya lobanova",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3973",
        "question": "Count the different genres of music made by Argentinian bands?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Argentina> . ?x <http://dbpedia.org/ontology/genre> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicGenre>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/hometown",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/genre",
        "predicate2_mention": "genres",
        "type_uri": "http://dbpedia.org/ontology/MusicGenre",
        "type_mention": "music",
        "entity1_uri": "http://dbpedia.org/resource/Argentina",
        "entity1_mention": "Argentinian",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3975",
        "question": "Laozi authored which book?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Laozi> } ",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/author",
        "predicate1_mention": "authored",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Laozi",
        "entity1_mention": "laozi",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3976",
        "question": "How many head of agencies were there in Nazi Germany?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/jurisdiction> <http://dbpedia.org/resource/Nazi_Germany> . ?x <http://dbpedia.org/ontology/leader> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/jurisdiction",
        "predicate1_mention": "agencies",
        "predicate2_uri": "http://dbpedia.org/ontology/leader",
        "predicate2_mention": "head",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Nazi_Germany",
        "entity1_mention": "nazi germany",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3977",
        "question": "Which nickname of Lyons Township High school is also the mascot of Galatasaray Handball Team ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Galatasaray_Handball_Team> <http://dbpedia.org/property/mascot> ?uri. <http://dbpedia.org/resource/Lyons_Township_High_School> <http://dbpedia.org/property/nickname> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/mascot",
        "predicate1_mention": "mascot",
        "predicate2_uri": "http://dbpedia.org/property/nickname",
        "predicate2_mention": "nickname",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Galatasaray_Handball_Team",
        "entity1_mention": "galatasaray handball team",
        "entity2_uri": "http://dbpedia.org/resource/Lyons_Township_High_School",
        "entity2_mention": "Lyons Township High school"
    },
    {
        "id": "3978",
        "question": "Who wrote the play in which a character called Stella Kowalski exists?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/characters> <http://dbpedia.org/resource/Stella_Kowalski> . ?x <http://dbpedia.org/property/writer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Play>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/characters",
        "predicate1_mention": "character",
        "predicate2_uri": "http://dbpedia.org/property/writer",
        "predicate2_mention": "wrote",
        "type_uri": "http://dbpedia.org/ontology/Play",
        "type_mention": "play",
        "entity1_uri": "http://dbpedia.org/resource/Stella_Kowalski",
        "entity1_mention": "stella kowalski",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3979",
        "question": "Which award is presented by Downtown Athletic Club?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Downtown_Athletic_Club>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/presenter",
        "predicate1_mention": "presented",
        "predicate2_uri": "http://dbpedia.org/ontology/Award",
        "predicate2_mention": "award",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Downtown_Athletic_Club",
        "entity1_mention": "downtown athletic club",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3980",
        "question": "What are the largest cities in each of the destinations of TranStar Airlines?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/TranStar_Airlines> <http://dbpedia.org/ontology/destination> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/destination",
        "predicate1_mention": "destinations",
        "predicate2_uri": "http://dbpedia.org/ontology/largestCity",
        "predicate2_mention": "largest cities",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/TranStar_Airlines",
        "entity1_mention": "transtar airlines",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3982",
        "question": "What islands are there on the Greater Antilles archipelago?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/archipelago> <http://dbpedia.org/resource/Greater_Antilles> . ?x <http://dbpedia.org/property/name> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Island>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/archipelago",
        "predicate1_mention": "archipelago",
        "predicate2_uri": "http://dbpedia.org/property/name",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Island",
        "type_mention": "islands",
        "entity1_uri": "http://dbpedia.org/resource/Greater_Antilles",
        "entity1_mention": "the greater antilles archipelago",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3983",
        "question": "How many things belong to phylum of Chordate?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/phylum> <http://dbpedia.org/resource/Chordate>  . }",
        "sparql_id": "101",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/ontology/phylum",
        "predicate1_mention": "phylum",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Chordate",
        "entity1_mention": "chordate",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3984",
        "question": "What units are garrisoned in the Pentagon?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/garrison> <http://dbpedia.org/resource/The_Pentagon>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/garrison",
        "predicate1_mention": "garrisoned",
        "predicate2_uri": "http://dbpedia.org/ontology/MilitaryUnit",
        "predicate2_mention": "units",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/The_Pentagon",
        "entity1_mention": "the pentagon",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3985",
        "question": "Which Tv led to Frasier?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Frasier>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/subsequentWork",
        "predicate1_mention": "led to",
        "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "predicate2_mention": "tv",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Frasier",
        "entity1_mention": "frasier",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3986",
        "question": "Count the number of people became famous for when Andrew Jackson was a commander ?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Andrew_Jackson> . ?uri <http://dbpedia.org/ontology/knownFor> ?x  . }",
        "sparql_id": "106",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/commander",
        "predicate1_mention": "commander",
        "predicate2_uri": "http://dbpedia.org/ontology/knownFor",
        "predicate2_mention": "famous for",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Andrew_Jackson",
        "entity1_mention": "andrew jackson",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3988",
        "question": "Was A Jitney Elopement edited by Charlie Chaplin?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/A_Jitney_Elopement> <http://dbpedia.org/ontology/editing> <http://dbpedia.org/resource/Charlie_Chaplin> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/editing",
        "predicate1_mention": "edited",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/A_Jitney_Elopement",
        "entity1_mention": "jitney elopement",
        "entity2_uri": "http://dbpedia.org/resource/Charlie_Chaplin",
        "entity2_mention": "charlie chaplin"
    },
    {
        "id": "3989",
        "question": "Which rivers flow into the lower manhatten?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Lower_Manhattan> } ",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/mouthMountain",
        "predicate1_mention": "manhatten",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Lower_Manhattan",
        "entity1_mention": "lower manhatten",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3990",
        "question": "What is the nationality of the entomologist who is a renowned authority of Smerinthus saliceti ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Smerinthus_saliceti> <http://dbpedia.org/ontology/binomialAuthority> ?x . ?x <http://dbpedia.org/ontology/citizenship> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Entomologist>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/binomialAuthority",
        "predicate1_mention": "authority",
        "predicate2_uri": "http://dbpedia.org/ontology/citizenship",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Entomologist",
        "type_mention": "entomologist",
        "entity1_uri": "http://dbpedia.org/resource/Smerinthus_saliceti",
        "entity1_mention": "smerinthus saliceti",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3992",
        "question": "Does Walson Augustin play as a midfielder?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Walson_Augustin> <http://dbpedia.org/ontology/position> <http://dbpedia.org/resource/Midfielder> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/position",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Walson_Augustin",
        "entity1_mention": "walson augustin",
        "entity2_uri": "http://dbpedia.org/resource/Midfielder",
        "entity2_mention": "midfielder"
    },
    {
        "id": "3994",
        "question": "List the home town of the bands whose label is Alive Naturalsound Records ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Alive_Naturalsound_Records> . ?x <http://dbpedia.org/ontology/hometown> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/label",
        "predicate1_mention": "label",
        "predicate2_uri": "http://dbpedia.org/ontology/hometown",
        "predicate2_mention": "home town",
        "type_uri": "http://dbpedia.org/ontology/Band",
        "type_mention": "bands",
        "entity1_uri": "http://dbpedia.org/resource/Alive_Naturalsound_Records",
        "entity1_mention": "Alive Naturalsound Records",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3995",
        "question": "What is the draft team of the Antoine Bibeau and also has player named Nathan Dempsey ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Antoine_Bibeau> <http://dbpedia.org/property/draftTeam> ?uri. <http://dbpedia.org/resource/Nathan_Dempsey> <http://dbpedia.org/property/playedFor> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/draftTeam",
        "predicate1_mention": "draft team",
        "predicate2_uri": "http://dbpedia.org/property/playedFor",
        "predicate2_mention": "player",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Antoine_Bibeau",
        "entity1_mention": "antoine bibeau",
        "entity2_uri": "http://dbpedia.org/resource/Nathan_Dempsey",
        "entity2_mention": "nathan dempsey"
    },
    {
        "id": "3996",
        "question": "What is the draft team of Antoine Bibeau ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Antoine_Bibeau> <http://dbpedia.org/property/draftTeam> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/draftTeam",
        "predicate1_mention": "draft team",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Antoine_Bibeau",
        "entity1_mention": "antoine bibeau",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3997",
        "question": "What is the location city of Burnside Distribution Corporation ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Burnside_Distribution_Corporation> <http://dbpedia.org/ontology/locationCity> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/locationCity",
        "predicate1_mention": "location",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Burnside_Distribution_Corporation",
        "entity1_mention": "Burnside Distribution Corporation",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3998",
        "question": "How many movies have their music signed up with Sony Music Entertainment.",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/Sony_Music_Entertainment> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "406",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/recordLabel",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/musicComposer",
        "predicate2_mention": "signed up with",
        "type_uri": "http://dbpedia.org/ontology/Film",
        "type_mention": "movies",
        "entity1_uri": "http://dbpedia.org/resource/Sony_Music_Entertainment",
        "entity1_mention": "Sony Music Entertainment",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "3999",
        "question": "Name the place of Qaqun ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Qaqun> <http://dbpedia.org/property/place> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/place",
        "predicate1_mention": "place",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Qaqun",
        "entity1_mention": "qaqun",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4001",
        "question": "What is the publisher of Lucifer's Hammer ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lucifer's_Hammer> <http://dbpedia.org/ontology/publisher> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/publisher",
        "predicate1_mention": "publisher",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Lucifer's_Hammer",
        "entity1_mention": "lucifer's hammer",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4002",
        "question": "The Information: A History, a Theory, a Flood is a work of Isaac Newton?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Information:_A_History,_a_Theory,_a_Flood> <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/Isaac_Newton> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/previousWork",
        "predicate1_mention": "work",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/The_Information:_A_History,_a_Theory,_a_Flood",
        "entity1_mention": "The Information: A History, a Theory, a Flood",
        "entity2_uri": "http://dbpedia.org/resource/Isaac_Newton",
        "entity2_mention": "isaac newton"
    },
    {
        "id": "4003",
        "question": "To which branch Edwin F. Hunter  belong ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Edwin_F._Hunter> <http://dbpedia.org/property/branch> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/branch",
        "predicate1_mention": "branch",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Edwin_F._Hunter",
        "entity1_mention": "Edwin F. Hunter",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4004",
        "question": "Who are some cofounders of record labels with Frank Rogers?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Frank_Rogers_(record_producer)> . ?x <http://dbpedia.org/property/founder> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RecordLabel>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/foundedBy",
        "predicate1_mention": "cofounders",
        "predicate2_uri": "http://dbpedia.org/property/founder",
        "predicate2_mention": "cofounders",
        "type_uri": "http://dbpedia.org/ontology/RecordLabel",
        "type_mention": "record labels",
        "entity1_uri": "http://dbpedia.org/resource/Frank_Rogers_(record_producer)",
        "entity1_mention": "Frank Rogers",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4005",
        "question": "Which river's mouth location is Laptev Sea and also Arctic Ocean?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Laptev_Sea> . ?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Arctic_Ocean> . }",
        "sparql_id": "7",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/mouthLocation",
        "predicate1_mention": "mouth location",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Laptev_Sea",
        "entity1_mention": "laptev sea",
        "entity2_uri": "http://dbpedia.org/resource/Arctic_Ocean",
        "entity2_mention": "arctic ocean"
    },
    {
        "id": "4006",
        "question": "What are some devices whose manufacturers are in taiwan?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/locationCountry> <http://dbpedia.org/resource/Taiwan> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Device>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/locationCountry",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
        "predicate2_mention": "manufacturers",
        "type_uri": "http://dbpedia.org/ontology/Device",
        "type_mention": "devices",
        "entity1_uri": "http://dbpedia.org/resource/Taiwan",
        "entity1_mention": "taiwan",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4008",
        "question": "was james watt a mechanical engineer?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/James_Watt> <http://dbpedia.org/ontology/field> <http://dbpedia.org/resource/Mechanical_engineering> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/field",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/James_Watt",
        "entity1_mention": "james watt",
        "entity2_uri": "http://dbpedia.org/resource/Mechanical_engineering",
        "entity2_mention": "mechanical engineer"
    },
    {
        "id": "4009",
        "question": "Who is known for are Battle of the Thames and War of 1812?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Battle_of_the_Thames> . ?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/War_of_1812> . }",
        "sparql_id": "7",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/knownFor",
        "predicate1_mention": "known for",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Battle_of_the_Thames",
        "entity1_mention": "Battle of the Thames",
        "entity2_uri": "http://dbpedia.org/resource/War_of_1812",
        "entity2_mention": "War of 1812"
    },
    {
        "id": "4010",
        "question": "How many groups speak the English Language?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/languages> <http://dbpedia.org/resource/English_language>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}",
        "sparql_id": "401",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/property/languages",
        "predicate1_mention": "language",
        "predicate2_uri": "http://dbpedia.org/ontology/EthnicGroup",
        "predicate2_mention": "groups",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/English_language",
        "entity1_mention": "english language",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4011",
        "question": "How many owners are there of lines starting at the South Station?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/routeStart> <http://dbpedia.org/resource/South_Station> . ?x <http://dbpedia.org/property/owner> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/routeStart",
        "predicate1_mention": "starting",
        "predicate2_uri": "http://dbpedia.org/property/owner",
        "predicate2_mention": "owners",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/South_Station",
        "entity1_mention": "station",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4012",
        "question": "which person created the women in the garden?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Women_in_the_Garden> <http://dbpedia.org/property/artist> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/artist",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Women_in_the_Garden",
        "entity1_mention": "women in the garden",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4013",
        "question": "Name the basketball players drafted by Los Angeles Clippers ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/draftTeam> <http://dbpedia.org/resource/Los_Angeles_Clippers>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/draftTeam",
        "predicate1_mention": "drafted",
        "predicate2_uri": "http://dbpedia.org/ontology/BasketballPlayer",
        "predicate2_mention": "basketball players",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Los_Angeles_Clippers",
        "entity1_mention": " los angeles clippers",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4015",
        "question": "Where is the mouth of the river whose tributary is Bjelimi\u0107ka  Rijeka ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/rightTributary> <http://dbpedia.org/resource/Bjelimi\u0107ka_Rijeka> . ?x <http://dbpedia.org/ontology/mouthCountry> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/rightTributary",
        "predicate1_mention": "tributary",
        "predicate2_uri": "http://dbpedia.org/ontology/mouthCountry",
        "predicate2_mention": "mouth",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Bjelimi\u0107ka_Rijeka",
        "entity1_mention": "bjelimi\u0107ka rijeka",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4016",
        "question": "Who is the artist of Time Radio hour ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Theme_Time_Radio_Hour> <http://dbpedia.org/property/creator> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/creator",
        "predicate1_mention": "artist",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Theme_Time_Radio_Hour",
        "entity1_mention": "Time Radio hour",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4017",
        "question": "How many prime ministers did the predecessor of Duncan Sandys  serve?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Duncan_Sandys> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/property/primeminister> ?uri  . }",
        "sparql_id": "103",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/successor",
        "predicate1_mention": "predecessor",
        "predicate2_uri": "http://dbpedia.org/property/primeminister",
        "predicate2_mention": "prime ministers",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Duncan_Sandys",
        "entity1_mention": "duncan sandys",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4019",
        "question": "Which river flows through Central Washington?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Central_Washington> <http://dbpedia.org/ontology/river> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/river",
        "predicate1_mention": "river",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Central_Washington",
        "entity1_mention": "central washington",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4020",
        "question": "Who is the scientist whose academic advisor is Franz Brentano?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/Franz_Brentano>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/academicAdvisor",
        "predicate1_mention": "academic advisor",
        "predicate2_uri": "http://dbpedia.org/ontology/Scientist",
        "predicate2_mention": "scientist",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Franz_Brentano",
        "entity1_mention": "franz brentano",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4022",
        "question": "Tandem Computers is the subsidiary of which company?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Tandem_Computers> } ",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/subsidiary",
        "predicate1_mention": "subsidiary",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Tandem_Computers",
        "entity1_mention": "tandem computers",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4023",
        "question": "Which settelment area is the home town of the Danny Felice and Cline Buckens?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Danny_Felice> <http://dbpedia.org/ontology/hometown> ?uri. <http://dbpedia.org/resource/C\u00e9line_Buckens> <http://dbpedia.org/ontology/hometown> ?uri . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}",
        "sparql_id": "315",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/hometown",
        "predicate1_mention": "home town",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Settlement",
        "type_mention": "settelment",
        "entity1_uri": "http://dbpedia.org/resource/Danny_Felice",
        "entity1_mention": "danny felice",
        "entity2_uri": "http://dbpedia.org/resource/C\u00e9line_Buckens",
        "entity2_mention": "buckens"
    },
    {
        "id": "4024",
        "question": "Name the office holder who has a child named Lori Black and resting place is Alta Mesa Memorial Park?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Lori_Black> . ?uri <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Alta_Mesa_Memorial_Park>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/child",
        "predicate1_mention": "child",
        "predicate2_uri": "http://dbpedia.org/property/restingPlace",
        "predicate2_mention": "resting place",
        "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
        "type_mention": "office holder",
        "entity1_uri": "http://dbpedia.org/resource/Lori_Black",
        "entity1_mention": "lori black",
        "entity2_uri": "http://dbpedia.org/resource/Alta_Mesa_Memorial_Park",
        "entity2_mention": "Alta Mesa Memorial Park"
    },
    {
        "id": "4025",
        "question": "Who appointed the successor of Thomas Bee?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thomas_Bee> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/property/appointer> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/successor",
        "predicate1_mention": "successor",
        "predicate2_uri": "http://dbpedia.org/property/appointer",
        "predicate2_mention": "appointed",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Thomas_Bee",
        "entity1_mention": "thomas bee",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4026",
        "question": "What is the home town of the Band which is the previous work of Sammy Hagar & Friends ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sammy_Hagar_&_Friends> <http://dbpedia.org/ontology/previousWork> ?x . ?x <http://dbpedia.org/ontology/hometown> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/previousWork",
        "predicate1_mention": "previous work",
        "predicate2_uri": "http://dbpedia.org/ontology/hometown",
        "predicate2_mention": "home town",
        "type_uri": "http://dbpedia.org/ontology/Band",
        "type_mention": "band",
        "entity1_uri": "http://dbpedia.org/resource/Sammy_Hagar_&_Friends",
        "entity1_mention": "Sammy Hagar & Friends",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4028",
        "question": "Which person constituency is Duboce Triangle, San Francisco and military unit is USS Kittiwake (ASR-13)?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco> . ?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/USS_Kittiwake_(ASR-13)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/constituency",
        "predicate1_mention": "constituency",
        "predicate2_uri": "http://dbpedia.org/ontology/militaryUnit",
        "predicate2_mention": "military unit",
        "type_uri": "http://dbpedia.org/ontology/Person",
        "type_mention": "person",
        "entity1_uri": "http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco",
        "entity1_mention": "Duboce Triangle, San Francisco",
        "entity2_uri": "http://dbpedia.org/resource/USS_Kittiwake_(ASR-13)",
        "entity2_mention": "USS Kittiwake (ASR-13)"
    },
    {
        "id": "4030",
        "question": "Is Ethics the main interests of Henry David Thoreau?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Henry_David_Thoreau> <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/Ethics> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/mainInterests",
        "predicate1_mention": "main interests",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Henry_David_Thoreau",
        "entity1_mention": "Henry David Thoreau",
        "entity2_uri": "http://dbpedia.org/resource/Ethics",
        "entity2_mention": "ethics"
    },
    {
        "id": "4031",
        "question": "Name the other party of Chandra Shekhar ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chandra_Shekhar> <http://dbpedia.org/ontology/otherParty> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/otherParty",
        "predicate1_mention": "other party",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Chandra_Shekhar",
        "entity1_mention": "chandra shekhar",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4032",
        "question": "How many people are buried in Arlington National Cemetery?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/Arlington_National_Cemetery>  . }",
        "sparql_id": "101",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/property/placeofburial",
        "predicate1_mention": "buried in",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Arlington_National_Cemetery",
        "entity1_mention": "arlington national cemetery",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4034",
        "question": "Which animator of Tommy Tucker's Tooth is also the film director of Alice's Wonderland ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alice's_Wonderland> <http://dbpedia.org/ontology/director> ?uri. <http://dbpedia.org/resource/Tommy_Tucker's_Tooth> <http://dbpedia.org/property/animator> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/director",
        "predicate1_mention": "director",
        "predicate2_uri": "http://dbpedia.org/property/animator",
        "predicate2_mention": "animator",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Alice's_Wonderland",
        "entity1_mention": "alice's wonderland",
        "entity2_uri": "http://dbpedia.org/resource/Tommy_Tucker's_Tooth",
        "entity2_mention": "Tommy Tucker's Tooth"
    },
    {
        "id": "4035",
        "question": "What was created by Larry David and Jerry Seinfeld?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Larry_David> . ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Jerry_Seinfeld> . }",
        "sparql_id": "7",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/creator",
        "predicate1_mention": "created",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Larry_David",
        "entity1_mention": "larry david",
        "entity2_uri": "http://dbpedia.org/resource/Jerry_Seinfeld",
        "entity2_mention": "jerry seinfeld"
    },
    {
        "id": "4036",
        "question": "Which license of the Microsoft Office Picture Manager is also the  product of the Apple Productivity Experience Group ",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Microsoft_Office_Picture_Manager> <http://dbpedia.org/ontology/license> ?uri. <http://dbpedia.org/resource/Apple_Productivity_Experience_Group> <http://dbpedia.org/ontology/product> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/license",
        "predicate1_mention": "license",
        "predicate2_uri": "http://dbpedia.org/ontology/product",
        "predicate2_mention": "product",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Microsoft_Office_Picture_Manager",
        "entity1_mention": "microsoft office picture manager",
        "entity2_uri": "http://dbpedia.org/resource/Apple_Productivity_Experience_Group",
        "entity2_mention": "Apple Productivity Experience Group"
    },
    {
        "id": "4037",
        "question": "Who does Cam PLante plays for ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cam_Plante> <http://dbpedia.org/property/playedFor> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/playedFor",
        "predicate1_mention": "plays for",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Cam_Plante",
        "entity1_mention": "cam plante",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4038",
        "question": "For everyone who died in paris, count their different fields of work.",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Paris> . ?x <http://dbpedia.org/property/fields> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/deathPlace",
        "predicate1_mention": "died in",
        "predicate2_uri": "http://dbpedia.org/property/fields",
        "predicate2_mention": "fields",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Paris",
        "entity1_mention": "paris",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4039",
        "question": "Is the Caterpullar 797F assembled in North America?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Caterpillar_797F> <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/North_America> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/assembly",
        "predicate1_mention": "assembled",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Caterpillar_797F",
        "entity1_mention": "Caterpullar 797F",
        "entity2_uri": "http://dbpedia.org/resource/North_America",
        "entity2_mention": "north america"
    },
    {
        "id": "4040",
        "question": "Michael Deeley produce how many movies?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Michael_Deeley>  . }",
        "sparql_id": "101",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/ontology/producer",
        "predicate1_mention": "produce",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Michael_Deeley",
        "entity1_mention": "michael deeley",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4041",
        "question": "Was tupac a member of Outlawz?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Outlawz> <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Tupac_Shakur> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/pastMembers",
        "predicate1_mention": "member",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Outlawz",
        "entity1_mention": "outlawz",
        "entity2_uri": "http://dbpedia.org/resource/Tupac_Shakur",
        "entity2_mention": "tupac"
    },
    {
        "id": "4043",
        "question": "Does Beth Tweddle play for the City of Liverpool gymnast club?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Beth_Tweddle> <http://dbpedia.org/property/club> <http://dbpedia.org/resource/City_of_Liverpool_Gymnastics_Club> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/club",
        "predicate1_mention": "club",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Beth_Tweddle",
        "entity1_mention": "beth tweddle",
        "entity2_uri": "http://dbpedia.org/resource/City_of_Liverpool_Gymnastics_Club",
        "entity2_mention": "city of liverpool gymnast club"
    },
    {
        "id": "4044",
        "question": "List all the hubs of the airline whose one of the hub is Subang , Indonesia ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/hubs> <http://dbpedia.org/resource/Subang,_Indonesia> . ?x <http://dbpedia.org/property/hubs> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/hubs",
        "predicate1_mention": "hubs",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Airline",
        "type_mention": "airline",
        "entity1_uri": "http://dbpedia.org/resource/Subang,_Indonesia",
        "entity1_mention": "Subang , Indonesia",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4046",
        "question": "To which counties do Jerome avenue and Tremont avenue belong?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerome_Avenue> <http://dbpedia.org/property/counties> ?uri. <http://dbpedia.org/resource/Tremont_Avenue> <http://dbpedia.org/property/counties> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/counties",
        "predicate1_mention": "counties",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Jerome_Avenue",
        "entity1_mention": "jerome avenue",
        "entity2_uri": "http://dbpedia.org/resource/Tremont_Avenue",
        "entity2_mention": "tremont avenue"
    },
    {
        "id": "4047",
        "question": "Was Krzystof Wielicki the first person that ascended the mt everest?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mount_Everest> <http://dbpedia.org/ontology/firstAscentPerson> <http://dbpedia.org/resource/Krzysztof_Wielicki> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/firstAscentPerson",
        "predicate1_mention": "the first person that ascended",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Mount_Everest",
        "entity1_mention": "mt everest",
        "entity2_uri": "http://dbpedia.org/resource/Krzysztof_Wielicki",
        "entity2_mention": "Krzystof wielicki"
    },
    {
        "id": "4048",
        "question": "List the sports played in private universities.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Private_university> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/type",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/sport",
        "predicate2_mention": "sports",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Private_university",
        "entity1_mention": "private universities",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4049",
        "question": "Pointe d'Aveneyre belongs to which mountain range?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pointe_d'Aveneyre> <http://dbpedia.org/ontology/mountainRange> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/mountainRange",
        "predicate1_mention": "mountain range",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Pointe_d'Aveneyre",
        "entity1_mention": "pointe d'aveneyre",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4050",
        "question": "Which currency is used by the record label of the Way to Your Heart?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Way_to_Your_Heart> <http://dbpedia.org/ontology/recordLabel> ?x . ?x <http://dbpedia.org/property/currency> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/recordLabel",
        "predicate1_mention": "record label",
        "predicate2_uri": "http://dbpedia.org/property/currency",
        "predicate2_mention": "currency",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/The_Way_to_Your_Heart",
        "entity1_mention": "the Way to Your Heart",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4051",
        "question": "Who is the office holder whose resting place is Monticello?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Monticello>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/restingPlace",
        "predicate1_mention": "resting place",
        "predicate2_uri": "http://dbpedia.org/ontology/OfficeHolder",
        "predicate2_mention": "office holder",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Monticello",
        "entity1_mention": "monticello",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4052",
        "question": "Name the president whose had relatives in Clinton family and lieutenant named Joe Purcell?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Clinton_family> . ?uri <http://dbpedia.org/ontology/lieutenant> <http://dbpedia.org/resource/Joe_Purcell>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/relation",
        "predicate1_mention": "relatives",
        "predicate2_uri": "http://dbpedia.org/ontology/lieutenant",
        "predicate2_mention": "lieutenant",
        "type_uri": "http://dbpedia.org/ontology/President",
        "type_mention": "president",
        "entity1_uri": "http://dbpedia.org/resource/Clinton_family",
        "entity1_mention": "clinton family",
        "entity2_uri": "http://dbpedia.org/resource/Joe_Purcell",
        "entity2_mention": "joe purcell"
    },
    {
        "id": "4053",
        "question": "Where is the tombstone of the successor of Edward Wolcott?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Edward_O._Wolcott> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/successor",
        "predicate1_mention": "successor",
        "predicate2_uri": "http://dbpedia.org/ontology/restingPlace",
        "predicate2_mention": "tombstone",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Edward_O._Wolcott",
        "entity1_mention": "edward wolcott",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4054",
        "question": "Who are the associated musical artist of Carolyn Dennis?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Carolyn_Dennis> <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "predicate1_mention": "associated musical artist",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Carolyn_Dennis",
        "entity1_mention": "carolyn dennis",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4055",
        "question": "Who parent organization of Get TV is also the label provider of I Pray on CHristmas ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/I_Pray_on_Christmas> <http://dbpedia.org/property/label> ?uri. <http://dbpedia.org/resource/GetTV> <http://dbpedia.org/ontology/parentOrganisation> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/label",
        "predicate1_mention": "label",
        "predicate2_uri": "http://dbpedia.org/ontology/parentOrganisation",
        "predicate2_mention": "parent organization",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/I_Pray_on_Christmas",
        "entity1_mention": "I Pray on CHristmas",
        "entity2_uri": "http://dbpedia.org/resource/GetTV",
        "entity2_mention": "get tv"
    },
    {
        "id": "4056",
        "question": "What is the resting place of the engineer who was the architect of Plaza on DeWitt?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Plaza_on_DeWitt> <http://dbpedia.org/ontology/architect> ?x . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/architect",
        "predicate1_mention": "architect",
        "predicate2_uri": "http://dbpedia.org/ontology/restingPlace",
        "predicate2_mention": "resting place",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Plaza_on_DeWitt",
        "entity1_mention": "Plaza on DeWitt",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4058",
        "question": "What is the game whose genre is Mind sport?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Mind_sport>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Game>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/genre",
        "predicate1_mention": "genre",
        "predicate2_uri": "http://dbpedia.org/ontology/Game",
        "predicate2_mention": "game",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Mind_sport",
        "entity1_mention": "mind sport",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4059",
        "question": "How many awards have graduates from the University of Queensland earned?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Queensland> . ?x <http://dbpedia.org/property/awards> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/almaMater",
        "predicate1_mention": "graduates",
        "predicate2_uri": "http://dbpedia.org/property/awards",
        "predicate2_mention": "awards",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/University_of_Queensland",
        "entity1_mention": "university of queensland",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4060",
        "question": "How many other architect are there of the historic places whose architect is also Stanford White ?",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Stanford_White> . ?x <http://dbpedia.org/ontology/architect> ?uri }",
        "sparql_id": "111",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/architect",
        "predicate1_mention": "architect",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Stanford_White",
        "entity1_mention": "stanford white",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4062",
        "question": "Name the television show whose theme music is composed by Julian Gingell and broadcasted on FOX ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Julian_Gingell> . ?uri <http://dbpedia.org/property/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/themeMusicComposer",
        "predicate1_mention": "composed by",
        "predicate2_uri": "http://dbpedia.org/property/channel",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "television show",
        "entity1_uri": "http://dbpedia.org/resource/Julian_Gingell",
        "entity1_mention": "julian gingell",
        "entity2_uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company",
        "entity2_mention": "FOX"
    },
    {
        "id": "4063",
        "question": "What cities are around the valley bordering Lake Mead?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/border> <http://dbpedia.org/resource/Lake_Mead> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Valley>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/border",
        "predicate1_mention": "bordering",
        "predicate2_uri": "http://dbpedia.org/ontology/city",
        "predicate2_mention": "cities",
        "type_uri": "http://dbpedia.org/ontology/Valley",
        "type_mention": "valley",
        "entity1_uri": "http://dbpedia.org/resource/Lake_Mead",
        "entity1_mention": "lake mead",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4064",
        "question": "Who wrote A house not meant to stand and Akale?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/A_House_Not_Meant_to_Stand> <http://dbpedia.org/property/writer> ?uri. <http://dbpedia.org/resource/Akale> <http://dbpedia.org/ontology/writer> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/writer",
        "predicate1_mention": "wrote",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/A_House_Not_Meant_to_Stand",
        "entity1_mention": "A house not meant to stand",
        "entity2_uri": "http://dbpedia.org/resource/Akale",
        "entity2_mention": "akale"
    },
    {
        "id": "4065",
        "question": "Through which important cities the does the river originating from the Duwamish, flow?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Green_River_(Duwamish_River)> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/source",
        "predicate1_mention": "originating from",
        "predicate2_uri": "http://dbpedia.org/ontology/city",
        "predicate2_mention": "cities",
        "type_uri": "http://dbpedia.org/ontology/River",
        "type_mention": "river",
        "entity1_uri": "http://dbpedia.org/resource/Green_River_(Duwamish_River)",
        "entity1_mention": "Duwamish",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4066",
        "question": "The fugitive Kind and the Notebook of Trigorin is written by what author?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Fugitive_Kind> <http://dbpedia.org/property/writer> ?uri. <http://dbpedia.org/resource/The_Notebook_of_Trigorin> <http://dbpedia.org/ontology/author> ?uri . }",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/writer",
        "predicate1_mention": "written",
        "predicate2_uri": "http://dbpedia.org/ontology/author",
        "predicate2_mention": "author",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/The_Fugitive_Kind",
        "entity1_mention": "the fugitive kind",
        "entity2_uri": "http://dbpedia.org/resource/The_Notebook_of_Trigorin",
        "entity2_mention": "Notebook of Trigorin"
    },
    {
        "id": "4068",
        "question": "Which politicians son is buried in Metairie Cementery?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/Metairie_Cemetery> . ?uri <http://dbpedia.org/ontology/child> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/placeofburial",
        "predicate1_mention": "buried",
        "predicate2_uri": "http://dbpedia.org/ontology/child",
        "predicate2_mention": "son",
        "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
        "type_mention": "cementery",
        "entity1_uri": "http://dbpedia.org/resource/Metairie_Cemetery",
        "entity1_mention": "metairie",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4069",
        "question": "Who is the operator of AT&T Park ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/AT&T_Park> <http://dbpedia.org/property/operator> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/operator",
        "predicate1_mention": "operator",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/AT&T_Park",
        "entity1_mention": "at&t park",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4071",
        "question": "Who gave the musical score  of 9 to 5 (musical) ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/9_to_5_(musical)> <http://dbpedia.org/ontology/musicBy> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/musicBy",
        "predicate1_mention": "musical",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/9_to_5_(musical)",
        "entity1_mention": "9 to 5 (musical)",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4072",
        "question": "To which students did Ernest Rutherford advised to?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Ernest_Rutherford>  . }",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/doctoralAdvisor",
        "predicate1_mention": "advised",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Ernest_Rutherford",
        "entity1_mention": "ernest rutherford",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4073",
        "question": "Give me the number of home stadiums of teams managed by John Spencer.",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/manager> <http://dbpedia.org/resource/John_Spencer_(Scottish_footballer)> . ?x <http://dbpedia.org/ontology/homeStadium> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/manager",
        "predicate1_mention": "managed",
        "predicate2_uri": "http://dbpedia.org/ontology/homeStadium",
        "predicate2_mention": "home stadiums",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/John_Spencer_(Scottish_footballer)",
        "entity1_mention": "John Spencer",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4074",
        "question": "What is the Home Stadium of the Kenya national under-20 football team where Matin Suji was also born ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kenya_national_under-20_football_team> <http://dbpedia.org/property/homeStadium> ?uri. <http://dbpedia.org/resource/Martin_Suji> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/homeStadium",
        "predicate1_mention": "home stadium",
        "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
        "predicate2_mention": "born",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Kenya_national_under-20_football_team",
        "entity1_mention": "Kenya national under-20 football team",
        "entity2_uri": "http://dbpedia.org/resource/Martin_Suji",
        "entity2_mention": "Matin Suji"
    },
    {
        "id": "4075",
        "question": "What foundation palce of Temenos Group is the death place of jerzy Jzef Poocki ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Temenos_Group> <http://dbpedia.org/property/foundation> ?uri. <http://dbpedia.org/resource/Jerzy_J\u00f3zef_Potocki> <http://dbpedia.org/property/placeOfDeath> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/foundation",
        "predicate1_mention": "foundation",
        "predicate2_uri": "http://dbpedia.org/property/placeOfDeath",
        "predicate2_mention": "death place",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Temenos_Group",
        "entity1_mention": "temenos group",
        "entity2_uri": "http://dbpedia.org/resource/Jerzy_J\u00f3zef_Potocki",
        "entity2_mention": "jerzy Jzef Poocki"
    },
    {
        "id": "4076",
        "question": "Which company owns the airlines whose hub is in Dubai?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/hubs> <http://dbpedia.org/resource/Detroit> . ?x <http://dbpedia.org/property/parent> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/hubs",
        "predicate1_mention": "hub",
        "predicate2_uri": "http://dbpedia.org/property/parent",
        "predicate2_mention": "owns",
        "type_uri": "http://dbpedia.org/ontology/Airline",
        "type_mention": "airlines",
        "entity1_uri": "http://dbpedia.org/resource/Detroit",
        "entity1_mention": "Dubai",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4077",
        "question": "How many people have parterned with the person choroegraphed by Catarina Lindgren in the past?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/formerChoreographer> <http://dbpedia.org/resource/Catarina_Lindgren> . ?x <http://dbpedia.org/ontology/formerPartner> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/formerChoreographer",
        "predicate1_mention": "choroegraphed",
        "predicate2_uri": "http://dbpedia.org/ontology/formerPartner",
        "predicate2_mention": "parterned",
        "type_uri": "http://dbpedia.org/ontology/Person",
        "type_mention": "person",
        "entity1_uri": "http://dbpedia.org/resource/Catarina_Lindgren",
        "entity1_mention": "catarina lindgren",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4078",
        "question": "Who is the monarch of Bertalan Szemere ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bertalan_Szemere> <http://dbpedia.org/ontology/monarch> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/monarch",
        "predicate1_mention": "monarch",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Bertalan_Szemere",
        "entity1_mention": "bertalan szemere",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4080",
        "question": "Who all are starring in the  movies where director of photography is John Derek ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/John_Derek> . ?x <http://dbpedia.org/property/starring> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/cinematography",
        "predicate1_mention": "photography",
        "predicate2_uri": "http://dbpedia.org/property/starring",
        "predicate2_mention": "starring",
        "type_uri": "http://dbpedia.org/ontology/Film",
        "type_mention": "movies",
        "entity1_uri": "http://dbpedia.org/resource/John_Derek",
        "entity1_mention": "john derek",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4081",
        "question": "Which awards did the children of Erik Bergman won ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Erik_Bergman_(Lutheran_minister)> <http://dbpedia.org/property/children> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/children",
        "predicate1_mention": "children",
        "predicate2_uri": "http://dbpedia.org/property/awards",
        "predicate2_mention": "awards",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Erik_Bergman_(Lutheran_minister)",
        "entity1_mention": "Erik Bergman",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4082",
        "question": "Was Zachary Taylor a commander of the sixth infantry regiment of US?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/6th_Infantry_Regiment_(United_States)> <http://dbpedia.org/ontology/notableCommander> <http://dbpedia.org/resource/Zachary_Taylor> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/notableCommander",
        "predicate1_mention": "commander",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/6th_Infantry_Regiment_(United_States)",
        "entity1_mention": "sixth infantry regiment",
        "entity2_uri": "http://dbpedia.org/resource/Zachary_Taylor",
        "entity2_mention": "zachary taylor"
    },
    {
        "id": "4083",
        "question": "Name a basketball player with teams as Chicago Bulls and Phoenix Suns?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Chicago_Bulls> . ?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Phoenix_Suns>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/team",
        "predicate1_mention": "teams",
        "predicate2_uri": "http://dbpedia.org/ontology/team",
        "predicate2_mention": "teams",
        "type_uri": "http://dbpedia.org/ontology/BasketballPlayer",
        "type_mention": "basketball player",
        "entity1_uri": "http://dbpedia.org/resource/Chicago_Bulls",
        "entity1_mention": "chicago bulls",
        "entity2_uri": "http://dbpedia.org/resource/Phoenix_Suns",
        "entity2_mention": "phoenix suns"
    },
    {
        "id": "4084",
        "question": "Who all were venerated in Islam?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/veneratedIn> <http://dbpedia.org/resource/Islam>  . }",
        "sparql_id": "101",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/ontology/veneratedIn",
        "predicate1_mention": "venerated",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Islam",
        "entity1_mention": "islam",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4085",
        "question": "Name the state of Timothy J. Roemer ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Timothy_J._Roemer> <http://dbpedia.org/property/state> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/state",
        "predicate1_mention": "state",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Timothy_J._Roemer",
        "entity1_mention": "timothy J. roemer",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4086",
        "question": "What other awards have Becket fund for religious liberty winners received?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Becket_Fund_for_Religious_Liberty> . ?x <http://dbpedia.org/property/awards> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/award",
        "predicate1_mention": "awards",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Becket_Fund_for_Religious_Liberty",
        "entity1_mention": "Becket fund for religious liberty",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4087",
        "question": "List the websites which the authors of Tornado own ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tornado_(web_server)> <http://dbpedia.org/property/author> ?x . ?x <http://dbpedia.org/ontology/owner> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/author",
        "predicate1_mention": "authors",
        "predicate2_uri": "http://dbpedia.org/ontology/owner",
        "predicate2_mention": "own",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Tornado_(web_server)",
        "entity1_mention": "tornado",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4088",
        "question": "What is the field of interest of the advisor of Henri Maspero ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Henri_Maspero> <http://dbpedia.org/ontology/academicAdvisor> ?x . ?x <http://dbpedia.org/property/fields> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/academicAdvisor",
        "predicate1_mention": "advisor",
        "predicate2_uri": "http://dbpedia.org/property/fields",
        "predicate2_mention": "field",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Henri_Maspero",
        "entity1_mention": "henri maspero",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4089",
        "question": "Name some software as a service?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/license> <http://dbpedia.org/resource/Software_as_a_service>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/license",
        "predicate1_mention": "service",
        "predicate2_uri": "http://dbpedia.org/ontology/Software",
        "predicate2_mention": "software",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Software_as_a_service",
        "entity1_mention": "software as a service",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4091",
        "question": "Who has his resting place at  Plymouth, Vermont and office at Massachusetts House of Representatives?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Plymouth,_Vermont> . ?uri <http://dbpedia.org/property/office> <http://dbpedia.org/resource/Massachusetts_House_of_Representatives>  . }",
        "sparql_id": "8",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/restingPlace",
        "predicate1_mention": "resting place",
        "predicate2_uri": "http://dbpedia.org/property/office",
        "predicate2_mention": "office",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Plymouth,_Vermont",
        "entity1_mention": "plymouth, vermont",
        "entity2_uri": "http://dbpedia.org/resource/Massachusetts_House_of_Representatives",
        "entity2_mention": "Massachusetts House of Representatives"
    },
    {
        "id": "4092",
        "question": "Which office holder's predecessor is  Lucius Cornelius and his associate is Marcus Calpurnius Bibulus?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Lucius_Cornelius_Lentulus_Crus> . ?uri <http://dbpedia.org/ontology/associate> <http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/predecessor",
        "predicate1_mention": "predecessor",
        "predicate2_uri": "http://dbpedia.org/ontology/associate",
        "predicate2_mention": "associate",
        "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
        "type_mention": "office holder's",
        "entity1_uri": "http://dbpedia.org/resource/Lucius_Cornelius_Lentulus_Crus",
        "entity1_mention": "lucius cornelius",
        "entity2_uri": "http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus",
        "entity2_mention": "Marcus Calpurnius Bibulus"
    },
    {
        "id": "4093",
        "question": "What is the location of Dad's Root Beer on Google maps?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dad's_Root_Beer> <http://dbpedia.org/property/locationCity> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/locationCity",
        "predicate1_mention": "location",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Dad's_Root_Beer",
        "entity1_mention": "Dad's Root Beer",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4094",
        "question": "Which battle is Jim Jones associated with to which Allen Boyd is also associated ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jim_Jones_(judge)> <http://dbpedia.org/ontology/battle> ?uri. <http://dbpedia.org/resource/Allen_Boyd> <http://dbpedia.org/property/battles> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/battle",
        "predicate1_mention": "battle",
        "predicate2_uri": "http://dbpedia.org/property/battles",
        "predicate2_mention": "battle",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Jim_Jones_(judge)",
        "entity1_mention": "jim jones",
        "entity2_uri": "http://dbpedia.org/resource/Allen_Boyd",
        "entity2_mention": "allen boyd"
    },
    {
        "id": "4095",
        "question": "For how many teams have the league players of Czech Extraliga, previously played?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/Czech_Extraliga> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/league",
        "predicate1_mention": "league",
        "predicate2_uri": "http://dbpedia.org/ontology/formerTeam",
        "predicate2_mention": "teams",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Czech_Extraliga",
        "entity1_mention": "Czech Extraliga",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4096",
        "question": "List the people educated at Harvard-Westlake School and has resting place as Palo Alto, California?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Harvard-Westlake_School> . ?uri <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Palo_Alto,_California>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/almaMater",
        "predicate1_mention": "educated at",
        "predicate2_uri": "http://dbpedia.org/property/restingPlace",
        "predicate2_mention": "resting place",
        "type_uri": "http://dbpedia.org/ontology/Person",
        "type_mention": "people",
        "entity1_uri": "http://dbpedia.org/resource/Harvard-Westlake_School",
        "entity1_mention": "harvard-westlake school",
        "entity2_uri": "http://dbpedia.org/resource/Palo_Alto,_California",
        "entity2_mention": "palo alto, california"
    },
    {
        "id": "4098",
        "question": "Who offers the services of OneDrive and Outlook.com?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/OneDrive> . ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Outlook.com> . }",
        "sparql_id": "7",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/services",
        "predicate1_mention": "services",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/OneDrive",
        "entity1_mention": "onedrive",
        "entity2_uri": "http://dbpedia.org/resource/Outlook.com",
        "entity2_mention": "outlook.com"
    },
    {
        "id": "4099",
        "question": "What did other artists associated with the Shirelles make?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/The_Shirelles> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/associatedBand",
        "predicate1_mention": "associated",
        "predicate2_uri": "http://dbpedia.org/ontology/occupation",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Artist",
        "type_mention": "artists",
        "entity1_uri": "http://dbpedia.org/resource/The_Shirelles",
        "entity1_mention": "the shirelles",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4100",
        "question": "Which parent company of the Cornell University Press is also the alma mater of the Mario Garca Menocal?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cornell_University_Press> <http://dbpedia.org/ontology/parentCompany> ?uri. <http://dbpedia.org/resource/Mario_Garc\u00eda_Menocal> <http://dbpedia.org/ontology/almaMater> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/parentCompany",
        "predicate1_mention": "parent company",
        "predicate2_uri": "http://dbpedia.org/ontology/almaMater",
        "predicate2_mention": "alma mater",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Cornell_University_Press",
        "entity1_mention": "Cornell University Press",
        "entity2_uri": "http://dbpedia.org/resource/Mario_Garc\u00eda_Menocal",
        "entity2_mention": "Mario Garca Menocal"
    },
    {
        "id": "4101",
        "question": "Count the band members of Skull Gang?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Skull_Gang> <http://dbpedia.org/ontology/bandMember> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "402",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/ontology/bandMember",
        "predicate1_mention": "band members",
        "predicate2_uri": "http://dbpedia.org/ontology/Person",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Skull_Gang",
        "entity1_mention": "skull gang",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4103",
        "question": "What is the political party to which Purnima Banerjee is a member of?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Nutting> <http://dbpedia.org/ontology/knownFor> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/knownFor",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Robert_Nutting",
        "entity1_mention": "Purnima Banerjee",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4104",
        "question": "Who was the president during the time the opponent of John Hospers was in the office?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/John_Hospers> . ?x <http://dbpedia.org/ontology/incumbent> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/opponent",
        "predicate1_mention": "opponent",
        "predicate2_uri": "http://dbpedia.org/ontology/incumbent",
        "predicate2_mention": "office",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/John_Hospers",
        "entity1_mention": "john hospers",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4105",
        "question": "Whcih land of Citi Trends is also the constituency of Malik Al-Hassan Yakubu ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Malik_Al-Hassan_Yakubu> <http://dbpedia.org/property/constituency> ?uri. <http://dbpedia.org/resource/CitiTrends_(radio_show)> <http://dbpedia.org/ontology/country> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/constituency",
        "predicate1_mention": "constituency",
        "predicate2_uri": "http://dbpedia.org/ontology/country",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Malik_Al-Hassan_Yakubu",
        "entity1_mention": "Malik Al-Hassan Yakubu",
        "entity2_uri": "http://dbpedia.org/resource/CitiTrends_(radio_show)",
        "entity2_mention": "Citi Trends"
    },
    {
        "id": "4108",
        "question": "Name the work institutions of Andrew Schally?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Andrew_Schally> <http://dbpedia.org/property/workInstitutions> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/workInstitutions",
        "predicate1_mention": "work institutions",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Andrew_Schally",
        "entity1_mention": "andrew schally",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4109",
        "question": "To which settlement does Elliot Bay belong to?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elliott_Bay> <http://dbpedia.org/property/cities> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/cities",
        "predicate1_mention": "settlement",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Elliott_Bay",
        "entity1_mention": "elliot bay",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4110",
        "question": "What are the important buildings of the architect whose one of the significant building is Krasnye Vorota?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/significantBuilding> <http://dbpedia.org/resource/Krasnye_Vorota_(Moscow_Metro)> . ?x <http://dbpedia.org/ontology/significantBuilding> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/significantBuilding",
        "predicate1_mention": "significant building",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Architect",
        "type_mention": "architect",
        "entity1_uri": "http://dbpedia.org/resource/Krasnye_Vorota_(Moscow_Metro)",
        "entity1_mention": "krasnye vorota",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4111",
        "question": "In how many regions is the Baco Noir made?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Baco_noir> <http://dbpedia.org/ontology/wineRegion> ?uri  . }",
        "sparql_id": "102",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/ontology/wineRegion",
        "predicate1_mention": "regions",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Baco_noir",
        "entity1_mention": "baco noir",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4112",
        "question": "Which movies have their music composed by someone that signed up with RCA Records?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/RCA_Records> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/recordLabel",
        "predicate1_mention": "records",
        "predicate2_uri": "http://dbpedia.org/ontology/musicComposer",
        "predicate2_mention": "composed by",
        "type_uri": "http://dbpedia.org/ontology/Film",
        "type_mention": "movies",
        "entity1_uri": "http://dbpedia.org/resource/RCA_Records",
        "entity1_mention": "rca records",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4113",
        "question": "Where does the jurisdiction of European Border and Coast Guard fall?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/European_Border_and_Coast_Guard> <http://dbpedia.org/property/jurisdiction> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/jurisdiction",
        "predicate1_mention": "jurisdiction",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/European_Border_and_Coast_Guard",
        "entity1_mention": "European Border and Coast Guard",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4114",
        "question": "Which band produced the album Aida?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/album> <http://dbpedia.org/resource/Aida_(musical)> . ?x <http://dbpedia.org/ontology/musicalArtist> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/album",
        "predicate1_mention": "album",
        "predicate2_uri": "http://dbpedia.org/ontology/musicalArtist",
        "predicate2_mention": "band",
        "type_uri": "http://dbpedia.org/ontology/MusicalWork",
        "type_mention": "produced",
        "entity1_uri": "http://dbpedia.org/resource/Aida_(musical)",
        "entity1_mention": "aida",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4116",
        "question": "What do the banks owned by Norwegian ministry of finance produce?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/parentCompany> <http://dbpedia.org/resource/Ministry_of_Finance_(Norway)> . ?x <http://dbpedia.org/property/products> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/parentCompany",
        "predicate1_mention": "owned by",
        "predicate2_uri": "http://dbpedia.org/property/products",
        "predicate2_mention": "produce",
        "type_uri": "http://dbpedia.org/ontology/Bank",
        "type_mention": "banks",
        "entity1_uri": "http://dbpedia.org/resource/Ministry_of_Finance_(Norway)",
        "entity1_mention": "Norwegian ministry of finance",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4118",
        "question": "Where is the stadium of Philadelphia Rage ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Philadelphia_Rage> <http://dbpedia.org/ontology/stadium> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/stadium",
        "predicate1_mention": "stadium",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Philadelphia_Rage",
        "entity1_mention": "philadelphia rage",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4119",
        "question": "What are the television shows whose network's successor is BBC Two?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/BBC_Two> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/successor",
        "predicate1_mention": "successor",
        "predicate2_uri": "http://dbpedia.org/ontology/network",
        "predicate2_mention": "network's",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "television",
        "entity1_uri": "http://dbpedia.org/resource/BBC_Two",
        "entity1_mention": "bbc two",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4120",
        "question": "Which office holder's resting place is William Henry Harrison Tomb State Memorial and has governor named Charles Willing Byrd?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/William_Henry_Harrison_Tomb_State_Memorial> . ?uri <http://dbpedia.org/ontology/governor> <http://dbpedia.org/resource/Charles_Willing_Byrd>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/restingplace",
        "predicate1_mention": "resting place",
        "predicate2_uri": "http://dbpedia.org/ontology/governor",
        "predicate2_mention": "governor",
        "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
        "type_mention": "office",
        "entity1_uri": "http://dbpedia.org/resource/William_Henry_Harrison_Tomb_State_Memorial",
        "entity1_mention": "William Henry Harrison Tomb State Memorial",
        "entity2_uri": "http://dbpedia.org/resource/Charles_Willing_Byrd",
        "entity2_mention": "charles willing byrd"
    },
    {
        "id": "4121",
        "question": "What organisation regulates and controls the New Sanno Hotel?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/New_Sanno_Hotel> <http://dbpedia.org/ontology/tenant> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/tenant",
        "predicate1_mention": "regulates",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/New_Sanno_Hotel",
        "entity1_mention": "new sanno hotel",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4122",
        "question": "In which series do I find Minbari species' characters?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/species> <http://dbpedia.org/resource/Minbari> . ?x <http://dbpedia.org/ontology/series> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/species",
        "predicate1_mention": "species'",
        "predicate2_uri": "http://dbpedia.org/ontology/series",
        "predicate2_mention": "series",
        "type_uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "type_mention": "characters",
        "entity1_uri": "http://dbpedia.org/resource/Minbari",
        "entity1_mention": "minbari",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4125",
        "question": "Name the partners of the models whose one of the partner is Thom Evans ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/partner> <http://dbpedia.org/resource/Thom_Evans> . ?x <http://dbpedia.org/ontology/partner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/partner",
        "predicate1_mention": "partner",
        "predicate2_uri": "http://dbpedia.org/ontology/partner",
        "predicate2_mention": "partner",
        "type_uri": "http://dbpedia.org/ontology/Model",
        "type_mention": "models",
        "entity1_uri": "http://dbpedia.org/resource/Thom_Evans",
        "entity1_mention": "thom evans",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4126",
        "question": "Is Greg Weeks the band member of Beyond the Sixth Seal?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Beyond_the_Sixth_Seal> <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Greg_Weeks> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/bandMember",
        "predicate1_mention": "band member",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Beyond_the_Sixth_Seal",
        "entity1_mention": "Beyond the Sixth Seal",
        "entity2_uri": "http://dbpedia.org/resource/Greg_Weeks",
        "entity2_mention": "greg weeks"
    },
    {
        "id": "4127",
        "question": "Who was the vice president under which elizabeth alexander served?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elizabeth_Alexander_(press_secretary)> <http://dbpedia.org/ontology/vicePresident> ?uri  . }",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/vicePresident",
        "predicate1_mention": "vice president",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Elizabeth_Alexander_(press_secretary)",
        "entity1_mention": "elizabeth alexander",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4128",
        "question": "Name the television show voiced by April Stewart and Eliza Schneider?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/April_Stewart> . ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Eliza_Schneider> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "307",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/voices",
        "predicate1_mention": "voiced",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "television show",
        "entity1_uri": "http://dbpedia.org/resource/April_Stewart",
        "entity1_mention": "april stewart",
        "entity2_uri": "http://dbpedia.org/resource/Eliza_Schneider",
        "entity2_mention": "eliza schneider"
    },
    {
        "id": "4129",
        "question": "Is Robin Gibb the singer of Oh! Darling?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Oh!_Darling> <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Robin_Gibb> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/musicalArtist",
        "predicate1_mention": "singer",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Oh!_Darling",
        "entity1_mention": "oh! darling",
        "entity2_uri": "http://dbpedia.org/resource/Robin_Gibb",
        "entity2_mention": "robin gibb"
    },
    {
        "id": "4130",
        "question": "Where do networks affiliated with ETC broadcast?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/affiliation> <http://dbpedia.org/resource/ETC_(TV_channel)> . ?x <http://dbpedia.org/property/area> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BroadcastNetwork>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/affiliation",
        "predicate1_mention": "affiliated",
        "predicate2_uri": "http://dbpedia.org/property/area",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/BroadcastNetwork",
        "type_mention": "broadcast",
        "entity1_uri": "http://dbpedia.org/resource/ETC_(TV_channel)",
        "entity1_mention": "etc",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4133",
        "question": "In which state is Goose Lake Valle, which is also part of Lava River Cave ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Goose_Lake_Valley> <http://dbpedia.org/ontology/state> ?uri. <http://dbpedia.org/resource/Lava_River_Cave> <http://dbpedia.org/ontology/location> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/state",
        "predicate1_mention": "state",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Goose_Lake_Valley",
        "entity1_mention": "goose lake valle",
        "entity2_uri": "http://dbpedia.org/resource/Lava_River_Cave",
        "entity2_mention": "lava river cave"
    },
    {
        "id": "4135",
        "question": "Name the musician who gave the music in Tonight's the night and is also wedded to Alana Stewart ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tonight's_the_Night_(2003_musical)> <http://dbpedia.org/property/music> ?uri. <http://dbpedia.org/resource/Alana_Stewart> <http://dbpedia.org/ontology/spouse> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/music",
        "predicate1_mention": "music",
        "predicate2_uri": "http://dbpedia.org/ontology/spouse",
        "predicate2_mention": "wedded to",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Tonight's_the_Night_(2003_musical)",
        "entity1_mention": "Tonight's the night",
        "entity2_uri": "http://dbpedia.org/resource/Alana_Stewart",
        "entity2_mention": "alana stewart"
    },
    {
        "id": "4137",
        "question": "Is Roger Federer the flagbearer of Switzerland at the 2004 Summer Olympics?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Switzerland_at_the_2004_Summer_Olympics> <http://dbpedia.org/property/flagbearer> <http://dbpedia.org/resource/Roger_Federer> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/flagbearer",
        "predicate1_mention": "flagbearer",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Switzerland_at_the_2004_Summer_Olympics",
        "entity1_mention": "Switzerland at the 2004 Summer Olympics",
        "entity2_uri": "http://dbpedia.org/resource/Roger_Federer",
        "entity2_mention": "roger federer"
    },
    {
        "id": "4139",
        "question": "Which US city can be said to be a part of american mediterranean sea and the biscayne bay?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/American_Mediterranean_Sea> <http://dbpedia.org/property/cities> ?uri. <http://dbpedia.org/resource/Biscayne_Bay> <http://dbpedia.org/property/cities> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/cities",
        "predicate1_mention": "city",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/American_Mediterranean_Sea",
        "entity1_mention": "american mediterranean",
        "entity2_uri": "http://dbpedia.org/resource/Biscayne_Bay",
        "entity2_mention": "biscayne bay"
    },
    {
        "id": "4140",
        "question": "List the profession of senate whose one of the profession is United States Coast Guard ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/United_States_Coast_Guard> . ?x <http://dbpedia.org/ontology/profession> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/profession",
        "predicate1_mention": "profession",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Politician",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/United_States_Coast_Guard",
        "entity1_mention": "united states coast guard",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4141",
        "question": "What is the broadcast area of CFRX ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/CFRX> <http://dbpedia.org/ontology/broadcastArea> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/broadcastArea",
        "predicate1_mention": "broadcast area",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/CFRX",
        "entity1_mention": "cfrx",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4144",
        "question": "Does the platte river originate in Colorado?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Platte_River> <http://dbpedia.org/ontology/sourceRegion> <http://dbpedia.org/resource/Colorado> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/sourceRegion",
        "predicate1_mention": "originate in",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Platte_River",
        "entity1_mention": "platte river",
        "entity2_uri": "http://dbpedia.org/resource/Colorado",
        "entity2_mention": "colorado"
    },
    {
        "id": "4145",
        "question": "What is the venerated in of Edwin of Northumbria ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Edwin_of_Northumbria> <http://dbpedia.org/property/veneratedIn> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/veneratedIn",
        "predicate1_mention": "venerated in",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Edwin_of_Northumbria",
        "entity1_mention": "edwin of northumbria",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4147",
        "question": "Which labels have published songs written by Harry Connick Jr?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Harry_Connick,_Jr.> . ?x <http://dbpedia.org/property/label> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/writer",
        "predicate1_mention": "written",
        "predicate2_uri": "http://dbpedia.org/property/label",
        "predicate2_mention": "labels",
        "type_uri": "http://dbpedia.org/ontology/Song",
        "type_mention": "songs",
        "entity1_uri": "http://dbpedia.org/resource/Harry_Connick,_Jr.",
        "entity1_mention": "harry connick jr",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4148",
        "question": "What cities are around the sea which flows into Marmara?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/inflow> <http://dbpedia.org/resource/Sea_of_Marmara> . ?x <http://dbpedia.org/property/cities> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/inflow",
        "predicate1_mention": "flows",
        "predicate2_uri": "http://dbpedia.org/property/cities",
        "predicate2_mention": "cities",
        "type_uri": "http://dbpedia.org/ontology/Sea",
        "type_mention": "sea",
        "entity1_uri": "http://dbpedia.org/resource/Sea_of_Marmara",
        "entity1_mention": "marmara",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4150",
        "question": "What sports team's arena is The Palace of Auburn Hills",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/arena> <http://dbpedia.org/resource/The_Palace_of_Auburn_Hills>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/arena",
        "predicate1_mention": "arena",
        "predicate2_uri": "http://dbpedia.org/ontology/SportsTeam",
        "predicate2_mention": "sports team",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/The_Palace_of_Auburn_Hills",
        "entity1_mention": "The Palace of Auburn Hills",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4151",
        "question": "ITV employes how many people?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/ITV_(TV_network)>  . }",
        "sparql_id": "101",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/property/employer",
        "predicate1_mention": "employes",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/ITV_(TV_network)",
        "entity1_mention": "itv",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4152",
        "question": "What is the mascot of the military unit whose commander is Herbert Bautista ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/notableCommander> <http://dbpedia.org/resource/Herbert_Bautista> . ?x <http://dbpedia.org/property/mascot> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/notableCommander",
        "predicate1_mention": "commander",
        "predicate2_uri": "http://dbpedia.org/property/mascot",
        "predicate2_mention": "mascot",
        "type_uri": "http://dbpedia.org/ontology/MilitaryUnit",
        "type_mention": "military unit",
        "entity1_uri": "http://dbpedia.org/resource/Herbert_Bautista",
        "entity1_mention": "herbert bautista",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4153",
        "question": "Whihc associate of THomas Bryan Martin is also the founder of Pittsburgh ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thomas_Bryan_Martin> <http://dbpedia.org/ontology/associate> ?uri. <http://dbpedia.org/resource/Pittsburgh> <http://dbpedia.org/ontology/founder> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/associate",
        "predicate1_mention": "associate",
        "predicate2_uri": "http://dbpedia.org/ontology/founder",
        "predicate2_mention": "founder",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Thomas_Bryan_Martin",
        "entity1_mention": "thomas bryan martin",
        "entity2_uri": "http://dbpedia.org/resource/Pittsburgh",
        "entity2_mention": "pittsburgh"
    },
    {
        "id": "4154",
        "question": "What are the awards won by the film editor of The Search?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Search_(2014_film)> <http://dbpedia.org/ontology/editing> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/editing",
        "predicate1_mention": "editor",
        "predicate2_uri": "http://dbpedia.org/property/awards",
        "predicate2_mention": "awards",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/The_Search_(2014_film)",
        "entity1_mention": "The Search",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4155",
        "question": "Is the national endowment of arts under the jurisdiction of federal government of US?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/National_Endowment_for_the_Arts> <http://dbpedia.org/property/jurisdiction> <http://dbpedia.org/resource/Federal_government_of_the_United_States> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/jurisdiction",
        "predicate1_mention": "jurisdiction",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/National_Endowment_for_the_Arts",
        "entity1_mention": "national endowment",
        "entity2_uri": "http://dbpedia.org/resource/Federal_government_of_the_United_States",
        "entity2_mention": "federal government of us"
    },
    {
        "id": "4157",
        "question": "Which country were the people from who became famous for the Ramon Mangsaysay Award?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Ramon_Magsaysay_Award> . ?x <http://dbpedia.org/ontology/stateOfOrigin> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/knownFor",
        "predicate1_mention": "famous for",
        "predicate2_uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Person",
        "type_mention": "people",
        "entity1_uri": "http://dbpedia.org/resource/Ramon_Magsaysay_Award",
        "entity1_mention": "Ramon Mangsaysay Award",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4159",
        "question": "Name some schools with a bison as their mascot?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mascot> <http://dbpedia.org/resource/Bison>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/mascot",
        "predicate1_mention": "mascot",
        "predicate2_uri": "http://dbpedia.org/ontology/School",
        "predicate2_mention": "schools",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Bison",
        "entity1_mention": "bison",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4161",
        "question": "Who won the ohio house of representatives, 2010?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_States_House_of_Representatives_elections_in_Ohio,_2010> <http://dbpedia.org/property/incumbent> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/incumbent",
        "predicate1_mention": "won",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections_in_Ohio,_2010",
        "entity1_mention": "ohio house of representatives, 2010",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4162",
        "question": "Where is the headquarters of the public transit system which owns the American Boulevard (Metro Transit station) located ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/American_Boulevard_(Metro_Transit_station)> <http://dbpedia.org/ontology/owningOrganisation> ?x . ?x <http://dbpedia.org/property/headquarters> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PublicTransitSystem>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/owningOrganisation",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/headquarters",
        "predicate2_mention": "headquarters",
        "type_uri": "http://dbpedia.org/ontology/PublicTransitSystem",
        "type_mention": "public transit system",
        "entity1_uri": "http://dbpedia.org/resource/American_Boulevard_(Metro_Transit_station)",
        "entity1_mention": "American Boulevard (Metro Transit station)",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4163",
        "question": "Which current Michigan Wolverines team member debuted in Chicago Bears ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/debutteam> <http://dbpedia.org/resource/Chicago_Bears> . ?uri <http://dbpedia.org/property/currentteam> <http://dbpedia.org/resource/Michigan_Wolverines>  . }",
        "sparql_id": "8",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/debutteam",
        "predicate1_mention": "debuted",
        "predicate2_uri": "http://dbpedia.org/property/currentteam",
        "predicate2_mention": "team",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Chicago_Bears",
        "entity1_mention": "chicago bears",
        "entity2_uri": "http://dbpedia.org/resource/Michigan_Wolverines",
        "entity2_mention": "michigan wolverines"
    },
    {
        "id": "4165",
        "question": "List all the members of the organization whose one of the members is Bangladesh ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/membership> <http://dbpedia.org/resource/Bangladesh> . ?x <http://dbpedia.org/property/membership> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/membership",
        "predicate1_mention": "members",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Organisation",
        "type_mention": "organization",
        "entity1_uri": "http://dbpedia.org/resource/Bangladesh",
        "entity1_mention": "bangladesh",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4166",
        "question": "Who owns Torrey Pines Gliderport?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Torrey_Pines_Gliderport> <http://dbpedia.org/property/owner> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/owner",
        "predicate1_mention": "owns",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Torrey_Pines_Gliderport",
        "entity1_mention": "Torrey Pines Gliderport",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4168",
        "question": "Which office holder's successor is Adrian A. Basora and child named Lori Black?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Adrian_A._Basora> . ?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Lori_Black>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/successor",
        "predicate1_mention": "successor",
        "predicate2_uri": "http://dbpedia.org/property/children",
        "predicate2_mention": "child",
        "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
        "type_mention": "office holder's",
        "entity1_uri": "http://dbpedia.org/resource/Adrian_A._Basora",
        "entity1_mention": "Adrian A. Basora",
        "entity2_uri": "http://dbpedia.org/resource/Lori_Black",
        "entity2_mention": "lori black"
    },
    {
        "id": "4169",
        "question": "List all the school of the rugby player whose one of the school is Michael House ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/school> <http://dbpedia.org/resource/Michaelhouse> . ?x <http://dbpedia.org/property/school> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RugbyPlayer>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/school",
        "predicate1_mention": "school",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/RugbyPlayer",
        "type_mention": "rugby player",
        "entity1_uri": "http://dbpedia.org/resource/Michaelhouse",
        "entity1_mention": "michael house",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4172",
        "question": "To which country do the players of Waitakere United belong?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Waitakere_United> . ?x <http://dbpedia.org/ontology/country> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/team",
        "predicate1_mention": "belong",
        "predicate2_uri": "http://dbpedia.org/ontology/country",
        "predicate2_mention": "country",
        "type_uri": "http://dbpedia.org/ontology/Athlete",
        "type_mention": "players",
        "entity1_uri": "http://dbpedia.org/resource/Waitakere_United",
        "entity1_mention": "waitakere united",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4173",
        "question": "How many relatives are there of veterans of operation Barbarossa?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Operation_Barbarossa> . ?x <http://dbpedia.org/ontology/relation> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/battle",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/relation",
        "predicate2_mention": "relatives",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Operation_Barbarossa",
        "entity1_mention": "operation barbarossa",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4174",
        "question": "How many leagues have used the O.co Coliseum?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/O.co_Coliseum> <http://dbpedia.org/ontology/tenant> ?uri  . }",
        "sparql_id": "102",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/ontology/tenant",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/O.co_Coliseum",
        "entity1_mention": "o.co coliseum",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4176",
        "question": "What is the nationality of Sune Agerschou ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sune_Agerschou> <http://dbpedia.org/ontology/nationality> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/nationality",
        "predicate1_mention": "nationality",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Sune_Agerschou",
        "entity1_mention": "sune agerschou",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4177",
        "question": "Where did the spouse of pmare ii die?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/P\u014dmare_II> . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/spouse",
        "predicate1_mention": "spouse",
        "predicate2_uri": "http://dbpedia.org/ontology/deathPlace",
        "predicate2_mention": "die",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/P\u014dmare_II",
        "entity1_mention": "pmare ii",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4179",
        "question": "Where do cherry chevapravatdumrong and daisi pollard both live?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cherry_Chevapravatdumrong> <http://dbpedia.org/ontology/residence> ?uri. <http://dbpedia.org/resource/Daisi_Pollard> <http://dbpedia.org/ontology/residence> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/residence",
        "predicate1_mention": "live",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Cherry_Chevapravatdumrong",
        "entity1_mention": "cherry chevapravatdumrong",
        "entity2_uri": "http://dbpedia.org/resource/Daisi_Pollard",
        "entity2_mention": "daisi pollard"
    },
    {
        "id": "4180",
        "question": "How many companies have manufactured the rockets launched from the Cape Canaveral Air Force Station?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/launchSite",
        "predicate1_mention": "launched",
        "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
        "predicate2_mention": "manufactured",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station",
        "entity1_mention": "Cape Canaveral Air Force Station",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4181",
        "question": "Name the  former broadcast network of the television station which is the sister stations of WGBC?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WGBC> <http://dbpedia.org/property/sisterStations> ?x . ?x <http://dbpedia.org/ontology/formerBroadcastNetwork> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/sisterStations",
        "predicate1_mention": "stations",
        "predicate2_uri": "http://dbpedia.org/ontology/formerBroadcastNetwork",
        "predicate2_mention": "former broadcast network",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/WGBC",
        "entity1_mention": "wgbc",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4182",
        "question": "Which software uses GTK + as programming language?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/GTK+>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/programmingLanguage",
        "predicate1_mention": "programming language",
        "predicate2_uri": "http://dbpedia.org/ontology/Software",
        "predicate2_mention": "software",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/GTK+",
        "entity1_mention": "gtk +",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4183",
        "question": "What is the distributing label of StandBy Records ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/StandBy_Records> <http://dbpedia.org/ontology/distributingLabel> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/distributingLabel",
        "predicate1_mention": "distributing label",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/StandBy_Records",
        "entity1_mention": "standby records",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4184",
        "question": "How many bands are based in London?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/London>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
        "sparql_id": "401",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/ontology/hometown",
        "predicate1_mention": "based in",
        "predicate2_uri": "http://dbpedia.org/ontology/Band",
        "predicate2_mention": "bands",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/London",
        "entity1_mention": "london",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4187",
        "question": "Is Robert Boyle a chemist?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Robert_Boyle> <http://dbpedia.org/ontology/field> <http://dbpedia.org/resource/Chemistry> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/field",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Robert_Boyle",
        "entity1_mention": "robert boyle",
        "entity2_uri": "http://dbpedia.org/resource/Chemistry",
        "entity2_mention": "chemist"
    },
    {
        "id": "4189",
        "question": "Which famous physicist was academically advised by Benjamin Pulleyn?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/Benjamin_Pulleyn>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/academicAdvisor",
        "predicate1_mention": "academically",
        "predicate2_uri": "http://dbpedia.org/ontology/Scientist",
        "predicate2_mention": "physicist",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Benjamin_Pulleyn",
        "entity1_mention": "benjamin pulleyn",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4190",
        "question": "What is the county seat of the district through which the Beckler River flows?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Beckler_River> <http://dbpedia.org/ontology/district> ?x . ?x <http://dbpedia.org/ontology/countySeat> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/district",
        "predicate1_mention": "district",
        "predicate2_uri": "http://dbpedia.org/ontology/countySeat",
        "predicate2_mention": "county seat",
        "type_uri": "http://dbpedia.org/ontology/AdministrativeRegion",
        "type_mention": "district",
        "entity1_uri": "http://dbpedia.org/resource/Beckler_River",
        "entity1_mention": "beckler river",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4192",
        "question": "Name some local authorities of schools which have a mixed gender education system?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/gender> <http://dbpedia.org/resource/Mixed-sex_education> . ?x <http://dbpedia.org/ontology/localAuthority> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/gender",
        "predicate1_mention": "gender",
        "predicate2_uri": "http://dbpedia.org/ontology/localAuthority",
        "predicate2_mention": "local authorities",
        "type_uri": "http://dbpedia.org/ontology/School",
        "type_mention": "schools",
        "entity1_uri": "http://dbpedia.org/resource/Mixed-sex_education",
        "entity1_mention": "mixed gender education",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4193",
        "question": "Is Eddie Bravo the trainer of Shinya Aoki?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Shinya_Aoki> <http://dbpedia.org/property/trainer> <http://dbpedia.org/resource/Eddie_Bravo> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/trainer",
        "predicate1_mention": "trainer",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Shinya_Aoki",
        "entity1_mention": "shinya aoki",
        "entity2_uri": "http://dbpedia.org/resource/Eddie_Bravo",
        "entity2_mention": "eddie bravo"
    },
    {
        "id": "4194",
        "question": "Name the TV shows related to Babylon 5: The Lost Tales and is aired on Prime TIme Entertainment Networks ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/Babylon_5:_The_Lost_Tales> . ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/Prime_Time_Entertainment_Network>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/related",
        "predicate1_mention": "related",
        "predicate2_uri": "http://dbpedia.org/ontology/network",
        "predicate2_mention": "networks",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "tv shows",
        "entity1_uri": "http://dbpedia.org/resource/Babylon_5:_The_Lost_Tales",
        "entity1_mention": "Babylon 5: The Lost Tales",
        "entity2_uri": "http://dbpedia.org/resource/Prime_Time_Entertainment_Network",
        "entity2_mention": "Prime TIme Entertainment Networks"
    },
    {
        "id": "4195",
        "question": "What is the operating system of the LG Optimus Vu and also the developer of the Dart (programming language)",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/LG_Optimus_Vu> <http://dbpedia.org/ontology/operatingSystem> ?uri. <http://dbpedia.org/resource/Dart_(programming_language)> <http://dbpedia.org/property/developer> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/operatingSystem",
        "predicate1_mention": "operating system",
        "predicate2_uri": "http://dbpedia.org/property/developer",
        "predicate2_mention": "developer",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/LG_Optimus_Vu",
        "entity1_mention": "LG Optimus Vu",
        "entity2_uri": "http://dbpedia.org/resource/Dart_(programming_language)",
        "entity2_mention": "dart (programming language)"
    },
    {
        "id": "4196",
        "question": "What are some products manufactured by Sony? ",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Sony>  . }",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/manufacturer",
        "predicate1_mention": "manufactured",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Sony",
        "entity1_mention": "Sony",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4197",
        "question": "What is the almamater of the successor of F. A. Little, Jr.? ",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/F._A._Little,_Jr.> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/successor",
        "predicate1_mention": "successor",
        "predicate2_uri": "http://dbpedia.org/ontology/almaMater",
        "predicate2_mention": "almamater",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/F._A._Little,_Jr.",
        "entity1_mention": "F. A. Little, Jr.",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4198",
        "question": "List the alma mater of the person who is wedded to Sissela Bok.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Sissela_Bok> . ?x <http://dbpedia.org/property/almaMater> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/spouse",
        "predicate1_mention": "wedded to",
        "predicate2_uri": "http://dbpedia.org/property/almaMater",
        "predicate2_mention": "alma mater",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Sissela_Bok",
        "entity1_mention": "sissela bok.",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4200",
        "question": "What have some famous Christians died of?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Christianity> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/religion",
        "predicate1_mention": " ",
        "predicate2_uri": "http://dbpedia.org/ontology/deathCause",
        "predicate2_mention": "died",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Christianity",
        "entity1_mention": "Christians",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4201",
        "question": "Does KOMC play Gospel Music?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/KOMC_(AM)> <http://dbpedia.org/ontology/programmeFormat> <http://dbpedia.org/resource/Gospel_music> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/programmeFormat",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/KOMC_(AM)",
        "entity1_mention": "komc",
        "entity2_uri": "http://dbpedia.org/resource/Gospel_music",
        "entity2_mention": "gospel music"
    },
    {
        "id": "4203",
        "question": "What are some developers which use Emacs Lisp in their projects?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/Emacs_Lisp> . ?x <http://dbpedia.org/ontology/developer> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/programmingLanguage",
        "predicate1_mention": "projects",
        "predicate2_uri": "http://dbpedia.org/ontology/developer",
        "predicate2_mention": "developers",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Emacs_Lisp",
        "entity1_mention": "emacs lisp",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4204",
        "question": "Which rivers start in a country whose leader is Irene Mambilima?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Irene_Mambilima> . ?uri <http://dbpedia.org/ontology/sourceCountry> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/leaderName",
        "predicate1_mention": "leader",
        "predicate2_uri": "http://dbpedia.org/ontology/sourceCountry",
        "predicate2_mention": "country",
        "type_uri": "http://dbpedia.org/ontology/River",
        "type_mention": "rivers",
        "entity1_uri": "http://dbpedia.org/resource/Irene_Mambilima",
        "entity1_mention": "irene mambilima",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4205",
        "question": "What is the nationality of the successor of Nii Okaidja Adamafio ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Nii_Okaija_Adamafio> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/ontology/nationality> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/successor",
        "predicate1_mention": "successor",
        "predicate2_uri": "http://dbpedia.org/ontology/nationality",
        "predicate2_mention": "nationality",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Nii_Okaija_Adamafio",
        "entity1_mention": "Nii Okaidja Adamafio",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4207",
        "question": "Which creation of Josh Friedman was portrayed in Terminator 2 ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Terminator_2:_Judgment_Day> . ?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Josh_Friedman>  . }",
        "sparql_id": "8",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/portrayer",
        "predicate1_mention": "portrayed",
        "predicate2_uri": "http://dbpedia.org/property/creator",
        "predicate2_mention": "creation",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Terminator_2:_Judgment_Day",
        "entity1_mention": "terminator 2",
        "entity2_uri": "http://dbpedia.org/resource/Josh_Friedman",
        "entity2_mention": "josh friedman"
    },
    {
        "id": "4209",
        "question": "What are the movies whose music is given by Laurie Johnson?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Laurie_Johnson>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/music",
        "predicate1_mention": "music",
        "predicate2_uri": "http://dbpedia.org/ontology/Film",
        "predicate2_mention": "movies",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Laurie_Johnson",
        "entity1_mention": "laurie johnson",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4210",
        "question": "Where common region are soylent and bannock sold?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Soylent_(drink)> <http://dbpedia.org/ontology/region> ?uri. <http://dbpedia.org/resource/Bannock_(food)> <http://dbpedia.org/ontology/region> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/region",
        "predicate1_mention": "region",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Soylent_(drink)",
        "entity1_mention": "soylent",
        "entity2_uri": "http://dbpedia.org/resource/Bannock_(food)",
        "entity2_mention": "bannock"
    },
    {
        "id": "4211",
        "question": "Count the number of other services of the companies which provides the Microsoft Azure as service ?",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Microsoft_Azure> . ?x <http://dbpedia.org/property/services> ?uri }",
        "sparql_id": "111",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/services",
        "predicate1_mention": "services",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Microsoft_Azure",
        "entity1_mention": "microsoft azure",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4212",
        "question": "List the uni. having affiliation with Graham Holding Company and have a campus in Iowa ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Graham_Holdings_Company> . ?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Iowa>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/affiliations",
        "predicate1_mention": "affiliation",
        "predicate2_uri": "http://dbpedia.org/ontology/campus",
        "predicate2_mention": "campus",
        "type_uri": "http://dbpedia.org/ontology/University",
        "type_mention": "uni.",
        "entity1_uri": "http://dbpedia.org/resource/Graham_Holdings_Company",
        "entity1_mention": "graham holding company",
        "entity2_uri": "http://dbpedia.org/resource/Iowa",
        "entity2_mention": "iowa"
    },
    {
        "id": "4213",
        "question": "AH141 highway is a part of which country?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/AH141> <http://dbpedia.org/ontology/county> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/county",
        "predicate1_mention": "country",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/AH141",
        "entity1_mention": "ah141",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4214",
        "question": "Which hub of Cascade Airways is also the resting place of Brandon Lee ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cascade_Airways> <http://dbpedia.org/property/hubs> ?uri. <http://dbpedia.org/resource/Brandon_Lee> <http://dbpedia.org/ontology/restingPlace> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/hubs",
        "predicate1_mention": "hub",
        "predicate2_uri": "http://dbpedia.org/ontology/restingPlace",
        "predicate2_mention": "resting place",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Cascade_Airways",
        "entity1_mention": "cascade airways",
        "entity2_uri": "http://dbpedia.org/resource/Brandon_Lee",
        "entity2_mention": "brandon lee"
    },
    {
        "id": "4215",
        "question": "Where did the employees of American College of Surgeons study?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/workInstitutions> <http://dbpedia.org/resource/American_College_of_Surgeons> . ?x <http://dbpedia.org/ontology/education> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/workInstitutions",
        "predicate1_mention": "study",
        "predicate2_uri": "http://dbpedia.org/ontology/education",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/American_College_of_Surgeons",
        "entity1_mention": "American College of Surgeons",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4216",
        "question": "In how many different places do Starwood hotels and resorts worldwide operate?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/operator> <http://dbpedia.org/resource/Starwood_Hotels_and_Resorts_Worldwide> . ?x <http://dbpedia.org/property/address> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/operator",
        "predicate1_mention": "operate",
        "predicate2_uri": "http://dbpedia.org/property/address",
        "predicate2_mention": "resorts",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Starwood_Hotels_and_Resorts_Worldwide",
        "entity1_mention": "Starwood hotels and resorts worldwide",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4217",
        "question": "Count the number of artist whose pone of the field is writing ?",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/field> <http://dbpedia.org/resource/Writing> . ?x <http://dbpedia.org/ontology/field> ?uri }",
        "sparql_id": "111",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/field",
        "predicate1_mention": "field",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Writing",
        "entity1_mention": "writing",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4219",
        "question": "Who was the head coach of Middlesbrough F.C. season 2006-7 also the coach of England national under 21 footbal team ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2006\u201307_Middlesbrough_F.C._season> <http://dbpedia.org/ontology/manager> ?uri. <http://dbpedia.org/resource/England_national_under-21_football_team> <http://dbpedia.org/property/coach> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/manager",
        "predicate1_mention": "head coach",
        "predicate2_uri": "http://dbpedia.org/property/coach",
        "predicate2_mention": "coach",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/2006\u201307_Middlesbrough_F.C._season",
        "entity1_mention": "Middlesbrough F.C. season",
        "entity2_uri": "http://dbpedia.org/resource/England_national_under-21_football_team",
        "entity2_mention": "England national under 21 footbal team"
    },
    {
        "id": "4220",
        "question": "Who is the meaning of the name Isa which was also one of the subject of play The Prodigal Son ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Isa_(name)> <http://dbpedia.org/property/meaning> ?uri. <http://dbpedia.org/resource/The_Prodigal_Son_(play)> <http://dbpedia.org/property/subject> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/meaning",
        "predicate1_mention": "meaning",
        "predicate2_uri": "http://dbpedia.org/property/subject",
        "predicate2_mention": "subject",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Isa_(name)",
        "entity1_mention": "name isa",
        "entity2_uri": "http://dbpedia.org/resource/The_Prodigal_Son_(play)",
        "entity2_mention": "play The Prodigal Son"
    },
    {
        "id": "4221",
        "question": "How many players are in the San Francisco Giants?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/San_Francisco_Giants>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
        "sparql_id": "401",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/ontology/team",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/Athlete",
        "predicate2_mention": "players",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/San_Francisco_Giants",
        "entity1_mention": "san francisco giants",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4222",
        "question": "Which US state has Dorchester Bay and the Joseph Story?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Joseph_Story> <http://dbpedia.org/property/state> ?uri. <http://dbpedia.org/resource/Dorchester_Bay_(Boston_Harbor)> <http://dbpedia.org/property/state> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/state",
        "predicate1_mention": "state",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Joseph_Story",
        "entity1_mention": "joseph story",
        "entity2_uri": "http://dbpedia.org/resource/Dorchester_Bay_(Boston_Harbor)",
        "entity2_mention": "dorchester bay"
    },
    {
        "id": "4223",
        "question": "Mac OS is the operating system of how many things?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Mac_OS>  . }",
        "sparql_id": "101",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/ontology/operatingSystem",
        "predicate1_mention": "operating system",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Mac_OS",
        "entity1_mention": "mac os",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4224",
        "question": "Which company developed the language designed by Lars Bak?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/designer> <http://dbpedia.org/resource/Lars_Bak_(computer_programmer)> . ?x <http://dbpedia.org/property/developer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Language>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/designer",
        "predicate1_mention": "designed",
        "predicate2_uri": "http://dbpedia.org/property/developer",
        "predicate2_mention": "developed",
        "type_uri": "http://dbpedia.org/ontology/Language",
        "type_mention": "language",
        "entity1_uri": "http://dbpedia.org/resource/Lars_Bak_(computer_programmer)",
        "entity1_mention": "Lars Bak",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4225",
        "question": "Where did Aghasalim Childagh die?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Aghasalim_Childagh> <http://dbpedia.org/property/deathDate> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/deathDate",
        "predicate1_mention": "die",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Aghasalim_Childagh",
        "entity1_mention": "aghasalim childagh",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4226",
        "question": "What is the birth location of the advisor of Richard Hofstadter ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Richard_Hofstadter> <http://dbpedia.org/property/doctoralAdvisor> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/doctoralAdvisor",
        "predicate1_mention": "advisor",
        "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
        "predicate2_mention": "birth",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Richard_Hofstadter",
        "entity1_mention": "richard hofstadter",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4227",
        "question": "Name the office holder whose constituency are Duboce Triangle and Haight-Ashbury ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco> . ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Haight-Ashbury> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_id": "307",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/constituency",
        "predicate1_mention": "constituency",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
        "type_mention": "office holder",
        "entity1_uri": "http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco",
        "entity1_mention": "duboce triangle",
        "entity2_uri": "http://dbpedia.org/resource/Haight-Ashbury",
        "entity2_mention": "haight-ashbury"
    },
    {
        "id": "4228",
        "question": "Name the TV shows whose developer is J. Michael Straczynski and executive producer is Douglas Netter?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/J._Michael_Straczynski> . ?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Douglas_Netter>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/developer",
        "predicate1_mention": "developer",
        "predicate2_uri": "http://dbpedia.org/ontology/executiveProducer",
        "predicate2_mention": "executive producer",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "shows",
        "entity1_uri": "http://dbpedia.org/resource/J._Michael_Straczynski",
        "entity1_mention": "michael straczynski",
        "entity2_uri": "http://dbpedia.org/resource/Douglas_Netter",
        "entity2_mention": "douglas netter"
    },
    {
        "id": "4229",
        "question": "Name the first driver of 1999 San Marino Grand Prix ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1999_San_Marino_Grand_Prix> <http://dbpedia.org/ontology/firstDriver> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/firstDriver",
        "predicate1_mention": "first driver",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/1999_San_Marino_Grand_Prix",
        "entity1_mention": "1999 San Marino Grand Prix",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4230",
        "question": "List the children of the parent of Marvin Bush.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marvin_Bush> <http://dbpedia.org/ontology/parent> ?x . ?x <http://dbpedia.org/property/children> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/parent",
        "predicate1_mention": "parent",
        "predicate2_uri": "http://dbpedia.org/property/children",
        "predicate2_mention": "children",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Marvin_Bush",
        "entity1_mention": "marvin bush",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4231",
        "question": "Which Tim Birton's movie has a screenplay by Daniel Waters ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Daniel_Waters_(screenwriter)> . ?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Tim_Burton>  . }",
        "sparql_id": "8",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/screenplay",
        "predicate1_mention": "screenplay",
        "predicate2_uri": "http://dbpedia.org/property/director",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Daniel_Waters_(screenwriter)",
        "entity1_mention": "daniel waters",
        "entity2_uri": "http://dbpedia.org/resource/Tim_Burton",
        "entity2_mention": "Tim Birton's"
    },
    {
        "id": "4232",
        "question": "Who is the stock holder of the bank where  Peter Grauer works  ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Peter_Grauer> <http://dbpedia.org/property/occupation> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/occupation",
        "predicate1_mention": "works",
        "predicate2_uri": "http://dbpedia.org/property/owner",
        "predicate2_mention": "stock holder",
        "type_uri": "http://dbpedia.org/ontology/Bank",
        "type_mention": "bank",
        "entity1_uri": "http://dbpedia.org/resource/Peter_Grauer",
        "entity1_mention": "peter grauer",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4233",
        "question": "In which areas did the pupils of Sylvain Levi work?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/Sylvain_L\u00e9vi> . ?x <http://dbpedia.org/property/fields> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/academicAdvisor",
        "predicate1_mention": "pupils",
        "predicate2_uri": "http://dbpedia.org/property/fields",
        "predicate2_mention": "areas",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Sylvain_L\u00e9vi",
        "entity1_mention": "sylvain",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4234",
        "question": "Which awards have Puerto Ricons won?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/ethnicity> <http://dbpedia.org/resource/Puerto_Rico> . ?x <http://dbpedia.org/property/awards> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/ethnicity",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/awards",
        "predicate2_mention": "awards",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Puerto_Rico",
        "entity1_mention": "puerto",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4235",
        "question": "Name all the hubs of the airlines whose one of the hubs is Selangir ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/hubs> <http://dbpedia.org/resource/Selangor> . ?x <http://dbpedia.org/property/hubs> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/hubs",
        "predicate1_mention": "hubs",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Airline",
        "type_mention": "airlines",
        "entity1_uri": "http://dbpedia.org/resource/Selangor",
        "entity1_mention": "Selangir",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4236",
        "question": "Who starred in Nothing in Common and produced From the Earth to the Moon?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/From_the_Earth_to_the_Moon_(miniseries)> <http://dbpedia.org/ontology/executiveProducer> ?uri. <http://dbpedia.org/resource/Nothing_in_Common> <http://dbpedia.org/property/starring> ?uri . }",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/executiveProducer",
        "predicate1_mention": "produced",
        "predicate2_uri": "http://dbpedia.org/property/starring",
        "predicate2_mention": "starred",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/From_the_Earth_to_the_Moon_(miniseries)",
        "entity1_mention": "rom the Earth to the Moon",
        "entity2_uri": "http://dbpedia.org/resource/Nothing_in_Common",
        "entity2_mention": "nothing in common"
    },
    {
        "id": "4237",
        "question": "How many parties have come in power in elections where Y. S. Rajasekhara Reddy won?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Y._S._Rajasekhara_Reddy> . ?x <http://dbpedia.org/ontology/affiliation> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/leader",
        "predicate1_mention": "come in power",
        "predicate2_uri": "http://dbpedia.org/ontology/affiliation",
        "predicate2_mention": "parties",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Y._S._Rajasekhara_Reddy",
        "entity1_mention": "Y. S. Rajasekhara Reddy",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4238",
        "question": "Who is the builder of the Stadium of Costa Rica women's national football team?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Costa_Rica_women's_national_football_team> <http://dbpedia.org/ontology/stadium> ?x . ?x <http://dbpedia.org/ontology/builder> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/stadium",
        "predicate1_mention": "stadium",
        "predicate2_uri": "http://dbpedia.org/ontology/builder",
        "predicate2_mention": "builder",
        "type_uri": "http://dbpedia.org/ontology/Stadium",
        "type_mention": "stadium",
        "entity1_uri": "http://dbpedia.org/resource/Costa_Rica_women's_national_football_team",
        "entity1_mention": "Costa Rica women's national football team",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4239",
        "question": "Which serving railway line of the Rostov-Glavny is also the  place of birth of  Nina Vislova?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rostov-Glavny> <http://dbpedia.org/ontology/servingRailwayLine> ?uri. <http://dbpedia.org/resource/Nina_Vislova> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/servingRailwayLine",
        "predicate1_mention": "serving railway",
        "predicate2_uri": "http://dbpedia.org/property/placeOfBirth",
        "predicate2_mention": "place of birth",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Rostov-Glavny",
        "entity1_mention": "rostov-glavny",
        "entity2_uri": "http://dbpedia.org/resource/Nina_Vislova",
        "entity2_mention": "nina vislova"
    },
    {
        "id": "4240",
        "question": "What is the home town of the musician of Jack your Body ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jack_Your_Body> <http://dbpedia.org/ontology/musicalArtist> ?x . ?x <http://dbpedia.org/ontology/hometown> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/musicalArtist",
        "predicate1_mention": "musician",
        "predicate2_uri": "http://dbpedia.org/ontology/hometown",
        "predicate2_mention": "home town",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Jack_Your_Body",
        "entity1_mention": "jack your body",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4241",
        "question": "What do typically NGOs work for?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/type> <http://dbpedia.org/resource/Non-governmental_organization> . ?x <http://dbpedia.org/property/purpose> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/type",
        "predicate1_mention": "typically",
        "predicate2_uri": "http://dbpedia.org/property/purpose",
        "predicate2_mention": "work for",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Non-governmental_organization",
        "entity1_mention": "NGOs",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4242",
        "question": "What is the residence of the person, who starred in Men Will Be Men ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Men_Will_Be_Men> <http://dbpedia.org/ontology/starring> ?x . ?x <http://dbpedia.org/property/residence> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/starring",
        "predicate1_mention": "starred",
        "predicate2_uri": "http://dbpedia.org/property/residence",
        "predicate2_mention": "residence",
        "type_uri": "http://dbpedia.org/ontology/Person",
        "type_mention": "person,",
        "entity1_uri": "http://dbpedia.org/resource/Men_Will_Be_Men",
        "entity1_mention": "men will be men",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4243",
        "question": "List the border of the admin region which shares border with North Korea ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/border> <http://dbpedia.org/resource/North_Korea> . ?x <http://dbpedia.org/ontology/border> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/border",
        "predicate1_mention": "border",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/AdministrativeRegion",
        "type_mention": "admin region",
        "entity1_uri": "http://dbpedia.org/resource/North_Korea",
        "entity1_mention": "north korea",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4244",
        "question": "How many awards have been given to the ones who died of lung cancer?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/deathCause> <http://dbpedia.org/resource/Lung_cancer> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/deathCause",
        "predicate1_mention": "died of",
        "predicate2_uri": "http://dbpedia.org/ontology/award",
        "predicate2_mention": "awards",
        "type_uri": "http://dbpedia.org/ontology/Award",
        "type_mention": "awards",
        "entity1_uri": "http://dbpedia.org/resource/Lung_cancer",
        "entity1_mention": "lung cancer",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4245",
        "question": "Which show's network is Prime time Entertainment and has Douglas Netter as executive producer ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/Prime_Time_Entertainment_Network> . ?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Douglas_Netter>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/network",
        "predicate1_mention": "network",
        "predicate2_uri": "http://dbpedia.org/ontology/executiveProducer",
        "predicate2_mention": "executive producer",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "show's",
        "entity1_uri": "http://dbpedia.org/resource/Prime_Time_Entertainment_Network",
        "entity1_mention": "Prime time Entertainment",
        "entity2_uri": "http://dbpedia.org/resource/Douglas_Netter",
        "entity2_mention": "douglas netter"
    },
    {
        "id": "4246",
        "question": "How many countries surround the sea into which the Upper Neratva flow?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Upper_Neretva> <http://dbpedia.org/ontology/riverMouth> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
        "sparql_id": "403",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/riverMouth",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/country",
        "predicate2_mention": "countries",
        "type_uri": "http://dbpedia.org/ontology/Sea",
        "type_mention": "sea",
        "entity1_uri": "http://dbpedia.org/resource/Upper_Neretva",
        "entity1_mention": "Upper Neratva",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4247",
        "question": "Who collaborated with Johnny Cash and Kris Kristofferson ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Johnny_Cash> . ?uri <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Kris_Kristofferson> . }",
        "sparql_id": "7",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/associatedActs",
        "predicate1_mention": "collaborated with",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Johnny_Cash",
        "entity1_mention": "johnny cash",
        "entity2_uri": "http://dbpedia.org/resource/Kris_Kristofferson",
        "entity2_mention": "kristofferson"
    },
    {
        "id": "4248",
        "question": "Is the Journal of Cerebral Blood Flow and Metabolism about Brains?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_&_Metabolism> <http://dbpedia.org/ontology/academicDiscipline> <http://dbpedia.org/resource/Brain> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/academicDiscipline",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_&_Metabolism",
        "entity1_mention": "Journal of Cerebral Blood Flow and Metabolism",
        "entity2_uri": "http://dbpedia.org/resource/Brain",
        "entity2_mention": "Brains"
    },
    {
        "id": "4250",
        "question": "What is the home stadium of Kenya 's women national football team ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kenya_women's_national_football_team> <http://dbpedia.org/property/homeStadium> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/homeStadium",
        "predicate1_mention": "home stadium",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Kenya_women's_national_football_team",
        "entity1_mention": "kenya 's women national football team",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4251",
        "question": "list some shawnee people?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Shawnee> } ",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/nationality",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Shawnee",
        "entity1_mention": "shawnee",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4252",
        "question": "Count the birthplaces of recepients of the National Museum of Racing and Hall of Fame.",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/honours> <http://dbpedia.org/resource/National_Museum_of_Racing_and_Hall_of_Fame> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/honours",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
        "predicate2_mention": "birthplaces",
        "type_uri": "http://dbpedia.org/ontology/Place",
        "type_mention": "birthplaces",
        "entity1_uri": "http://dbpedia.org/resource/National_Museum_of_Racing_and_Hall_of_Fame",
        "entity1_mention": "National Museum of Racing and Hall of Fame",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4253",
        "question": "What artist of Charing Cross Bridge influenced Dorothea Sharp in her career?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charing_Cross_Bridge_(Monet_series)> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/Dorothea_Sharp> <http://dbpedia.org/property/influencedBy> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/artist",
        "predicate1_mention": "artist",
        "predicate2_uri": "http://dbpedia.org/property/influencedBy",
        "predicate2_mention": "influenced",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Charing_Cross_Bridge_(Monet_series)",
        "entity1_mention": "Charing Cross Bridge",
        "entity2_uri": "http://dbpedia.org/resource/Dorothea_Sharp",
        "entity2_mention": "dorothea sharp"
    },
    {
        "id": "4254",
        "question": "Which military conflict took place in Israel and had commander as Jaber Al-Ahmad Al-Sabah?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Israel> . ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Jaber_Al-Ahmad_Al-Sabah>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/place",
        "predicate1_mention": "place",
        "predicate2_uri": "http://dbpedia.org/ontology/commander",
        "predicate2_mention": "commander",
        "type_uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "type_mention": "military conflict",
        "entity1_uri": "http://dbpedia.org/resource/Israel",
        "entity1_mention": "israel",
        "entity2_uri": "http://dbpedia.org/resource/Jaber_Al-Ahmad_Al-Sabah",
        "entity2_mention": "jaber al-ahmad al-sabah"
    },
    {
        "id": "4255",
        "question": "Which city is the resting place of the Martin Ragaway and Chuck Connors ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Martin_Ragaway> <http://dbpedia.org/ontology/restingPlace> ?uri. <http://dbpedia.org/resource/Chuck_Connors> <http://dbpedia.org/ontology/restingPlace> ?uri . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}",
        "sparql_id": "315",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/restingPlace",
        "predicate1_mention": "resting place",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/City",
        "type_mention": "city",
        "entity1_uri": "http://dbpedia.org/resource/Martin_Ragaway",
        "entity1_mention": "martin ragaway",
        "entity2_uri": "http://dbpedia.org/resource/Chuck_Connors",
        "entity2_mention": "chuck connors"
    },
    {
        "id": "4256",
        "question": "Which religion is prevalent in the schools of the Ashanti region?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/region> <http://dbpedia.org/resource/Ashanti_Region> . ?x <http://dbpedia.org/property/denomination> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/region",
        "predicate1_mention": "region",
        "predicate2_uri": "http://dbpedia.org/property/denomination",
        "predicate2_mention": "prevalent in",
        "type_uri": "http://dbpedia.org/ontology/School",
        "type_mention": "schools",
        "entity1_uri": "http://dbpedia.org/resource/Ashanti_Region",
        "entity1_mention": "ashanti region",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4257",
        "question": "What are some characters of series produced by Ricky Grevais?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Ricky_Gervais> . ?uri <http://dbpedia.org/ontology/series> ?x  . }",
        "sparql_id": "6",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/executiveProducer",
        "predicate1_mention": "produced by",
        "predicate2_uri": "http://dbpedia.org/ontology/series",
        "predicate2_mention": "series",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Ricky_Gervais",
        "entity1_mention": "Ricky Grevais",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4258",
        "question": "List down all the bands to which the writers of 03 Bonnie & Clyde are associated?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/'03_Bonnie_&_Clyde> <http://dbpedia.org/ontology/writer> ?x . ?x <http://dbpedia.org/ontology/associatedBand> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/writer",
        "predicate1_mention": "writers",
        "predicate2_uri": "http://dbpedia.org/ontology/associatedBand",
        "predicate2_mention": "associated",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/'03_Bonnie_&_Clyde",
        "entity1_mention": "bonnie & clyde",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4259",
        "question": "What are the television shows whose company is Playtone?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/Playtone>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/company",
        "predicate1_mention": "company",
        "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "predicate2_mention": "television shows",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Playtone",
        "entity1_mention": "playtone",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4260",
        "question": "Which mainter of Pandaruan Bridge is also the land of Malaysia junior Hockey league ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pandaruan_Bridge> <http://dbpedia.org/ontology/maintainedBy> ?uri. <http://dbpedia.org/resource/Malaysia_Junior_Hockey_League> <http://dbpedia.org/ontology/country> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/maintainedBy",
        "predicate1_mention": "mainter",
        "predicate2_uri": "http://dbpedia.org/ontology/country",
        "predicate2_mention": "land",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Pandaruan_Bridge",
        "entity1_mention": "pandaruan bridge",
        "entity2_uri": "http://dbpedia.org/resource/Malaysia_Junior_Hockey_League",
        "entity2_mention": "Malaysia junior Hockey league"
    },
    {
        "id": "4262",
        "question": "In which broadcast area does the sister station of KFFG air ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/KFFG> <http://dbpedia.org/ontology/sisterStation> ?x . ?x <http://dbpedia.org/ontology/broadcastNetwork> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/sisterStation",
        "predicate1_mention": "sister station",
        "predicate2_uri": "http://dbpedia.org/ontology/broadcastNetwork",
        "predicate2_mention": "broadcast",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/KFFG",
        "entity1_mention": "kffg",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4263",
        "question": "In which companies boards do the writers of Wikitionary belong?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wiktionary> <http://dbpedia.org/ontology/author> ?x . ?x <http://dbpedia.org/ontology/board> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/author",
        "predicate1_mention": "writers",
        "predicate2_uri": "http://dbpedia.org/ontology/board",
        "predicate2_mention": "boards",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Wiktionary",
        "entity1_mention": "Wikitionary",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4264",
        "question": "Name the river with mouth as Thames Estuary and passes through Reading Berkshire ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Thames_Estuary> . ?uri <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Reading,_Berkshire>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/riverMouth",
        "predicate1_mention": "river with mouth",
        "predicate2_uri": "http://dbpedia.org/property/city",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/River",
        "type_mention": "river",
        "entity1_uri": "http://dbpedia.org/resource/Thames_Estuary",
        "entity1_mention": "thames estuary",
        "entity2_uri": "http://dbpedia.org/resource/Reading,_Berkshire",
        "entity2_mention": "reading berkshire"
    },
    {
        "id": "4265",
        "question": "What is the alma mater of the person, whose child is Samuel Moreno Rojas?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Samuel_Moreno_Rojas> . ?x <http://dbpedia.org/property/almaMater> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/children",
        "predicate1_mention": "child",
        "predicate2_uri": "http://dbpedia.org/property/almaMater",
        "predicate2_mention": "alma mater",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Samuel_Moreno_Rojas",
        "entity1_mention": "samuel moreno rojas",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4266",
        "question": "What provides the services of Nintendo eShop and Nintendo Network?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Nintendo_eShop> . ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Nintendo_Network> . }",
        "sparql_id": "7",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/services",
        "predicate1_mention": "services",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Nintendo_eShop",
        "entity1_mention": "nintendo eshop",
        "entity2_uri": "http://dbpedia.org/resource/Nintendo_Network",
        "entity2_mention": "nintendo network"
    },
    {
        "id": "4267",
        "question": "Which Monty Python's movie is distributed by Cinema International Corporation ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Monty_Python> . ?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Cinema_International_Corporation>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/writer",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/distributor",
        "predicate2_mention": "distributed",
        "type_uri": "http://dbpedia.org/ontology/Film",
        "type_mention": "movie",
        "entity1_uri": "http://dbpedia.org/resource/Monty_Python",
        "entity1_mention": "Monty Python",
        "entity2_uri": "http://dbpedia.org/resource/Cinema_International_Corporation",
        "entity2_mention": "cinema international corporation"
    },
    {
        "id": "4269",
        "question": "What is the death place of the Abiye Abebe and is the birthplace of the Amsale Aberra?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Abiye_Abebe> <http://dbpedia.org/property/placeOfDeath> ?uri. <http://dbpedia.org/resource/Amsale_Aberra> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/placeOfDeath",
        "predicate1_mention": "death place",
        "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
        "predicate2_mention": "birthplace",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Abiye_Abebe",
        "entity1_mention": "abiye abebe",
        "entity2_uri": "http://dbpedia.org/resource/Amsale_Aberra",
        "entity2_mention": "amsale aberra"
    },
    {
        "id": "4270",
        "question": "What is the label of Double Diamond (album) ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Double_Diamond_(album)> <http://dbpedia.org/ontology/recordLabel> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/recordLabel",
        "predicate1_mention": "label",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Double_Diamond_(album)",
        "entity1_mention": "Double Diamond (album)",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4271",
        "question": "Count the number of cities around the American Mediterranean Sea?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/American_Mediterranean_Sea> <http://dbpedia.org/property/cities> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}",
        "sparql_id": "402",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/property/cities",
        "predicate1_mention": "cities",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/American_Mediterranean_Sea",
        "entity1_mention": "american mediterranean sea",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4272",
        "question": "What are some employees of Uni of California, santa cruz?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/University_of_California,_Santa_Cruz>  . }",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/employer",
        "predicate1_mention": "employees",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/University_of_California,_Santa_Cruz",
        "entity1_mention": "california, santa cruz",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4273",
        "question": "What is the parent company of PrivateCore?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/PrivateCore> } ",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/subsidiary",
        "predicate1_mention": "parent company",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/PrivateCore",
        "entity1_mention": "privatecore",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4274",
        "question": "Over how many cities did the Bellaton MMA , Season 11 take place?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Bellator_MMA:_Season_Eleven> <http://dbpedia.org/property/city> ?uri  . }",
        "sparql_id": "102",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/property/city",
        "predicate1_mention": "cities",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Bellator_MMA:_Season_Eleven",
        "entity1_mention": "Bellaton MMA , Season 11",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4275",
        "question": "Waddy wachtel did the music for what movies?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Waddy_Wachtel>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/music",
        "predicate1_mention": "music",
        "predicate2_uri": "http://dbpedia.org/ontology/Film",
        "predicate2_mention": "movies",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Waddy_Wachtel",
        "entity1_mention": "waddy wachtel",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4277",
        "question": "Who are the writer of the singles whose music genre is Rhythm and blues ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Rhythm_and_blues> . ?x <http://dbpedia.org/ontology/writer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/genre",
        "predicate1_mention": "genre",
        "predicate2_uri": "http://dbpedia.org/ontology/writer",
        "predicate2_mention": "writer",
        "type_uri": "http://dbpedia.org/ontology/Single",
        "type_mention": "singles",
        "entity1_uri": "http://dbpedia.org/resource/Rhythm_and_blues",
        "entity1_mention": "rhythm and blues",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4278",
        "question": "Name the hockey team which has head coach as Mike babcock and is based in Toronto ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Toronto> . ?uri <http://dbpedia.org/property/headCoach> <http://dbpedia.org/resource/Mike_Babcock>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HockeyTeam>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/locationCity",
        "predicate1_mention": "toronto",
        "predicate2_uri": "http://dbpedia.org/property/headCoach",
        "predicate2_mention": "head coach",
        "type_uri": "http://dbpedia.org/ontology/HockeyTeam",
        "type_mention": "hockey team",
        "entity1_uri": "http://dbpedia.org/resource/Toronto",
        "entity1_mention": "toronto",
        "entity2_uri": "http://dbpedia.org/resource/Mike_Babcock",
        "entity2_mention": "mike babcock"
    },
    {
        "id": "4279",
        "question": "Which incumbent of Al Gore presidential campaign wass also the president of Mike McCurry ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mike_McCurry_(press_secretary)> <http://dbpedia.org/ontology/president> ?uri. <http://dbpedia.org/resource/Al_Gore_presidential_campaign,_2000> <http://dbpedia.org/ontology/incumbent> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/president",
        "predicate1_mention": "president",
        "predicate2_uri": "http://dbpedia.org/ontology/incumbent",
        "predicate2_mention": "incumbent",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Mike_McCurry_(press_secretary)",
        "entity1_mention": "mccurry",
        "entity2_uri": "http://dbpedia.org/resource/Al_Gore_presidential_campaign,_2000",
        "entity2_mention": "Al Gore presidential campaign"
    },
    {
        "id": "4280",
        "question": "What show has writing of Erik Jendresen and Graham Yost?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Erik_Jendresen> . ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Graham_Yost> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "307",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/writer",
        "predicate1_mention": "writing",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "show",
        "entity1_uri": "http://dbpedia.org/resource/Erik_Jendresen",
        "entity1_mention": "erik jendresen",
        "entity2_uri": "http://dbpedia.org/resource/Graham_Yost",
        "entity2_mention": "graham yost"
    },
    {
        "id": "4281",
        "question": "Which range of mountains are there in canton of Fribourg?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Canton_of_Fribourg> . ?x <http://dbpedia.org/ontology/mountainRange> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/locatedInArea",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/mountainRange",
        "predicate2_mention": "mountains",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Canton_of_Fribourg",
        "entity1_mention": "canton of Fribourg",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4283",
        "question": "Count the number of ingredient of the foods which have one of the ingredient is Pork ?",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Pork> . ?x <http://dbpedia.org/ontology/ingredient> ?uri }",
        "sparql_id": "111",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/ingredient",
        "predicate1_mention": "ingredient",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Pork",
        "entity1_mention": "pork",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4284",
        "question": "In how many different highschools have people schooled in Penn State Nittany Lions football studied?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/school> <http://dbpedia.org/resource/Penn_State_Nittany_Lions_football> . ?x <http://dbpedia.org/property/highschool> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/school",
        "predicate1_mention": "schooled",
        "predicate2_uri": "http://dbpedia.org/property/highschool",
        "predicate2_mention": "highschools",
        "type_uri": "http://dbpedia.org/ontology/EducationalInstitution",
        "type_mention": "highSchools",
        "entity1_uri": "http://dbpedia.org/resource/Penn_State_Nittany_Lions_football",
        "entity1_mention": "Penn State Nittany Lions football",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4286",
        "question": "Who is associated to the predecessor of Dan Mica?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Dan_Mica> . ?uri <http://dbpedia.org/ontology/associate> ?x  . }",
        "sparql_id": "6",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/predecessor",
        "predicate1_mention": "predecessor",
        "predicate2_uri": "http://dbpedia.org/ontology/associate",
        "predicate2_mention": "associated",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Dan_Mica",
        "entity1_mention": "dan mica",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4287",
        "question": "What is the show which opens with Gary Portnoy and Where Everybody Knows Your Name?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Gary_Portnoy> . ?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "307",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/openingTheme",
        "predicate1_mention": "opens",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "show",
        "entity1_uri": "http://dbpedia.org/resource/Gary_Portnoy",
        "entity1_mention": "gary portnoy",
        "entity2_uri": "http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name",
        "entity2_mention": "where everybody knows your name"
    },
    {
        "id": "4288",
        "question": "What is the birthplace of the netball player who is the relative of Rachel Rasmussen ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rachel_Rasmussen> <http://dbpedia.org/property/relatives> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/NetballPlayer>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/relatives",
        "predicate1_mention": "relative",
        "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
        "predicate2_mention": "birthplace",
        "type_uri": "http://dbpedia.org/ontology/NetballPlayer",
        "type_mention": "netball player",
        "entity1_uri": "http://dbpedia.org/resource/Rachel_Rasmussen",
        "entity1_mention": "rachel rasmussen",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4289",
        "question": "What is the Location of the Dofinivka Estuary which is also the  birthplace of the Liliya Lobanova ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dofinivka_Estuary> <http://dbpedia.org/property/location> ?uri. <http://dbpedia.org/resource/Liliya_Lobanova> <http://dbpedia.org/property/birthplace> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/location",
        "predicate1_mention": "location",
        "predicate2_uri": "http://dbpedia.org/property/birthplace",
        "predicate2_mention": "birthplace",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Dofinivka_Estuary",
        "entity1_mention": "dofinivka estuary",
        "entity2_uri": "http://dbpedia.org/resource/Liliya_Lobanova",
        "entity2_mention": "liliya lobanova"
    },
    {
        "id": "4290",
        "question": "For how many different teams have the players debuted in Houston Astros played?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/debutTeam> <http://dbpedia.org/resource/Houston_Astros> . ?x <http://dbpedia.org/ontology/team> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/debutTeam",
        "predicate1_mention": "debuted",
        "predicate2_uri": "http://dbpedia.org/ontology/team",
        "predicate2_mention": "teams",
        "type_uri": "http://dbpedia.org/ontology/SportsTeam",
        "type_mention": "teams",
        "entity1_uri": "http://dbpedia.org/resource/Houston_Astros",
        "entity1_mention": "houston astros",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4291",
        "question": "In which races did the horses of Mon Capitaine take part?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/sire> <http://dbpedia.org/resource/Mon_Capitaine> . ?x <http://dbpedia.org/property/race> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/sire",
        "predicate1_mention": "take part",
        "predicate2_uri": "http://dbpedia.org/property/race",
        "predicate2_mention": "races",
        "type_uri": "http://dbpedia.org/ontology/Horse",
        "type_mention": "horses",
        "entity1_uri": "http://dbpedia.org/resource/Mon_Capitaine",
        "entity1_mention": "mon capitaine",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4292",
        "question": "What is the profession of Claiborne Pell ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Claiborne_Pell> <http://dbpedia.org/ontology/profession> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/profession",
        "predicate1_mention": "profession",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Claiborne_Pell",
        "entity1_mention": "claiborne pell",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4293",
        "question": "Name few TV shows aired by Prime Time Entertainment Network?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/Prime_Time_Entertainment_Network>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/network",
        "predicate1_mention": "network",
        "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "predicate2_mention": "shows",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Prime_Time_Entertainment_Network",
        "entity1_mention": "prime time entertainment network",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4294",
        "question": "What is the ethnicity of the Maike Evers and state of origin of the Theodor Hillenhinrichs ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maike_Evers> <http://dbpedia.org/ontology/ethnicity> ?uri. <http://dbpedia.org/resource/Theodor_Hillenhinrichs> <http://dbpedia.org/ontology/stateOfOrigin> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/ethnicity",
        "predicate1_mention": "ethnicity",
        "predicate2_uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "predicate2_mention": "state of origin",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Maike_Evers",
        "entity1_mention": "maike evers",
        "entity2_uri": "http://dbpedia.org/resource/Theodor_Hillenhinrichs",
        "entity2_mention": "theodor hillenhinrichs"
    },
    {
        "id": "4295",
        "question": "Is N. C. Wyeth the illustration by of The Mysterious Stranger?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Mysterious_Stranger> <http://dbpedia.org/property/illustrator> <http://dbpedia.org/resource/N._C._Wyeth> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/illustrator",
        "predicate1_mention": "illustration",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/The_Mysterious_Stranger",
        "entity1_mention": "the mysterious stranger",
        "entity2_uri": "http://dbpedia.org/resource/N._C._Wyeth",
        "entity2_mention": "n. c. wyeth"
    },
    {
        "id": "4296",
        "question": "List the awards given to the key people in Pixar ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pixar> <http://dbpedia.org/property/keyPeople> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/keyPeople",
        "predicate1_mention": "key people",
        "predicate2_uri": "http://dbpedia.org/ontology/award",
        "predicate2_mention": "awards",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Pixar",
        "entity1_mention": "pixar",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4299",
        "question": "Count the different religions followed by Second Lieutenants in military.",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/Second_lieutenant> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/militaryRank",
        "predicate1_mention": "military.",
        "predicate2_uri": "http://dbpedia.org/ontology/religion",
        "predicate2_mention": "religions",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Second_lieutenant",
        "entity1_mention": "Second Lieutenants",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4301",
        "question": "Journals of how many fields can be found in US?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/property/discipline> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/country",
        "predicate1_mention": "found",
        "predicate2_uri": "http://dbpedia.org/property/discipline",
        "predicate2_mention": "fields",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/United_States",
        "entity1_mention": "US",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4302",
        "question": "What nicknames do the universities in Norton, Massachusetts have?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Norton,_Massachusetts> . ?x <http://dbpedia.org/property/nickname> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/city",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/nickname",
        "predicate2_mention": "nicknames",
        "type_uri": "http://dbpedia.org/ontology/University",
        "type_mention": "universities",
        "entity1_uri": "http://dbpedia.org/resource/Norton,_Massachusetts",
        "entity1_mention": "norton, massachusetts",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4303",
        "question": "What is the official residence of the senator who is the deputy of Everett Dirksen?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Everett_Dirksen> <http://dbpedia.org/property/deputy> ?x . ?x <http://dbpedia.org/ontology/residence> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Senator>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/deputy",
        "predicate1_mention": "deputy",
        "predicate2_uri": "http://dbpedia.org/ontology/residence",
        "predicate2_mention": "residence",
        "type_uri": "http://dbpedia.org/ontology/Senator",
        "type_mention": "senator",
        "entity1_uri": "http://dbpedia.org/resource/Everett_Dirksen",
        "entity1_mention": "everett dirksen",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4304",
        "question": "Which  office holder's resting place is Alta Mesa Memorial Park and Henry E. Catto, Jr. as predecessor ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Alta_Mesa_Memorial_Park> . ?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Henry_E._Catto,_Jr.>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/restingPlace",
        "predicate1_mention": "resting place",
        "predicate2_uri": "http://dbpedia.org/property/predecessor",
        "predicate2_mention": "predecessor",
        "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
        "type_mention": "office holder's",
        "entity1_uri": "http://dbpedia.org/resource/Alta_Mesa_Memorial_Park",
        "entity1_mention": "Alta Mesa Memorial Park",
        "entity2_uri": "http://dbpedia.org/resource/Henry_E._Catto,_Jr.",
        "entity2_mention": "Henry E. Catto, Jr."
    },
    {
        "id": "4305",
        "question": "Name the movie whose producer is Michael Deeley and music is given by Vangelis ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Michael_Deeley> . ?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Vangelis>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/producer",
        "predicate1_mention": "producer",
        "predicate2_uri": "http://dbpedia.org/property/music",
        "predicate2_mention": "music",
        "type_uri": "http://dbpedia.org/ontology/Film",
        "type_mention": "movie",
        "entity1_uri": "http://dbpedia.org/resource/Michael_Deeley",
        "entity1_mention": "michael deeley",
        "entity2_uri": "http://dbpedia.org/resource/Vangelis",
        "entity2_mention": "vangelis"
    },
    {
        "id": "4306",
        "question": "People born in Saint-Amand-en-Puisaye are famous for what things ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Saint-Amand-en-Puisaye> . ?x <http://dbpedia.org/property/knownFor> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/birthPlace",
        "predicate1_mention": "born in",
        "predicate2_uri": "http://dbpedia.org/property/knownFor",
        "predicate2_mention": "famous for",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Saint-Amand-en-Puisaye",
        "entity1_mention": "saint-amand-en-puisaye",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4307",
        "question": "Radios on what topics can be tuned in to in Washington DC?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/broadcastArea> <http://dbpedia.org/resource/Washington,_D.C.> . ?x <http://dbpedia.org/ontology/programmeFormat> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/broadcastArea",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/programmeFormat",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/RadioStation",
        "type_mention": "radios",
        "entity1_uri": "http://dbpedia.org/resource/Washington,_D.C.",
        "entity1_mention": "washington dc",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4308",
        "question": "List the goverener of Winston Bryant?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Winston_Bryant> <http://dbpedia.org/property/governor> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/governor",
        "predicate1_mention": "goverener",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Winston_Bryant",
        "entity1_mention": "winston bryant",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4309",
        "question": "Name the movie whose director is Stanley Kubrick and editor is Anthony Harvey?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/editing> <http://dbpedia.org/resource/Anthony_Harvey> . ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Stanley_Kubrick>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/editing",
        "predicate1_mention": "editor",
        "predicate2_uri": "http://dbpedia.org/ontology/director",
        "predicate2_mention": "director",
        "type_uri": "http://dbpedia.org/ontology/Film",
        "type_mention": "movie",
        "entity1_uri": "http://dbpedia.org/resource/Anthony_Harvey",
        "entity1_mention": "anthony harvey",
        "entity2_uri": "http://dbpedia.org/resource/Stanley_Kubrick",
        "entity2_mention": "stanley kubrick"
    },
    {
        "id": "4310",
        "question": "Name the musician who was given label by Celluloid Records and has been associated with Africa'70 ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Celluloid_Records> . ?uri <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Africa_'70_(band)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/label",
        "predicate1_mention": "label",
        "predicate2_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "predicate2_mention": "associated",
        "type_uri": "http://dbpedia.org/ontology/MusicalArtist",
        "type_mention": "musician",
        "entity1_uri": "http://dbpedia.org/resource/Celluloid_Records",
        "entity1_mention": "celluloid records",
        "entity2_uri": "http://dbpedia.org/resource/Africa_'70_(band)",
        "entity2_mention": "Africa'70"
    },
    {
        "id": "4311",
        "question": "What is the country where Sergei Ovchinnikov the volleyball player die, and Gumus was first aired ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/G\u00fcm\u00fc\u015f_(TV_series)> <http://dbpedia.org/property/firstAired> ?uri. <http://dbpedia.org/resource/Sergei_Ovchinnikov_(volleyball)> <http://dbpedia.org/property/placeOfDeath> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/firstAired",
        "predicate1_mention": "first aired",
        "predicate2_uri": "http://dbpedia.org/property/placeOfDeath",
        "predicate2_mention": "die",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/G\u00fcm\u00fc\u015f_(TV_series)",
        "entity1_mention": "Gumus",
        "entity2_uri": "http://dbpedia.org/resource/Sergei_Ovchinnikov_(volleyball)",
        "entity2_mention": "sergei ovchinnikov"
    },
    {
        "id": "4313",
        "question": "List down the TV shows whose producer is Stephen E. Ambros and writer is John Orloff ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Stephen_E._Ambrose> . ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/John_Orloff>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/producer",
        "predicate1_mention": "producer",
        "predicate2_uri": "http://dbpedia.org/property/writer",
        "predicate2_mention": "writer",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "tv shows",
        "entity1_uri": "http://dbpedia.org/resource/Stephen_E._Ambrose",
        "entity1_mention": "stephen e. ambros",
        "entity2_uri": "http://dbpedia.org/resource/John_Orloff",
        "entity2_mention": "john orloff"
    },
    {
        "id": "4314",
        "question": "Does Walson Augustin play for the Brothers Union?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Walson_Augustin> <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/Brothers_Union> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/currentclub",
        "predicate1_mention": "union",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Walson_Augustin",
        "entity1_mention": "walson augustin",
        "entity2_uri": "http://dbpedia.org/resource/Brothers_Union",
        "entity2_mention": "brothers union"
    },
    {
        "id": "4315",
        "question": "What are the prizes won by the animator of The Skeleton Dance ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Skeleton_Dance> <http://dbpedia.org/ontology/animator> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/animator",
        "predicate1_mention": "animator",
        "predicate2_uri": "http://dbpedia.org/ontology/award",
        "predicate2_mention": "prizes",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/The_Skeleton_Dance",
        "entity1_mention": "the skeleton dance",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4316",
        "question": "List the Swedish newspaper headquarted in Stockholm ? ",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/language> <http://dbpedia.org/resource/Swedish_language> . ?uri <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Stockholm>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/language",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/headquarters",
        "predicate2_mention": "headquarted",
        "type_uri": "http://dbpedia.org/ontology/Newspaper",
        "type_mention": "newspaper",
        "entity1_uri": "http://dbpedia.org/resource/Swedish_language",
        "entity1_mention": "swedish",
        "entity2_uri": "http://dbpedia.org/resource/Stockholm",
        "entity2_mention": "stockholm"
    },
    {
        "id": "4317",
        "question": "Which educational institutes have campuses at Iowa and Indiana ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Iowa> . ?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Indiana> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}",
        "sparql_id": "307",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/campus",
        "predicate1_mention": "campuses",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/EducationalInstitution",
        "type_mention": "educational institutes",
        "entity1_uri": "http://dbpedia.org/resource/Iowa",
        "entity1_mention": "iowa",
        "entity2_uri": "http://dbpedia.org/resource/Indiana",
        "entity2_mention": "indiana"
    },
    {
        "id": "4318",
        "question": "What mascot of the Galatasaray Handball Team is also the team name of Cristo Rey Jesuit high School ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cristo_Rey_Jesuit_High_School_(Chicago)> <http://dbpedia.org/property/teamName> ?uri. <http://dbpedia.org/resource/Galatasaray_Handball_Team> <http://dbpedia.org/property/mascot> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/teamName",
        "predicate1_mention": "team",
        "predicate2_uri": "http://dbpedia.org/property/mascot",
        "predicate2_mention": "mascot",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Cristo_Rey_Jesuit_High_School_(Chicago)",
        "entity1_mention": "Cristo Rey Jesuit high School",
        "entity2_uri": "http://dbpedia.org/resource/Galatasaray_Handball_Team",
        "entity2_mention": "galatasaray handball team"
    },
    {
        "id": "4319",
        "question": "List down the associated musical artist of the writer of Rain Is a Good Thing ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rain_Is_a_Good_Thing> <http://dbpedia.org/property/writer> ?x . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/writer",
        "predicate1_mention": "writer",
        "predicate2_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "predicate2_mention": "associated musical artist",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Rain_Is_a_Good_Thing",
        "entity1_mention": "Rain Is a Good Thing",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4320",
        "question": "Which countries led by Elizabeth II?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Elizabeth_II>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/leaderName",
        "predicate1_mention": "led",
        "predicate2_uri": "http://dbpedia.org/ontology/Country",
        "predicate2_mention": "countries",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Elizabeth_II",
        "entity1_mention": "elizabeth ii",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4321",
        "question": "Who is the developer of Dart ( programming language ) ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dart_(programming_language)> <http://dbpedia.org/property/developer> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/developer",
        "predicate1_mention": "developer",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Dart_(programming_language)",
        "entity1_mention": "dart ( programming language )",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4322",
        "question": "How many different writers have written for Jump Square?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/magazine> <http://dbpedia.org/resource/Jump_Square> . ?x <http://dbpedia.org/property/author> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/magazine",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/author",
        "predicate2_mention": "writers",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Jump_Square",
        "entity1_mention": "jump square",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4323",
        "question": "Which official residence of hugh Scott is also the origin of Long Rifle ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Long_rifle> <http://dbpedia.org/property/origin> ?uri. <http://dbpedia.org/resource/Hugh_Scott> <http://dbpedia.org/ontology/residence> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/origin",
        "predicate1_mention": "origin",
        "predicate2_uri": "http://dbpedia.org/ontology/residence",
        "predicate2_mention": "residence",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Long_rifle",
        "entity1_mention": "long rifle",
        "entity2_uri": "http://dbpedia.org/resource/Hugh_Scott",
        "entity2_mention": "hugh scott"
    },
    {
        "id": "4324",
        "question": "What is the base currency of the Benelux which can be used in Republic of Montenegro?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Benelux> <http://dbpedia.org/property/currency> ?uri. <http://dbpedia.org/resource/Republic_of_Montenegro_(1992\u20132006)> <http://dbpedia.org/property/currency> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/currency",
        "predicate1_mention": "currency",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Benelux",
        "entity1_mention": "benelux",
        "entity2_uri": "http://dbpedia.org/resource/Republic_of_Montenegro_(1992\u20132006)",
        "entity2_mention": "republic of montenegro"
    },
    {
        "id": "4325",
        "question": "How many politicians reside in Cape Town?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Cape_Town>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_id": "401",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/property/residence",
        "predicate1_mention": "reside in",
        "predicate2_uri": "http://dbpedia.org/ontology/OfficeHolder",
        "predicate2_mention": "politicians",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Cape_Town",
        "entity1_mention": "cape town",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4326",
        "question": "Who wrote the mangas produced by Masahike Minami?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Masahiko_Minami> . ?x <http://dbpedia.org/ontology/author> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Manga>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/producer",
        "predicate1_mention": "produced",
        "predicate2_uri": "http://dbpedia.org/ontology/author",
        "predicate2_mention": "wrote",
        "type_uri": "http://dbpedia.org/ontology/Manga",
        "type_mention": "mangas",
        "entity1_uri": "http://dbpedia.org/resource/Masahiko_Minami",
        "entity1_mention": "Masahike Minami",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4327",
        "question": "Who is the political figure whose military branch is Colonial troops?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Colonial_troops> } ",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/militaryBranch",
        "predicate1_mention": "military branch",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Colonial_troops",
        "entity1_mention": "colonial troops",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4328",
        "question": "How many architects are there who have made something used by Oakland athletics?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Oakland_Athletics> . ?x <http://dbpedia.org/property/architect> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/tenant",
        "predicate1_mention": "made",
        "predicate2_uri": "http://dbpedia.org/property/architect",
        "predicate2_mention": "architects",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Oakland_Athletics",
        "entity1_mention": "oakland athletics",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4329",
        "question": "Who has canonized someone who's a doctor of the church?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/titles> <http://dbpedia.org/resource/Doctor_of_the_Church> . ?x <http://dbpedia.org/ontology/canonizedBy> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/titles",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/canonizedBy",
        "predicate2_mention": "canonized",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Doctor_of_the_Church",
        "entity1_mention": "doctor of the church",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4331",
        "question": "Give me a count of musical artists collaborating with Waylon Jennings?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Waylon_Jennings>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
        "sparql_id": "401",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/ontology/associatedMusicalArtist",
        "predicate1_mention": "collaborating with",
        "predicate2_uri": "http://dbpedia.org/ontology/MusicalArtist",
        "predicate2_mention": "musical artists",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Waylon_Jennings",
        "entity1_mention": "waylon jennings",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4333",
        "question": "Who are the spouse of the actors of Wrongfully Accused?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wrongfully_Accused> <http://dbpedia.org/ontology/starring> ?x . ?x <http://dbpedia.org/ontology/spouse> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/starring",
        "predicate1_mention": "actors",
        "predicate2_uri": "http://dbpedia.org/ontology/spouse",
        "predicate2_mention": "spouse",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Wrongfully_Accused",
        "entity1_mention": "wrongfully accused",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4334",
        "question": "What municipalities are adjacent to Chne Bougeries?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Ch\u00eane-Bougeries>  . }",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/neighboringMunicipalities",
        "predicate1_mention": "municipalities",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Ch\u00eane-Bougeries",
        "entity1_mention": "Chne Bougeries",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4335",
        "question": "Which scientist is known for writing Philosophi Naturalis Principia Mathematica?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/knownFor> <http://dbpedia.org/resource/Philosophi\u00e6_Naturalis_Principia_Mathematica> } ",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/knownFor",
        "predicate1_mention": "known for",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Philosophi\u00e6_Naturalis_Principia_Mathematica",
        "entity1_mention": "Philosophi Naturalis Principia Mathematica",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4336",
        "question": "What is the profession of the William Luther Hill and also the office of the Richard Coke ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Luther_Hill> <http://dbpedia.org/ontology/profession> ?uri. <http://dbpedia.org/resource/Richard_Coke> <http://dbpedia.org/property/office> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/profession",
        "predicate1_mention": "profession",
        "predicate2_uri": "http://dbpedia.org/property/office",
        "predicate2_mention": "office",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/William_Luther_Hill",
        "entity1_mention": "william luther hill",
        "entity2_uri": "http://dbpedia.org/resource/Richard_Coke",
        "entity2_mention": "richard coke"
    },
    {
        "id": "4337",
        "question": "Which river's source mountain is Baikal Mountains and is located in Laptev Sea ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Baikal_Mountains> . ?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Laptev_Sea>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/sourceMountain",
        "predicate1_mention": "mountain",
        "predicate2_uri": "http://dbpedia.org/property/mouthLocation",
        "predicate2_mention": "located",
        "type_uri": "http://dbpedia.org/ontology/River",
        "type_mention": "river's",
        "entity1_uri": "http://dbpedia.org/resource/Baikal_Mountains",
        "entity1_mention": "baikal mountains",
        "entity2_uri": "http://dbpedia.org/resource/Laptev_Sea",
        "entity2_mention": "laptev sea"
    },
    {
        "id": "4339",
        "question": "Los Angeles Lakers is the team of which basketball players?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Los_Angeles_Lakers>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/team",
        "predicate1_mention": "team",
        "predicate2_uri": "http://dbpedia.org/ontology/BasketballPlayer",
        "predicate2_mention": "basketball players",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Los_Angeles_Lakers",
        "entity1_mention": "los angeles lakers",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4340",
        "question": "To which state george M. Chilcott  belong ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_M._Chilcott> <http://dbpedia.org/property/state> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/state",
        "predicate1_mention": "state",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/George_M._Chilcott",
        "entity1_mention": "george M. Chilcott",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4342",
        "question": "Give me the list of people who scaled mountains in Sierra Nevada?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/mountainRange> <http://dbpedia.org/resource/Sierra_Nevada_(U.S.)> . ?x <http://dbpedia.org/ontology/firstAscentPerson> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/mountainRange",
        "predicate1_mention": "mountains",
        "predicate2_uri": "http://dbpedia.org/ontology/firstAscentPerson",
        "predicate2_mention": "scaled",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Sierra_Nevada_(U.S.)",
        "entity1_mention": "sierra nevada",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4343",
        "question": "Who studied in universities located in suburbs?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Suburb> . ?uri <http://dbpedia.org/property/education> ?x  . }",
        "sparql_id": "6",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/campus",
        "predicate1_mention": "universities",
        "predicate2_uri": "http://dbpedia.org/property/education",
        "predicate2_mention": "studied in",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Suburb",
        "entity1_mention": "suburbs",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4346",
        "question": "What religion did the president follow which was served by Kang Young-hoon?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kang_Young-hoon> <http://dbpedia.org/property/president> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/president",
        "predicate1_mention": "president",
        "predicate2_uri": "http://dbpedia.org/ontology/religion",
        "predicate2_mention": "religion",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Kang_Young-hoon",
        "entity1_mention": "kang young-hoon",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4347",
        "question": "Which is the common prospect team of Mikhail Pashnin and Robin kovacs ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mikhail_Pashnin> <http://dbpedia.org/property/prospectTeam> ?uri. <http://dbpedia.org/resource/Robin_Kovacs> <http://dbpedia.org/ontology/prospectTeam> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/prospectTeam",
        "predicate1_mention": "prospect team",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Mikhail_Pashnin",
        "entity1_mention": "mikhail pashnin",
        "entity2_uri": "http://dbpedia.org/resource/Robin_Kovacs",
        "entity2_mention": "robin kovacs"
    },
    {
        "id": "4348",
        "question": "Name the person whose child is Irne Joliot Curie?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Ir\u00e8ne_Joliot-Curie>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/children",
        "predicate1_mention": "child",
        "predicate2_uri": "http://dbpedia.org/ontology/Person",
        "predicate2_mention": "person",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Ir\u00e8ne_Joliot-Curie",
        "entity1_mention": " irne joliot curie",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4349",
        "question": "Which TV show's company is PlayTone and is produced by Stephen E. Ambrose ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Playtone> . ?uri <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Stephen_E._Ambrose>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/company",
        "predicate1_mention": "company",
        "predicate2_uri": "http://dbpedia.org/property/producer",
        "predicate2_mention": "produced",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "tv show's",
        "entity1_uri": "http://dbpedia.org/resource/Playtone",
        "entity1_mention": "playtone",
        "entity2_uri": "http://dbpedia.org/resource/Stephen_E._Ambrose",
        "entity2_mention": "stephen e. ambrose"
    },
    {
        "id": "4350",
        "question": "Count the different genres of games published by Titus Software",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/publisher> <http://dbpedia.org/resource/Titus_Software> . ?x <http://dbpedia.org/ontology/genre> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/publisher",
        "predicate1_mention": "published",
        "predicate2_uri": "http://dbpedia.org/ontology/genre",
        "predicate2_mention": "genres",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Titus_Software",
        "entity1_mention": "titus software",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4352",
        "question": "Who is the predecessor of Voere ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Voere> <http://dbpedia.org/ontology/predecessor> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/predecessor",
        "predicate1_mention": "predecessor",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Voere",
        "entity1_mention": "voere",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4353",
        "question": "Which stockholder of yale Repertory Theatre was training center of William Anthony ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Anthony_(artist)> <http://dbpedia.org/ontology/training> ?uri. <http://dbpedia.org/resource/Yale_Repertory_Theatre> <http://dbpedia.org/property/owner> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/training",
        "predicate1_mention": "training",
        "predicate2_uri": "http://dbpedia.org/property/owner",
        "predicate2_mention": "stockholder",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/William_Anthony_(artist)",
        "entity1_mention": "william anthony",
        "entity2_uri": "http://dbpedia.org/resource/Yale_Repertory_Theatre",
        "entity2_mention": "yale repertory theatre"
    },
    {
        "id": "4354",
        "question": "Who  won the Lovelace Medal and the Norbert Wiener Award for Social and Professional Responsibility?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Lovelace_Medal> . ?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility> . }",
        "sparql_id": "7",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/prizes",
        "predicate1_mention": "medal",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Lovelace_Medal",
        "entity1_mention": "lovelace medal",
        "entity2_uri": "http://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility",
        "entity2_mention": "Norbert Wiener Award for Social and Professional Responsibility"
    },
    {
        "id": "4356",
        "question": "Which TV show's setting is in Massachusetts and is the subsequent work of Fraiser ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Frasier> . ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Massachusetts>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/subsequentWork",
        "predicate1_mention": "subsequent work",
        "predicate2_uri": "http://dbpedia.org/ontology/location",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "tv show's",
        "entity1_uri": "http://dbpedia.org/resource/Frasier",
        "entity1_mention": "Fraiser",
        "entity2_uri": "http://dbpedia.org/resource/Massachusetts",
        "entity2_mention": "massachusetts"
    },
    {
        "id": "4357",
        "question": "Who were the american football players who played for Dallas Cowboys?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Dallas_Cowboys>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/team",
        "predicate1_mention": "players",
        "predicate2_uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
        "predicate2_mention": "american football players",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Dallas_Cowboys",
        "entity1_mention": "dallas cowboys",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4358",
        "question": "What is the national origin of Dornier Aerodyne and Hirth Acrostar ?;",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dornier_Aerodyne> <http://dbpedia.org/property/nationalOrigin> ?uri. <http://dbpedia.org/resource/Hirth_Acrostar> <http://dbpedia.org/ontology/origin> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/nationalOrigin",
        "predicate1_mention": "national origin",
        "predicate2_uri": "http://dbpedia.org/ontology/origin",
        "predicate2_mention": "origin",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Dornier_Aerodyne",
        "entity1_mention": "dornier aerodyne",
        "entity2_uri": "http://dbpedia.org/resource/Hirth_Acrostar",
        "entity2_mention": "hirth acrostar"
    },
    {
        "id": "4359",
        "question": "Who is the writer of He's a Pirate ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/He's_a_Pirate> <http://dbpedia.org/property/writer> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/writer",
        "predicate1_mention": "writer",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/He's_a_Pirate",
        "entity1_mention": "He's a Pirate",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4361",
        "question": "How many famous people are from the Filipinos?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/stateOfOrigin> <http://dbpedia.org/resource/Filipinos>  . }",
        "sparql_id": "101",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "predicate1_mention": "from",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Filipinos",
        "entity1_mention": "filipinos",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4362",
        "question": "Count the number of artists in the Cirque du Soleil discography?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Cirque_du_Soleil_discography> <http://dbpedia.org/property/artist> ?uri  . }",
        "sparql_id": "102",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/property/artist",
        "predicate1_mention": "artists",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Cirque_du_Soleil_discography",
        "entity1_mention": "the cirque du soleil discography",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4365",
        "question": "Where did anton ausserer die?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Anton_Ausserer> <http://dbpedia.org/property/deathPlace> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/deathPlace",
        "predicate1_mention": "die",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Anton_Ausserer",
        "entity1_mention": "anton ausserer",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4368",
        "question": "Name the subsidary of Tandem Computers which was founded by Jim Harris ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Tandem_Computers> . ?uri <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Jim_Harris_(entrepreneur)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/subsidiary",
        "predicate1_mention": "subsidary",
        "predicate2_uri": "http://dbpedia.org/ontology/foundedBy",
        "predicate2_mention": "founded by",
        "type_uri": "http://dbpedia.org/ontology/Company",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Tandem_Computers",
        "entity1_mention": "tandem computers",
        "entity2_uri": "http://dbpedia.org/resource/Jim_Harris_(entrepreneur)",
        "entity2_mention": "jim harris"
    },
    {
        "id": "4369",
        "question": "How many races has Best Mate won?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Best_Mate> <http://dbpedia.org/property/race> ?uri  . }",
        "sparql_id": "102",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/property/race",
        "predicate1_mention": "races",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Best_Mate",
        "entity1_mention": "best mate",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4371",
        "question": "What has  location as Ontario?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Ontario>  . }",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/location",
        "predicate1_mention": "location",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Ontario",
        "entity1_mention": "ontario",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4373",
        "question": "What are some famous companies founded in the US?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/United_States>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/foundationPlace",
        "predicate1_mention": "founded",
        "predicate2_uri": "http://dbpedia.org/ontology/Company",
        "predicate2_mention": "companies",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/United_States",
        "entity1_mention": "US",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4374",
        "question": "City of Miami Cemetery is the governing body of which city?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/City_of_Miami_Cemetery> <http://dbpedia.org/property/governingBody> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/governingBody",
        "predicate1_mention": "governing body",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/City_of_Miami_Cemetery",
        "entity1_mention": "City of Miami Cemetery",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4375",
        "question": "What are some things people born in Louisiana are famous for?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Louisiana> . ?x <http://dbpedia.org/property/knownFor> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/placeOfBirth",
        "predicate1_mention": "born in",
        "predicate2_uri": "http://dbpedia.org/property/knownFor",
        "predicate2_mention": "famous for",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Louisiana",
        "entity1_mention": "louisiana",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4376",
        "question": "Is Neungin High school a buddhist school?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Neungin_High_School> <http://dbpedia.org/property/religiousAffiliation> <http://dbpedia.org/resource/Buddhism> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/religiousAffiliation",
        "predicate1_mention": "neungin",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Neungin_High_School",
        "entity1_mention": "neungin high school",
        "entity2_uri": "http://dbpedia.org/resource/Buddhism",
        "entity2_mention": "buddhist"
    },
    {
        "id": "4377",
        "question": "What is the  name of the television show whose developer is J. Michael Straczynski and actor is Jason Carter (actor)?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/J._Michael_Straczynski> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jason_Carter_(actor)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/developer",
        "predicate1_mention": "developer",
        "predicate2_uri": "http://dbpedia.org/ontology/starring",
        "predicate2_mention": "actor",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "television show",
        "entity1_uri": "http://dbpedia.org/resource/J._Michael_Straczynski",
        "entity1_mention": "j. michael straczynski",
        "entity2_uri": "http://dbpedia.org/resource/Jason_Carter_(actor)",
        "entity2_mention": "jason carter (actor)"
    },
    {
        "id": "4378",
        "question": "How many people have played for the ones who own the stadium of Bankers Life Fieldhouse?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/arena> <http://dbpedia.org/resource/Bankers_Life_Fieldhouse> . ?uri <http://dbpedia.org/property/team> ?x  . }",
        "sparql_id": "106",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/arena",
        "predicate1_mention": "stadium",
        "predicate2_uri": "http://dbpedia.org/property/team",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Bankers_Life_Fieldhouse",
        "entity1_mention": "bankers life fieldhouse",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4381",
        "question": "Name the university whose athletic department is called National Collegiate Athletic Association and has a chancellor named Nicholas S. Zeppos?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/athletics> <http://dbpedia.org/resource/National_Collegiate_Athletic_Association> . ?uri <http://dbpedia.org/property/chancellor> <http://dbpedia.org/resource/Nicholas_S._Zeppos>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/athletics",
        "predicate1_mention": "athletic",
        "predicate2_uri": "http://dbpedia.org/property/chancellor",
        "predicate2_mention": "chancellor",
        "type_uri": "http://dbpedia.org/ontology/University",
        "type_mention": "university",
        "entity1_uri": "http://dbpedia.org/resource/National_Collegiate_Athletic_Association",
        "entity1_mention": "tional Collegiate Athletic Association",
        "entity2_uri": "http://dbpedia.org/resource/Nicholas_S._Zeppos",
        "entity2_mention": "nicholas s. zeppos"
    },
    {
        "id": "4382",
        "question": "Who are the people whose phD advisor was Harry Harlow?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Harry_Harlow>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/doctoralAdvisor",
        "predicate1_mention": "advisor",
        "predicate2_uri": "http://dbpedia.org/ontology/Person",
        "predicate2_mention": "people",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Harry_Harlow",
        "entity1_mention": "harry harlow",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4384",
        "question": "Is Pulau Ubin the largest city of Singapore?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Pulau_Ubin> <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Singapore> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/largestCity",
        "predicate1_mention": "largest city",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Pulau_Ubin",
        "entity1_mention": "pulau ubin",
        "entity2_uri": "http://dbpedia.org/resource/Singapore",
        "entity2_mention": "singapore"
    },
    {
        "id": "4385",
        "question": "Which sitcoms are made by a company headquartered in NYC?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/New_York_City> . ?uri <http://dbpedia.org/ontology/company> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/headquarter",
        "predicate1_mention": "headquartered",
        "predicate2_uri": "http://dbpedia.org/ontology/company",
        "predicate2_mention": "company",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "sitcoms",
        "entity1_uri": "http://dbpedia.org/resource/New_York_City",
        "entity1_mention": "NYC",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4386",
        "question": "Which mountains are contained in Inyo National Forest?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Inyo_National_Forest>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/locatedInArea",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/Mountain",
        "predicate2_mention": "mountains",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Inyo_National_Forest",
        "entity1_mention": "Inyo National Forest",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4387",
        "question": "In how many places have people canonized by John Paul II died?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/canonizedBy> <http://dbpedia.org/resource/Pope_John_Paul_II> . ?x <http://dbpedia.org/property/deathPlace> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/canonizedBy",
        "predicate1_mention": "canonized by",
        "predicate2_uri": "http://dbpedia.org/property/deathPlace",
        "predicate2_mention": "died",
        "type_uri": "http://dbpedia.org/ontology/Place",
        "type_mention": "places",
        "entity1_uri": "http://dbpedia.org/resource/Pope_John_Paul_II",
        "entity1_mention": "john Paul II",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4388",
        "question": "Which river starts from the county seat of Heathsville, Virginia?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/countySeat> <http://dbpedia.org/resource/Heathsville,_Virginia> . ?uri <http://dbpedia.org/property/mouthLocation> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/countySeat",
        "predicate1_mention": "county seat",
        "predicate2_uri": "http://dbpedia.org/property/mouthLocation",
        "predicate2_mention": "starts from",
        "type_uri": "http://dbpedia.org/ontology/River",
        "type_mention": "river",
        "entity1_uri": "http://dbpedia.org/resource/Heathsville,_Virginia",
        "entity1_mention": "heathsville, virginia",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4390",
        "question": "where is the thorington train station located?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thorington_railway_station> <http://dbpedia.org/ontology/district> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/district",
        "predicate1_mention": "located",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Thorington_railway_station",
        "entity1_mention": "thorington train station",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4391",
        "question": "Which arena of WPC Dynamo Moscow is the death place of Mikhail Voronin ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WPC_Dynamo_Moscow> <http://dbpedia.org/property/arena> ?uri. <http://dbpedia.org/resource/Mikhail_Voronin> <http://dbpedia.org/property/deathPlace> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/arena",
        "predicate1_mention": "arena",
        "predicate2_uri": "http://dbpedia.org/property/deathPlace",
        "predicate2_mention": "death place",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/WPC_Dynamo_Moscow",
        "entity1_mention": "wpc dynamo moscow",
        "entity2_uri": "http://dbpedia.org/resource/Mikhail_Voronin",
        "entity2_mention": "mikhail voronin"
    },
    {
        "id": "4392",
        "question": "How many theme musics have been composed by Julian Gingell?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Julian_Gingell>  . }",
        "sparql_id": "101",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/property/themeMusicComposer",
        "predicate1_mention": "composed",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Julian_Gingell",
        "entity1_mention": "julian gingell",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4393",
        "question": "Name the company founded in US and created Visual Studio ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Microsoft_Visual_Studio>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/foundation",
        "predicate1_mention": "founded",
        "predicate2_uri": "http://dbpedia.org/property/products",
        "predicate2_mention": "created",
        "type_uri": "http://dbpedia.org/ontology/Company",
        "type_mention": "company",
        "entity1_uri": "http://dbpedia.org/resource/United_States",
        "entity1_mention": "US",
        "entity2_uri": "http://dbpedia.org/resource/Microsoft_Visual_Studio",
        "entity2_mention": "visual studio"
    },
    {
        "id": "4395",
        "question": "What is the place of the Geography Club (play) which is also the  official residence of the Scott Berkun?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Geography_Club_(play)> <http://dbpedia.org/property/place> ?uri. <http://dbpedia.org/resource/Scott_Berkun> <http://dbpedia.org/property/residence> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/place",
        "predicate1_mention": "place",
        "predicate2_uri": "http://dbpedia.org/property/residence",
        "predicate2_mention": "residence",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Geography_Club_(play)",
        "entity1_mention": "geography club (play)",
        "entity2_uri": "http://dbpedia.org/resource/Scott_Berkun",
        "entity2_mention": "scott berkun"
    },
    {
        "id": "4396",
        "question": "What are the albums whose artists have performed with the Tangerine Dream?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Tangerine_Dream> . ?uri <http://dbpedia.org/property/artist> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/associatedBand",
        "predicate1_mention": "tangerine",
        "predicate2_uri": "http://dbpedia.org/property/artist",
        "predicate2_mention": "artists",
        "type_uri": "http://dbpedia.org/ontology/Album",
        "type_mention": "albums",
        "entity1_uri": "http://dbpedia.org/resource/Tangerine_Dream",
        "entity1_mention": "tangerine dream",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4397",
        "question": "Which house has published books about Jazz?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/nonFictionSubject> <http://dbpedia.org/resource/Jazz> . ?x <http://dbpedia.org/ontology/publisher> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/nonFictionSubject",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/publisher",
        "predicate2_mention": "published",
        "type_uri": "http://dbpedia.org/ontology/Book",
        "type_mention": "books",
        "entity1_uri": "http://dbpedia.org/resource/Jazz",
        "entity1_mention": "jazz",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4399",
        "question": "Count the number of members of the organization which have Austria as one of the member ?",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/membership> <http://dbpedia.org/resource/Austria> . ?x <http://dbpedia.org/property/membership> ?uri }",
        "sparql_id": "111",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/membership",
        "predicate1_mention": "members",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Austria",
        "entity1_mention": "austria",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4400",
        "question": "Name some relatives of the people studied in Manurewa High School?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/school> <http://dbpedia.org/resource/Manurewa_High_School> . ?x <http://dbpedia.org/ontology/relative> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/school",
        "predicate1_mention": "school",
        "predicate2_uri": "http://dbpedia.org/ontology/relative",
        "predicate2_mention": "relatives",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Manurewa_High_School",
        "entity1_mention": "manurewa high school",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4401",
        "question": "Gregg Toland cinematographed how many things?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Gregg_Toland>  . }",
        "sparql_id": "101",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/ontology/cinematography",
        "predicate1_mention": "cinematographed",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Gregg_Toland",
        "entity1_mention": "gregg toland",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4402",
        "question": "Whose military unit is 39th infantry regiment in 1812?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/39th_Infantry_Regiment_(War_of_1812)>  . }",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/militaryUnit",
        "predicate1_mention": "military unit",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/39th_Infantry_Regiment_(War_of_1812)",
        "entity1_mention": "39th infantry regiment in 1812",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4403",
        "question": "Is Darcs released with a GNU license?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Darcs> <http://dbpedia.org/ontology/license> <http://dbpedia.org/resource/GNU> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/license",
        "predicate1_mention": "license",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Darcs",
        "entity1_mention": "darcs",
        "entity2_uri": "http://dbpedia.org/resource/GNU",
        "entity2_mention": "gnu"
    },
    {
        "id": "4404",
        "question": "List the current members of Metro Station (band) ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Metro_Station_(band)> <http://dbpedia.org/property/currentMembers> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/currentMembers",
        "predicate1_mention": "current members",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Metro_Station_(band)",
        "entity1_mention": "metro station (band)",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4405",
        "question": "Which successor of George Madison is the sucessor of levi Lincoln, Sr. ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_Madison> <http://dbpedia.org/ontology/relation> ?uri. <http://dbpedia.org/resource/Levi_Lincoln,_Sr.> <http://dbpedia.org/property/successor> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/relation",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/successor",
        "predicate2_mention": "successor",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/George_Madison",
        "entity1_mention": "george madison",
        "entity2_uri": "http://dbpedia.org/resource/Levi_Lincoln,_Sr.",
        "entity2_mention": "levi lincoln, sr."
    },
    {
        "id": "4406",
        "question": "Who is the builder of Presidio Santa Cruz de Terrenate ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Presidio_Santa_Cruz_de_Terrenate> <http://dbpedia.org/ontology/builder> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/builder",
        "predicate1_mention": "builder",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Presidio_Santa_Cruz_de_Terrenate",
        "entity1_mention": "presidio santa cruz de terrenate",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4407",
        "question": "What team is famous for Robert Nederlander and also the debuting team of Gary Sanchez?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Nederlander> <http://dbpedia.org/ontology/knownFor> ?uri. <http://dbpedia.org/resource/Gary_S\u00e1nchez> <http://dbpedia.org/ontology/debutTeam> ?uri . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
        "sparql_id": "316",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/knownFor",
        "predicate1_mention": "famous for",
        "predicate2_uri": "http://dbpedia.org/ontology/debutTeam",
        "predicate2_mention": "team",
        "type_uri": "http://dbpedia.org/ontology/SportsTeam",
        "type_mention": "team",
        "entity1_uri": "http://dbpedia.org/resource/Robert_Nederlander",
        "entity1_mention": "robert nederlander",
        "entity2_uri": "http://dbpedia.org/resource/Gary_S\u00e1nchez",
        "entity2_mention": "Gary Sanchez"
    },
    {
        "id": "4408",
        "question": "What is the award which is presented by Swedish Academy?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Swedish_Academy>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/presenter",
        "predicate1_mention": "presented",
        "predicate2_uri": "http://dbpedia.org/ontology/Award",
        "predicate2_mention": "award",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Swedish_Academy",
        "entity1_mention": "swedish academy",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4409",
        "question": "What is the common profession of DeWitt Clinton and Claiborne Pell ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/DeWitt_Clinton> <http://dbpedia.org/property/office> ?uri. <http://dbpedia.org/resource/Claiborne_Pell> <http://dbpedia.org/ontology/profession> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/office",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/profession",
        "predicate2_mention": "profession",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/DeWitt_Clinton",
        "entity1_mention": "dewitt clinton",
        "entity2_uri": "http://dbpedia.org/resource/Claiborne_Pell",
        "entity2_mention": "claiborne pell"
    },
    {
        "id": "4410",
        "question": "Which politicians died in cities built by the Roman emperor Charles 5?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/builder> <http://dbpedia.org/resource/Charles_V,_Holy_Roman_Emperor> . ?uri <http://dbpedia.org/ontology/deathPlace> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/builder",
        "predicate1_mention": "built",
        "predicate2_uri": "http://dbpedia.org/ontology/deathPlace",
        "predicate2_mention": "died in",
        "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
        "type_mention": "politicians",
        "entity1_uri": "http://dbpedia.org/resource/Charles_V,_Holy_Roman_Emperor",
        "entity1_mention": "Roman emperor Charles 5",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4411",
        "question": "List the ingredients of Kaszanka?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kaszanka> <http://dbpedia.org/ontology/ingredient> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/ingredient",
        "predicate1_mention": "ingredients",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Kaszanka",
        "entity1_mention": "kaszanka",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4412",
        "question": "Which broad cast area od CFRX is the country of North America Poker Tour ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/CFRX> <http://dbpedia.org/ontology/broadcastArea> ?uri. <http://dbpedia.org/resource/North_American_Poker_Tour> <http://dbpedia.org/ontology/country> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/broadcastArea",
        "predicate1_mention": "broad cast area",
        "predicate2_uri": "http://dbpedia.org/ontology/country",
        "predicate2_mention": "country",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/CFRX",
        "entity1_mention": "cfrx",
        "entity2_uri": "http://dbpedia.org/resource/North_American_Poker_Tour",
        "entity2_mention": "north america poker tour"
    },
    {
        "id": "4414",
        "question": "What religion did Gamini Seneviratne follow?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gamini_Seneviratne> <http://dbpedia.org/ontology/religion> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/religion",
        "predicate1_mention": "religion",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Gamini_Seneviratne",
        "entity1_mention": "gamini seneviratne",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4415",
        "question": "How many bacterias have taxonomy as Bacillales and domain as Bacteria? ",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Bacillales> . ?uri <http://dbpedia.org/property/domain> <http://dbpedia.org/resource/Bacteria> } ",
        "sparql_id": "108",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/order",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/domain",
        "predicate2_mention": "domain",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Bacillales",
        "entity1_mention": "bacillales",
        "entity2_uri": "http://dbpedia.org/resource/Bacteria",
        "entity2_mention": "Bacteria"
    },
    {
        "id": "4416",
        "question": "Were the bodies involved in the Westroads mall shootings discovered in Nebraska?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Westroads_Mall_shooting> <http://dbpedia.org/property/bodyDiscovered> <http://dbpedia.org/resource/Nebraska> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/bodyDiscovered",
        "predicate1_mention": "discovered",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Westroads_Mall_shooting",
        "entity1_mention": "the westroads mall shootings",
        "entity2_uri": "http://dbpedia.org/resource/Nebraska",
        "entity2_mention": "nebraska"
    },
    {
        "id": "4418",
        "question": "What products do US companies make?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/product> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/location",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/product",
        "predicate2_mention": "products",
        "type_uri": "http://dbpedia.org/ontology/Company",
        "type_mention": "companies",
        "entity1_uri": "http://dbpedia.org/resource/United_States",
        "entity1_mention": "US",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4419",
        "question": "Which animator of The Skeleton Dance is also the animator of the Tommy Tucker's Tooth ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Skeleton_Dance> <http://dbpedia.org/ontology/animator> ?uri. <http://dbpedia.org/resource/Tommy_Tucker's_Tooth> <http://dbpedia.org/property/animator> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/animator",
        "predicate1_mention": "animator",
        "predicate2_uri": "http://dbpedia.org/property/animator",
        "predicate2_mention": "animator",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/The_Skeleton_Dance",
        "entity1_mention": "the skeleton dance ",
        "entity2_uri": "http://dbpedia.org/resource/Tommy_Tucker's_Tooth",
        "entity2_mention": "tommy tucker's tooth"
    },
    {
        "id": "4420",
        "question": "What is the common religious affiliation of the Wickramabahu Central College (National School) and that of  Vesak?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)> <http://dbpedia.org/property/religiousAffiliation> ?uri. <http://dbpedia.org/resource/Vesak> <http://dbpedia.org/ontology/type> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/religiousAffiliation",
        "predicate1_mention": "religious affiliation",
        "predicate2_uri": "http://dbpedia.org/ontology/type",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)",
        "entity1_mention": "wickramabahu central college (national school)",
        "entity2_uri": "http://dbpedia.org/resource/Vesak",
        "entity2_mention": "vesak"
    },
    {
        "id": "4421",
        "question": "Name the mountain range in which the mountain peak of Malatraix belongs?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Malatraix> <http://dbpedia.org/ontology/parentMountainPeak> ?x . ?x <http://dbpedia.org/ontology/mountainRange> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/parentMountainPeak",
        "predicate1_mention": "mountain peak",
        "predicate2_uri": "http://dbpedia.org/ontology/mountainRange",
        "predicate2_mention": "mountain",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Malatraix",
        "entity1_mention": "malatraix",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4422",
        "question": "List education institute of the engineers whose alma mater is ChristChurch ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/education> <http://dbpedia.org/resource/Christchurch> . ?x <http://dbpedia.org/ontology/education> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Engineer>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/education",
        "predicate1_mention": "education",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Engineer",
        "type_mention": "engineers",
        "entity1_uri": "http://dbpedia.org/resource/Christchurch",
        "entity1_mention": "christchurch",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4423",
        "question": "What is the headquarters of the public transit system which is the system of Bottineau LRT ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bottineau_LRT> <http://dbpedia.org/property/system> ?x . ?x <http://dbpedia.org/property/headquarters> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PublicTransitSystem>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/system",
        "predicate1_mention": "system",
        "predicate2_uri": "http://dbpedia.org/property/headquarters",
        "predicate2_mention": "headquarters",
        "type_uri": "http://dbpedia.org/ontology/PublicTransitSystem",
        "type_mention": "public transit system",
        "entity1_uri": "http://dbpedia.org/resource/Bottineau_LRT",
        "entity1_mention": "Bottineau LRT",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4424",
        "question": "What is the place of birth of the jockey who breeded De La Rose ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/De_La_Rose> <http://dbpedia.org/ontology/breeder> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Jockey>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/breeder",
        "predicate1_mention": "breeded",
        "predicate2_uri": "http://dbpedia.org/property/birthPlace",
        "predicate2_mention": "place of birth",
        "type_uri": "http://dbpedia.org/ontology/Jockey",
        "type_mention": "jockey",
        "entity1_uri": "http://dbpedia.org/resource/De_La_Rose",
        "entity1_mention": "de la rose",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4425",
        "question": "How many people are in the England national football team?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/England_national_football_team>  . }",
        "sparql_id": "101",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/property/nationalteam",
        "predicate1_mention": "national football team",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/England_national_football_team",
        "entity1_mention": "england national football team",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4427",
        "question": "What are some shows whose voice actors play the piano?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Piano> . ?uri <http://dbpedia.org/property/voices> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/instrument",
        "predicate1_mention": "play",
        "predicate2_uri": "http://dbpedia.org/property/voices",
        "predicate2_mention": "voice",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "shows",
        "entity1_uri": "http://dbpedia.org/resource/Piano",
        "entity1_mention": "piano",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4428",
        "question": "Where is the building located whose architect was Francis Palmer Smith?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Francis_Palmer_Smith> . ?x <http://dbpedia.org/property/address> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/architect",
        "predicate1_mention": "architect",
        "predicate2_uri": "http://dbpedia.org/property/address",
        "predicate2_mention": "located",
        "type_uri": "http://dbpedia.org/ontology/Building",
        "type_mention": "building",
        "entity1_uri": "http://dbpedia.org/resource/Francis_Palmer_Smith",
        "entity1_mention": "francis palmer smith",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4430",
        "question": "Naval station mobile and naval support activity, naples are under which branch of Us military?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Naval_Station_Mobile> <http://dbpedia.org/ontology/type> ?uri. <http://dbpedia.org/resource/Naval_Support_Activity_Naples> <http://dbpedia.org/ontology/type> ?uri . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
        "sparql_id": "315",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/type",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/type",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/MilitaryUnit",
        "type_mention": "military",
        "entity1_uri": "http://dbpedia.org/resource/Naval_Station_Mobile",
        "entity1_mention": "naval station mobile",
        "entity2_uri": "http://dbpedia.org/resource/Naval_Support_Activity_Naples",
        "entity2_mention": "naval support activity, naples"
    },
    {
        "id": "4431",
        "question": "How many members are there of the order of Bacillales?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Bacillales>  . }",
        "sparql_id": "101",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/ontology/order",
        "predicate1_mention": "order",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Bacillales",
        "entity1_mention": "bacillales",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4434",
        "question": "What sports can be played in institutions in Bataan?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/province> <http://dbpedia.org/resource/Bataan> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/province",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/sport",
        "predicate2_mention": "sports",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Bataan",
        "entity1_mention": "bataan",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4435",
        "question": "Who was in missions of Gemini 8 and Apollo 11?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Gemini_8> . ?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Apollo_11> . }",
        "sparql_id": "7",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/mission",
        "predicate1_mention": "missions",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Gemini_8",
        "entity1_mention": "gemini 8",
        "entity2_uri": "http://dbpedia.org/resource/Apollo_11",
        "entity2_mention": "apollo 11"
    },
    {
        "id": "4436",
        "question": "Who founded the league which was won by Joe McKeehen?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/champion> <http://dbpedia.org/resource/Joe_McKeehen> . ?x <http://dbpedia.org/property/founded> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/champion",
        "predicate1_mention": "won",
        "predicate2_uri": "http://dbpedia.org/property/founded",
        "predicate2_mention": "founded",
        "type_uri": "http://dbpedia.org/ontology/SportsLeague",
        "type_mention": "league",
        "entity1_uri": "http://dbpedia.org/resource/Joe_McKeehen",
        "entity1_mention": "joe mckeehen",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4437",
        "question": "Give me some nominees of politicians in the US?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/nominee> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/residence",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/nominee",
        "predicate2_mention": "nominees",
        "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
        "type_mention": "politicians",
        "entity1_uri": "http://dbpedia.org/resource/United_States",
        "entity1_mention": "US",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4438",
        "question": "To what did the parliament member swore her oath to, whose has sons is Lohan Ratwatte?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Lohan_Ratwatte> . ?x <http://dbpedia.org/property/allegiance> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MemberOfParliament>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/child",
        "predicate1_mention": "sons",
        "predicate2_uri": "http://dbpedia.org/property/allegiance",
        "predicate2_mention": "parliament",
        "type_uri": "http://dbpedia.org/ontology/MemberOfParliament",
        "type_mention": "parliament member",
        "entity1_uri": "http://dbpedia.org/resource/Lohan_Ratwatte",
        "entity1_mention": "lohan ratwatte",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4439",
        "question": "In which races have Tillingdale's horses participated?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Tillingdale> . ?x <http://dbpedia.org/property/race> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/owner",
        "predicate1_mention": "participated",
        "predicate2_uri": "http://dbpedia.org/property/race",
        "predicate2_mention": "races",
        "type_uri": "http://dbpedia.org/ontology/Horse",
        "type_mention": "horses",
        "entity1_uri": "http://dbpedia.org/resource/Tillingdale",
        "entity1_mention": "Tillingdale",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4440",
        "question": "Which country's national motto is \"Truth prevails\"?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/nationalMotto> <http://dbpedia.org/resource/Truth_prevails>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/nationalMotto",
        "predicate1_mention": "national motto",
        "predicate2_uri": "http://dbpedia.org/ontology/Country",
        "predicate2_mention": "country's",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Truth_prevails",
        "entity1_mention": "Truth prevails",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4441",
        "question": "What is the alma mater of Andrew W. Lewis ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Andrew_W._Lewis> <http://dbpedia.org/ontology/almaMater> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/almaMater",
        "predicate1_mention": "alma mater",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Andrew_W._Lewis",
        "entity1_mention": "Andrew W. Lewis",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4442",
        "question": "Name the tv series produced by Stephen Ambrose and Erik Bork?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Stephen_E._Ambrose> . ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Erik_Bork> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "307",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/producer",
        "predicate1_mention": "produced",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "tv series",
        "entity1_uri": "http://dbpedia.org/resource/Stephen_E._Ambrose",
        "entity1_mention": "stephen ambrose",
        "entity2_uri": "http://dbpedia.org/resource/Erik_Bork",
        "entity2_mention": "erik bork"
    },
    {
        "id": "4443",
        "question": "Which movies did Mark Steven edit?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Mark_Stevens_(film_editor)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/editing",
        "predicate1_mention": "edit",
        "predicate2_uri": "http://dbpedia.org/ontology/Film",
        "predicate2_mention": "movies",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Mark_Stevens_(film_editor)",
        "entity1_mention": "mark steven",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4444",
        "question": "Where do the railroads owned by the Chicago and Northwestern Transportation company begin?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/system> <http://dbpedia.org/resource/Chicago_and_North_Western_Transportation_Company> . ?x <http://dbpedia.org/ontology/routeStart> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RailwayLine>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/system",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/routeStart",
        "predicate2_mention": "begin",
        "type_uri": "http://dbpedia.org/ontology/RailwayLine",
        "type_mention": "railroads",
        "entity1_uri": "http://dbpedia.org/resource/Chicago_and_North_Western_Transportation_Company",
        "entity1_mention": "Northwestern Transportation company",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4445",
        "question": "What is the prize received by the one who wrote the screen play of The Postman  ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Postman_(film)> <http://dbpedia.org/property/screenplay> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/screenplay",
        "predicate1_mention": "screen play",
        "predicate2_uri": "http://dbpedia.org/ontology/award",
        "predicate2_mention": "prize",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/The_Postman_(film)",
        "entity1_mention": "the postman",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4446",
        "question": "Give me a list of all the buildings which are located in districts governed by John Tory.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/John_Tory> . ?uri <http://dbpedia.org/ontology/location> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/leaderName",
        "predicate1_mention": "governed",
        "predicate2_uri": "http://dbpedia.org/ontology/location",
        "predicate2_mention": "located",
        "type_uri": "http://dbpedia.org/ontology/Building",
        "type_mention": "buildings",
        "entity1_uri": "http://dbpedia.org/resource/John_Tory",
        "entity1_mention": "john tory",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4447",
        "question": "Count the total number of bacterias whose division is Firmicutes and domain is Bacteria?",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/division> <http://dbpedia.org/resource/Firmicutes> . ?uri <http://dbpedia.org/property/domain> <http://dbpedia.org/resource/Bacteria> } ",
        "sparql_id": "108",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/division",
        "predicate1_mention": "division",
        "predicate2_uri": "http://dbpedia.org/property/domain",
        "predicate2_mention": "domain",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Firmicutes",
        "entity1_mention": "firmicutes",
        "entity2_uri": "http://dbpedia.org/resource/Bacteria",
        "entity2_mention": "bacteria"
    },
    {
        "id": "4449",
        "question": "What is the mascot of the alma mater of Deborah Crombie?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Deborah_Crombie> <http://dbpedia.org/ontology/almaMater> ?x . ?x <http://dbpedia.org/property/mascot> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/almaMater",
        "predicate1_mention": "alma mater",
        "predicate2_uri": "http://dbpedia.org/property/mascot",
        "predicate2_mention": "mascot",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Deborah_Crombie",
        "entity1_mention": "deborah crombie",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4450",
        "question": "Did Bob Suci play for the New England Patriots?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Bob_Suci> <http://dbpedia.org/property/pastteams> <http://dbpedia.org/resource/New_England_Patriots> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/pastteams",
        "predicate1_mention": "patriots",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Bob_Suci",
        "entity1_mention": "bob suci",
        "entity2_uri": "http://dbpedia.org/resource/New_England_Patriots",
        "entity2_mention": "new england patriots"
    },
    {
        "id": "4451",
        "question": "What would be the most important creation which involved both Neil Cross and Russel Davies ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Neil_Cross> <http://dbpedia.org/ontology/notableWork> ?uri. <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/ontology/notableWork> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/notableWork",
        "predicate1_mention": "important creation",
        "predicate2_uri": "",
        "predicate2_mention": "n",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Neil_Cross",
        "entity1_mention": "neil cross",
        "entity2_uri": "http://dbpedia.org/resource/Russell_T_Davies",
        "entity2_mention": "russel davies"
    },
    {
        "id": "4453",
        "question": "Which TV show produced by Paramount Television and is located in Massachusetts ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Paramount_Television> . ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Massachusetts>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/company",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/location",
        "predicate2_mention": "located",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "tv show",
        "entity1_uri": "http://dbpedia.org/resource/Paramount_Television",
        "entity1_mention": "paramount television",
        "entity2_uri": "http://dbpedia.org/resource/Massachusetts",
        "entity2_mention": "massachusetts"
    },
    {
        "id": "4454",
        "question": "Name the mountain which belongs to Sierra Nevada range and is located in Inyo National Forest?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mountainRange> <http://dbpedia.org/resource/Sierra_Nevada_(U.S.)> . ?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Inyo_National_Forest>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/mountainRange",
        "predicate1_mention": "mountain",
        "predicate2_uri": "http://dbpedia.org/ontology/locatedInArea",
        "predicate2_mention": "located",
        "type_uri": "http://dbpedia.org/ontology/Mountain",
        "type_mention": "mountain",
        "entity1_uri": "http://dbpedia.org/resource/Sierra_Nevada_(U.S.)",
        "entity1_mention": "sierra nevada",
        "entity2_uri": "http://dbpedia.org/resource/Inyo_National_Forest",
        "entity2_mention": "Inyo National Forest"
    },
    {
        "id": "4455",
        "question": "What is the company that has products with Windows RT as its OS?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/os> <http://dbpedia.org/resource/Windows_RT> . ?uri <http://dbpedia.org/ontology/product> ?x  . }",
        "sparql_id": "6",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/os",
        "predicate1_mention": "os",
        "predicate2_uri": "http://dbpedia.org/ontology/product",
        "predicate2_mention": "products",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Windows_RT",
        "entity1_mention": "windows rt",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4456",
        "question": "How many labels sign up progressive rock artists?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/genre> <http://dbpedia.org/resource/Progressive_rock> . ?x <http://dbpedia.org/ontology/recordLabel> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/genre",
        "predicate1_mention": "sign",
        "predicate2_uri": "http://dbpedia.org/ontology/recordLabel",
        "predicate2_mention": "labels",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Progressive_rock",
        "entity1_mention": "progressive rock",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4457",
        "question": "Does the AMC Gremlin use an Audi engine?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/AMC_Gremlin> <http://dbpedia.org/property/engine> <http://dbpedia.org/resource/Audi> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/engine",
        "predicate1_mention": "engine",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/AMC_Gremlin",
        "entity1_mention": "amc gremlin",
        "entity2_uri": "http://dbpedia.org/resource/Audi",
        "entity2_mention": "audi"
    },
    {
        "id": "4458",
        "question": "What is the resting place of the child of Linda Lee Cadwell?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Linda_Lee_Cadwell> <http://dbpedia.org/property/children> ?x . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/children",
        "predicate1_mention": "child",
        "predicate2_uri": "http://dbpedia.org/ontology/restingPlace",
        "predicate2_mention": "resting place",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Linda_Lee_Cadwell",
        "entity1_mention": "linda lee cadwell",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4459",
        "question": "What is the religion of the relatives of Carmela Soprano ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Carmela_Soprano> <http://dbpedia.org/ontology/relative> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/relative",
        "predicate1_mention": "relatives",
        "predicate2_uri": "http://dbpedia.org/ontology/religion",
        "predicate2_mention": "religion",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Carmela_Soprano",
        "entity1_mention": "carmela soprano",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4460",
        "question": "What television shows's distributor is Eurovision?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Eurovision_(network)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/distributor",
        "predicate1_mention": "distributor",
        "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "predicate2_mention": "television shows's",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Eurovision_(network)",
        "entity1_mention": "eurovision",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4461",
        "question": "Did Stan Lee create Jean Grey?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jean_Grey> <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Stan_Lee> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/creators",
        "predicate1_mention": "create",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Jean_Grey",
        "entity1_mention": "jean grey",
        "entity2_uri": "http://dbpedia.org/resource/Stan_Lee",
        "entity2_mention": "stan lee"
    },
    {
        "id": "4462",
        "question": "Which indian party has won the arunachal pradesh elections of 2014, and has been in the 4th legislative assembly?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arunachal_Pradesh_Legislative_Assembly_election,_2014> <http://dbpedia.org/property/party> ?uri. <http://dbpedia.org/resource/Fourth_Legislative_Assembly_of_Delhi> <http://dbpedia.org/property/party> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/party",
        "predicate1_mention": "party",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Arunachal_Pradesh_Legislative_Assembly_election,_2014",
        "entity1_mention": "arunachal pradesh elections of 2014",
        "entity2_uri": "http://dbpedia.org/resource/Fourth_Legislative_Assembly_of_Delhi",
        "entity2_mention": "4th legislative assembly"
    },
    {
        "id": "4463",
        "question": "Name the architect of Marine Corps Air Station Kaneohe Bay ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marine_Corps_Air_Station_Kaneohe_Bay> <http://dbpedia.org/property/architect> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/architect",
        "predicate1_mention": "architect",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Marine_Corps_Air_Station_Kaneohe_Bay",
        "entity1_mention": "Marine Corps Air Station Kaneohe Bay",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4466",
        "question": "What are the other launch site of the rockets which also have been launched from  Cape Canaveral Air Force Station Launch Complex 5 ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station_Launch_Complex_5> . ?x <http://dbpedia.org/ontology/launchSite> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Rocket>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/launchSite",
        "predicate1_mention": "launch site",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Rocket",
        "type_mention": "rockets",
        "entity1_uri": "http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station_Launch_Complex_5",
        "entity1_mention": " cape canaveral air force station launch complex 5",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4467",
        "question": "What is the nationality of the David King-Wood and John Steed ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/David_King-Wood> <http://dbpedia.org/property/nationality> ?uri. <http://dbpedia.org/resource/John_Steed> <http://dbpedia.org/property/nationality> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/nationality",
        "predicate1_mention": "nationality",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/David_King-Wood",
        "entity1_mention": "david king-wood",
        "entity2_uri": "http://dbpedia.org/resource/John_Steed",
        "entity2_mention": "john steed"
    },
    {
        "id": "4468",
        "question": "Name the river whose source is located in Ikelenge  District and mouth in Mozambique?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Ikelenge_District> . ?uri <http://dbpedia.org/property/mouthCountry> <http://dbpedia.org/resource/Mozambique>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/sourceLocation",
        "predicate1_mention": "source",
        "predicate2_uri": "http://dbpedia.org/property/mouthCountry",
        "predicate2_mention": "mouth",
        "type_uri": "http://dbpedia.org/ontology/River",
        "type_mention": "river",
        "entity1_uri": "http://dbpedia.org/resource/Ikelenge_District",
        "entity1_mention": "ikelenge district",
        "entity2_uri": "http://dbpedia.org/resource/Mozambique",
        "entity2_mention": "mozambique"
    },
    {
        "id": "4470",
        "question": "Who is the founder of the trade union with whom Amalgamated Clothing Workers of America is affiliated?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Amalgamated_Clothing_Workers_of_America> <http://dbpedia.org/ontology/affiliation> ?x . ?x <http://dbpedia.org/property/founded> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/affiliation",
        "predicate1_mention": "affiliated",
        "predicate2_uri": "http://dbpedia.org/property/founded",
        "predicate2_mention": "founder",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Amalgamated_Clothing_Workers_of_America",
        "entity1_mention": "amalgamated clothing workers of america",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4471",
        "question": "What are some people working for the New York Post?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/New_York_Post>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/employer",
        "predicate1_mention": "working for",
        "predicate2_uri": "http://dbpedia.org/ontology/Person",
        "predicate2_mention": "people",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/New_York_Post",
        "entity1_mention": "new york post",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4472",
        "question": "Which gaming console's central processing unit is microprocessor and built by Sony?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/cpu> <http://dbpedia.org/resource/Cell_(microprocessor)> . ?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Sony>  . }",
        "sparql_id": "8",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/cpu",
        "predicate1_mention": "central processing unit",
        "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
        "predicate2_mention": "built by",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Cell_(microprocessor)",
        "entity1_mention": "microprocessor",
        "entity2_uri": "http://dbpedia.org/resource/Sony",
        "entity2_mention": "sony"
    },
    {
        "id": "4473",
        "question": "From where did the son of Gustavo Rojas Pinilla graduate?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gustavo_Rojas_Pinilla> <http://dbpedia.org/ontology/child> ?x . ?x <http://dbpedia.org/property/almaMater> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/child",
        "predicate1_mention": "son",
        "predicate2_uri": "http://dbpedia.org/property/almaMater",
        "predicate2_mention": "graduate",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Gustavo_Rojas_Pinilla",
        "entity1_mention": "Gustavo Rojas Pinilla",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4475",
        "question": "In which races did Mouse Morris take part?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mouse_Morris> <http://dbpedia.org/property/race> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/race",
        "predicate1_mention": "races",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Mouse_Morris",
        "entity1_mention": "mouse morris",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4476",
        "question": "How many things have made different people living in Canada famous?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Canadians> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/nationality",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/knownFor",
        "predicate2_mention": "famous",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Canadians",
        "entity1_mention": "Canada",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4477",
        "question": "Which famous political figures are relatives to George Madison?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_Madison> <http://dbpedia.org/ontology/relation> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/relation",
        "predicate1_mention": "relatives",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/George_Madison",
        "entity1_mention": "george madison",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4478",
        "question": "Which TV show's composer is Judy  Hart  Angelo and executive producer as Glen and Les Charles?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/Judy_Hart_Angelo> . ?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Glen_and_Les_Charles>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/composer",
        "predicate1_mention": "composer",
        "predicate2_uri": "http://dbpedia.org/ontology/executiveProducer",
        "predicate2_mention": "executive producer",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "tv show's",
        "entity1_uri": "http://dbpedia.org/resource/Judy_Hart_Angelo",
        "entity1_mention": "judy hart angelo",
        "entity2_uri": "http://dbpedia.org/resource/Glen_and_Les_Charles",
        "entity2_mention": "Glen and Les Charles"
    },
    {
        "id": "4479",
        "question": "What is the meaning of Heydar ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Heydar> <http://dbpedia.org/property/meaning> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/meaning",
        "predicate1_mention": "meaning",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Heydar",
        "entity1_mention": "heydar",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4480",
        "question": "Name the fictional character whose species is American Pekin duck and has relatives named Ludwig Von Drake?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/American_Pekin_duck> . ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Ludwig_Von_Drake>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/species",
        "predicate1_mention": "species",
        "predicate2_uri": "http://dbpedia.org/property/relatives",
        "predicate2_mention": "relatives",
        "type_uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "type_mention": "fictional character",
        "entity1_uri": "http://dbpedia.org/resource/American_Pekin_duck",
        "entity1_mention": "american pekin duck",
        "entity2_uri": "http://dbpedia.org/resource/Ludwig_Von_Drake",
        "entity2_mention": "ludwig von drake"
    },
    {
        "id": "4482",
        "question": "What is the religion of the governors whose office is the Bank of Thailand?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/office> <http://dbpedia.org/resource/Bank_of_Thailand> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Governor>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/office",
        "predicate1_mention": "office",
        "predicate2_uri": "http://dbpedia.org/ontology/religion",
        "predicate2_mention": "religion",
        "type_uri": "http://dbpedia.org/ontology/Governor",
        "type_mention": "governors",
        "entity1_uri": "http://dbpedia.org/resource/Bank_of_Thailand",
        "entity1_mention": "bank of thailand",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4483",
        "question": "Name all the junctions of U.S. Route 59?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/U.S._Route_59> <http://dbpedia.org/property/junction> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/junction",
        "predicate1_mention": "junctions",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/U.S._Route_59",
        "entity1_mention": "U.S. Route 59",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4484",
        "question": "Count the number of  fields of the scientists whose one of the fields is Sanskrit?",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/fields> <http://dbpedia.org/resource/Sanskrit> . ?x <http://dbpedia.org/property/fields> ?uri }",
        "sparql_id": "111",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/fields",
        "predicate1_mention": "fields",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Sanskrit",
        "entity1_mention": "sanskrit",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4487",
        "question": "What is the layout of the cars similar to that of the Subaru Outback?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/relatedMeanOfTransportation> <http://dbpedia.org/resource/Subaru_Outback> . ?x <http://dbpedia.org/ontology/layout> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/relatedMeanOfTransportation",
        "predicate1_mention": "similar to",
        "predicate2_uri": "http://dbpedia.org/ontology/layout",
        "predicate2_mention": "layout",
        "type_uri": "http://dbpedia.org/ontology/Automobile",
        "type_mention": "cars",
        "entity1_uri": "http://dbpedia.org/resource/Subaru_Outback",
        "entity1_mention": "subaru outback",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4489",
        "question": "Name the hubs of the airlines whose headquarters is in the Subang Interchange?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Subang_Interchange> . ?x <http://dbpedia.org/property/hubs> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/headquarters",
        "predicate1_mention": "headquarters",
        "predicate2_uri": "http://dbpedia.org/property/hubs",
        "predicate2_mention": "hubs",
        "type_uri": "http://dbpedia.org/ontology/Airline",
        "type_mention": "airlines",
        "entity1_uri": "http://dbpedia.org/resource/Subang_Interchange",
        "entity1_mention": "subang interchange",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4490",
        "question": "How many people work in the Massachusetts house of Representatives?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/office> <http://dbpedia.org/resource/Massachusetts_House_of_Representatives>  . }",
        "sparql_id": "101",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/property/office",
        "predicate1_mention": "work in",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Massachusetts_House_of_Representatives",
        "entity1_mention": "massachusetts house of representatives",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4494",
        "question": "What is the debut team of the baseball player who was born in Williamsburg, Kansas ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Williamsburg,_Kansas> . ?x <http://dbpedia.org/property/debutteam> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballPlayer>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/birthPlace",
        "predicate1_mention": "born in",
        "predicate2_uri": "http://dbpedia.org/property/debutteam",
        "predicate2_mention": "debut team",
        "type_uri": "http://dbpedia.org/ontology/BaseballPlayer",
        "type_mention": "baseball player",
        "entity1_uri": "http://dbpedia.org/resource/Williamsburg,_Kansas",
        "entity1_mention": "williamsburg, kansas",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4497",
        "question": "Name the route start of Saint Petersburg Moscow Railway ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Saint_Petersburg_\u2013_Moscow_Railway> <http://dbpedia.org/ontology/routeStart> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/routeStart",
        "predicate1_mention": "route start",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Saint_Petersburg_\u2013_Moscow_Railway",
        "entity1_mention": "Saint Petersburg Moscow Railway",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4500",
        "question": "Which county seats are in the district where I can find the Hylebos Creek?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hylebos_Creek> <http://dbpedia.org/ontology/district> ?x . ?x <http://dbpedia.org/ontology/countySeat> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/district",
        "predicate1_mention": "district",
        "predicate2_uri": "http://dbpedia.org/ontology/countySeat",
        "predicate2_mention": "county seats",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Hylebos_Creek",
        "entity1_mention": "hylebos creek",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4501",
        "question": "Who was succeeded by Arthur Gegei ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Art\u00far_G\u00f6rgei>  . }",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/successor",
        "predicate1_mention": "succeeded by",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Art\u00far_G\u00f6rgei",
        "entity1_mention": "Arthur Gegei",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4502",
        "question": "What other awards have been given to Goya Award Winners?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Goya_Awards> . ?x <http://dbpedia.org/property/awards> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/award",
        "predicate1_mention": "award",
        "predicate2_uri": "http://dbpedia.org/property/awards",
        "predicate2_mention": "awards",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Goya_Awards",
        "entity1_mention": "Goya Award",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4503",
        "question": "Which river inflow of the Cahora Bassa is also Batoka Gorge Hydroelectric Power Station's river ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cahora_Bassa> <http://dbpedia.org/property/inflow> ?uri. <http://dbpedia.org/resource/Batoka_Gorge_Hydroelectric_Power_Station> <http://dbpedia.org/ontology/river> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/inflow",
        "predicate1_mention": "inflow",
        "predicate2_uri": "http://dbpedia.org/ontology/river",
        "predicate2_mention": "river",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Cahora_Bassa",
        "entity1_mention": "cahora bassa",
        "entity2_uri": "http://dbpedia.org/resource/Batoka_Gorge_Hydroelectric_Power_Station",
        "entity2_mention": "Batoka Gorge Hydroelectric Power Station's"
    },
    {
        "id": "4504",
        "question": "Does the mississippi orignate in the clearwater county, minnesota?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mississippi_River> <http://dbpedia.org/ontology/sourceRegion> <http://dbpedia.org/resource/Clearwater_County,_Minnesota> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/sourceRegion",
        "predicate1_mention": "orignate in",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Mississippi_River",
        "entity1_mention": "mississippi",
        "entity2_uri": "http://dbpedia.org/resource/Clearwater_County,_Minnesota",
        "entity2_mention": "clearwater county, minnesota"
    },
    {
        "id": "4505",
        "question": "Who owns the tunnels operated by the Massachusetts Department of Transportation?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/operatedBy> <http://dbpedia.org/resource/Massachusetts_Department_of_Transportation> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoadTunnel>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/operatedBy",
        "predicate1_mention": "operated by",
        "predicate2_uri": "http://dbpedia.org/property/owner",
        "predicate2_mention": "owns",
        "type_uri": "http://dbpedia.org/ontology/RoadTunnel",
        "type_mention": "tunnels",
        "entity1_uri": "http://dbpedia.org/resource/Massachusetts_Department_of_Transportation",
        "entity1_mention": "massachusetts department of transportation",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4506",
        "question": "In how many districts is there a borough called tendring?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/borough> <http://dbpedia.org/resource/Tendring> . ?x <http://dbpedia.org/ontology/district> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/borough",
        "predicate1_mention": "borough",
        "predicate2_uri": "http://dbpedia.org/ontology/district",
        "predicate2_mention": "districts",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Tendring",
        "entity1_mention": "tendring",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4507",
        "question": "Name the company with product lines like Visual studio and Surface ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Microsoft_Visual_Studio> . ?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Microsoft_Surface>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/products",
        "predicate1_mention": "product",
        "predicate2_uri": "http://dbpedia.org/ontology/product",
        "predicate2_mention": "product",
        "type_uri": "http://dbpedia.org/ontology/Company",
        "type_mention": "company",
        "entity1_uri": "http://dbpedia.org/resource/Microsoft_Visual_Studio",
        "entity1_mention": "visual studio",
        "entity2_uri": "http://dbpedia.org/resource/Microsoft_Surface",
        "entity2_mention": "surface"
    },
    {
        "id": "4509",
        "question": "Who is the appointer of Earl B. Ruth ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Earl_B._Ruth> <http://dbpedia.org/property/appointer> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/appointer",
        "predicate1_mention": "appointer",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Earl_B._Ruth",
        "entity1_mention": "Earl B. Ruth",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4510",
        "question": "Which partner of the Tim Mathieson is also the primeminister of the Mike Kelly (Australian politician) ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tim_Mathieson> <http://dbpedia.org/ontology/partner> ?uri. <http://dbpedia.org/resource/Mike_Kelly_(Australian_politician)> <http://dbpedia.org/property/primeminister> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/partner",
        "predicate1_mention": "partner",
        "predicate2_uri": "http://dbpedia.org/property/primeminister",
        "predicate2_mention": "primeminister",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Tim_Mathieson",
        "entity1_mention": "tim mathieson",
        "entity2_uri": "http://dbpedia.org/resource/Mike_Kelly_(Australian_politician)",
        "entity2_mention": "mike kelly (australian politician)"
    },
    {
        "id": "4511",
        "question": "Which river does Katima Mulilo Bridge cross?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Katima_Mulilo_Bridge> <http://dbpedia.org/property/crosses> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/crosses",
        "predicate1_mention": "cross",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Katima_Mulilo_Bridge",
        "entity1_mention": "katima mulilo bridge",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4512",
        "question": "Which city is Black Grape Global located ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Black_Grape_Global> <http://dbpedia.org/ontology/locationCity> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/locationCity",
        "predicate1_mention": "located",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Black_Grape_Global",
        "entity1_mention": "black grape global",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4513",
        "question": "To which company is the service \"Nintendo eShop\" associated with?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Nintendo_eShop>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/services",
        "predicate1_mention": "service",
        "predicate2_uri": "http://dbpedia.org/ontology/Company",
        "predicate2_mention": "company",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Nintendo_eShop",
        "entity1_mention": "Nintendo eShop",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4515",
        "question": "Who preceded Lucius Crus as an office holder?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Lucius_Cornelius_Lentulus_Crus>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/predecessor",
        "predicate1_mention": "preceded",
        "predicate2_uri": "http://dbpedia.org/ontology/OfficeHolder",
        "predicate2_mention": "office holder",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Lucius_Cornelius_Lentulus_Crus",
        "entity1_mention": "lucius crus",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4518",
        "question": "Name the key people  whose one of the key person is Lesley Anne knight ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Lesley-Anne_Knight> . ?x <http://dbpedia.org/property/keyPeople> ?uri  . }",
        "sparql_id": "11",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/keyPeople",
        "predicate1_mention": "key people",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Lesley-Anne_Knight",
        "entity1_mention": "lesley anne knight",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4519",
        "question": "What show had NTSC format and theme music composed by  Ron Grainer?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/format> <http://dbpedia.org/resource/NTSC> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Ron_Grainer>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/format",
        "predicate1_mention": "format",
        "predicate2_uri": "http://dbpedia.org/property/themeMusicComposer",
        "predicate2_mention": "composed by",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "show",
        "entity1_uri": "http://dbpedia.org/resource/NTSC",
        "entity1_mention": "ntsc",
        "entity2_uri": "http://dbpedia.org/resource/Ron_Grainer",
        "entity2_mention": "ron grainer"
    },
    {
        "id": "4520",
        "question": "Who was once married to both Kelly Brook and Rosie Huntington-Whiteley?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kelly_Brook> <http://dbpedia.org/ontology/partner> ?uri. <http://dbpedia.org/resource/Rosie_Huntington-Whiteley> <http://dbpedia.org/ontology/partner> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/partner",
        "predicate1_mention": "married to",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Kelly_Brook",
        "entity1_mention": "kelly brook",
        "entity2_uri": "http://dbpedia.org/resource/Rosie_Huntington-Whiteley",
        "entity2_mention": "rosie huntington-whiteley"
    },
    {
        "id": "4522",
        "question": "Which board memeber of jimmy Wales also owns Latvian Wikipedia ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jimmy_Wales> <http://dbpedia.org/ontology/board> ?uri. <http://dbpedia.org/resource/Latvian_Wikipedia> <http://dbpedia.org/ontology/owner> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/board",
        "predicate1_mention": "board",
        "predicate2_uri": "http://dbpedia.org/ontology/owner",
        "predicate2_mention": "owns",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Jimmy_Wales",
        "entity1_mention": "jimmy wales",
        "entity2_uri": "http://dbpedia.org/resource/Latvian_Wikipedia",
        "entity2_mention": "latvian wikipedia"
    },
    {
        "id": "4523",
        "question": "What would be a common border of Siberia and the shimsa plateau?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Shim\u014dsa_Plateau> <http://dbpedia.org/ontology/border> ?uri. <http://dbpedia.org/resource/Siberia> <http://dbpedia.org/ontology/border> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/border",
        "predicate1_mention": "border",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Shim\u014dsa_Plateau",
        "entity1_mention": "plateau",
        "entity2_uri": "http://dbpedia.org/resource/Siberia",
        "entity2_mention": "siberia"
    },
    {
        "id": "4524",
        "question": "List the institute of Robert hall ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Hall_(economist)> <http://dbpedia.org/ontology/institution> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/institution",
        "predicate1_mention": "institute",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Robert_Hall_(economist)",
        "entity1_mention": "robert",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4525",
        "question": "Name the ones who debuted in the San Francisco 49ers",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/debutTeam> <http://dbpedia.org/resource/San_Francisco_49ers>  . }",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/debutTeam",
        "predicate1_mention": "debuted",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/San_Francisco_49ers",
        "entity1_mention": "san francisco 49ers",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4526",
        "question": "What are some shows by Comedy Central?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/Comedy_Central>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/network",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "predicate2_mention": "shows",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Comedy_Central",
        "entity1_mention": "comedy central",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4527",
        "question": "What is the county of the road whose route end is Pahang ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/routeEnd> <http://dbpedia.org/resource/Pahang> . ?x <http://dbpedia.org/ontology/county> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Road>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/routeEnd",
        "predicate1_mention": "route end",
        "predicate2_uri": "http://dbpedia.org/ontology/county",
        "predicate2_mention": "county",
        "type_uri": "http://dbpedia.org/ontology/Road",
        "type_mention": "road",
        "entity1_uri": "http://dbpedia.org/resource/Pahang",
        "entity1_mention": "pahang",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4528",
        "question": "What are some magazines whose publishers are themselves Rock and Roll Hall of Fame members?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Rock_and_Roll_Hall_of_Fame> . ?uri <http://dbpedia.org/ontology/publisher> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/award",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/publisher",
        "predicate2_mention": "publishers",
        "type_uri": "http://dbpedia.org/ontology/Magazine",
        "type_mention": "magazines",
        "entity1_uri": "http://dbpedia.org/resource/Rock_and_Roll_Hall_of_Fame",
        "entity1_mention": "Rock and Roll Hall of Fame",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4529",
        "question": "In which states can I find Truss bridges?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/style> <http://dbpedia.org/resource/Truss_bridge> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/style",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/state",
        "predicate2_mention": "states",
        "type_uri": "http://dbpedia.org/ontology/Bridge",
        "type_mention": "bridges",
        "entity1_uri": "http://dbpedia.org/resource/Truss_bridge",
        "entity1_mention": "Truss bridges",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4530",
        "question": "Does Richard Marx play guitar?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Richard_Marx> <http://dbpedia.org/property/instrument> <http://dbpedia.org/resource/Guitar> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/instrument",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Richard_Marx",
        "entity1_mention": "richard marx",
        "entity2_uri": "http://dbpedia.org/resource/Guitar",
        "entity2_mention": "guitar"
    },
    {
        "id": "4532",
        "question": "Which university is led by Jay Gogue?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/president> <http://dbpedia.org/resource/Jay_Gogue>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/president",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/University",
        "predicate2_mention": "university",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Jay_Gogue",
        "entity1_mention": "jay gogue",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4533",
        "question": "What is the river one of whose left tributary's native name is Arabic?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/nativeName> <http://dbpedia.org/resource/Arabic> . ?uri <http://dbpedia.org/ontology/leftTributary> ?x  . }",
        "sparql_id": "6",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/nativeName",
        "predicate1_mention": "native name",
        "predicate2_uri": "http://dbpedia.org/ontology/leftTributary",
        "predicate2_mention": "tributary's",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Arabic",
        "entity1_mention": "arabic",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4534",
        "question": "Name the office holder whose spouse is Dolley Madison and belongs to Militia branch ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Dolley_Madison> . ?uri <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Militia>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/spouse",
        "predicate1_mention": "spouse",
        "predicate2_uri": "http://dbpedia.org/property/branch",
        "predicate2_mention": "branch",
        "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
        "type_mention": "office holder",
        "entity1_uri": "http://dbpedia.org/resource/Dolley_Madison",
        "entity1_mention": "dolley madison",
        "entity2_uri": "http://dbpedia.org/resource/Militia",
        "entity2_mention": "militia"
    },
    {
        "id": "4537",
        "question": "What is the origin of the grape whose wine region is the Troodos Mountains ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/wineRegion> <http://dbpedia.org/resource/Troodos_Mountains> . ?x <http://dbpedia.org/ontology/origin> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Grape>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/wineRegion",
        "predicate1_mention": "wine region",
        "predicate2_uri": "http://dbpedia.org/ontology/origin",
        "predicate2_mention": "origin",
        "type_uri": "http://dbpedia.org/ontology/Grape",
        "type_mention": "grape",
        "entity1_uri": "http://dbpedia.org/resource/Troodos_Mountains",
        "entity1_mention": "troodos mountains",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4538",
        "question": "Where is the headquarter of Regional Transit Authority of Southeast Michigan ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Regional_Transit_Authority_of_Southeast_Michigan> <http://dbpedia.org/property/headquarters> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/headquarters",
        "predicate1_mention": "headquarter",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Regional_Transit_Authority_of_Southeast_Michigan",
        "entity1_mention": "Regional Transit Authority of Southeast Michigan",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4539",
        "question": "Who is the appointer of Charles Goodell ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charles_Goodell> <http://dbpedia.org/ontology/appointer> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/appointer",
        "predicate1_mention": "appointer",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Charles_Goodell",
        "entity1_mention": "charles goodell",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4540",
        "question": "Which high school of jerry Tagge is also the nearest city of Tennie laura ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerry_Tagge> <http://dbpedia.org/property/highSchool> ?uri. <http://dbpedia.org/resource/Tennie_and_Laura_(schooner)> <http://dbpedia.org/property/nearestCity> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/highSchool",
        "predicate1_mention": "high school",
        "predicate2_uri": "http://dbpedia.org/property/nearestCity",
        "predicate2_mention": "nearest city",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Jerry_Tagge",
        "entity1_mention": "jerry tagge",
        "entity2_uri": "http://dbpedia.org/resource/Tennie_and_Laura_(schooner)",
        "entity2_mention": "Tennie laura"
    },
    {
        "id": "4541",
        "question": "Name the common serving line of Daund Junction railway station and Ujjain Junction railway station?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Daund_Junction_railway_station> <http://dbpedia.org/ontology/servingRailwayLine> ?uri. <http://dbpedia.org/resource/Ujjain_Junction_railway_station> <http://dbpedia.org/ontology/servingRailwayLine> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/servingRailwayLine",
        "predicate1_mention": "serving line",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Daund_Junction_railway_station",
        "entity1_mention": "Daund Junction railway station",
        "entity2_uri": "http://dbpedia.org/resource/Ujjain_Junction_railway_station",
        "entity2_mention": "Ujjain junction railway station"
    },
    {
        "id": "4542",
        "question": "In which cities were the chess grand masters born?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Grandmaster_(chess)> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/title",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
        "predicate2_mention": "born",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Grandmaster_(chess)",
        "entity1_mention": "chess grand masters",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4544",
        "question": "What is the common branch of military of Edward Joseph Schwartz  and John Tower ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Edward_Joseph_Schwartz> <http://dbpedia.org/property/branch> ?uri. <http://dbpedia.org/resource/John_Tower> <http://dbpedia.org/ontology/militaryBranch> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/branch",
        "predicate1_mention": "branch",
        "predicate2_uri": "http://dbpedia.org/ontology/militaryBranch",
        "predicate2_mention": "branch of military",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Edward_Joseph_Schwartz",
        "entity1_mention": "edward joseph schwartz",
        "entity2_uri": "http://dbpedia.org/resource/John_Tower",
        "entity2_mention": "john tower"
    },
    {
        "id": "4545",
        "question": "What nation is the motherland of Ricardo Alfonso Cerna  where Apostolic Vicariate of El Petn is located?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ricardo_Alfonso_Cerna> <http://dbpedia.org/property/birthPlace> ?uri. <http://dbpedia.org/resource/Apostolic_Vicariate_of_El_Pet\u00e9n> <http://dbpedia.org/ontology/country> ?uri . }",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/birthPlace",
        "predicate1_mention": "located",
        "predicate2_uri": "http://dbpedia.org/ontology/country",
        "predicate2_mention": "motherland",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Ricardo_Alfonso_Cerna",
        "entity1_mention": "ricardo alfonso cerna",
        "entity2_uri": "http://dbpedia.org/resource/Apostolic_Vicariate_of_El_Pet\u00e9n",
        "entity2_mention": "Apostolic Vicariate of El Petn"
    },
    {
        "id": "4546",
        "question": "Which border country of the Korean Peninsula is also the country of Krusty, a musical group ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Korean_Peninsula> <http://dbpedia.org/ontology/border> ?uri. <http://dbpedia.org/resource/Krusty_(music_group)> <http://dbpedia.org/ontology/country> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/border",
        "predicate1_mention": "border",
        "predicate2_uri": "http://dbpedia.org/ontology/country",
        "predicate2_mention": "country",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Korean_Peninsula",
        "entity1_mention": "korean peninsula",
        "entity2_uri": "http://dbpedia.org/resource/Krusty_(music_group)",
        "entity2_mention": "Krusty, a musical group"
    },
    {
        "id": "4547",
        "question": "List the destinations of Novair International Airways ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Novair_International_Airways> <http://dbpedia.org/property/destinations> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/destinations",
        "predicate1_mention": "destinations",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Novair_International_Airways",
        "entity1_mention": "novair international airways",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4549",
        "question": "What does the river end on whose border we find in Bjelasnica?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/border> <http://dbpedia.org/resource/Bjela\u0161nica> . ?x <http://dbpedia.org/ontology/mouthCountry> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/border",
        "predicate1_mention": "border",
        "predicate2_uri": "http://dbpedia.org/ontology/mouthCountry",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Bjela\u0161nica",
        "entity1_mention": "Bjelasnica",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4550",
        "question": "What is the home town of the musical artist who is the current members of Slapstick?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Slapstick_(band)> <http://dbpedia.org/property/currentMembers> ?x . ?x <http://dbpedia.org/ontology/hometown> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/currentMembers",
        "predicate1_mention": "current members",
        "predicate2_uri": "http://dbpedia.org/ontology/hometown",
        "predicate2_mention": "home town",
        "type_uri": "http://dbpedia.org/ontology/MusicalArtist",
        "type_mention": "musical artist",
        "entity1_uri": "http://dbpedia.org/resource/Slapstick_(band)",
        "entity1_mention": "slapstick",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4552",
        "question": "Which newspapers are owned by Oslo citizens?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Oslo> . ?uri <http://dbpedia.org/property/owners> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/location",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/owners",
        "predicate2_mention": "owned",
        "type_uri": "http://dbpedia.org/ontology/Newspaper",
        "type_mention": "newspapers",
        "entity1_uri": "http://dbpedia.org/resource/Oslo",
        "entity1_mention": "oslo",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4553",
        "question": "Which hockey teams have had people playing as Defenceman?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Defenceman> . ?x <http://dbpedia.org/property/playedFor> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/IceHockeyPlayer>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/position",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/playedFor",
        "predicate2_mention": "playing",
        "type_uri": "http://dbpedia.org/ontology/IceHockeyPlayer",
        "type_mention": "hockey",
        "entity1_uri": "http://dbpedia.org/resource/Defenceman",
        "entity1_mention": "defenceman",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4554",
        "question": "What are the products of the company who published Robot Wars: Metal Mayhem ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robot_Wars:_Metal_Mayhem> <http://dbpedia.org/ontology/publisher> ?x . ?x <http://dbpedia.org/ontology/product> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/publisher",
        "predicate1_mention": "published",
        "predicate2_uri": "http://dbpedia.org/ontology/product",
        "predicate2_mention": "products",
        "type_uri": "http://dbpedia.org/ontology/Company",
        "type_mention": "company",
        "entity1_uri": "http://dbpedia.org/resource/Robot_Wars:_Metal_Mayhem",
        "entity1_mention": "Robot Wars: Metal Mayhem",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4556",
        "question": "What is the political party to which Purnima Banerjee is a member of??",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Purnima_Banerjee> <http://dbpedia.org/ontology/party> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/party",
        "predicate1_mention": "party",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Purnima_Banerjee",
        "entity1_mention": "purnima banerjee",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4557",
        "question": "What monument was unveiled in 1984 of fine arts of the Soviet Union ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1984_in_fine_arts_of_the_Soviet_Union> <http://dbpedia.org/property/title> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/title",
        "predicate1_mention": "monument",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/1984_in_fine_arts_of_the_Soviet_Union",
        "entity1_mention": "1984 of fine arts of the Soviet Union",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4559",
        "question": "In how many places are the tombs of everyone who died in England?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/England> . ?x <http://dbpedia.org/property/placeOfBurial> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/placeOfDeath",
        "predicate1_mention": "died in",
        "predicate2_uri": "http://dbpedia.org/property/placeOfBurial",
        "predicate2_mention": "died in",
        "type_uri": "http://dbpedia.org/ontology/Place",
        "type_mention": "places",
        "entity1_uri": "http://dbpedia.org/resource/England",
        "entity1_mention": "england",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4560",
        "question": "In all the states which have a Uniontown, where does a Keller's mill covered bridge exist too?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Uniontown,_Pennsylvania> <http://dbpedia.org/ontology/state> ?uri. <http://dbpedia.org/resource/Keller's_Mill_Covered_Bridge> <http://dbpedia.org/ontology/state> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/state",
        "predicate1_mention": "states",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Uniontown,_Pennsylvania",
        "entity1_mention": "uniontown,",
        "entity2_uri": "http://dbpedia.org/resource/Keller's_Mill_Covered_Bridge",
        "entity2_mention": "keller's mill covered bridge"
    },
    {
        "id": "4561",
        "question": "Count the religions followed by people living in British Columbia.",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/British_Columbia> . ?x <http://dbpedia.org/property/religion> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/residence",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/religion",
        "predicate2_mention": "religions",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/British_Columbia",
        "entity1_mention": "British Columbia",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4562",
        "question": "The sports team which played at the American Basketball League championship (1996-1998), have which stadiums?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/American_Basketball_League_(1996\u201398)> . ?x <http://dbpedia.org/ontology/stadium> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/league",
        "predicate1_mention": "league",
        "predicate2_uri": "http://dbpedia.org/ontology/stadium",
        "predicate2_mention": "stadiums",
        "type_uri": "http://dbpedia.org/ontology/SportsTeam",
        "type_mention": "sports team",
        "entity1_uri": "http://dbpedia.org/resource/American_Basketball_League_(1996\u201398)",
        "entity1_mention": "american basketball league",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4563",
        "question": "What is the order of the Omar D. Conger where Robert Sarvis was also the nominee ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Omar_D._Conger> <http://dbpedia.org/property/order> ?uri. <http://dbpedia.org/resource/Robert_Sarvis> <http://dbpedia.org/ontology/nominee> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/order",
        "predicate1_mention": "order",
        "predicate2_uri": "http://dbpedia.org/ontology/nominee",
        "predicate2_mention": "nominee",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Omar_D._Conger",
        "entity1_mention": "Omar D. Conger",
        "entity2_uri": "http://dbpedia.org/resource/Robert_Sarvis",
        "entity2_mention": "robert sarvis"
    },
    {
        "id": "4566",
        "question": "How many publisher have been founded by american citizens?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/stateOfOrigin> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/ontology/founder> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Publisher>}",
        "sparql_id": "406",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/founder",
        "predicate2_mention": "founded",
        "type_uri": "http://dbpedia.org/ontology/Publisher",
        "type_mention": "publisher",
        "entity1_uri": "http://dbpedia.org/resource/United_States",
        "entity1_mention": "american",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4568",
        "question": "Who was the chairman of Fort Lauderdale Strikers and also 2015 Fort Lauderdale Strikers season ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2015_Fort_Lauderdale_Strikers_season> <http://dbpedia.org/ontology/chairman> ?uri. <http://dbpedia.org/resource/Fort_Lauderdale_Strikers> <http://dbpedia.org/ontology/chairman> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/chairman",
        "predicate1_mention": "chairman",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/2015_Fort_Lauderdale_Strikers_season",
        "entity1_mention": "2015 Fort Lauderdale Strikers season",
        "entity2_uri": "http://dbpedia.org/resource/Fort_Lauderdale_Strikers",
        "entity2_mention": "Fort Lauderdale Strikers"
    },
    {
        "id": "4570",
        "question": "List some writers which speak one of the Germanic languages.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/languageFamily> <http://dbpedia.org/resource/Germanic_languages> . ?uri <http://dbpedia.org/property/language> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/languageFamily",
        "predicate1_mention": "languages.",
        "predicate2_uri": "http://dbpedia.org/property/language",
        "predicate2_mention": "languages.",
        "type_uri": "http://dbpedia.org/ontology/Writer",
        "type_mention": "writers",
        "entity1_uri": "http://dbpedia.org/resource/Germanic_languages",
        "entity1_mention": "Germanic languages",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4572",
        "question": "Give me all magazines whose editors live in Chicago?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Chicago> . ?uri <http://dbpedia.org/property/editor> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/hometown",
        "predicate1_mention": "live in",
        "predicate2_uri": "http://dbpedia.org/property/editor",
        "predicate2_mention": "editors",
        "type_uri": "http://dbpedia.org/ontology/Magazine",
        "type_mention": "magazines",
        "entity1_uri": "http://dbpedia.org/resource/Chicago",
        "entity1_mention": "chicago",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4573",
        "question": "Which religions are followed by people in England?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/England> . ?x <http://dbpedia.org/property/religion> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/residence",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/religion",
        "predicate2_mention": "religions",
        "type_uri": "http://dbpedia.org/ontology/Person",
        "type_mention": "people",
        "entity1_uri": "http://dbpedia.org/resource/England",
        "entity1_mention": "england",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4574",
        "question": "Which televison shows have location as Massachusetts ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Massachusetts>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/location",
        "predicate1_mention": "location",
        "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "predicate2_mention": "televison shows",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Massachusetts",
        "entity1_mention": "massachusetts",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4575",
        "question": "Which governor of Charles Willing had a child named John Scott ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/governor> <http://dbpedia.org/resource/Charles_Willing_Byrd> . ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/John_Scott_Harrison>  . }",
        "sparql_id": "8",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/governor",
        "predicate1_mention": "governor",
        "predicate2_uri": "http://dbpedia.org/ontology/child",
        "predicate2_mention": "child",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Charles_Willing_Byrd",
        "entity1_mention": "charles willing",
        "entity2_uri": "http://dbpedia.org/resource/John_Scott_Harrison",
        "entity2_mention": "john scott"
    },
    {
        "id": "4576",
        "question": "Give me some series whose network's owning company is Warner Bros. Television?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/Warner_Bros._Television> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/owningCompany",
        "predicate1_mention": "owning company",
        "predicate2_uri": "http://dbpedia.org/ontology/network",
        "predicate2_mention": "network's",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "television",
        "entity1_uri": "http://dbpedia.org/resource/Warner_Bros._Television",
        "entity1_mention": "warner bros. television",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4577",
        "question": "What is the province of Egypt Nanotechnology Center ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Egypt_Nanotechnology_Center> <http://dbpedia.org/property/province> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/province",
        "predicate1_mention": "province",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Egypt_Nanotechnology_Center",
        "entity1_mention": "egypt nanotechnology center",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4578",
        "question": "What is manufactured by a company founded by Akio Morita?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Akio_Morita> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }",
        "sparql_id": "6",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/founder",
        "predicate1_mention": "founded",
        "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
        "predicate2_mention": "manufactured",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Akio_Morita",
        "entity1_mention": "akio morita",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4580",
        "question": "Where did Rheinmetall MG 60 originated ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rheinmetall_MG_60> <http://dbpedia.org/ontology/origin> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/origin",
        "predicate1_mention": "originated",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Rheinmetall_MG_60",
        "entity1_mention": "Rheinmetall MG 60",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4581",
        "question": "What is the war in which both K Fordice and P Fitzwallace fight?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kirk_Fordice> <http://dbpedia.org/property/battles> ?uri. <http://dbpedia.org/resource/Percy_Fitzwallace> <http://dbpedia.org/property/battles> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/battles",
        "predicate1_mention": "war",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Kirk_Fordice",
        "entity1_mention": "k fordice",
        "entity2_uri": "http://dbpedia.org/resource/Percy_Fitzwallace",
        "entity2_mention": "p fitzwallace"
    },
    {
        "id": "4582",
        "question": "Is The Orator in the National Archaeological Museum of Florence?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Orator> <http://dbpedia.org/property/museum> <http://dbpedia.org/resource/National_Archaeological_Museum_(Florence)> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/museum",
        "predicate1_mention": "museum",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/The_Orator",
        "entity1_mention": "the orator",
        "entity2_uri": "http://dbpedia.org/resource/National_Archaeological_Museum_(Florence)",
        "entity2_mention": "National Archaeological Museum of Florence"
    },
    {
        "id": "4584",
        "question": "List all the notable work of the screen writer who produced Frasier ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/Frasier> . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ScreenWriter>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/notableWork",
        "predicate1_mention": "notable work",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/ScreenWriter",
        "type_mention": "screen writer",
        "entity1_uri": "http://dbpedia.org/resource/Frasier",
        "entity1_mention": "frasier",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4585",
        "question": "Was Just Another day made by Queen Latifah?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Just_Another_Day...> <http://dbpedia.org/ontology/musicalBand> <http://dbpedia.org/resource/Queen_Latifah> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/musicalBand",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Just_Another_Day...",
        "entity1_mention": "just another day",
        "entity2_uri": "http://dbpedia.org/resource/Queen_Latifah",
        "entity2_mention": "queen latifah"
    },
    {
        "id": "4587",
        "question": "Name the river mouth of Moordener Kill ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moordener_Kill> <http://dbpedia.org/ontology/riverMouth> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/riverMouth",
        "predicate1_mention": "river mouth",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Moordener_Kill",
        "entity1_mention": "moordener kill",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4588",
        "question": "Of the places where Kurt Vonnegut Memorial Library exists, where did Louis LeCocq die?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kurt_Vonnegut_Memorial_Library> <http://dbpedia.org/ontology/location> ?uri. <http://dbpedia.org/resource/Louis_LeCocq> <http://dbpedia.org/property/placeOfDeath> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/location",
        "predicate1_mention": "louis",
        "predicate2_uri": "http://dbpedia.org/property/placeOfDeath",
        "predicate2_mention": "die",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Kurt_Vonnegut_Memorial_Library",
        "entity1_mention": "kurt vonnegut memorial library",
        "entity2_uri": "http://dbpedia.org/resource/Louis_LeCocq",
        "entity2_mention": "louis lecocq"
    },
    {
        "id": "4589",
        "question": "In which series has Sean Young portrayed someone?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sean_Young> . ?x <http://dbpedia.org/ontology/series> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/portrayer",
        "predicate1_mention": "portrayed",
        "predicate2_uri": "http://dbpedia.org/ontology/series",
        "predicate2_mention": "series",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Sean_Young",
        "entity1_mention": "sean young",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4590",
        "question": "The people who did their high school in Palm City, Florida did their college where?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/highschool> <http://dbpedia.org/resource/Palm_City,_Florida> . ?x <http://dbpedia.org/ontology/college> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/highschool",
        "predicate1_mention": "high school",
        "predicate2_uri": "http://dbpedia.org/ontology/college",
        "predicate2_mention": "college",
        "type_uri": "http://dbpedia.org/ontology/Person",
        "type_mention": "people",
        "entity1_uri": "http://dbpedia.org/resource/Palm_City,_Florida",
        "entity1_mention": "palm city, florida",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4593",
        "question": "Which company developed Google Web Toolkit and Google custom search?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Google_Web_Toolkit> <http://dbpedia.org/ontology/author> ?uri. <http://dbpedia.org/resource/Google_Custom_Search> <http://dbpedia.org/ontology/author> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/author",
        "predicate1_mention": "developed",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Google_Web_Toolkit",
        "entity1_mention": "google web toolkit",
        "entity2_uri": "http://dbpedia.org/resource/Google_Custom_Search",
        "entity2_mention": "google custom search"
    },
    {
        "id": "4594",
        "question": "Name the fictional character whose relatives are Huey, Dewey, and Louie and belongs to Duck family ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Huey,_Dewey,_and_Louie> . ?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Duck_family_(Disney)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/relatives",
        "predicate1_mention": "relatives",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "type_mention": "fictional character",
        "entity1_uri": "http://dbpedia.org/resource/Huey,_Dewey,_and_Louie",
        "entity1_mention": "Huey, Dewey, and Louie",
        "entity2_uri": "http://dbpedia.org/resource/Duck_family_(Disney)",
        "entity2_mention": "duck family"
    },
    {
        "id": "4595",
        "question": "What is the total number of other characters of the plays whose characters is Robin (comics)?",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/characters> <http://dbpedia.org/resource/Robin_(comics)> . ?x <http://dbpedia.org/property/characters> ?uri }",
        "sparql_id": "111",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/characters",
        "predicate1_mention": "characters",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Robin_(comics)",
        "entity1_mention": "robin (comics)",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4596",
        "question": "From where did Ben Wilson (American football) do his highscool?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ben_Wilson_(American_football)> <http://dbpedia.org/ontology/highschool> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/highschool",
        "predicate1_mention": "highscool",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Ben_Wilson_(American_football)",
        "entity1_mention": "ben wilson (american football)",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4597",
        "question": "Which sports are played in the school which runs the Fr. Agnel Stadium?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fr._Agnel_Stadium> <http://dbpedia.org/property/operator> ?x . ?x <http://dbpedia.org/ontology/sport> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/operator",
        "predicate1_mention": "runs",
        "predicate2_uri": "http://dbpedia.org/ontology/sport",
        "predicate2_mention": "sports",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Fr._Agnel_Stadium",
        "entity1_mention": "fr. agnel stadium",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4599",
        "question": "Where did isabelle caro and judson huss both die?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Judson_Huss> <http://dbpedia.org/property/deathPlace> ?uri. <http://dbpedia.org/resource/Isabelle_Caro> <http://dbpedia.org/property/deathPlace> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/deathPlace",
        "predicate1_mention": "die",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Judson_Huss",
        "entity1_mention": "judson huss",
        "entity2_uri": "http://dbpedia.org/resource/Isabelle_Caro",
        "entity2_mention": "isabelle caro"
    },
    {
        "id": "4601",
        "question": "Katharevousa writers have been given which awards?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/movement> <http://dbpedia.org/resource/Katharevousa> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/movement",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/award",
        "predicate2_mention": "awards",
        "type_uri": "http://dbpedia.org/ontology/Writer",
        "type_mention": "writers",
        "entity1_uri": "http://dbpedia.org/resource/Katharevousa",
        "entity1_mention": "katharevousa",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4602",
        "question": "Count the number of artists who trained at the San Francisco Art Institute?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/training> <http://dbpedia.org/resource/San_Francisco_Art_Institute>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
        "sparql_id": "401",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/property/training",
        "predicate1_mention": "trained",
        "predicate2_uri": "http://dbpedia.org/ontology/Artist",
        "predicate2_mention": "artists",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/San_Francisco_Art_Institute",
        "entity1_mention": "the San Francisco Art Institute",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4603",
        "question": "What are the movies whose director is Orson Welles?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Orson_Welles>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/director",
        "predicate1_mention": "director",
        "predicate2_uri": "http://dbpedia.org/ontology/Film",
        "predicate2_mention": "movies",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Orson_Welles",
        "entity1_mention": "orson welles",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4604",
        "question": "Which scientist is known for anthrax and has Karl Ewald Hasse as his academic advisor ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Anthrax> . ?uri <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/Karl_Ewald_Hasse>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/knownFor",
        "predicate1_mention": "known for",
        "predicate2_uri": "http://dbpedia.org/ontology/academicAdvisor",
        "predicate2_mention": "academic advisor",
        "type_uri": "http://dbpedia.org/ontology/Scientist",
        "type_mention": "scientist",
        "entity1_uri": "http://dbpedia.org/resource/Anthrax",
        "entity1_mention": "anthrax",
        "entity2_uri": "http://dbpedia.org/resource/Karl_Ewald_Hasse",
        "entity2_mention": "karl ewald hasse"
    },
    {
        "id": "4605",
        "question": "How many mountain are there in Sierra Nevada range?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/mountainRange> <http://dbpedia.org/resource/Sierra_Nevada_(U.S.)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}",
        "sparql_id": "401",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/ontology/mountainRange",
        "predicate1_mention": "range",
        "predicate2_uri": "http://dbpedia.org/ontology/Mountain",
        "predicate2_mention": "mountain",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Sierra_Nevada_(U.S.)",
        "entity1_mention": "sierra nevada",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4606",
        "question": "To how many different species does the members of the Animal Kingdom belong?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/kingdom> <http://dbpedia.org/resource/Animal> . ?x <http://dbpedia.org/ontology/species> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Species>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/kingdom",
        "predicate1_mention": "kingdom",
        "predicate2_uri": "http://dbpedia.org/ontology/species",
        "predicate2_mention": "species",
        "type_uri": "http://dbpedia.org/ontology/Species",
        "type_mention": "species",
        "entity1_uri": "http://dbpedia.org/resource/Animal",
        "entity1_mention": "animal",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4607",
        "question": "List the subjects of the books whose one of the topics is Pau Broca ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/subject> <http://dbpedia.org/resource/Paul_Broca> . ?x <http://dbpedia.org/property/subject> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/subject",
        "predicate1_mention": "subjects",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Book",
        "type_mention": "books",
        "entity1_uri": "http://dbpedia.org/resource/Paul_Broca",
        "entity1_mention": "pau broca",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4608",
        "question": "What are some mammals whose phylum is Chordate?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/phylum> <http://dbpedia.org/resource/Chordate>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/phylum",
        "predicate1_mention": "phylum",
        "predicate2_uri": "http://dbpedia.org/ontology/Mammal",
        "predicate2_mention": "mammals",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Chordate",
        "entity1_mention": "chordate",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4609",
        "question": "What is manufactured by Asus and Sony togather?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Asus> . ?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Sony> . }",
        "sparql_id": "7",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/manufacturer",
        "predicate1_mention": "manufactured",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Asus",
        "entity1_mention": "asus",
        "entity2_uri": "http://dbpedia.org/resource/Sony",
        "entity2_mention": "sony"
    },
    {
        "id": "4610",
        "question": "Who is the Artist of the singles whose film genre is Country music ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/genre> <http://dbpedia.org/resource/Country_music> . ?x <http://dbpedia.org/property/artist> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/genre",
        "predicate1_mention": "genre",
        "predicate2_uri": "http://dbpedia.org/property/artist",
        "predicate2_mention": "artist",
        "type_uri": "http://dbpedia.org/ontology/Single",
        "type_mention": "singles",
        "entity1_uri": "http://dbpedia.org/resource/Country_music",
        "entity1_mention": "country music",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4611",
        "question": "Which company owns instagram?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Instagram> } ",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/subsidiary",
        "predicate1_mention": "owns",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Instagram",
        "entity1_mention": "instagram",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4613",
        "question": "Where were the sportsmen born, who started their careers with Homestead Grays?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/debutteam> <http://dbpedia.org/resource/Homestead_Grays> . ?x <http://dbpedia.org/property/birthDate> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/debutteam",
        "predicate1_mention": "homestead",
        "predicate2_uri": "http://dbpedia.org/property/birthDate",
        "predicate2_mention": "born",
        "type_uri": "http://dbpedia.org/ontology/Athlete",
        "type_mention": "sportsmen",
        "entity1_uri": "http://dbpedia.org/resource/Homestead_Grays",
        "entity1_mention": "homestead grays",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4614",
        "question": "Who studied at  Harvard-Westlake School and has Henry E. Catto, Jr. as   predecessor ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Harvard-Westlake_School> . ?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Henry_E._Catto,_Jr.>  . }",
        "sparql_id": "8",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/almaMater",
        "predicate1_mention": "studied",
        "predicate2_uri": "http://dbpedia.org/ontology/predecessor",
        "predicate2_mention": "predecessor",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Harvard-Westlake_School",
        "entity1_mention": "harvard-westlake school",
        "entity2_uri": "http://dbpedia.org/resource/Henry_E._Catto,_Jr.",
        "entity2_mention": "Henry E. Catto, Jr."
    },
    {
        "id": "4615",
        "question": "In which countries can i find some feminist writers?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/movement> <http://dbpedia.org/resource/Feminism> . ?x <http://dbpedia.org/ontology/nationality> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/movement",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/nationality",
        "predicate2_mention": "countries",
        "type_uri": "http://dbpedia.org/ontology/Writer",
        "type_mention": "writers",
        "entity1_uri": "http://dbpedia.org/resource/Feminism",
        "entity1_mention": "feminist",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4616",
        "question": "Which famous philosopher died on island Euboea?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/deathDate> <http://dbpedia.org/resource/Euboea>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Philosopher>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/deathDate",
        "predicate1_mention": "died",
        "predicate2_uri": "http://dbpedia.org/ontology/Philosopher",
        "predicate2_mention": "philosopher",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Euboea",
        "entity1_mention": "island euboea",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4617",
        "question": "Is Tamera Mowry the former band member of Voices?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Voices_(group)> <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Tamera_Mowry> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/formerBandMember",
        "predicate1_mention": "former band member",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Voices_(group)",
        "entity1_mention": "voices",
        "entity2_uri": "http://dbpedia.org/resource/Tamera_Mowry",
        "entity2_mention": "tamera mowry"
    },
    {
        "id": "4619",
        "question": "Who was the president under which a tennis player held office before John W. Weeks?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/John_W._Weeks> . ?x <http://dbpedia.org/property/president> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TennisPlayer>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/predecessor",
        "predicate1_mention": "before",
        "predicate2_uri": "http://dbpedia.org/property/president",
        "predicate2_mention": "president",
        "type_uri": "http://dbpedia.org/ontology/TennisPlayer",
        "type_mention": "tennis player",
        "entity1_uri": "http://dbpedia.org/resource/John_W._Weeks",
        "entity1_mention": "john w. weeks",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4620",
        "question": "List the birth city of the politicians of Democratic Party.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Democratic_Party_(United_States)> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/party",
        "predicate1_mention": "party.",
        "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
        "predicate2_mention": "birth city",
        "type_uri": "http://dbpedia.org/ontology/Politician",
        "type_mention": "politicians",
        "entity1_uri": "http://dbpedia.org/resource/Democratic_Party_(United_States)",
        "entity1_mention": "democratic party",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4621",
        "question": "Which American football player is a former team player of Indianapolis Colts and current team is Michigan Wolverines?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Indianapolis_Colts> . ?uri <http://dbpedia.org/property/currentteam> <http://dbpedia.org/resource/Michigan_Wolverines>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/formerTeam",
        "predicate1_mention": "former team",
        "predicate2_uri": "http://dbpedia.org/property/currentteam",
        "predicate2_mention": "current team",
        "type_uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
        "type_mention": "american football player",
        "entity1_uri": "http://dbpedia.org/resource/Indianapolis_Colts",
        "entity1_mention": "indianapolis colts",
        "entity2_uri": "http://dbpedia.org/resource/Michigan_Wolverines",
        "entity2_mention": "michigan wolverines"
    },
    {
        "id": "4622",
        "question": "Which river's source country is Zambia and mouth country is Mozambique?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceCountry> <http://dbpedia.org/resource/Zambia> . ?uri <http://dbpedia.org/property/mouthCountry> <http://dbpedia.org/resource/Mozambique>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/sourceCountry",
        "predicate1_mention": "source country",
        "predicate2_uri": "http://dbpedia.org/property/mouthCountry",
        "predicate2_mention": "mouth country",
        "type_uri": "http://dbpedia.org/ontology/River",
        "type_mention": "river's",
        "entity1_uri": "http://dbpedia.org/resource/Zambia",
        "entity1_mention": "zambia",
        "entity2_uri": "http://dbpedia.org/resource/Mozambique",
        "entity2_mention": "mozambique"
    },
    {
        "id": "4623",
        "question": "Which person works at the American Magazine?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/The_American_Magazine>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/employer",
        "predicate1_mention": "works at",
        "predicate2_uri": "http://dbpedia.org/ontology/Person",
        "predicate2_mention": "person",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/The_American_Magazine",
        "entity1_mention": "the american magazine",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4624",
        "question": "Name the regions served by Toll Global Express ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Toll_Global_Express> <http://dbpedia.org/ontology/regionServed> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/regionServed",
        "predicate1_mention": "regions served",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Toll_Global_Express",
        "entity1_mention": "toll global express",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4625",
        "question": "Who are the tenants of the stadium where the UFC 140 is located?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/UFC_140> <http://dbpedia.org/ontology/location> ?x . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/location",
        "predicate1_mention": "located",
        "predicate2_uri": "http://dbpedia.org/ontology/tenant",
        "predicate2_mention": "tenants",
        "type_uri": "http://dbpedia.org/ontology/Stadium",
        "type_mention": "stadium",
        "entity1_uri": "http://dbpedia.org/resource/UFC_140",
        "entity1_mention": "ufc 140",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4626",
        "question": "How many mountain ranges are located in the Canton of Fribourg?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Canton_of_Fribourg> . ?x <http://dbpedia.org/ontology/mountainRange> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/locatedInArea",
        "predicate1_mention": "located",
        "predicate2_uri": "http://dbpedia.org/ontology/mountainRange",
        "predicate2_mention": "mountain",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Canton_of_Fribourg",
        "entity1_mention": "canton of fribourg",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4627",
        "question": "Which religion followers are in the Royal Thai Army?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Royal_Thai_Army> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/militaryBranch",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/religion",
        "predicate2_mention": "religion",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Royal_Thai_Army",
        "entity1_mention": "royal thai army",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4628",
        "question": "In which teams did anyone who played as a defencemen, play previously?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Defenceman> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/position",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/formerTeam",
        "predicate2_mention": "teams",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Defenceman",
        "entity1_mention": "defencemen",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4629",
        "question": "Did James brown make the song Killing is Out, School Is In?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Killing_Is_Out,_School_Is_In> <http://dbpedia.org/ontology/musicalBand> <http://dbpedia.org/resource/James_Brown> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/musicalBand",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Killing_Is_Out,_School_Is_In",
        "entity1_mention": "Killing is Out, School Is In",
        "entity2_uri": "http://dbpedia.org/resource/James_Brown",
        "entity2_mention": "james brown"
    },
    {
        "id": "4630",
        "question": "Is PIAS Recordings the distributing label of Wichita Recordings?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Wichita_Recordings> <http://dbpedia.org/ontology/distributingLabel> <http://dbpedia.org/resource/PIAS_Recordings> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/distributingLabel",
        "predicate1_mention": "distributing label",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Wichita_Recordings",
        "entity1_mention": "wichita recordings",
        "entity2_uri": "http://dbpedia.org/resource/PIAS_Recordings",
        "entity2_mention": "pias recordings"
    },
    {
        "id": "4631",
        "question": "What party are Siddharta Shankar Ray and Kamla Beniwal from?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Siddhartha_Shankar_Ray> <http://dbpedia.org/ontology/party> ?uri. <http://dbpedia.org/resource/Kamla_Beniwal> <http://dbpedia.org/property/party> ?uri . }",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/party",
        "predicate1_mention": "party",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Siddhartha_Shankar_Ray",
        "entity1_mention": "Siddharta Shankar Ray",
        "entity2_uri": "http://dbpedia.org/resource/Kamla_Beniwal",
        "entity2_mention": "kamla beniwal"
    },
    {
        "id": "4632",
        "question": "Count all american football players whose former team owns Lucas Oil Stadium ?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Lucas_Oil_Stadium> . ?uri <http://dbpedia.org/ontology/formerTeam> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
        "sparql_id": "406",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/city",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/formerTeam",
        "predicate2_mention": "former team",
        "type_uri": "http://dbpedia.org/ontology/AmericanFootballPlayer",
        "type_mention": "american football players",
        "entity1_uri": "http://dbpedia.org/resource/Lucas_Oil_Stadium",
        "entity1_mention": "lucas oil stadium",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4633",
        "question": "How many cities are around the sea which flows into the Atlantic?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/inflow> <http://dbpedia.org/resource/Atlantic_Ocean> . ?x <http://dbpedia.org/property/cities> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/inflow",
        "predicate1_mention": "flows into",
        "predicate2_uri": "http://dbpedia.org/property/cities",
        "predicate2_mention": "cities",
        "type_uri": "http://dbpedia.org/ontology/City",
        "type_mention": "cities",
        "entity1_uri": "http://dbpedia.org/resource/Atlantic_Ocean",
        "entity1_mention": "atlantic",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4635",
        "question": "What is the occupation of the Irving Chernev and Karen Grigorian?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Irving_Chernev> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/Karen_Grigorian> <http://dbpedia.org/ontology/occupation> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/occupation",
        "predicate1_mention": "occupation",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Irving_Chernev",
        "entity1_mention": "irving chernev",
        "entity2_uri": "http://dbpedia.org/resource/Karen_Grigorian",
        "entity2_mention": "karen grigorian"
    },
    {
        "id": "4637",
        "question": "Name the ssignificant buildings of Ivan Fomin ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ivan_Fomin> <http://dbpedia.org/ontology/significantBuilding> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/significantBuilding",
        "predicate1_mention": "significant building",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Ivan_Fomin",
        "entity1_mention": "ivan fomin",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4638",
        "question": "Did Tupac write the lyrics of Holler If Ya Hear Me?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Holler_If_Ya_Hear_Me_(musical)> <http://dbpedia.org/property/lyrics> <http://dbpedia.org/resource/Tupac_Shakur> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/lyrics",
        "predicate1_mention": "lyrics",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Holler_If_Ya_Hear_Me_(musical)",
        "entity1_mention": "holler If Ya Hear Me",
        "entity2_uri": "http://dbpedia.org/resource/Tupac_Shakur",
        "entity2_mention": "tupac"
    },
    {
        "id": "4640",
        "question": "Which largest city of Salsette Island is also the largest city of India ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/India> <http://dbpedia.org/ontology/largestCity> ?uri. <http://dbpedia.org/resource/Salsette_Island> <http://dbpedia.org/ontology/largestCity> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/largestCity",
        "predicate1_mention": "largest city",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/India",
        "entity1_mention": "india",
        "entity2_uri": "http://dbpedia.org/resource/Salsette_Island",
        "entity2_mention": "salsette island"
    },
    {
        "id": "4641",
        "question": "Which route start of Moscow-Kazan high-speed railway is the home stadium of 2011-12 FC Spartak Moscow ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moscow-Kazan_high-speed_railway> <http://dbpedia.org/ontology/routeStart> ?uri. <http://dbpedia.org/resource/2011\u201312_FC_Spartak_Moscow_season> <http://dbpedia.org/ontology/homeStadium> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/routeStart",
        "predicate1_mention": "route start",
        "predicate2_uri": "http://dbpedia.org/ontology/homeStadium",
        "predicate2_mention": "home stadium",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Moscow-Kazan_high-speed_railway",
        "entity1_mention": "moscow-kazan high-speed railway",
        "entity2_uri": "http://dbpedia.org/resource/2011\u201312_FC_Spartak_Moscow_season",
        "entity2_mention": "2011-12 FC Spartak Moscow"
    },
    {
        "id": "4643",
        "question": "Who was the PM under which William Deane served?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Deane> <http://dbpedia.org/ontology/primeMinister> ?uri  . }",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/primeMinister",
        "predicate1_mention": "PM",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/William_Deane",
        "entity1_mention": "william deane",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4644",
        "question": "How many teams was Garry Unger in, previously?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Garry_Unger> <http://dbpedia.org/ontology/formerTeam> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
        "sparql_id": "402",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/ontology/formerTeam",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/SportsTeam",
        "predicate2_mention": "teams",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Garry_Unger",
        "entity1_mention": "garry unger",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4645",
        "question": "What killed John Thompson Mason and Martino Martini?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Thomson_Mason_(1787\u20131850)> <http://dbpedia.org/ontology/deathCause> ?uri. <http://dbpedia.org/resource/Martino_Martini> <http://dbpedia.org/ontology/deathCause> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/deathCause",
        "predicate1_mention": "killed",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/John_Thomson_Mason_(1787\u20131850)",
        "entity1_mention": "John Thompson Mason",
        "entity2_uri": "http://dbpedia.org/resource/Martino_Martini",
        "entity2_mention": "martino martini"
    },
    {
        "id": "4646",
        "question": "How many different currencies are used in the places governed by the president of France?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/leaderTitle> <http://dbpedia.org/resource/President_of_France> . ?x <http://dbpedia.org/ontology/currency> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/leaderTitle",
        "predicate1_mention": "president",
        "predicate2_uri": "http://dbpedia.org/ontology/currency",
        "predicate2_mention": "currencies",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/President_of_France",
        "entity1_mention": "president of france",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4647",
        "question": "Is Mona Lisa in the Louvre museum?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mona_Lisa> <http://dbpedia.org/property/museum> <http://dbpedia.org/resource/Louvre> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/museum",
        "predicate1_mention": "museum",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Mona_Lisa",
        "entity1_mention": "mona lisa",
        "entity2_uri": "http://dbpedia.org/resource/Louvre",
        "entity2_mention": "louvre"
    },
    {
        "id": "4648",
        "question": "How many people play for the Dallas Cowboys?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Dallas_Cowboys>  . }",
        "sparql_id": "101",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/ontology/team",
        "predicate1_mention": "play for",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Dallas_Cowboys",
        "entity1_mention": "dallas cowboys",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4649",
        "question": "List the judge of the TV show whose one of the judge is Ludacris ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Ludacris> . ?x <http://dbpedia.org/property/judges> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/judges",
        "predicate1_mention": "judge",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "tv show",
        "entity1_uri": "http://dbpedia.org/resource/Ludacris",
        "entity1_mention": "ludacris",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4650",
        "question": "Where did the people die who were known for Young Life?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Young_Life> . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/knownFor",
        "predicate1_mention": "known for",
        "predicate2_uri": "http://dbpedia.org/ontology/deathPlace",
        "predicate2_mention": "die",
        "type_uri": "http://dbpedia.org/ontology/Person",
        "type_mention": "people",
        "entity1_uri": "http://dbpedia.org/resource/Young_Life",
        "entity1_mention": "young life",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4651",
        "question": "List the primary  subjects of A Christian Turn'd Turk?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/A_Christian_Turn'd_Turk> <http://dbpedia.org/property/subject> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/subject",
        "predicate1_mention": "subjects",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/A_Christian_Turn'd_Turk",
        "entity1_mention": "a christian turn'd turk",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4652",
        "question": "Which awards did the writer of Persona win ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Persona_(1966_film)> <http://dbpedia.org/ontology/writer> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/writer",
        "predicate1_mention": "writer",
        "predicate2_uri": "http://dbpedia.org/property/awards",
        "predicate2_mention": "awards",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Persona_(1966_film)",
        "entity1_mention": "persona",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4653",
        "question": "Give me a count of movies whose editor is Mark Stevens?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Mark_Stevens_(film_editor)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "401",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/property/editing",
        "predicate1_mention": "editor",
        "predicate2_uri": "http://dbpedia.org/ontology/Film",
        "predicate2_mention": "movies",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Mark_Stevens_(film_editor)",
        "entity1_mention": "mark stevens",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4654",
        "question": "Who are the  judges of the television show whose anchor is Josh Groban?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Josh_Groban> . ?x <http://dbpedia.org/property/judges> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/presenter",
        "predicate1_mention": "anchor",
        "predicate2_uri": "http://dbpedia.org/property/judges",
        "predicate2_mention": "judges",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "television show",
        "entity1_uri": "http://dbpedia.org/resource/Josh_Groban",
        "entity1_mention": "josh groban",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4656",
        "question": "List the area of radio stations whose sister station is WBCQ-FM?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WBCQ-FM> <http://dbpedia.org/property/sisterStations> ?x . ?x <http://dbpedia.org/property/area> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/sisterStations",
        "predicate1_mention": "stations",
        "predicate2_uri": "http://dbpedia.org/property/area",
        "predicate2_mention": "area",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/WBCQ-FM",
        "entity1_mention": "wbcq-fm",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4657",
        "question": "What ethnicity do people in British Columbia belong to?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/British_Columbia> . ?x <http://dbpedia.org/ontology/ethnicity> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/residence",
        "predicate1_mention": "belong to",
        "predicate2_uri": "http://dbpedia.org/ontology/ethnicity",
        "predicate2_mention": "ethnicity",
        "type_uri": "http://dbpedia.org/ontology/Person",
        "type_mention": "people",
        "entity1_uri": "http://dbpedia.org/resource/British_Columbia",
        "entity1_mention": "british columbia",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4660",
        "question": "Which awards did the creator of A Barrel of Laughs, a Vale of Tears won ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/A_Barrel_of_Laughs,_a_Vale_of_Tears> <http://dbpedia.org/ontology/author> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/author",
        "predicate1_mention": "creator",
        "predicate2_uri": "http://dbpedia.org/ontology/award",
        "predicate2_mention": "awards",
        "type_uri": "http://dbpedia.org/ontology/ComicsCreator",
        "type_mention": "creator",
        "entity1_uri": "http://dbpedia.org/resource/A_Barrel_of_Laughs,_a_Vale_of_Tears",
        "entity1_mention": "A Barrel of Laughs, a Vale of Tears",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4661",
        "question": "What is father's name who also served in military of Carlene Carter?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Carlene_Carter>  . }",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/children",
        "predicate1_mention": "father",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Carlene_Carter",
        "entity1_mention": "carlene carter",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4662",
        "question": "In which university did Harlan Mathews study, where Richard Meriil Atkinson went too?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Harlan_Mathews> <http://dbpedia.org/ontology/almaMater> ?uri. <http://dbpedia.org/resource/Richard_Merrill_Atkinson> <http://dbpedia.org/ontology/almaMater> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/almaMater",
        "predicate1_mention": "university",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Harlan_Mathews",
        "entity1_mention": "harlan mathews",
        "entity2_uri": "http://dbpedia.org/resource/Richard_Merrill_Atkinson",
        "entity2_mention": "richard Meriil atkinson"
    },
    {
        "id": "4663",
        "question": "How many people have trained the wrestlers who were billed in Wisconsin?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/billed> <http://dbpedia.org/resource/Wisconsin> . ?x <http://dbpedia.org/ontology/trainer> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/billed",
        "predicate1_mention": "billed",
        "predicate2_uri": "http://dbpedia.org/ontology/trainer",
        "predicate2_mention": "trained",
        "type_uri": "http://dbpedia.org/ontology/Person",
        "type_mention": "people",
        "entity1_uri": "http://dbpedia.org/resource/Wisconsin",
        "entity1_mention": "wisconsin",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4664",
        "question": "List the major shrines of Jovan Vladimir?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jovan_Vladimir> <http://dbpedia.org/property/majorShrine> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/majorShrine",
        "predicate1_mention": "major shrines",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Jovan_Vladimir",
        "entity1_mention": "jovan vladimir",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4666",
        "question": "Did Chant Mas originate in West Africa?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Chant\u00e9_mas> <http://dbpedia.org/ontology/stylisticOrigin> <http://dbpedia.org/resource/West_Africa> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/stylisticOrigin",
        "predicate1_mention": "originate in",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Chant\u00e9_mas",
        "entity1_mention": "chant mas",
        "entity2_uri": "http://dbpedia.org/resource/West_Africa",
        "entity2_mention": "west africa"
    },
    {
        "id": "4667",
        "question": "What are on the borders of Shimsa Plateau?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Shim\u014dsa_Plateau> <http://dbpedia.org/ontology/border> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/border",
        "predicate1_mention": "borders",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Shim\u014dsa_Plateau",
        "entity1_mention": "shimsa plateau",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4669",
        "question": "Which spanish novel was published by Francisco de Robles?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/publisher> <http://dbpedia.org/resource/Francisco_de_Robles> } ",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/publisher",
        "predicate1_mention": "published",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Francisco_de_Robles",
        "entity1_mention": "francisco de robles",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4670",
        "question": "Which current player of Chicago Bulls was drafted by Los Angeles Clippers ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Chicago_Bulls> . ?uri <http://dbpedia.org/property/draftTeam> <http://dbpedia.org/resource/Los_Angeles_Clippers>  . }",
        "sparql_id": "8",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/team",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/draftTeam",
        "predicate2_mention": "drafted by",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Chicago_Bulls",
        "entity1_mention": "chicago bulls",
        "entity2_uri": "http://dbpedia.org/resource/Los_Angeles_Clippers",
        "entity2_mention": "los angeles clippers"
    },
    {
        "id": "4672",
        "question": "What is the resting place of the children of Bruce Lee ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bruce_Lee> <http://dbpedia.org/property/children> ?x . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/children",
        "predicate1_mention": "children",
        "predicate2_uri": "http://dbpedia.org/ontology/restingPlace",
        "predicate2_mention": "resting place",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Bruce_Lee",
        "entity1_mention": "bruce lee",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4673",
        "question": "What are the television shows whose company's predecessor is Desilu Productions?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Desilu_Productions> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/predecessor",
        "predicate1_mention": "predecessor",
        "predicate2_uri": "http://dbpedia.org/property/company",
        "predicate2_mention": "company's",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "television shows",
        "entity1_uri": "http://dbpedia.org/resource/Desilu_Productions",
        "entity1_mention": "desilu productions",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4674",
        "question": "tell me the school to which Cyril Hume went?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cyril_Hume> <http://dbpedia.org/property/education> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/education",
        "predicate1_mention": "school",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Cyril_Hume",
        "entity1_mention": "cyril hume",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4675",
        "question": "Who has built the stadiums which were rented by the Central american games of 2013?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/2013_Central_American_Games> . ?x <http://dbpedia.org/ontology/builder> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/tenant",
        "predicate1_mention": "rented",
        "predicate2_uri": "http://dbpedia.org/ontology/builder",
        "predicate2_mention": "built",
        "type_uri": "http://dbpedia.org/ontology/Stadium",
        "type_mention": "stadiums",
        "entity1_uri": "http://dbpedia.org/resource/2013_Central_American_Games",
        "entity1_mention": "Central american games of 2013",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4676",
        "question": "Estimate the number of sports divisions at the universities under international association of universities.",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/affiliation> <http://dbpedia.org/resource/International_Association_of_Universities> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/affiliation",
        "predicate1_mention": "association",
        "predicate2_uri": "http://dbpedia.org/ontology/sport",
        "predicate2_mention": "sports",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/International_Association_of_Universities",
        "entity1_mention": "international association of universities",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4677",
        "question": "List the prospect team of Robin Kovacs ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robin_Kovacs> <http://dbpedia.org/property/prospectTeam> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/prospectTeam",
        "predicate1_mention": "prospect team",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Robin_Kovacs",
        "entity1_mention": "robin kovacs",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4678",
        "question": "What is sovereignity of the successor of Mr. George Robert Andrews ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_Roberts_Andrews> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/successor",
        "predicate1_mention": "successor",
        "predicate2_uri": "http://dbpedia.org/ontology/country",
        "predicate2_mention": "sovereignity",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/George_Roberts_Andrews",
        "entity1_mention": "george robert andrews",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4679",
        "question": "Is Labor relations the main interest of Karl Marx?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Karl_Marx> <http://dbpedia.org/ontology/mainInterest> <http://dbpedia.org/resource/Labor_relations> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/mainInterest",
        "predicate1_mention": "main interest",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Karl_Marx",
        "entity1_mention": "karl marx",
        "entity2_uri": "http://dbpedia.org/resource/Labor_relations",
        "entity2_mention": "labor relations"
    },
    {
        "id": "4680",
        "question": "Which show developed by Brain Graden has theme music composed by Primus ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/developer> <http://dbpedia.org/resource/Brian_Graden> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Primus_(band)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/developer",
        "predicate1_mention": "developed",
        "predicate2_uri": "http://dbpedia.org/property/themeMusicComposer",
        "predicate2_mention": "composed by",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "show",
        "entity1_uri": "http://dbpedia.org/resource/Brian_Graden",
        "entity1_mention": "graden",
        "entity2_uri": "http://dbpedia.org/resource/Primus_(band)",
        "entity2_mention": "primus"
    },
    {
        "id": "4681",
        "question": "What mammals are classified into Diprotodontia ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Diprotodontia>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/order",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/Mammal",
        "predicate2_mention": "mammals",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Diprotodontia",
        "entity1_mention": "diprotodontia",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4683",
        "question": "Name a office holder whose predecessor is Edward Douglass White and has son named Charles Phelps Taft II?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Edward_Douglass_White> . ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Phelps_Taft_II>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/predecessor",
        "predicate1_mention": "predecessor",
        "predicate2_uri": "http://dbpedia.org/ontology/child",
        "predicate2_mention": "son",
        "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
        "type_mention": "office holder",
        "entity1_uri": "http://dbpedia.org/resource/Edward_Douglass_White",
        "entity1_mention": "edward douglass white",
        "entity2_uri": "http://dbpedia.org/resource/Charles_Phelps_Taft_II",
        "entity2_mention": "charles phelps taft ii"
    },
    {
        "id": "4684",
        "question": "Where did the  designer of Monument to Salavat Yulaev die?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Monument_to_Salavat_Yulaev> <http://dbpedia.org/ontology/designer> ?x . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/designer",
        "predicate1_mention": "designer",
        "predicate2_uri": "http://dbpedia.org/property/placeOfDeath",
        "predicate2_mention": "die",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Monument_to_Salavat_Yulaev",
        "entity1_mention": "monument to salavat yulaev",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4685",
        "question": "What is the club of Perianne Jones ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Perianne_Jones> <http://dbpedia.org/property/club> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/club",
        "predicate1_mention": "club",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Perianne_Jones",
        "entity1_mention": "perianne jones",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4686",
        "question": "Where is the constituency of John Smith Griffin ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Smith_Griffin> <http://dbpedia.org/property/constituency> ?x . ?x <http://dbpedia.org/ontology/location> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/constituency",
        "predicate1_mention": "constituency",
        "predicate2_uri": "http://dbpedia.org/ontology/location",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/John_Smith_Griffin",
        "entity1_mention": "john smith griffin",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4687",
        "question": "List the books by the authors buried in the Convent of the Barefoot Trinitarians?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Convent_of_the_Barefoot_Trinitarians> . ?uri <http://dbpedia.org/ontology/author> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/restingPlace",
        "predicate1_mention": "trinitarians",
        "predicate2_uri": "http://dbpedia.org/ontology/author",
        "predicate2_mention": "authors",
        "type_uri": "http://dbpedia.org/ontology/Book",
        "type_mention": "books",
        "entity1_uri": "http://dbpedia.org/resource/Convent_of_the_Barefoot_Trinitarians",
        "entity1_mention": "Convent of the Barefoot Trinitarians",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4688",
        "question": "Which companies have launched from the Vandenberg Air Force Air base?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Vandenberg_Air_Force_Base> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/launchSite",
        "predicate1_mention": "launched",
        "predicate2_uri": "http://dbpedia.org/ontology/manufacturer",
        "predicate2_mention": "companies",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Vandenberg_Air_Force_Base",
        "entity1_mention": "Vandenberg Air Force Air base",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4689",
        "question": "Is Stephanie Rice the flagbearer of Australia at the 2008 Summer Olympics?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Australia_at_the_2008_Summer_Olympics> <http://dbpedia.org/property/flagbearer> <http://dbpedia.org/resource/Stephanie_Rice> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/flagbearer",
        "predicate1_mention": "flagbearer",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Australia_at_the_2008_Summer_Olympics",
        "entity1_mention": "Australia at the 2008 Summer Olympics",
        "entity2_uri": "http://dbpedia.org/resource/Stephanie_Rice",
        "entity2_mention": "stephanie rice"
    },
    {
        "id": "4690",
        "question": "Spanish harlem incident and girl from the north country were originally composed by whom?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Spanish_Harlem_Incident> <http://dbpedia.org/ontology/composer> ?uri. <http://dbpedia.org/resource/Girl_from_the_North_Country> <http://dbpedia.org/ontology/composer> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/composer",
        "predicate1_mention": "composed",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Spanish_Harlem_Incident",
        "entity1_mention": "spanish harlem incident",
        "entity2_uri": "http://dbpedia.org/resource/Girl_from_the_North_Country",
        "entity2_mention": "girl from the north country"
    },
    {
        "id": "4691",
        "question": "Who is the founder of Oprah Winfrey Network (U.S. TV channel) ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Oprah_Winfrey_Network_(U.S._TV_channel)> <http://dbpedia.org/property/founder> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/founder",
        "predicate1_mention": "founder",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Oprah_Winfrey_Network_(U.S._TV_channel)",
        "entity1_mention": "Oprah Winfrey Network (U.S. TV channel)",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4692",
        "question": " How many scientist have won an award by the society led by Venkatraman Ramakrishnan?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Venkatraman_Ramakrishnan> . ?uri <http://dbpedia.org/property/prizes> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
        "sparql_id": "406",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/leaderName",
        "predicate1_mention": "led",
        "predicate2_uri": "http://dbpedia.org/property/prizes",
        "predicate2_mention": "won",
        "type_uri": "http://dbpedia.org/ontology/Scientist",
        "type_mention": "scientist",
        "entity1_uri": "http://dbpedia.org/resource/Venkatraman_Ramakrishnan",
        "entity1_mention": "venkatraman ramakrishnan",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4693",
        "question": "Which place of Geography Club is the location of Seattle Great Wheel ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Seattle_Great_Wheel> <http://dbpedia.org/property/locationTown> ?uri. <http://dbpedia.org/resource/Geography_Club_(play)> <http://dbpedia.org/property/place> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/locationTown",
        "predicate1_mention": "location",
        "predicate2_uri": "http://dbpedia.org/property/place",
        "predicate2_mention": "place",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Seattle_Great_Wheel",
        "entity1_mention": "Seattle Great Wheel",
        "entity2_uri": "http://dbpedia.org/resource/Geography_Club_(play)",
        "entity2_mention": "geography club"
    },
    {
        "id": "4694",
        "question": "Which television show is based in Massachusetts and has opening theme as \"Where Everybody Knows Your Name\" ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name> . ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Massachusetts>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/openingTheme",
        "predicate1_mention": "opening theme",
        "predicate2_uri": "http://dbpedia.org/ontology/location",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "television show",
        "entity1_uri": "http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name",
        "entity1_mention": "Where Everybody Knows Your Name",
        "entity2_uri": "http://dbpedia.org/resource/Massachusetts",
        "entity2_mention": "massachusetts"
    },
    {
        "id": "4695",
        "question": "What is the career of George Arceneaux , Jr . ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_Arceneaux,_Jr.> <http://dbpedia.org/ontology/occupation> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/occupation",
        "predicate1_mention": "career",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/George_Arceneaux,_Jr.",
        "entity1_mention": "George Arceneaux , Jr .",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4696",
        "question": "Name the prospect team of Mikhail Pashnin ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mikhail_Pashnin> <http://dbpedia.org/property/prospectTeam> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/prospectTeam",
        "predicate1_mention": "prospect team",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Mikhail_Pashnin",
        "entity1_mention": "mikhail pashnin",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4697",
        "question": "Who are the maintainers of the bridges which cross the pandaruan river?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/crosses> <http://dbpedia.org/resource/Pandaruan_River> . ?x <http://dbpedia.org/ontology/maintainedBy> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/crosses",
        "predicate1_mention": "cross",
        "predicate2_uri": "http://dbpedia.org/ontology/maintainedBy",
        "predicate2_mention": "maintainers",
        "type_uri": "http://dbpedia.org/ontology/Bridge",
        "type_mention": "bridges",
        "entity1_uri": "http://dbpedia.org/resource/Pandaruan_River",
        "entity1_mention": "pandaruan river",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4698",
        "question": "Who all held a position when Gough Whitlam was the prime minister?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/primeMinister> <http://dbpedia.org/resource/Gough_Whitlam> } ",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/primeMinister",
        "predicate1_mention": "prime minister",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Gough_Whitlam",
        "entity1_mention": "gough whitlam",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4699",
        "question": "Which veterans served at CBS?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/CBS>  . }",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/occupation",
        "predicate1_mention": "served at",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/CBS",
        "entity1_mention": "cbs",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4700",
        "question": "For which team do Guido Guerrini and Massimo Liverani currently play for?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Guido_Guerrini> <http://dbpedia.org/property/currentTeam> ?uri. <http://dbpedia.org/resource/Massimo_Liverani> <http://dbpedia.org/property/currentTeam> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/currentTeam",
        "predicate1_mention": "currently",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Guido_Guerrini",
        "entity1_mention": "guido guerrini",
        "entity2_uri": "http://dbpedia.org/resource/Massimo_Liverani",
        "entity2_mention": "massimo liverani"
    },
    {
        "id": "4701",
        "question": "Which games publishers are located in California?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/California> . ?uri <http://dbpedia.org/ontology/publisher> ?x  . }",
        "sparql_id": "6",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/location",
        "predicate1_mention": "located",
        "predicate2_uri": "http://dbpedia.org/ontology/publisher",
        "predicate2_mention": "publishers",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/California",
        "entity1_mention": "california",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4703",
        "question": "Who is the  distributor of Rev (drink) ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rev_(drink)> <http://dbpedia.org/ontology/distributor> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/distributor",
        "predicate1_mention": "distributor",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Rev_(drink)",
        "entity1_mention": "rev (drink)",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4704",
        "question": "Who is the scientist whose doctoral student is Erich Bagge?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/Erich_Bagge>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/doctoralStudent",
        "predicate1_mention": "doctoral student",
        "predicate2_uri": "http://dbpedia.org/ontology/Scientist",
        "predicate2_mention": "scientist",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Erich_Bagge",
        "entity1_mention": "erich bagge",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4705",
        "question": "How many bands are signed up with labels which were founded in Japan?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/Japan> . ?uri <http://dbpedia.org/property/label> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
        "sparql_id": "406",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/foundation",
        "predicate1_mention": "founded",
        "predicate2_uri": "http://dbpedia.org/property/label",
        "predicate2_mention": "labels",
        "type_uri": "http://dbpedia.org/ontology/Band",
        "type_mention": "bands",
        "entity1_uri": "http://dbpedia.org/resource/Japan",
        "entity1_mention": "japan",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4707",
        "question": "What is the allegiance of Albert Kwesi Ocran ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Albert_Kwesi_Ocran> <http://dbpedia.org/property/allegiance> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/allegiance",
        "predicate1_mention": "allegiance",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Albert_Kwesi_Ocran",
        "entity1_mention": "Albert Kwesi Ocran",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4708",
        "question": "What is the owning company of the bank whose parent is Sony Financial ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/Sony_Financial> . ?x <http://dbpedia.org/ontology/owningCompany> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/parent",
        "predicate1_mention": "parent",
        "predicate2_uri": "http://dbpedia.org/ontology/owningCompany",
        "predicate2_mention": "owning company",
        "type_uri": "http://dbpedia.org/ontology/Company",
        "type_mention": "company",
        "entity1_uri": "http://dbpedia.org/resource/Sony_Financial",
        "entity1_mention": "sony financial",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4709",
        "question": "Who appointed William L. Dayton ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_L._Dayton> <http://dbpedia.org/ontology/appointer> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/appointer",
        "predicate1_mention": "appointed",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/William_L._Dayton",
        "entity1_mention": "William L. Dayton",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4710",
        "question": "What is the fictional character whose voice over is done by the animator of Dick Lundy ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/animator> <http://dbpedia.org/resource/Dick_Lundy_(animator)> . ?uri <http://dbpedia.org/ontology/voice> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/animator",
        "predicate1_mention": "animator",
        "predicate2_uri": "http://dbpedia.org/ontology/voice",
        "predicate2_mention": "voice",
        "type_uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "type_mention": "fictional character",
        "entity1_uri": "http://dbpedia.org/resource/Dick_Lundy_(animator)",
        "entity1_mention": "animator of Dick Lundy",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4711",
        "question": "Name the Artist of Madagascar: Operation Penguin ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Madagascar:_Operation_Penguin> <http://dbpedia.org/property/artist> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/artist",
        "predicate1_mention": "artist",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Madagascar:_Operation_Penguin",
        "entity1_mention": "madagascar: operation penguin",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4712",
        "question": "Count the tenants of the stadiums owned by toronto.",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Toronto> . ?x <http://dbpedia.org/property/tenants> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/owner",
        "predicate1_mention": "owned",
        "predicate2_uri": "http://dbpedia.org/property/tenants",
        "predicate2_mention": "tenants",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Toronto",
        "entity1_mention": "toronto",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4713",
        "question": "Name the company with product named Microsft Azure and provides OneDrive as a service ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Microsoft_Azure> . ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/OneDrive>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/product",
        "predicate1_mention": "product",
        "predicate2_uri": "http://dbpedia.org/property/services",
        "predicate2_mention": "service",
        "type_uri": "http://dbpedia.org/ontology/Company",
        "type_mention": "company",
        "entity1_uri": "http://dbpedia.org/resource/Microsoft_Azure",
        "entity1_mention": "Microsft Azure",
        "entity2_uri": "http://dbpedia.org/resource/OneDrive",
        "entity2_mention": "onedrive"
    },
    {
        "id": "4714",
        "question": "list all the chairman of Vancouver Whitecaps FC?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vancouver_Whitecaps_FC> <http://dbpedia.org/property/chairman> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/chairman",
        "predicate1_mention": "chairman",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Vancouver_Whitecaps_FC",
        "entity1_mention": "vancouver whitecaps fc",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4715",
        "question": "Which famous commander led the Siege of forn meigs and was involved in the battle of fort stephenson?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Siege_of_Fort_Meigs> <http://dbpedia.org/ontology/commander> ?uri. <http://dbpedia.org/resource/Battle_of_Fort_Stephenson> <http://dbpedia.org/ontology/commander> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/commander",
        "predicate1_mention": "commander",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Siege_of_Fort_Meigs",
        "entity1_mention": "Siege of forn meigs",
        "entity2_uri": "http://dbpedia.org/resource/Battle_of_Fort_Stephenson",
        "entity2_mention": "battle of fort stephenson"
    },
    {
        "id": "4716",
        "question": "Who is the label of The Producers (2005 film) ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Producers_(2005_film)> <http://dbpedia.org/property/label> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/label",
        "predicate1_mention": "label",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/The_Producers_(2005_film)",
        "entity1_mention": "The Producers (2005 film)",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4717",
        "question": "What is the movie whose producer is Michael Deeley and directed by  Ridley Scott?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Michael_Deeley> . ?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Ridley_Scott>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/producer",
        "predicate1_mention": "producer",
        "predicate2_uri": "http://dbpedia.org/property/director",
        "predicate2_mention": "directed",
        "type_uri": "http://dbpedia.org/ontology/Film",
        "type_mention": "movie",
        "entity1_uri": "http://dbpedia.org/resource/Michael_Deeley",
        "entity1_mention": "michael deeley",
        "entity2_uri": "http://dbpedia.org/resource/Ridley_Scott",
        "entity2_mention": "ridley scott"
    },
    {
        "id": "4718",
        "question": "What is the state whose largest city is Denver?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Denver>  . }",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/largestCity",
        "predicate1_mention": "largest city",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Denver",
        "entity1_mention": "denver",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4719",
        "question": "Give me some TV stations whose network's main language is American English?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/language> <http://dbpedia.org/resource/American_English> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionStation>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/language",
        "predicate1_mention": "language",
        "predicate2_uri": "http://dbpedia.org/property/network",
        "predicate2_mention": "network's",
        "type_uri": "http://dbpedia.org/ontology/TelevisionStation",
        "type_mention": "stations",
        "entity1_uri": "http://dbpedia.org/resource/American_English",
        "entity1_mention": "american english",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4720",
        "question": "Where did the partner of Teriitaria II die?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Teriitaria_II> <http://dbpedia.org/property/spouse> ?x . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/spouse",
        "predicate1_mention": "partner",
        "predicate2_uri": "http://dbpedia.org/ontology/deathPlace",
        "predicate2_mention": "die",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Teriitaria_II",
        "entity1_mention": "teriitaria ii",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4721",
        "question": "Which work institue of andrew Schally belongs to WTUL ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Andrew_Schally> <http://dbpedia.org/property/workInstitutions> ?uri. <http://dbpedia.org/resource/WTUL> <http://dbpedia.org/property/owner> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/workInstitutions",
        "predicate1_mention": "institue",
        "predicate2_uri": "http://dbpedia.org/property/owner",
        "predicate2_mention": "belongs to",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Andrew_Schally",
        "entity1_mention": "andrew schally",
        "entity2_uri": "http://dbpedia.org/resource/WTUL",
        "entity2_mention": "wtul"
    },
    {
        "id": "4722",
        "question": "Who is the licensee of EXXV-TV ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/EXXV-TV> <http://dbpedia.org/property/licensee> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/licensee",
        "predicate1_mention": "licensee",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/EXXV-TV",
        "entity1_mention": "exxv-tv",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4724",
        "question": "In which language is All I need is Your Sweet lovin written ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/All_I_Need_Is_Your_Sweet_Lovin'> <http://dbpedia.org/property/language> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/language",
        "predicate1_mention": "language",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/All_I_Need_Is_Your_Sweet_Lovin'",
        "entity1_mention": " All I need is Your Sweet lovin",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4726",
        "question": "Who founded a company which served Mid Wales ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/regionServed> <http://dbpedia.org/resource/Mid_Wales> . ?x <http://dbpedia.org/ontology/foundedBy> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/regionServed",
        "predicate1_mention": "served",
        "predicate2_uri": "http://dbpedia.org/ontology/foundedBy",
        "predicate2_mention": "founded",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Mid_Wales",
        "entity1_mention": "mid wales",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4729",
        "question": "How many artists play as Rickenbacker?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Rickenbacker>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
        "sparql_id": "401",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/ontology/instrument",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/Artist",
        "predicate2_mention": "artists",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Rickenbacker",
        "entity1_mention": "rickenbacker",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4730",
        "question": "Who were the opponents of employees of Henry Howard, the Northampton Earl?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/Henry_Howard,_1st_Earl_of_Northampton> . ?x <http://dbpedia.org/ontology/opponent> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/employer",
        "predicate1_mention": "employees",
        "predicate2_uri": "http://dbpedia.org/ontology/opponent",
        "predicate2_mention": "opponents",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Henry_Howard,_1st_Earl_of_Northampton",
        "entity1_mention": "Henry Howard, the Northampton Earl",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4732",
        "question": "List the junctions which lie on U.S. Route 59 in Texas and U.S. Route 59 ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/U.S._Route_59_in_Texas> <http://dbpedia.org/property/junction> ?uri. <http://dbpedia.org/resource/U.S._Route_59> <http://dbpedia.org/property/junction> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/junction",
        "predicate1_mention": "junctions",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/U.S._Route_59_in_Texas",
        "entity1_mention": "U.S. Route 59 in Texas",
        "entity2_uri": "http://dbpedia.org/resource/U.S._Route_59",
        "entity2_mention": "u.s. route 59"
    },
    {
        "id": "4733",
        "question": "Name the river whose source region is North-Western Province, Zambia and source location is Ikelenge  District?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia> . ?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Ikelenge_District>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/sourceRegion",
        "predicate1_mention": "source region",
        "predicate2_uri": "http://dbpedia.org/property/sourceLocation",
        "predicate2_mention": "source location",
        "type_uri": "http://dbpedia.org/ontology/River",
        "type_mention": "river",
        "entity1_uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia",
        "entity1_mention": "north-western province, zambia",
        "entity2_uri": "http://dbpedia.org/resource/Ikelenge_District",
        "entity2_mention": "ikelenge district"
    },
    {
        "id": "4734",
        "question": "Who are some basketball players who played for Phoenix Suns?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Phoenix_Suns>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/team",
        "predicate1_mention": "played for",
        "predicate2_uri": "http://dbpedia.org/ontology/BasketballPlayer",
        "predicate2_mention": "basketball players",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Phoenix_Suns",
        "entity1_mention": "phoenix suns",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4739",
        "question": "What company is the distributor of Bombay Sapphire?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bombay_Sapphire> <http://dbpedia.org/property/distributor> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/distributor",
        "predicate1_mention": "distributor",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Bombay_Sapphire",
        "entity1_mention": "bombay sapphire",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4740",
        "question": "How many awards have been given to screenwriters?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Screenwriter> . ?x <http://dbpedia.org/property/awards> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/occupation",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/awards",
        "predicate2_mention": "awards",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Screenwriter",
        "entity1_mention": "screenwriters",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4741",
        "question": "Name the part of Liverpool city region >",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Liverpool_City_Region> <http://dbpedia.org/ontology/part> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/part",
        "predicate1_mention": "part",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Liverpool_City_Region",
        "entity1_mention": "liverpool city region",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4743",
        "question": "To which county of New York city does the Tremount Avenue street belong?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tremont_Avenue> <http://dbpedia.org/property/counties> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/counties",
        "predicate1_mention": "county",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Tremont_Avenue",
        "entity1_mention": "Tremount Avenue street",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4745",
        "question": "What is the place of birth of the Michael Marder which is also the  place of death of the Tigran Petrosian",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Marder> <http://dbpedia.org/property/placeOfBirth> ?uri. <http://dbpedia.org/resource/Tigran_Petrosian> <http://dbpedia.org/ontology/deathPlace> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/placeOfBirth",
        "predicate1_mention": "place of birth",
        "predicate2_uri": "http://dbpedia.org/ontology/deathPlace",
        "predicate2_mention": "place of death",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Michael_Marder",
        "entity1_mention": "michael marder",
        "entity2_uri": "http://dbpedia.org/resource/Tigran_Petrosian",
        "entity2_mention": "tigran petrosian"
    },
    {
        "id": "4746",
        "question": "Where is the tomb of son of Bruce Lee?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Bruce_Lee> . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/parent",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/restingPlace",
        "predicate2_mention": "tomb",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Bruce_Lee",
        "entity1_mention": "bruce lee",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4747",
        "question": "What are the mascots of the teams participating in the Turkish Handball Super League?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/Turkish_Handball_Super_League> . ?x <http://dbpedia.org/property/mascot> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/league",
        "predicate1_mention": "league",
        "predicate2_uri": "http://dbpedia.org/property/mascot",
        "predicate2_mention": "mascots",
        "type_uri": "http://dbpedia.org/ontology/SportsTeam",
        "type_mention": "teams",
        "entity1_uri": "http://dbpedia.org/resource/Turkish_Handball_Super_League",
        "entity1_mention": "urkish Handball Super League",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4748",
        "question": "Give me a count of schools in Reading, Berkshire?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Reading,_Berkshire>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
        "sparql_id": "401",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/ontology/city",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/School",
        "predicate2_mention": "schools",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Reading,_Berkshire",
        "entity1_mention": "reading, berkshire",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4749",
        "question": "What team did Dan Daoust and Don Ashby play for?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dan_Daoust> <http://dbpedia.org/ontology/formerTeam> ?uri. <http://dbpedia.org/resource/Don_Ashby> <http://dbpedia.org/property/playedFor> ?uri . }",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/formerTeam",
        "predicate1_mention": "team",
        "predicate2_uri": "http://dbpedia.org/property/playedFor",
        "predicate2_mention": "play for",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Dan_Daoust",
        "entity1_mention": "dan daoust",
        "entity2_uri": "http://dbpedia.org/resource/Don_Ashby",
        "entity2_mention": "don ashby"
    },
    {
        "id": "4750",
        "question": "Was the USS Tillamook built in Seattle?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/USS_Tillamook_(AT-16)> <http://dbpedia.org/property/shipBuilder> <http://dbpedia.org/resource/Seattle> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/shipBuilder",
        "predicate1_mention": "built",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/USS_Tillamook_(AT-16)",
        "entity1_mention": "uss tillamook",
        "entity2_uri": "http://dbpedia.org/resource/Seattle",
        "entity2_mention": "seattle"
    },
    {
        "id": "4751",
        "question": "Which university has a sports team member called Micheal Powell and also owns Syracuse University Press ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Powell_(lacrosse)> <http://dbpedia.org/ontology/team> ?uri. <http://dbpedia.org/resource/Syracuse_University_Press> <http://dbpedia.org/property/parent> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/team",
        "predicate1_mention": "team",
        "predicate2_uri": "http://dbpedia.org/property/parent",
        "predicate2_mention": "owns",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Michael_Powell_(lacrosse)",
        "entity1_mention": "micheal powell",
        "entity2_uri": "http://dbpedia.org/resource/Syracuse_University_Press",
        "entity2_mention": "syracuse university press"
    },
    {
        "id": "4752",
        "question": "Which automobile platform provider of Chiva bus is also the parent company of the Ford Falcon Cobra ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chiva_bus> <http://dbpedia.org/ontology/automobilePlatform> ?uri. <http://dbpedia.org/resource/Ford_Falcon_Cobra> <http://dbpedia.org/ontology/parentCompany> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/automobilePlatform",
        "predicate1_mention": "automobile platform",
        "predicate2_uri": "http://dbpedia.org/ontology/parentCompany",
        "predicate2_mention": "parent company",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Chiva_bus",
        "entity1_mention": "chiva bus",
        "entity2_uri": "http://dbpedia.org/resource/Ford_Falcon_Cobra",
        "entity2_mention": "ford falcon cobra"
    },
    {
        "id": "4753",
        "question": "Whihc successor of McDonnell Douglas was built bu Delta 3 ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Delta_III> <http://dbpedia.org/ontology/manufacturer> ?uri. <http://dbpedia.org/resource/McDonnell_Douglas> <http://dbpedia.org/property/successor> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/manufacturer",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/successor",
        "predicate2_mention": "successor",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Delta_III",
        "entity1_mention": "delta 3",
        "entity2_uri": "http://dbpedia.org/resource/McDonnell_Douglas",
        "entity2_mention": "mcdonnell douglas"
    },
    {
        "id": "4754",
        "question": "List all the children of Barbara Bush?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Barbara_Bush> <http://dbpedia.org/property/children> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/children",
        "predicate1_mention": "children",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Barbara_Bush",
        "entity1_mention": "barbara bush",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4755",
        "question": "who is the husband of Rosie Huntington Whiteley?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rosie_Huntington-Whiteley> <http://dbpedia.org/ontology/partner> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/partner",
        "predicate1_mention": "husband",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Rosie_Huntington-Whiteley",
        "entity1_mention": "rosie huntington whiteley",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4756",
        "question": "What is the religious affiliation of the Neungin High School which is also the academic interest of Sylvain Lvi ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Neungin_High_School> <http://dbpedia.org/property/religiousAffiliation> ?uri. <http://dbpedia.org/resource/Sylvain_L\u00e9vi> <http://dbpedia.org/property/fields> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/religiousAffiliation",
        "predicate1_mention": "religious affiliation",
        "predicate2_uri": "http://dbpedia.org/property/fields",
        "predicate2_mention": "interest",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Neungin_High_School",
        "entity1_mention": "neungin high school",
        "entity2_uri": "http://dbpedia.org/resource/Sylvain_L\u00e9vi",
        "entity2_mention": "sylvain"
    },
    {
        "id": "4757",
        "question": "Which European sea has Oulu as one of the shore city ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Europe> . ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Oulu>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/location",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/cities",
        "predicate2_mention": "city",
        "type_uri": "http://dbpedia.org/ontology/Sea",
        "type_mention": "sea",
        "entity1_uri": "http://dbpedia.org/resource/Europe",
        "entity1_mention": "European",
        "entity2_uri": "http://dbpedia.org/resource/Oulu",
        "entity2_mention": "oulu"
    },
    {
        "id": "4758",
        "question": "What is the official name of Arkansas wine ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arkansas_wine> <http://dbpedia.org/property/officialName> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/officialName",
        "predicate1_mention": "official name",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Arkansas_wine",
        "entity1_mention": "arkansas wine",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4759",
        "question": "What are the houses of legislature in the political leader's seat of Medininagar?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Medininagar> <http://dbpedia.org/property/leaderTitle> ?x . ?x <http://dbpedia.org/property/houses> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Legislature>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/leaderTitle",
        "predicate1_mention": "leader's",
        "predicate2_uri": "http://dbpedia.org/property/houses",
        "predicate2_mention": "houses",
        "type_uri": "http://dbpedia.org/ontology/Legislature",
        "type_mention": "legislature",
        "entity1_uri": "http://dbpedia.org/resource/Medininagar",
        "entity1_mention": "medininagar",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4760",
        "question": "What is the alma mater of Julian Leow Beng Kim?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Julian_Leow_Beng_Kim> <http://dbpedia.org/property/almaMater> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/almaMater",
        "predicate1_mention": "alma mater",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Julian_Leow_Beng_Kim",
        "entity1_mention": "julian leow beng kim",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4761",
        "question": "What discipline was The Chess Monthly about ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Chess_Monthly> <http://dbpedia.org/property/discipline> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/discipline",
        "predicate1_mention": "discipline",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/The_Chess_Monthly",
        "entity1_mention": "the chess monthly",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4762",
        "question": "In which province was Dick Redding born?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dick_Redding> <http://dbpedia.org/property/birthDate> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/birthDate",
        "predicate1_mention": "born",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Dick_Redding",
        "entity1_mention": "dick redding",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4763",
        "question": "Which prospect team of Robin Kovacs is the draft team of Bob MacMillan ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bob_MacMillan> <http://dbpedia.org/property/draftTeam> ?uri. <http://dbpedia.org/resource/Robin_Kovacs> <http://dbpedia.org/property/prospectTeam> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/draftTeam",
        "predicate1_mention": "draft team",
        "predicate2_uri": "http://dbpedia.org/property/prospectTeam",
        "predicate2_mention": "prospect team",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Bob_MacMillan",
        "entity1_mention": "bob macmillan",
        "entity2_uri": "http://dbpedia.org/resource/Robin_Kovacs",
        "entity2_mention": "robin kovacs"
    },
    {
        "id": "4764",
        "question": "How many universities are in the National Collegiate Athletic Association?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/athletics> <http://dbpedia.org/resource/National_Collegiate_Athletic_Association>  . }",
        "sparql_id": "101",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/ontology/athletics",
        "predicate1_mention": "athletic",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/National_Collegiate_Athletic_Association",
        "entity1_mention": "National Collegiate Athletic Association",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4765",
        "question": "What are some cars related to the ones with a V8?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/engine> <http://dbpedia.org/resource/V8_engine> . ?x <http://dbpedia.org/property/related> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/engine",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/related",
        "predicate2_mention": "related",
        "type_uri": "http://dbpedia.org/ontology/Automobile",
        "type_mention": "cars",
        "entity1_uri": "http://dbpedia.org/resource/V8_engine",
        "entity1_mention": "v8",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4766",
        "question": "Where is the person from whose military rank is Airman first class?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/Airman_first_class> . ?x <http://dbpedia.org/property/state> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/militaryRank",
        "predicate1_mention": "military rank",
        "predicate2_uri": "http://dbpedia.org/property/state",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Person",
        "type_mention": "person",
        "entity1_uri": "http://dbpedia.org/resource/Airman_first_class",
        "entity1_mention": "airman first class",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4767",
        "question": "List the total number of board members who share board with Creative commons ?",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Creative_Commons> . ?x <http://dbpedia.org/ontology/board> ?uri }",
        "sparql_id": "111",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/board",
        "predicate1_mention": "board",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Creative_Commons",
        "entity1_mention": "creative commons",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4768",
        "question": "Is Fluidinfo written in PostgreSQL language?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Fluidinfo> <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/PostgreSQL> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/programmingLanguage",
        "predicate1_mention": "language",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Fluidinfo",
        "entity1_mention": "fluidinfo",
        "entity2_uri": "http://dbpedia.org/resource/PostgreSQL",
        "entity2_mention": "postgresql"
    },
    {
        "id": "4769",
        "question": "Who currently operates the railway lines one of whose stockholder is Chicago, St Paul, Minneapolis and Omaha railway?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Chicago,_St._Paul,_Minneapolis_and_Omaha_Railway> . ?x <http://dbpedia.org/ontology/operatedBy> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RailwayLine>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/owner",
        "predicate1_mention": "stockholder",
        "predicate2_uri": "http://dbpedia.org/ontology/operatedBy",
        "predicate2_mention": "operates",
        "type_uri": "http://dbpedia.org/ontology/RailwayLine",
        "type_mention": "railway",
        "entity1_uri": "http://dbpedia.org/resource/Chicago,_St._Paul,_Minneapolis_and_Omaha_Railway",
        "entity1_mention": "Chicago, St Paul, Minneapolis and Omaha railway",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4770",
        "question": "In how many different people are alumini of the University of Oxford working?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Worcester_College,_Oxford> . ?x <http://dbpedia.org/ontology/field> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/almaMater",
        "predicate1_mention": "alumini",
        "predicate2_uri": "http://dbpedia.org/ontology/field",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Worcester_College,_Oxford",
        "entity1_mention": "oxford",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4771",
        "question": "Which district of Fort Heath radar station is also the state of Joesph Story ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fort_Heath_radar_station> <http://dbpedia.org/property/district> ?uri. <http://dbpedia.org/resource/Joseph_Story> <http://dbpedia.org/property/state> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/district",
        "predicate1_mention": "district",
        "predicate2_uri": "http://dbpedia.org/property/state",
        "predicate2_mention": "state",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Fort_Heath_radar_station",
        "entity1_mention": "fort heath radar station",
        "entity2_uri": "http://dbpedia.org/resource/Joseph_Story",
        "entity2_mention": "story"
    },
    {
        "id": "4772",
        "question": "Who were the head of government agencies working in the German occupied Europe?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/jurisdiction> <http://dbpedia.org/resource/German-occupied_Europe> . ?x <http://dbpedia.org/ontology/leader> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/jurisdiction",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/leader",
        "predicate2_mention": "head",
        "type_uri": "http://dbpedia.org/ontology/GovernmentAgency",
        "type_mention": "government",
        "entity1_uri": "http://dbpedia.org/resource/German-occupied_Europe",
        "entity1_mention": "german occupied europe",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4773",
        "question": "How many ingedients are required to make the Ragout Fin?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Ragout_fin> <http://dbpedia.org/ontology/ingredient> ?uri  . }",
        "sparql_id": "102",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/ontology/ingredient",
        "predicate1_mention": "ingedients",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Ragout_fin",
        "entity1_mention": "ragout fin",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4774",
        "question": "Is Serbian Titieca a doctoral student of Werner Heisenberg ?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Werner_Heisenberg> <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/\u0218erban_\u021ai\u021beica> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/doctoralStudent",
        "predicate1_mention": "doctoral student",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Werner_Heisenberg",
        "entity1_mention": "werner Heisenberg",
        "entity2_uri": "http://dbpedia.org/resource/\u0218erban_\u021ai\u021beica",
        "entity2_mention": "Serbian Titieca"
    },
    {
        "id": "4775",
        "question": "What show has  judge as Randy Jackson sculptors as Simon Fuller?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Randy_Jackson> . ?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/judges",
        "predicate1_mention": "judge",
        "predicate2_uri": "http://dbpedia.org/property/creator",
        "predicate2_mention": "sculptors",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "show",
        "entity1_uri": "http://dbpedia.org/resource/Randy_Jackson",
        "entity1_mention": "randy jackson",
        "entity2_uri": "http://dbpedia.org/resource/Simon_Fuller",
        "entity2_mention": "simon fuller"
    },
    {
        "id": "4776",
        "question": "What are the software which uses  platforms as ARM architecture?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/ARM_architecture>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/computingPlatform",
        "predicate1_mention": "platforms",
        "predicate2_uri": "http://dbpedia.org/ontology/Software",
        "predicate2_mention": "software",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/ARM_architecture",
        "entity1_mention": "arm architecture",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4777",
        "question": "Where are the cooper mountain vineyards and Mt. bachelor ski area located?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cooper_Mountain_Vineyards> <http://dbpedia.org/ontology/location> ?uri. <http://dbpedia.org/resource/Mount_Bachelor_ski_area> <http://dbpedia.org/ontology/location> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/location",
        "predicate1_mention": "located",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Cooper_Mountain_Vineyards",
        "entity1_mention": "cooper mountain vineyards",
        "entity2_uri": "http://dbpedia.org/resource/Mount_Bachelor_ski_area",
        "entity2_mention": "Mt. bachelor ski area"
    },
    {
        "id": "4778",
        "question": "Which developer of  the Spider-Man: Edge of Time is the  successor of PlayStation 2 ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Spider-Man:_Edge_of_Time> <http://dbpedia.org/ontology/developer> ?uri. <http://dbpedia.org/resource/PlayStation_2> <http://dbpedia.org/ontology/successor> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/developer",
        "predicate1_mention": "developer",
        "predicate2_uri": "http://dbpedia.org/ontology/successor",
        "predicate2_mention": "successor",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Spider-Man:_Edge_of_Time",
        "entity1_mention": "Spider-Man: Edge of Time",
        "entity2_uri": "http://dbpedia.org/resource/PlayStation_2",
        "entity2_mention": "playstation 2"
    },
    {
        "id": "4781",
        "question": "Name the fictional character painted by Josh Friedman and portrayed in Terminator Genisys ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Josh_Friedman> . ?uri <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Terminator_Genisys>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/creator",
        "predicate1_mention": "terminator",
        "predicate2_uri": "http://dbpedia.org/ontology/portrayer",
        "predicate2_mention": "portrayed",
        "type_uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "type_mention": "fictional character",
        "entity1_uri": "http://dbpedia.org/resource/Josh_Friedman",
        "entity1_mention": "josh friedman",
        "entity2_uri": "http://dbpedia.org/resource/Terminator_Genisys",
        "entity2_mention": "terminator genisys"
    },
    {
        "id": "4782",
        "question": "What is the total number of religions that politicians have followed?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Politician> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/profession",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/religion",
        "predicate2_mention": "religions",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Politician",
        "entity1_mention": "politicians",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4783",
        "question": "What are the video games composed by Hirokazu Tanaka?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/composer> <http://dbpedia.org/resource/Hirokazu_Tanaka>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/composer",
        "predicate1_mention": "composed",
        "predicate2_uri": "http://dbpedia.org/ontology/VideoGame",
        "predicate2_mention": "video",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Hirokazu_Tanaka",
        "entity1_mention": "hirokazu tanaka",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4785",
        "question": "Which workplace of the Michael M. Sears is also the  governing body of the Burro Flats Painted Cave?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_M._Sears> <http://dbpedia.org/ontology/employer> ?uri. <http://dbpedia.org/resource/Burro_Flats_Painted_Cave> <http://dbpedia.org/ontology/governingBody> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/employer",
        "predicate1_mention": "workplace",
        "predicate2_uri": "http://dbpedia.org/ontology/governingBody",
        "predicate2_mention": "governing body",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Michael_M._Sears",
        "entity1_mention": "michael m. sears",
        "entity2_uri": "http://dbpedia.org/resource/Burro_Flats_Painted_Cave",
        "entity2_mention": "burro flats painted cave"
    },
    {
        "id": "4786",
        "question": "For how many different presidents have people in the Continental Army served?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Continental_Army> . ?x <http://dbpedia.org/property/president> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/branch",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/president",
        "predicate2_mention": "presidents",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Continental_Army",
        "entity1_mention": "continental army",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4788",
        "question": "Who is the executive producer of Into the Dalek ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Into_the_Dalek> <http://dbpedia.org/property/executiveProducer> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/executiveProducer",
        "predicate1_mention": "executive producer",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Into_the_Dalek",
        "entity1_mention": "into the dalek",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4789",
        "question": "Was Citizen Kane cinematographed by Gregg Toland?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Citizen_Kane> <http://dbpedia.org/property/cinematography> <http://dbpedia.org/resource/Gregg_Toland> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/cinematography",
        "predicate1_mention": "cinematographed",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Citizen_Kane",
        "entity1_mention": "citizen kane",
        "entity2_uri": "http://dbpedia.org/resource/Gregg_Toland",
        "entity2_mention": "gregg toland"
    },
    {
        "id": "4790",
        "question": "What is the prize awarded to Bruce Beutler ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bruce_Beutler> <http://dbpedia.org/ontology/award> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/award",
        "predicate1_mention": "awarded",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Bruce_Beutler",
        "entity1_mention": "bruce beutler",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4791",
        "question": "Which leader of Trump Entertainment Resorts is a relative of Maryanne Barry?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maryanne_Trump_Barry> <http://dbpedia.org/ontology/relation> ?uri. <http://dbpedia.org/resource/Trump_Entertainment_Resorts> <http://dbpedia.org/ontology/keyPerson> ?uri . }",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/relation",
        "predicate1_mention": "relative",
        "predicate2_uri": "http://dbpedia.org/ontology/keyPerson",
        "predicate2_mention": "leader",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Maryanne_Trump_Barry",
        "entity1_mention": "maryanne barry",
        "entity2_uri": "http://dbpedia.org/resource/Trump_Entertainment_Resorts",
        "entity2_mention": "trump entertainment resorts"
    },
    {
        "id": "4792",
        "question": "From which party is the politician who was selected  in Barasat constituency?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Barasat_(Lok_Sabha_constituency)> . ?x <http://dbpedia.org/ontology/party> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/constituency",
        "predicate1_mention": "constituency",
        "predicate2_uri": "http://dbpedia.org/ontology/party",
        "predicate2_mention": "party",
        "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
        "type_mention": "politician",
        "entity1_uri": "http://dbpedia.org/resource/Barasat_(Lok_Sabha_constituency)",
        "entity1_mention": "barasat constituency",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4793",
        "question": "Which writer of Alan Freeman Days is also the writer of Come On over ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alan_Freeman_Days> <http://dbpedia.org/ontology/writer> ?uri. <http://dbpedia.org/resource/Come_On_Over_(Bee_Gees_song)> <http://dbpedia.org/property/writer> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/writer",
        "predicate1_mention": "writer",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Alan_Freeman_Days",
        "entity1_mention": "alan freeman days",
        "entity2_uri": "http://dbpedia.org/resource/Come_On_Over_(Bee_Gees_song)",
        "entity2_mention": "come on over"
    },
    {
        "id": "4794",
        "question": "What is the religion of character of Janice Soprano from The Soprano television show?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Janice_Soprano> <http://dbpedia.org/ontology/religion> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/religion",
        "predicate1_mention": "religion",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Janice_Soprano",
        "entity1_mention": "janice soprano",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4796",
        "question": "Which coach of England national under 21 footbal team is also the coach of Aston Villa F.C season ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/England_national_under-21_football_team> <http://dbpedia.org/property/coach> ?uri. <http://dbpedia.org/resource/2000\u201301_Aston_Villa_F.C._season> <http://dbpedia.org/property/name> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/coach",
        "predicate1_mention": "coach",
        "predicate2_uri": "http://dbpedia.org/property/name",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/England_national_under-21_football_team",
        "entity1_mention": "England national under 21 footbal team",
        "entity2_uri": "http://dbpedia.org/resource/2000\u201301_Aston_Villa_F.C._season",
        "entity2_mention": "Aston Villa F.C season"
    },
    {
        "id": "4797",
        "question": "Name some comic characters created by Bruce Timm?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Bruce_Timm>  . }",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/creator",
        "predicate1_mention": "created",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Bruce_Timm",
        "entity1_mention": "bruce timm",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4799",
        "question": "Which appliance has cpu from Freescale Semiconductor and Marvell Technology Group?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/cpu> <http://dbpedia.org/resource/Freescale_Semiconductor> . ?uri <http://dbpedia.org/ontology/cpu> <http://dbpedia.org/resource/Marvell_Technology_Group> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}",
        "sparql_id": "307",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/cpu",
        "predicate1_mention": "cpu",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/InformationAppliance",
        "type_mention": "appliance",
        "entity1_uri": "http://dbpedia.org/resource/Freescale_Semiconductor",
        "entity1_mention": "freescale semiconductor",
        "entity2_uri": "http://dbpedia.org/resource/Marvell_Technology_Group",
        "entity2_mention": "marvell technology group"
    },
    {
        "id": "4800",
        "question": "Who all have appointed governess born in Magnolia Plantation gardens?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Magnolia_Plantation_and_Gardens_(Charleston,_South_Carolina)> . ?x <http://dbpedia.org/property/appointer> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/birthPlace",
        "predicate1_mention": "born in",
        "predicate2_uri": "http://dbpedia.org/property/appointer",
        "predicate2_mention": "appointed",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Magnolia_Plantation_and_Gardens_(Charleston,_South_Carolina)",
        "entity1_mention": "magnolia plantation gardens",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4801",
        "question": "In how many countries are people born who play cricket?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Cricket> . ?x <http://dbpedia.org/ontology/stateOfOrigin> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/occupation",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/stateOfOrigin",
        "predicate2_mention": "born",
        "type_uri": "http://dbpedia.org/ontology/Country",
        "type_mention": "countries",
        "entity1_uri": "http://dbpedia.org/resource/Cricket",
        "entity1_mention": "cricket",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4802",
        "question": "Is Judy Garland a character of End of the Rainbow?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/End_of_the_Rainbow> <http://dbpedia.org/property/characters> <http://dbpedia.org/resource/Judy_Garland> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/characters",
        "predicate1_mention": "character",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/End_of_the_Rainbow",
        "entity1_mention": "End of the Rainbow",
        "entity2_uri": "http://dbpedia.org/resource/Judy_Garland",
        "entity2_mention": "judy garland"
    },
    {
        "id": "4803",
        "question": "Who has authored books published by the Perkins school for the Blind?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Perkins_School_for_the_Blind> . ?x <http://dbpedia.org/ontology/author> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/publisher",
        "predicate1_mention": "published",
        "predicate2_uri": "http://dbpedia.org/ontology/author",
        "predicate2_mention": "authored",
        "type_uri": "http://dbpedia.org/ontology/WrittenWork",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Perkins_School_for_the_Blind",
        "entity1_mention": "perkins school for the blind",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4804",
        "question": "Which constructor's team won the 1967 Mexican Grand Prix ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1967_Mexican_Grand_Prix> <http://dbpedia.org/property/firstTeam> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/firstTeam",
        "predicate1_mention": "team",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/1967_Mexican_Grand_Prix",
        "entity1_mention": "1967 mexican grand prix",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4805",
        "question": "Give me the name of the organization hqed at  Chaeng Watthana Govt Complex?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Chaeng_Watthana_Government_Complex> . ?x <http://dbpedia.org/property/agencyName> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/headquarter",
        "predicate1_mention": "hqed",
        "predicate2_uri": "http://dbpedia.org/property/agencyName",
        "predicate2_mention": "name",
        "type_uri": "http://dbpedia.org/ontology/Organisation",
        "type_mention": "organization",
        "entity1_uri": "http://dbpedia.org/resource/Chaeng_Watthana_Government_Complex",
        "entity1_mention": "Chaeng Watthana Govt Complex",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4808",
        "question": "Which company created BASIC and Language Integrated Query ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Microsoft_BASIC> <http://dbpedia.org/ontology/designer> ?uri. <http://dbpedia.org/resource/Language_Integrated_Query> <http://dbpedia.org/ontology/designer> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/designer",
        "predicate1_mention": "created",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Microsoft_BASIC",
        "entity1_mention": "basic",
        "entity2_uri": "http://dbpedia.org/resource/Language_Integrated_Query",
        "entity2_mention": "language integrated query"
    },
    {
        "id": "4809",
        "question": "Who has recorded their singles in London?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/recordedIn> <http://dbpedia.org/resource/London> . ?x <http://dbpedia.org/ontology/writer> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/recordedIn",
        "predicate1_mention": "recorded",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Single",
        "type_mention": "singles",
        "entity1_uri": "http://dbpedia.org/resource/London",
        "entity1_mention": "london",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4810",
        "question": "Among which basketball team having arena as The Palace of Auburn hills has president as Stan Van Gundy ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/arena> <http://dbpedia.org/resource/The_Palace_of_Auburn_Hills> . ?uri <http://dbpedia.org/property/president> <http://dbpedia.org/resource/Stan_Van_Gundy>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballTeam>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/arena",
        "predicate1_mention": "arena",
        "predicate2_uri": "http://dbpedia.org/property/president",
        "predicate2_mention": "president",
        "type_uri": "http://dbpedia.org/ontology/BasketballTeam",
        "type_mention": "basketball team",
        "entity1_uri": "http://dbpedia.org/resource/The_Palace_of_Auburn_Hills",
        "entity1_mention": "the palace of auburn hills",
        "entity2_uri": "http://dbpedia.org/resource/Stan_Van_Gundy",
        "entity2_mention": "stan van gundy"
    },
    {
        "id": "4811",
        "question": "What awards have been given to the writers of Wallace and Gromit?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Wallace_and_Gromit> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/notableworks",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/award",
        "predicate2_mention": "awards",
        "type_uri": "http://dbpedia.org/ontology/Writer",
        "type_mention": "writers",
        "entity1_uri": "http://dbpedia.org/resource/Wallace_and_Gromit",
        "entity1_mention": "wallace and gromit",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4812",
        "question": "How many companies have built concrete bridges?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/material> <http://dbpedia.org/resource/Concrete> . ?x <http://dbpedia.org/ontology/builder> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/material",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/builder",
        "predicate2_mention": "built",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Concrete",
        "entity1_mention": "concrete",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4813",
        "question": "What is the alma mater of Alvin Bell and Charles Plosser?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alvin_Bell> <http://dbpedia.org/ontology/college> ?uri. <http://dbpedia.org/resource/Charles_Plosser> <http://dbpedia.org/property/almaMater> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/college",
        "predicate1_mention": "alma mater",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Alvin_Bell",
        "entity1_mention": "alvin bell",
        "entity2_uri": "http://dbpedia.org/resource/Charles_Plosser",
        "entity2_mention": "charles plosser"
    },
    {
        "id": "4814",
        "question": "How many producers have casted Michael Jackson?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Michael_Jackson> . ?x <http://dbpedia.org/property/producer> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/starring",
        "predicate1_mention": "casted",
        "predicate2_uri": "http://dbpedia.org/property/producer",
        "predicate2_mention": "producers",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Michael_Jackson",
        "entity1_mention": "michael jackson",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4815",
        "question": "Who all have created new kinds of cookies?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/type> <http://dbpedia.org/resource/Cookie> . ?x <http://dbpedia.org/property/creator> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/type",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/creator",
        "predicate2_mention": "created",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Cookie",
        "entity1_mention": "cookies",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4816",
        "question": "What awards were given to the screenplayer of The Motorcycle Diaries?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Motorcycle_Diaries_(film)> <http://dbpedia.org/property/screenplay> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/screenplay",
        "predicate1_mention": "screenplayer",
        "predicate2_uri": "http://dbpedia.org/property/awards",
        "predicate2_mention": "awards",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/The_Motorcycle_Diaries_(film)",
        "entity1_mention": "the motorcycle diaries",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4817",
        "question": "Name the fictional character who was in Terminator and portrayer is Terminator 2: Judgment Day?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/series> <http://dbpedia.org/resource/Terminator_(franchise)> . ?uri <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Terminator_2:_Judgment_Day>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/series",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/portrayer",
        "predicate2_mention": "portrayer",
        "type_uri": "http://dbpedia.org/ontology/FictionalCharacter",
        "type_mention": "fictional character",
        "entity1_uri": "http://dbpedia.org/resource/Terminator_(franchise)",
        "entity1_mention": "terminator",
        "entity2_uri": "http://dbpedia.org/resource/Terminator_2:_Judgment_Day",
        "entity2_mention": "terminator 2: judgment day"
    },
    {
        "id": "4819",
        "question": "Where was Juno I launched from ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Juno_I> <http://dbpedia.org/ontology/launchSite> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/launchSite",
        "predicate1_mention": "launched",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Juno_I",
        "entity1_mention": "juno i",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4821",
        "question": "How many TV shows have executive producer as Steven Moffat ?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Steven_Moffat>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "401",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/ontology/executiveProducer",
        "predicate1_mention": "executive producer",
        "predicate2_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "predicate2_mention": "tv shows",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Steven_Moffat",
        "entity1_mention": "steven moffat",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4822",
        "question": "BBC Two is the sister channel of networks having which shows?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/sisterNames> <http://dbpedia.org/resource/BBC_Two> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/sisterNames",
        "predicate1_mention": "sister",
        "predicate2_uri": "http://dbpedia.org/ontology/network",
        "predicate2_mention": "networks",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "shows",
        "entity1_uri": "http://dbpedia.org/resource/BBC_Two",
        "entity1_mention": "bbc two",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4824",
        "question": "What were the awards won by the founder of Walt Disney Records ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Walt_Disney_Records> <http://dbpedia.org/ontology/foundedBy> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/foundedBy",
        "predicate1_mention": "founder",
        "predicate2_uri": "http://dbpedia.org/ontology/award",
        "predicate2_mention": "awards",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Walt_Disney_Records",
        "entity1_mention": "walt disney records",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4825",
        "question": "Which river goes through cohoes, NY",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cohoes,_New_York> <http://dbpedia.org/ontology/river> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/river",
        "predicate1_mention": "river",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Cohoes,_New_York",
        "entity1_mention": "cohoes, NY",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4826",
        "question": "Is the Columbia University chaired by William Campbell?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Columbia_University> <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/William_Campbell_(business_executive)> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/chairman",
        "predicate1_mention": "chaired",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Columbia_University",
        "entity1_mention": "columbia university",
        "entity2_uri": "http://dbpedia.org/resource/William_Campbell_(business_executive)",
        "entity2_mention": "william campbell"
    },
    {
        "id": "4827",
        "question": "What is the purpose of some Maharashtran organizations?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Maharashtra> . ?x <http://dbpedia.org/property/purpose> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/headquarter",
        "predicate1_mention": "maharashtran",
        "predicate2_uri": "http://dbpedia.org/property/purpose",
        "predicate2_mention": "purpose",
        "type_uri": "http://dbpedia.org/ontology/Organisation",
        "type_mention": "organizations",
        "entity1_uri": "http://dbpedia.org/resource/Maharashtra",
        "entity1_mention": "Maharashtran",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4829",
        "question": "Where the children of Ashot Grashi employed at?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ashot_Grashi> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/parent",
        "predicate1_mention": "children",
        "predicate2_uri": "http://dbpedia.org/ontology/occupation",
        "predicate2_mention": "employed at",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Ashot_Grashi",
        "entity1_mention": "ashot grashi",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4830",
        "question": "Who is renowned for Ae Fond Kiss and poem of Halloween ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Ae_Fond_Kiss> . ?uri <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Halloween_(poem)> . }",
        "sparql_id": "7",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/notableworks",
        "predicate1_mention": "renowned",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Ae_Fond_Kiss",
        "entity1_mention": "ae fond kiss",
        "entity2_uri": "http://dbpedia.org/resource/Halloween_(poem)",
        "entity2_mention": "poem of Halloween"
    },
    {
        "id": "4831",
        "question": "In what wars was Steve Buyer involved?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Steve_Buyer> <http://dbpedia.org/ontology/battle> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/battle",
        "predicate1_mention": "wars",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Steve_Buyer",
        "entity1_mention": "steve buyer",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4832",
        "question": "Which  science fiction show has Steven Moffat as executive producer ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Steven_Moffat> . ?uri <http://dbpedia.org/property/genre> <http://dbpedia.org/resource/Science_fiction>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/executiveProducer",
        "predicate1_mention": "executive producer",
        "predicate2_uri": "http://dbpedia.org/property/genre",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "show",
        "entity1_uri": "http://dbpedia.org/resource/Steven_Moffat",
        "entity1_mention": "steven moffat",
        "entity2_uri": "http://dbpedia.org/resource/Science_fiction",
        "entity2_mention": "science fiction"
    },
    {
        "id": "4833",
        "question": "Was Michael Schumacher the Pole driver of 1994 Spanish Grand Prix?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/1994_Spanish_Grand_Prix> <http://dbpedia.org/property/poleDriver> <http://dbpedia.org/resource/Michael_Schumacher> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/poleDriver",
        "predicate1_mention": "pole driver",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/1994_Spanish_Grand_Prix",
        "entity1_mention": "1994 spanish grand prix",
        "entity2_uri": "http://dbpedia.org/resource/Michael_Schumacher",
        "entity2_mention": "michael schumacher"
    },
    {
        "id": "4834",
        "question": "What is the style of architecture of Shaheed Minar , Kolkata ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Shaheed_Minar,_Kolkata> <http://dbpedia.org/ontology/architecturalStyle> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/architecturalStyle",
        "predicate1_mention": "architecture",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Shaheed_Minar,_Kolkata",
        "entity1_mention": "Shaheed Minar , Kolkata",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4835",
        "question": "What cars were built upon the cars which were assembled in Canada?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Canada> . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/assembly",
        "predicate1_mention": "assembled",
        "predicate2_uri": "http://dbpedia.org/ontology/predecessor",
        "predicate2_mention": "built upon",
        "type_uri": "http://dbpedia.org/ontology/Automobile",
        "type_mention": "assembled",
        "entity1_uri": "http://dbpedia.org/resource/Canada",
        "entity1_mention": "canada",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4837",
        "question": "Is San Salvador Island a part of the Bahamas?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/San_Salvador_Island> <http://dbpedia.org/ontology/archipelago> <http://dbpedia.org/resource/The_Bahamas> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/archipelago",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/San_Salvador_Island",
        "entity1_mention": "san salvador island",
        "entity2_uri": "http://dbpedia.org/resource/The_Bahamas",
        "entity2_mention": "the bahamas"
    },
    {
        "id": "4838",
        "question": "Which company 's division is Audi India ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/divisions> <http://dbpedia.org/resource/Audi_India> } ",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/divisions",
        "predicate1_mention": "division",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Audi_India",
        "entity1_mention": "Audi India",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4839",
        "question": "Which  NASA astronaut was on mission Gemini 8?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/type> <http://dbpedia.org/resource/NASA> . ?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Gemini_8>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Astronaut>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/type",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/mission",
        "predicate2_mention": "mission",
        "type_uri": "http://dbpedia.org/ontology/Astronaut",
        "type_mention": "astronaut",
        "entity1_uri": "http://dbpedia.org/resource/NASA",
        "entity1_mention": "nasa",
        "entity2_uri": "http://dbpedia.org/resource/Gemini_8",
        "entity2_mention": "gemini 8"
    },
    {
        "id": "4840",
        "question": "South Side elevated railroad and twin cities 400 are operated by which city?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Side_Elevated_Railroad> <http://dbpedia.org/ontology/operatedBy> ?uri. <http://dbpedia.org/resource/Twin_Cities_400> <http://dbpedia.org/ontology/operatedBy> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/operatedBy",
        "predicate1_mention": "operated by",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/South_Side_Elevated_Railroad",
        "entity1_mention": "South Side elevated railroad",
        "entity2_uri": "http://dbpedia.org/resource/Twin_Cities_400",
        "entity2_mention": "twin cities 400"
    },
    {
        "id": "4841",
        "question": "Is Michelle D. Johnson the superintendent of United States Air Force Academy?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/United_States_Air_Force_Academy> <http://dbpedia.org/property/superintendent> <http://dbpedia.org/resource/Michelle_D._Johnson> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/superintendent",
        "predicate1_mention": "superintendent",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/United_States_Air_Force_Academy",
        "entity1_mention": "United States Air Force Academy",
        "entity2_uri": "http://dbpedia.org/resource/Michelle_D._Johnson",
        "entity2_mention": "Michelle D. Johnson"
    },
    {
        "id": "4842",
        "question": "Which famous political figure appointed william cushing, and also founded Pittsburgh ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pittsburgh> <http://dbpedia.org/ontology/founder> ?uri. <http://dbpedia.org/resource/William_Cushing> <http://dbpedia.org/ontology/appointer> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/founder",
        "predicate1_mention": "founded",
        "predicate2_uri": "http://dbpedia.org/ontology/appointer",
        "predicate2_mention": "appointed",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Pittsburgh",
        "entity1_mention": "Pittsburgh",
        "entity2_uri": "http://dbpedia.org/resource/William_Cushing",
        "entity2_mention": "william cushing"
    },
    {
        "id": "4845",
        "question": "Which basketball players have played in the league of National Basketball Association?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/National_Basketball_Association>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/league",
        "predicate1_mention": "league",
        "predicate2_uri": "http://dbpedia.org/ontology/BasketballPlayer",
        "predicate2_mention": "basketball players",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/National_Basketball_Association",
        "entity1_mention": "national basketball association",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4846",
        "question": "What is the award won of the scientists known for Cubic Hermite spline?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/knownFor> <http://dbpedia.org/resource/Cubic_Hermite_spline> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/knownFor",
        "predicate1_mention": "known for",
        "predicate2_uri": "http://dbpedia.org/ontology/award",
        "predicate2_mention": "award",
        "type_uri": "http://dbpedia.org/ontology/Scientist",
        "type_mention": "scientists",
        "entity1_uri": "http://dbpedia.org/resource/Cubic_Hermite_spline",
        "entity1_mention": "cubic hermite spline",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4847",
        "question": "How many companies were founded in places where Dallas is the governing body ?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/Dallas> . ?uri <http://dbpedia.org/ontology/foundationPlace> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "sparql_id": "406",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/governingBody",
        "predicate1_mention": "governing body",
        "predicate2_uri": "http://dbpedia.org/ontology/foundationPlace",
        "predicate2_mention": "founded in",
        "type_uri": "http://dbpedia.org/ontology/Company",
        "type_mention": "companies",
        "entity1_uri": "http://dbpedia.org/resource/Dallas",
        "entity1_mention": "dallas",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4848",
        "question": "What is the bloomington viaduct built to cross?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bloomington_Viaduct> <http://dbpedia.org/property/crosses> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/crosses",
        "predicate1_mention": "cross",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Bloomington_Viaduct",
        "entity1_mention": "bloomington viaduct",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4849",
        "question": "What awards were presented to the person who produced Paradise place?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Paradise_Place> <http://dbpedia.org/property/producer> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/producer",
        "predicate1_mention": "produced",
        "predicate2_uri": "http://dbpedia.org/property/awards",
        "predicate2_mention": "awards",
        "type_uri": "http://dbpedia.org/ontology/Person",
        "type_mention": "person",
        "entity1_uri": "http://dbpedia.org/resource/Paradise_Place",
        "entity1_mention": "paradise place",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4851",
        "question": "What is the religion of the leader of South Korean legislative election of 1992 ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Korean_legislative_election,_1992> <http://dbpedia.org/property/leader> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/leader",
        "predicate1_mention": "leader",
        "predicate2_uri": "http://dbpedia.org/ontology/religion",
        "predicate2_mention": "religion",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/South_Korean_legislative_election,_1992",
        "entity1_mention": "south korean legislative election of 1992",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4854",
        "question": "Which BBC's TV show is related with the Sarah Jane Adventures?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_HD> . ?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/The_Sarah_Jane_Adventures>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/network",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/related",
        "predicate2_mention": "related",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "tv show",
        "entity1_uri": "http://dbpedia.org/resource/BBC_HD",
        "entity1_mention": "BBC's",
        "entity2_uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures",
        "entity2_mention": "the Sarah Jane Adventures"
    },
    {
        "id": "4855",
        "question": "Who were the first drivers in the grand prix which took place at Autodromo Enzo e Dino Ferrari?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Autodromo_Enzo_e_Dino_Ferrari> . ?x <http://dbpedia.org/ontology/firstDriver> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/location",
        "predicate1_mention": "took place",
        "predicate2_uri": "http://dbpedia.org/ontology/firstDriver",
        "predicate2_mention": "first drivers",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Autodromo_Enzo_e_Dino_Ferrari",
        "entity1_mention": "Autodromo Enzo e Dino Ferrari",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4856",
        "question": "How many cars succeed the cars assembled in Canada?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Canada> . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/assembly",
        "predicate1_mention": "assembled",
        "predicate2_uri": "http://dbpedia.org/ontology/predecessor",
        "predicate2_mention": "succeed",
        "type_uri": "http://dbpedia.org/ontology/Automobile",
        "type_mention": "assembled",
        "entity1_uri": "http://dbpedia.org/resource/Canada",
        "entity1_mention": "canada",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4858",
        "question": "What is the largest city of the country where P. Sathyanarayanan was born?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/P._Sathyanarayanan> <http://dbpedia.org/property/birthplace> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/birthplace",
        "predicate1_mention": "born",
        "predicate2_uri": "http://dbpedia.org/ontology/largestCity",
        "predicate2_mention": "largest city",
        "type_uri": "http://dbpedia.org/ontology/Country",
        "type_mention": "country",
        "entity1_uri": "http://dbpedia.org/resource/P._Sathyanarayanan",
        "entity1_mention": "p. sathyanarayanan",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4860",
        "question": "What beverages originate in Leuven?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/origin> <http://dbpedia.org/resource/Leuven>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Beverage>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/origin",
        "predicate1_mention": "originate",
        "predicate2_uri": "http://dbpedia.org/ontology/Beverage",
        "predicate2_mention": "beverages",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Leuven",
        "entity1_mention": "leuven",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4861",
        "question": "List the people whose are in the board of an organization kickstarted in New York.",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/New_York> . ?uri <http://dbpedia.org/ontology/board> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/foundation",
        "predicate1_mention": "organization",
        "predicate2_uri": "http://dbpedia.org/ontology/board",
        "predicate2_mention": "board",
        "type_uri": "http://dbpedia.org/ontology/Person",
        "type_mention": "people",
        "entity1_uri": "http://dbpedia.org/resource/New_York",
        "entity1_mention": "New York",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4862",
        "question": "Which HBO's television series was produced by Erik Bork?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/HBO> . ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Erik_Bork>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/distributor",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/producer",
        "predicate2_mention": "produced",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "television",
        "entity1_uri": "http://dbpedia.org/resource/HBO",
        "entity1_mention": "HBO's",
        "entity2_uri": "http://dbpedia.org/resource/Erik_Bork",
        "entity2_mention": "erik bork"
    },
    {
        "id": "4863",
        "question": "List the common sports between Fr. Agnel Multipurpose School  and Jamiatu Muslim Mindanao",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College> <http://dbpedia.org/ontology/sport> ?uri. <http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao> <http://dbpedia.org/ontology/athletics> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/sport",
        "predicate1_mention": "sports",
        "predicate2_uri": "http://dbpedia.org/ontology/athletics",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College",
        "entity1_mention": "Fr. Agnel Multipurpose School",
        "entity2_uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao",
        "entity2_mention": "jamiatu muslim mindanao"
    },
    {
        "id": "4865",
        "question": "What are the cities around the sea which flows into the Atlantic?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/inflow> <http://dbpedia.org/resource/Atlantic_Ocean> . ?x <http://dbpedia.org/property/cities> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/inflow",
        "predicate1_mention": "flows",
        "predicate2_uri": "http://dbpedia.org/property/cities",
        "predicate2_mention": "cities",
        "type_uri": "http://dbpedia.org/ontology/Sea",
        "type_mention": "sea",
        "entity1_uri": "http://dbpedia.org/resource/Atlantic_Ocean",
        "entity1_mention": "atlantic",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4866",
        "question": "Which newspapers are owned by companies which are under Rolv Erik Ryssdal?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Rolv_Erik_Ryssdal> . ?uri <http://dbpedia.org/property/owners> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/keyPerson",
        "predicate1_mention": "under",
        "predicate2_uri": "http://dbpedia.org/property/owners",
        "predicate2_mention": "owned",
        "type_uri": "http://dbpedia.org/ontology/Newspaper",
        "type_mention": "newspapers",
        "entity1_uri": "http://dbpedia.org/resource/Rolv_Erik_Ryssdal",
        "entity1_mention": "rolv erik ryssdal",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4867",
        "question": "Which football managers managed Middlesbrough F.C.?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/managerClub> <http://dbpedia.org/resource/Middlesbrough_F.C.> } ",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/managerClub",
        "predicate1_mention": "managers",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Middlesbrough_F.C.",
        "entity1_mention": "middlesbrough f.c.",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4868",
        "question": "Who coached the Marquette golden eagles men team in 09 to 10 and then again in 13 to 14 ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2009\u201310_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/ontology/coach> ?uri. <http://dbpedia.org/resource/2013\u201314_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/ontology/coach> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/coach",
        "predicate1_mention": "coached",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/2009\u201310_Marquette_Golden_Eagles_men's_basketball_team",
        "entity1_mention": "Marquette golden eagles men team",
        "entity2_uri": "http://dbpedia.org/resource/2013\u201314_Marquette_Golden_Eagles_men's_basketball_team",
        "entity2_mention": "marquette golden eagles men team"
    },
    {
        "id": "4870",
        "question": "Which city is the route start of the Moscow-Kazan high-speed railway and birth place of the Ilya Savelev ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moscow-Kazan_high-speed_railway> <http://dbpedia.org/ontology/routeStart> ?uri. <http://dbpedia.org/resource/Ilya_Savelev> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/routeStart",
        "predicate1_mention": "route start",
        "predicate2_uri": "http://dbpedia.org/ontology/birthPlace",
        "predicate2_mention": "birth place",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Moscow-Kazan_high-speed_railway",
        "entity1_mention": "moscow-kazan high-speed railway",
        "entity2_uri": "http://dbpedia.org/resource/Ilya_Savelev",
        "entity2_mention": "ilya savelev"
    },
    {
        "id": "4871",
        "question": "Count the number of sports played by university which also plays Taekwondo ?",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/athletics> <http://dbpedia.org/resource/Taekwondo> . ?x <http://dbpedia.org/property/athletics> ?uri }",
        "sparql_id": "111",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/athletics",
        "predicate1_mention": "played",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Taekwondo",
        "entity1_mention": "taekwondo",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4872",
        "question": "Where did the narrators of the Championship snooker die?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Championship_Snooker> <http://dbpedia.org/property/narrated> ?x . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/narrated",
        "predicate1_mention": "narrators",
        "predicate2_uri": "http://dbpedia.org/ontology/deathPlace",
        "predicate2_mention": "die",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Championship_Snooker",
        "entity1_mention": "championship snooker",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4873",
        "question": "Where is the lake located into which the Winnipeg River flows?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/outflow> <http://dbpedia.org/resource/Winnipeg_River> . ?x <http://dbpedia.org/property/location> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/outflow",
        "predicate1_mention": "flows",
        "predicate2_uri": "http://dbpedia.org/property/location",
        "predicate2_mention": "located",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Winnipeg_River",
        "entity1_mention": "winnipeg river",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4874",
        "question": "Which government agency is run by Supachai Somcharoen?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Supachai_Somcharoen> . ?x <http://dbpedia.org/property/agencyName> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/leader",
        "predicate1_mention": "run by",
        "predicate2_uri": "http://dbpedia.org/property/agencyName",
        "predicate2_mention": "agency",
        "type_uri": "http://dbpedia.org/ontology/GovernmentAgency",
        "type_mention": "government agency",
        "entity1_uri": "http://dbpedia.org/resource/Supachai_Somcharoen",
        "entity1_mention": "supachai somcharoen",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4876",
        "question": "Is Grand Bahama lie in the achipelago of the bahamas?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Grand_Bahama> <http://dbpedia.org/property/archipelago> <http://dbpedia.org/resource/The_Bahamas> }",
        "sparql_id": "151",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/property/archipelago",
        "predicate1_mention": "achipelago",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Grand_Bahama",
        "entity1_mention": "grand bahama",
        "entity2_uri": "http://dbpedia.org/resource/The_Bahamas",
        "entity2_mention": "the bahamas"
    },
    {
        "id": "4877",
        "question": "What is the genre of Battle Chess?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Battle_Chess> <http://dbpedia.org/property/genre> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/genre",
        "predicate1_mention": "genre",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Battle_Chess",
        "entity1_mention": "battle chess",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4878",
        "question": "Which colonel has allegiance to Colony of Virginia ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/allegiance> <http://dbpedia.org/resource/Colony_of_Virginia> . ?uri <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Colonel_(United_States)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/allegiance",
        "predicate1_mention": "allegiance",
        "predicate2_uri": "http://dbpedia.org/property/rank",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
        "type_mention": "colonel",
        "entity1_uri": "http://dbpedia.org/resource/Colony_of_Virginia",
        "entity1_mention": "colony of virginia",
        "entity2_uri": "http://dbpedia.org/resource/Colonel_(United_States)",
        "entity2_mention": "colonel"
    },
    {
        "id": "4880",
        "question": "How many bands are signed up with Kobalt Label Services?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/Kobalt_Label_Services>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
        "sparql_id": "401",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/ontology/recordLabel",
        "predicate1_mention": "label",
        "predicate2_uri": "http://dbpedia.org/ontology/Band",
        "predicate2_mention": "bands",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Kobalt_Label_Services",
        "entity1_mention": "kobalt label services",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4881",
        "question": "where are the sister stations of CFRB broadcasted?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/sisterStations> <http://dbpedia.org/resource/CFRB> . ?x <http://dbpedia.org/ontology/broadcastArea> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/sisterStations",
        "predicate1_mention": "sister stations",
        "predicate2_uri": "http://dbpedia.org/ontology/broadcastArea",
        "predicate2_mention": "broadcasted",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/CFRB",
        "entity1_mention": "cfrb",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4883",
        "question": "Namt the fields of Paul Demiville ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Paul_Demi\u00e9ville> <http://dbpedia.org/property/fields> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/fields",
        "predicate1_mention": "fields",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Paul_Demi\u00e9ville",
        "entity1_mention": "Paul Demiville",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4884",
        "question": "What is the sea connected to Kaliningrad and Gdask?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Kaliningrad> . ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Gda\u0144sk> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
        "sparql_id": "307",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/cities",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/cities",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Sea",
        "type_mention": "sea",
        "entity1_uri": "http://dbpedia.org/resource/Kaliningrad",
        "entity1_mention": "kaliningrad",
        "entity2_uri": "http://dbpedia.org/resource/Gda\u0144sk",
        "entity2_mention": "Gdask"
    },
    {
        "id": "4885",
        "question": "From how many countries did the aeroplanes designed by Alexander Lippisch originate?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Alexander_Lippisch> . ?x <http://dbpedia.org/property/nationalOrigin> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/designer",
        "predicate1_mention": "designed by",
        "predicate2_uri": "http://dbpedia.org/property/nationalOrigin",
        "predicate2_mention": "originate",
        "type_uri": "http://dbpedia.org/ontology/Country",
        "type_mention": "countries",
        "entity1_uri": "http://dbpedia.org/resource/Alexander_Lippisch",
        "entity1_mention": "alexander lippisch",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4886",
        "question": "Which district of Thorington railway station is the location of death of  David Lewis (poet) ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thorington_railway_station> <http://dbpedia.org/ontology/district> ?uri. <http://dbpedia.org/resource/David_Lewis_(poet)> <http://dbpedia.org/ontology/deathPlace> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/district",
        "predicate1_mention": "district",
        "predicate2_uri": "http://dbpedia.org/ontology/deathPlace",
        "predicate2_mention": "death",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Thorington_railway_station",
        "entity1_mention": "thorington railway station",
        "entity2_uri": "http://dbpedia.org/resource/David_Lewis_(poet)",
        "entity2_mention": "david lewis (poet)"
    },
    {
        "id": "4888",
        "question": "How many people are famous for the Gibson Les Paul?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Gibson_Les_Paul>  . }",
        "sparql_id": "101",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/property/notableInstruments",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Gibson_Les_Paul",
        "entity1_mention": "Gibson Les Paul",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4889",
        "question": "Who is the office holder for constituencies  Castro District and Haight-Ashbury?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Castro_District,_San_Francisco> . ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Haight-Ashbury> . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_id": "307",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/constituency",
        "predicate1_mention": "constituencies",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
        "type_mention": "office holder",
        "entity1_uri": "http://dbpedia.org/resource/Castro_District,_San_Francisco",
        "entity1_mention": "Castro District",
        "entity2_uri": "http://dbpedia.org/resource/Haight-Ashbury",
        "entity2_mention": "haight-ashbury"
    },
    {
        "id": "4890",
        "question": "Count the number of movies whose editors were born in UK?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/United_Kingdom> . ?uri <http://dbpedia.org/property/editing> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "406",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/birthPlace",
        "predicate1_mention": "born",
        "predicate2_uri": "http://dbpedia.org/property/editing",
        "predicate2_mention": "editors",
        "type_uri": "http://dbpedia.org/ontology/Film",
        "type_mention": "movies",
        "entity1_uri": "http://dbpedia.org/resource/United_Kingdom",
        "entity1_mention": "UK",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4892",
        "question": "In how many places did the Schutzstaffels die?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/Schutzstaffel> . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/militaryRank",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/placeOfDeath",
        "predicate2_mention": "die",
        "type_uri": "http://dbpedia.org/ontology/Place",
        "type_mention": "places",
        "entity1_uri": "http://dbpedia.org/resource/Schutzstaffel",
        "entity1_mention": "Schutzstaffels",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4893",
        "question": "What faith do hang chuon naron and Kron Ngoy follow?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hang_Chuon_Naron> <http://dbpedia.org/ontology/religion> ?uri. <http://dbpedia.org/resource/Krom_Ngoy> <http://dbpedia.org/ontology/religion> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/religion",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/religion",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Hang_Chuon_Naron",
        "entity1_mention": "hang chuon naron",
        "entity2_uri": "http://dbpedia.org/resource/Krom_Ngoy",
        "entity2_mention": "kron ngoy"
    },
    {
        "id": "4894",
        "question": "Name the people living in a place governed by William W Brien?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/William_W._Brien> . ?uri <http://dbpedia.org/ontology/residence> ?x  . }",
        "sparql_id": "6",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/leaderName",
        "predicate1_mention": "name",
        "predicate2_uri": "http://dbpedia.org/ontology/residence",
        "predicate2_mention": "living in",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/William_W._Brien",
        "entity1_mention": "william w brien",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4895",
        "question": "How many game series exist for iOS?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/IOS> . ?x <http://dbpedia.org/ontology/series> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/computingPlatform",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/series",
        "predicate2_mention": "series",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/IOS",
        "entity1_mention": "ios",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4897",
        "question": "Name the stock holders of soccer club whose one of the stockholder is Carl Sanders ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Carl_Sanders> . ?x <http://dbpedia.org/ontology/owner> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/owner",
        "predicate1_mention": "stock holders",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/SoccerClub",
        "type_mention": "soccer club",
        "entity1_uri": "http://dbpedia.org/resource/Carl_Sanders",
        "entity1_mention": "carl sanders",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4898",
        "question": "Who was the parent of person whose child is William C P breckinridge?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/children> <http://dbpedia.org/resource/William_Campbell_Preston_Breckinridge> . ?x <http://dbpedia.org/ontology/parent> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/children",
        "predicate1_mention": "child",
        "predicate2_uri": "http://dbpedia.org/ontology/parent",
        "predicate2_mention": "parent",
        "type_uri": "http://dbpedia.org/ontology/Person",
        "type_mention": "person",
        "entity1_uri": "http://dbpedia.org/resource/William_Campbell_Preston_Breckinridge",
        "entity1_mention": "William C P breckinridge",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4899",
        "question": "What is the location of the pope whose major shrine is St. Peter's Basilica ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/majorShrine> <http://dbpedia.org/resource/St._Peter's_Basilica> . ?x <http://dbpedia.org/property/birthPlace> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Pope>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/majorShrine",
        "predicate1_mention": "major shrine",
        "predicate2_uri": "http://dbpedia.org/property/birthPlace",
        "predicate2_mention": "location",
        "type_uri": "http://dbpedia.org/ontology/Pope",
        "type_mention": "pope",
        "entity1_uri": "http://dbpedia.org/resource/St._Peter's_Basilica",
        "entity1_mention": "st. peter's basilica",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4900",
        "question": "Which TV show's producer is Stephen E. Ambrose and company is DreamWorks Television?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Stephen_E._Ambrose> . ?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/DreamWorks_Television>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/producer",
        "predicate1_mention": "producer",
        "predicate2_uri": "http://dbpedia.org/ontology/company",
        "predicate2_mention": "company",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "tv show's",
        "entity1_uri": "http://dbpedia.org/resource/Stephen_E._Ambrose",
        "entity1_mention": "stephen e. ambrose",
        "entity2_uri": "http://dbpedia.org/resource/DreamWorks_Television",
        "entity2_mention": "dreamworks television"
    },
    {
        "id": "4901",
        "question": "Where does the rivers ending in lake washington begin?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Lake_Washington> . ?x <http://dbpedia.org/property/sourceLocation> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/riverMouth",
        "predicate1_mention": "rivers",
        "predicate2_uri": "http://dbpedia.org/property/sourceLocation",
        "predicate2_mention": "begin",
        "type_uri": "http://dbpedia.org/ontology/River",
        "type_mention": "rivers",
        "entity1_uri": "http://dbpedia.org/resource/Lake_Washington",
        "entity1_mention": "lake washington",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4902",
        "question": "What is operated by FedExField ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/FedExField> <http://dbpedia.org/ontology/operator> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/operator",
        "predicate1_mention": "operated",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/FedExField",
        "entity1_mention": "fedexfield",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4904",
        "question": "Where does the river flow into, which starts at the Sierra Madre de Chiapas?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Sierra_Madre_de_Chiapas> . ?x <http://dbpedia.org/property/mouthCountry> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/source",
        "predicate1_mention": "flow into",
        "predicate2_uri": "http://dbpedia.org/property/mouthCountry",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/River",
        "type_mention": "river",
        "entity1_uri": "http://dbpedia.org/resource/Sierra_Madre_de_Chiapas",
        "entity1_mention": "Sierra Madre de Chiapas",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4905",
        "question": "How many other race are there of the adult (pornographic) actors whose ethnicity is Cherokee ?",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/ethnicity> <http://dbpedia.org/resource/Cherokee> . ?x <http://dbpedia.org/property/ethnicity> ?uri }",
        "sparql_id": "111",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/ethnicity",
        "predicate1_mention": "ethnicity",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Cherokee",
        "entity1_mention": "cherokee",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4906",
        "question": "Who is the producer of the single which was the subsequent work of He's a Liar?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/He's_a_Liar> <http://dbpedia.org/ontology/subsequentWork> ?x . ?x <http://dbpedia.org/ontology/producer> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/subsequentWork",
        "predicate1_mention": "subsequent work",
        "predicate2_uri": "http://dbpedia.org/ontology/producer",
        "predicate2_mention": "producer",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/He's_a_Liar",
        "entity1_mention": "he's a liar",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4907",
        "question": "What series is Mazes of Time from, and is produced by BBC multimedia?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/BBC_Multimedia> <http://dbpedia.org/ontology/product> ?uri. <http://dbpedia.org/resource/Doctor_Who:_The_Mazes_of_Time> <http://dbpedia.org/ontology/series> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/product",
        "predicate1_mention": "produced",
        "predicate2_uri": "http://dbpedia.org/ontology/series",
        "predicate2_mention": "series",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/BBC_Multimedia",
        "entity1_mention": "bbc multimedia",
        "entity2_uri": "http://dbpedia.org/resource/Doctor_Who:_The_Mazes_of_Time",
        "entity2_mention": "mazes of time"
    },
    {
        "id": "4908",
        "question": "WHo gave the lyrcis of Doonesbury ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Doonesbury_(musical)> <http://dbpedia.org/ontology/lyrics> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/lyrics",
        "predicate1_mention": "lyrcis",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Doonesbury_(musical)",
        "entity1_mention": "doonesbury",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4909",
        "question": "Whose shrine is in aachen cathedral?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/majorShrine> <http://dbpedia.org/resource/Aachen_Cathedral>  . }",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/majorShrine",
        "predicate1_mention": "shrine",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Aachen_Cathedral",
        "entity1_mention": "aachen cathedral",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4910",
        "question": "Who are the parents of  Charles Phelps Taft II and Robert A. Taft?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Phelps_Taft_II> . ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Robert_A._Taft> . }",
        "sparql_id": "7",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/child",
        "predicate1_mention": "parents",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Charles_Phelps_Taft_II",
        "entity1_mention": "charles phelps taft ii",
        "entity2_uri": "http://dbpedia.org/resource/Robert_A._Taft",
        "entity2_mention": "robert a. taft"
    },
    {
        "id": "4913",
        "question": "Which assembly of the Plymouth Savoy is the route end of the NorthSouth Transport Corridor?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Plymouth_Savoy> <http://dbpedia.org/ontology/assembly> ?uri. <http://dbpedia.org/resource/North\u2013South_Transport_Corridor> <http://dbpedia.org/ontology/routeEnd> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/assembly",
        "predicate1_mention": "assembly",
        "predicate2_uri": "http://dbpedia.org/ontology/routeEnd",
        "predicate2_mention": "route end",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Plymouth_Savoy",
        "entity1_mention": "plymouth savoy",
        "entity2_uri": "http://dbpedia.org/resource/North\u2013South_Transport_Corridor",
        "entity2_mention": "the NorthSouth Transport Corridor"
    },
    {
        "id": "4914",
        "question": "Name the band atleast one of whose members is famous for playing the Fender Stratocaster?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Fender_Stratocaster> . ?uri <http://dbpedia.org/property/currentMembers> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/notableInstruments",
        "predicate1_mention": "atleast",
        "predicate2_uri": "http://dbpedia.org/property/currentMembers",
        "predicate2_mention": "members",
        "type_uri": "http://dbpedia.org/ontology/Band",
        "type_mention": "band",
        "entity1_uri": "http://dbpedia.org/resource/Fender_Stratocaster",
        "entity1_mention": "fender stratocaster",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4915",
        "question": "Give me a count of mammals which have their order as Primate?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Primate>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}",
        "sparql_id": "401",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/ontology/order",
        "predicate1_mention": "order",
        "predicate2_uri": "http://dbpedia.org/ontology/Mammal",
        "predicate2_mention": "mammals",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Primate",
        "entity1_mention": "primate",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4916",
        "question": "What are the things whose leader was a monarch of Willem-Alexander of the Netherlands?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/monarch> <http://dbpedia.org/resource/Willem-Alexander_of_the_Netherlands> . ?uri <http://dbpedia.org/ontology/leader> ?x  . }",
        "sparql_id": "6",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/monarch",
        "predicate1_mention": "monarch",
        "predicate2_uri": "http://dbpedia.org/ontology/leader",
        "predicate2_mention": "leader",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Willem-Alexander_of_the_Netherlands",
        "entity1_mention": "willem-alexander of the netherlands",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4917",
        "question": "Who owns Chelsea F.C.?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Chelsea_F.C.>  . }",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/occupation",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Chelsea_F.C.",
        "entity1_mention": "chelsea f.c.",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4918",
        "question": "During the reigns of which monarchs was the name to the  Israelite kingdom as United Monarch?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Kingdom_of_Israel_(united_monarchy)> } ",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/title",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Kingdom_of_Israel_(united_monarchy)",
        "entity1_mention": "Israelite kingdom as United Monarch",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4919",
        "question": "Tell me the total number of organizations who maintain the bridges made by the malaysian PWD?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Malaysian_Public_Works_Department> . ?x <http://dbpedia.org/ontology/maintainedBy> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/designer",
        "predicate1_mention": "made by",
        "predicate2_uri": "http://dbpedia.org/ontology/maintainedBy",
        "predicate2_mention": "maintain",
        "type_uri": "http://dbpedia.org/ontology/Organisation",
        "type_mention": "organizations",
        "entity1_uri": "http://dbpedia.org/resource/Malaysian_Public_Works_Department",
        "entity1_mention": "malaysian pwd",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4920",
        "question": "Which county seat of the King County, Washington and PLACE OF DEATH of the Phil Lumpkin ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/King_County,_Washington> <http://dbpedia.org/ontology/countySeat> ?uri. <http://dbpedia.org/resource/Phil_Lumpkin> <http://dbpedia.org/property/placeOfDeath> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/countySeat",
        "predicate1_mention": "county",
        "predicate2_uri": "http://dbpedia.org/property/placeOfDeath",
        "predicate2_mention": "place of death",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/King_County,_Washington",
        "entity1_mention": "king county, washington",
        "entity2_uri": "http://dbpedia.org/resource/Phil_Lumpkin",
        "entity2_mention": "phil lumpkin"
    },
    {
        "id": "4921",
        "question": "Name the river whose mouth place is Old Lyme , Connecticut?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/Old_Lyme,_Connecticut>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/mouthPlace",
        "predicate1_mention": "mouth place",
        "predicate2_uri": "http://dbpedia.org/ontology/River",
        "predicate2_mention": "river",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Old_Lyme,_Connecticut",
        "entity1_mention": "old lyme , connecticut",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4922",
        "question": "list the  software which works on both the OS  - Microsoft Windows and Mac OS ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows> . ?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Mac_OS> . }",
        "sparql_id": "7",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/operatingSystem",
        "predicate1_mention": "software",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Microsoft_Windows",
        "entity1_mention": "microsoft windows",
        "entity2_uri": "http://dbpedia.org/resource/Mac_OS",
        "entity2_mention": "mac os"
    },
    {
        "id": "4923",
        "question": "Which  person has opponent Ike Clanton?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/Ike_Clanton>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/opponent",
        "predicate1_mention": "opponent",
        "predicate2_uri": "http://dbpedia.org/ontology/Person",
        "predicate2_mention": "person",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Ike_Clanton",
        "entity1_mention": "ike clanton",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4924",
        "question": "List the affiliation of Indian general election , 2004 ( Andhra Pradesh ) ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)> <http://dbpedia.org/ontology/affiliation> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/affiliation",
        "predicate1_mention": "affiliation",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)",
        "entity1_mention": "Indian general election , 2004 ( Andhra Pradesh )",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4925",
        "question": "Which idelogy of the Palang Dharma Party is also the  faith of Miao people ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Palang_Dharma_Party> <http://dbpedia.org/ontology/ideology> ?uri. <http://dbpedia.org/resource/Miao_people> <http://dbpedia.org/ontology/religion> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/ideology",
        "predicate1_mention": "idelogy",
        "predicate2_uri": "http://dbpedia.org/ontology/religion",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Palang_Dharma_Party",
        "entity1_mention": "palang dharma party",
        "entity2_uri": "http://dbpedia.org/resource/Miao_people",
        "entity2_mention": "miao people"
    },
    {
        "id": "4926",
        "question": "Which municipality of the Brown's Corners, toronto also place of birth of Krista Kelly ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brown's_Corners,_Toronto> <http://dbpedia.org/ontology/municipality> ?uri. <http://dbpedia.org/resource/Krista_Kelly> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/municipality",
        "predicate1_mention": "municipality",
        "predicate2_uri": "http://dbpedia.org/property/placeOfBirth",
        "predicate2_mention": "place of birth",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Brown's_Corners,_Toronto",
        "entity1_mention": "brown's corners, toronto",
        "entity2_uri": "http://dbpedia.org/resource/Krista_Kelly",
        "entity2_mention": "krista kelly"
    },
    {
        "id": "4928",
        "question": "Where are the shrines of the saints who were beatified by Pope Pius XI?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/beatifiedBy> <http://dbpedia.org/resource/Pope_Pius_XI> . ?x <http://dbpedia.org/ontology/majorShrine> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Saint>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/beatifiedBy",
        "predicate1_mention": "beatified by",
        "predicate2_uri": "http://dbpedia.org/ontology/majorShrine",
        "predicate2_mention": "shrines",
        "type_uri": "http://dbpedia.org/ontology/Saint",
        "type_mention": "saints",
        "entity1_uri": "http://dbpedia.org/resource/Pope_Pius_XI",
        "entity1_mention": "pope pius xi",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4929",
        "question": "In how many different places are Brown haired models living?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/hairColor> <http://dbpedia.org/resource/Brown_hair> . ?x <http://dbpedia.org/ontology/residence> ?uri  . }",
        "sparql_id": "105",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/hairColor",
        "predicate1_mention": "haired",
        "predicate2_uri": "http://dbpedia.org/ontology/residence",
        "predicate2_mention": "living",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Brown_hair",
        "entity1_mention": "brown haired",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4930",
        "question": "Solon Spencer Beman has architected in how many cities?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Solon_Spencer_Beman> . ?x <http://dbpedia.org/property/locationTown> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/architect",
        "predicate1_mention": "architected",
        "predicate2_uri": "http://dbpedia.org/property/locationTown",
        "predicate2_mention": "cities",
        "type_uri": "http://dbpedia.org/ontology/City",
        "type_mention": "cities",
        "entity1_uri": "http://dbpedia.org/resource/Solon_Spencer_Beman",
        "entity1_mention": "solon spencer beman",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4931",
        "question": "What was a common first team at the 1967 Mexican Grand Prix and 1971 US one?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1967_Mexican_Grand_Prix> <http://dbpedia.org/property/firstTeam> ?uri. <http://dbpedia.org/resource/1971_United_States_Grand_Prix> <http://dbpedia.org/property/firstTeam> ?uri . }",
        "sparql_id": "15",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/firstTeam",
        "predicate1_mention": "first team",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/1967_Mexican_Grand_Prix",
        "entity1_mention": "1967 mexican grand prix",
        "entity2_uri": "http://dbpedia.org/resource/1971_United_States_Grand_Prix",
        "entity2_mention": "1971 us"
    },
    {
        "id": "4932",
        "question": "What is the location of Sam Sen Railway Station ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sam_Sen_Railway_Station> <http://dbpedia.org/property/other> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/other",
        "predicate1_mention": "",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Sam_Sen_Railway_Station",
        "entity1_mention": " sam sen railway station",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4933",
        "question": "In how many places have the companies started in Newcastle worked?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/City_of_Newcastle> . ?x <http://dbpedia.org/ontology/regionServed> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/foundationPlace",
        "predicate1_mention": "places",
        "predicate2_uri": "http://dbpedia.org/ontology/regionServed",
        "predicate2_mention": "worked",
        "type_uri": "http://dbpedia.org/ontology/Place",
        "type_mention": "places",
        "entity1_uri": "http://dbpedia.org/resource/City_of_Newcastle",
        "entity1_mention": "newcastle",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4935",
        "question": "In which areas is the radio station broadcasted which is a sister station of WXME ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WXME> <http://dbpedia.org/property/sisterStations> ?x . ?x <http://dbpedia.org/property/area> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/sisterStations",
        "predicate1_mention": "sister station",
        "predicate2_uri": "http://dbpedia.org/property/area",
        "predicate2_mention": "areas",
        "type_uri": "http://dbpedia.org/ontology/RadioStation",
        "type_mention": "station",
        "entity1_uri": "http://dbpedia.org/resource/WXME",
        "entity1_mention": "wxme",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4936",
        "question": "Who was the director of photography of Mickey's Mellerdrammer and the animator of Tommy Tucker's Tooth?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mickey's_Mellerdrammer> <http://dbpedia.org/property/cinematography> ?uri. <http://dbpedia.org/resource/Tommy_Tucker's_Tooth> <http://dbpedia.org/property/animator> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/cinematography",
        "predicate1_mention": "photography",
        "predicate2_uri": "http://dbpedia.org/property/animator",
        "predicate2_mention": "animator",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Mickey's_Mellerdrammer",
        "entity1_mention": "mickey's mellerdrammer",
        "entity2_uri": "http://dbpedia.org/resource/Tommy_Tucker's_Tooth",
        "entity2_mention": "Tommy Tucker's Tooth"
    },
    {
        "id": "4937",
        "question": "Name the origins of the river with Quich Department as one of the origin ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/origin> <http://dbpedia.org/resource/Quich\u00e9_Department> . ?x <http://dbpedia.org/ontology/origin> ?uri  . }",
        "sparql_id": "11",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/origin",
        "predicate1_mention": "origin",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Quich\u00e9_Department",
        "entity1_mention": "quich department",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4939",
        "question": "What is the location town of Seattle Great Wheel ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Seattle_Great_Wheel> <http://dbpedia.org/property/locationTown> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/locationTown",
        "predicate1_mention": "location town",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Seattle_Great_Wheel",
        "entity1_mention": "seattle great wheel",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4940",
        "question": "Name the office holder whose alma mater is Harvard-Westlake School and resting place is Alta Mesa Memorial Park?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Harvard-Westlake_School> . ?uri <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Alta_Mesa_Memorial_Park>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/almaMater",
        "predicate1_mention": "alma mater",
        "predicate2_uri": "http://dbpedia.org/property/restingPlace",
        "predicate2_mention": "resting place",
        "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
        "type_mention": "office holder",
        "entity1_uri": "http://dbpedia.org/resource/Harvard-Westlake_School",
        "entity1_mention": "harvard-westlake school",
        "entity2_uri": "http://dbpedia.org/resource/Alta_Mesa_Memorial_Park",
        "entity2_mention": "Alta Mesa Memorial Park"
    },
    {
        "id": "4941",
        "question": "Which band had members who are now in The Bleeding Heart Band?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/The_Bleeding_Heart_Band> . ?uri <http://dbpedia.org/ontology/formerBandMember> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/associatedBand",
        "predicate1_mention": "band",
        "predicate2_uri": "http://dbpedia.org/ontology/formerBandMember",
        "predicate2_mention": "members",
        "type_uri": "http://dbpedia.org/ontology/Band",
        "type_mention": "band",
        "entity1_uri": "http://dbpedia.org/resource/The_Bleeding_Heart_Band",
        "entity1_mention": "the bleeding heart band",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4942",
        "question": "In which cities do some railways operated by Russian railways start?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/operatedBy> <http://dbpedia.org/resource/Russian_Railways> . ?x <http://dbpedia.org/ontology/routeStart> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/operatedBy",
        "predicate1_mention": "operated",
        "predicate2_uri": "http://dbpedia.org/ontology/routeStart",
        "predicate2_mention": "start",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Russian_Railways",
        "entity1_mention": "russian railways",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4943",
        "question": "Which producer of Wizards and the aliens is also the notable work of russell T Davies ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wizards_vs_Aliens> <http://dbpedia.org/ontology/producer> ?uri. <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/ontology/notableWork> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/producer",
        "predicate1_mention": "producer",
        "predicate2_uri": "http://dbpedia.org/ontology/notableWork",
        "predicate2_mention": "notable work",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Wizards_vs_Aliens",
        "entity1_mention": "wizards and the aliens",
        "entity2_uri": "http://dbpedia.org/resource/Russell_T_Davies",
        "entity2_mention": "russell T davies"
    },
    {
        "id": "4944",
        "question": "Rivers which end in Arkansas go through which cities?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Arkansas> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/mouthMountain",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/city",
        "predicate2_mention": "cities",
        "type_uri": "http://dbpedia.org/ontology/River",
        "type_mention": "rivers",
        "entity1_uri": "http://dbpedia.org/resource/Arkansas",
        "entity1_mention": "arkansas",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4945",
        "question": "What is the religion of the academic authority on Ceratosoma tenue?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ceratosoma_tenue> <http://dbpedia.org/ontology/binomialAuthority> ?x . ?x <http://dbpedia.org/property/veneratedIn> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/binomialAuthority",
        "predicate1_mention": "authority",
        "predicate2_uri": "http://dbpedia.org/property/veneratedIn",
        "predicate2_mention": "religion",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Ceratosoma_tenue",
        "entity1_mention": "ceratosoma tenue",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4948",
        "question": "Name the party of Indira Gandhi ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Indira_Gandhi> <http://dbpedia.org/ontology/party> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/party",
        "predicate1_mention": "party",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Indira_Gandhi",
        "entity1_mention": "indira gandhi",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4951",
        "question": "Who all have been a commander during the battles of Ohio?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/place> <http://dbpedia.org/resource/Ohio> . ?x <http://dbpedia.org/ontology/commander> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/place",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/commander",
        "predicate2_mention": "commander",
        "type_uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "type_mention": "commander",
        "entity1_uri": "http://dbpedia.org/resource/Ohio",
        "entity1_mention": "ohio",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4952",
        "question": "Where did john o conner study?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_O'Connor_(archbishop_of_New_York)> <http://dbpedia.org/ontology/almaMater> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/almaMater",
        "predicate1_mention": "study",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/John_O'Connor_(archbishop_of_New_York)",
        "entity1_mention": "john o conner",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4954",
        "question": "Who owns the websites for which Jimmy wales writes?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Jimmy_Wales> . ?x <http://dbpedia.org/ontology/owner> ?uri  . }",
        "sparql_id": "5",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/author",
        "predicate1_mention": "writes",
        "predicate2_uri": "http://dbpedia.org/ontology/owner",
        "predicate2_mention": "owns",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Jimmy_Wales",
        "entity1_mention": "jimmy wales",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4956",
        "question": "How many other school are there of the rugby players whose school is Michaelhouse ?",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/school> <http://dbpedia.org/resource/Michaelhouse> . ?x <http://dbpedia.org/property/school> ?uri }",
        "sparql_id": "111",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/school",
        "predicate1_mention": "school",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Michaelhouse",
        "entity1_mention": "michaelhouse",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4957",
        "question": "How many people have been the first one to scale a peak in the Yosemite Park?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Yosemite_National_Park> . ?x <http://dbpedia.org/ontology/firstAscentPerson> ?uri  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "405",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/locatedInArea",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/firstAscentPerson",
        "predicate2_mention": "first one to scale a peak",
        "type_uri": "http://dbpedia.org/ontology/Person",
        "type_mention": "people",
        "entity1_uri": "http://dbpedia.org/resource/Yosemite_National_Park",
        "entity1_mention": "yosemite park",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4958",
        "question": "Name the battle fought by the people which also fought in Levant ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Levant> . ?x <http://dbpedia.org/property/battles> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
        "sparql_id": "311",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/battles",
        "predicate1_mention": "battle",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Person",
        "type_mention": "people",
        "entity1_uri": "http://dbpedia.org/resource/Levant",
        "entity1_mention": "levant",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4959",
        "question": "Who starred in Awakening and fifety five days at peknig ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Awakening_(1980_film)> <http://dbpedia.org/property/starring> ?uri. <http://dbpedia.org/resource/55_Days_at_Peking> <http://dbpedia.org/ontology/starring> ?uri . }",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/starring",
        "predicate1_mention": "starred",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/The_Awakening_(1980_film)",
        "entity1_mention": "awakening",
        "entity2_uri": "http://dbpedia.org/resource/55_Days_at_Peking",
        "entity2_mention": "fifety five days at peknig"
    },
    {
        "id": "4961",
        "question": "Which location country of Ennejma Ezzahra is also the origin of Boga ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Boga_(soft_drink)> <http://dbpedia.org/property/origin> ?uri. <http://dbpedia.org/resource/Ennejma_Ezzahra> <http://dbpedia.org/property/locationCountry> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/origin",
        "predicate1_mention": "origin",
        "predicate2_uri": "http://dbpedia.org/property/locationCountry",
        "predicate2_mention": "location country",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Boga_(soft_drink)",
        "entity1_mention": "Boga",
        "entity2_uri": "http://dbpedia.org/resource/Ennejma_Ezzahra",
        "entity2_mention": "ennejma ezzahra"
    },
    {
        "id": "4962",
        "question": "What is the PLACE OF DEATH of Charles Gordon (artist) ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charles_Gordon_(artist)> <http://dbpedia.org/property/placeOfDeath> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/placeOfDeath",
        "predicate1_mention": "place of death",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Charles_Gordon_(artist)",
        "entity1_mention": "charles gordon (artist)",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4963",
        "question": "What actor of Le Cirque is a relative of Maryanne Trump barry?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Le_Cirque:_A_Table_in_Heaven> <http://dbpedia.org/property/starring> ?uri. <http://dbpedia.org/resource/Maryanne_Trump_Barry> <http://dbpedia.org/ontology/relation> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/starring",
        "predicate1_mention": "actor",
        "predicate2_uri": "http://dbpedia.org/ontology/relation",
        "predicate2_mention": "relative",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Le_Cirque:_A_Table_in_Heaven",
        "entity1_mention": "Le Cirque",
        "entity2_uri": "http://dbpedia.org/resource/Maryanne_Trump_Barry",
        "entity2_mention": "maryanne trump barry"
    },
    {
        "id": "4964",
        "question": "How many buildings are located in Toronto ?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Toronto>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}",
        "sparql_id": "401",
        "classx": "2",
        "predicate1_uri": "http://dbpedia.org/property/location",
        "predicate1_mention": "located",
        "predicate2_uri": "http://dbpedia.org/ontology/Building",
        "predicate2_mention": "buildings",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Toronto",
        "entity1_mention": "toronto",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4965",
        "question": "List the Stanley Kubrick's movies which has music by Laurie Johnson  ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Stanley_Kubrick> . ?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Laurie_Johnson>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/director",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/music",
        "predicate2_mention": "music",
        "type_uri": "http://dbpedia.org/ontology/Film",
        "type_mention": "movies",
        "entity1_uri": "http://dbpedia.org/resource/Stanley_Kubrick",
        "entity1_mention": "stanley Kubrick",
        "entity2_uri": "http://dbpedia.org/resource/Laurie_Johnson",
        "entity2_mention": "laurie johnson"
    },
    {
        "id": "4966",
        "question": "Which office holder's constituency is Haight-Ashbury and has military unit as USS Kittiwake ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Haight-Ashbury> . ?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/USS_Kittiwake_(ASR-13)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/constituency",
        "predicate1_mention": "constituency",
        "predicate2_uri": "http://dbpedia.org/ontology/militaryUnit",
        "predicate2_mention": "military unit",
        "type_uri": "http://dbpedia.org/ontology/OfficeHolder",
        "type_mention": "office holder",
        "entity1_uri": "http://dbpedia.org/resource/Haight-Ashbury",
        "entity1_mention": "haight-ashbury",
        "entity2_uri": "http://dbpedia.org/resource/USS_Kittiwake_(ASR-13)",
        "entity2_mention": "uss kittiwake"
    },
    {
        "id": "4967",
        "question": "Name the composer of motorpsycho Nitemare ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Motorpsycho_Nitemare> <http://dbpedia.org/property/composer> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/composer",
        "predicate1_mention": "composer",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Motorpsycho_Nitemare",
        "entity1_mention": "motorpsycho nitemare",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4968",
        "question": "Which TV show's writer is Erik Jendresen and distributor is HBO?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Erik_Jendresen> . ?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/HBO>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/writer",
        "predicate1_mention": "writer",
        "predicate2_uri": "http://dbpedia.org/property/distributor",
        "predicate2_mention": "distributor",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "tv show's",
        "entity1_uri": "http://dbpedia.org/resource/Erik_Jendresen",
        "entity1_mention": "erik jendresen",
        "entity2_uri": "http://dbpedia.org/resource/HBO",
        "entity2_mention": "hbo"
    },
    {
        "id": "4969",
        "question": "What are some relatives of Battle of the Bulge veterans?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Battle_of_the_Bulge> . ?x <http://dbpedia.org/ontology/relation> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/battles",
        "predicate1_mention": "battle",
        "predicate2_uri": "http://dbpedia.org/ontology/relation",
        "predicate2_mention": "relatives",
        "type_uri": "http://dbpedia.org/ontology/MilitaryPerson",
        "type_mention": "veterans",
        "entity1_uri": "http://dbpedia.org/resource/Battle_of_the_Bulge",
        "entity1_mention": "battle of the Bulge",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4970",
        "question": "Name the military conflict whose commander was Colin Powell and took place in israel ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Colin_Powell> . ?uri <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Israel>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/commander",
        "predicate1_mention": "commander",
        "predicate2_uri": "http://dbpedia.org/ontology/place",
        "predicate2_mention": "place",
        "type_uri": "http://dbpedia.org/ontology/MilitaryConflict",
        "type_mention": "military conflict",
        "entity1_uri": "http://dbpedia.org/resource/Colin_Powell",
        "entity1_mention": "colin powell",
        "entity2_uri": "http://dbpedia.org/resource/Israel",
        "entity2_mention": "israel"
    },
    {
        "id": "4972",
        "question": "Who are all the people who used to figure skate with the current partner of Alexa Scimeca?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alexa_Scimeca> <http://dbpedia.org/ontology/currentPartner> ?x . ?x <http://dbpedia.org/ontology/formerPartner> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/currentPartner",
        "predicate1_mention": "current partner",
        "predicate2_uri": "http://dbpedia.org/ontology/formerPartner",
        "predicate2_mention": "partner",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Alexa_Scimeca",
        "entity1_mention": "alexa scimeca",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4973",
        "question": "Which company was the designer of South African class 11e and RENFE class 333 ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_African_Class_11E> <http://dbpedia.org/ontology/designer> ?uri. <http://dbpedia.org/resource/RENFE_Class_333> <http://dbpedia.org/ontology/designer> ?uri . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
        "sparql_id": "315",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/designer",
        "predicate1_mention": "designer",
        "predicate2_uri": "http://dbpedia.org/ontology/designer",
        "predicate2_mention": "designer",
        "type_uri": "http://dbpedia.org/ontology/Company",
        "type_mention": "company",
        "entity1_uri": "http://dbpedia.org/resource/South_African_Class_11E",
        "entity1_mention": "South African class 11e",
        "entity2_uri": "http://dbpedia.org/resource/RENFE_Class_333",
        "entity2_mention": "renfe class 333"
    },
    {
        "id": "4974",
        "question": "What is the scientist whose doctoral students are Erich Bagge and erban ieica?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/Erich_Bagge> . ?uri <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/\u0218erban_\u021ai\u021beica> . }",
        "sparql_id": "7",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/doctoralStudent",
        "predicate1_mention": "doctoral students",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Erich_Bagge",
        "entity1_mention": "erich bagge",
        "entity2_uri": "http://dbpedia.org/resource/\u0218erban_\u021ai\u021beica",
        "entity2_mention": "erban ieica"
    },
    {
        "id": "4975",
        "question": " Who astronaut from NASA was on the mission of Apollo 11?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Apollo_11> . ?uri <http://dbpedia.org/property/type> <http://dbpedia.org/resource/NASA>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Astronaut>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/mission",
        "predicate1_mention": "mission",
        "predicate2_uri": "http://dbpedia.org/property/type",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/Astronaut",
        "type_mention": "astronaut",
        "entity1_uri": "http://dbpedia.org/resource/Apollo_11",
        "entity1_mention": "apollo 11",
        "entity2_uri": "http://dbpedia.org/resource/NASA",
        "entity2_mention": "nasa"
    },
    {
        "id": "4976",
        "question": "How many have family as Ape and order (taxonomy) is Primate ?",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Ape> . ?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Primate> } ",
        "sparql_id": "108",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/ontology/family",
        "predicate1_mention": "family",
        "predicate2_uri": "http://dbpedia.org/ontology/order",
        "predicate2_mention": "order",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Ape",
        "entity1_mention": "ape",
        "entity2_uri": "http://dbpedia.org/resource/Primate",
        "entity2_mention": "primate"
    },
    {
        "id": "4977",
        "question": "Count the total awards won by the writer who has won Goethe Prize ?",
        "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Goethe_Prize> . ?x <http://dbpedia.org/property/awards> ?uri }",
        "sparql_id": "111",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/awards",
        "predicate1_mention": "awards",
        "predicate2_uri": "http://dbpedia.org/property/awards",
        "predicate2_mention": "awards",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Goethe_Prize",
        "entity1_mention": "goethe prize",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4978",
        "question": "Games on amiga are typically of what kind?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Amiga> . ?x <http://dbpedia.org/property/genre> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/computingPlatform",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/property/genre",
        "predicate2_mention": "",
        "type_uri": "http://dbpedia.org/ontology/VideoGame",
        "type_mention": "games",
        "entity1_uri": "http://dbpedia.org/resource/Amiga",
        "entity1_mention": "amiga",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4979",
        "question": "Whose resting place is William Henry Harrison Tomb State Memorial and has kids named John Scott Harrison?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/William_Henry_Harrison_Tomb_State_Memorial> . ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/John_Scott_Harrison>  . }",
        "sparql_id": "8",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/restingplace",
        "predicate1_mention": "resting place",
        "predicate2_uri": "http://dbpedia.org/ontology/child",
        "predicate2_mention": "kids",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/William_Henry_Harrison_Tomb_State_Memorial",
        "entity1_mention": "Henry Harrison Tomb State Memorial",
        "entity2_uri": "http://dbpedia.org/resource/John_Scott_Harrison",
        "entity2_mention": "john scott harrison"
    },
    {
        "id": "4981",
        "question": "Through which states does the stream ending at Saunders county go?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Saunders_County,_Nebraska> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stream>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/mouthLocation",
        "predicate1_mention": "",
        "predicate2_uri": "http://dbpedia.org/ontology/state",
        "predicate2_mention": "states",
        "type_uri": "http://dbpedia.org/ontology/Stream",
        "type_mention": "stream",
        "entity1_uri": "http://dbpedia.org/resource/Saunders_County,_Nebraska",
        "entity1_mention": "saunders county",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4982",
        "question": "Which religions' people fought in the Miao rebellion?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Miao_Rebellion_(1795\u20131806)> <http://dbpedia.org/property/combatant> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
        "sparql_id": "3",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/combatant",
        "predicate1_mention": "fought",
        "predicate2_uri": "http://dbpedia.org/ontology/religion",
        "predicate2_mention": "religions'",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Miao_Rebellion_(1795\u20131806)",
        "entity1_mention": "miao rebellion",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4983",
        "question": "What are some languages in the italic family of languages?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/languageFamily> <http://dbpedia.org/resource/Italic_languages> } ",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/languageFamily",
        "predicate1_mention": "languages",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Italic_languages",
        "entity1_mention": "italic",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4984",
        "question": "What is the product of the BBC Multimedia and is the theme of Visions, the convention?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/BBC_Multimedia> <http://dbpedia.org/ontology/product> ?uri. <http://dbpedia.org/resource/Visions_(convention)> <http://dbpedia.org/property/genre> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/product",
        "predicate1_mention": "product",
        "predicate2_uri": "http://dbpedia.org/property/genre",
        "predicate2_mention": "theme",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/BBC_Multimedia",
        "entity1_mention": "bbc multimedia",
        "entity2_uri": "http://dbpedia.org/resource/Visions_(convention)",
        "entity2_mention": "Visions, the convention"
    },
    {
        "id": "4987",
        "question": "Where do I find buildings rented by Weber Thompson?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Weber_Thompson> . ?x <http://dbpedia.org/property/address> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/tenant",
        "predicate1_mention": "rented by",
        "predicate2_uri": "http://dbpedia.org/property/address",
        "predicate2_mention": "where",
        "type_uri": "http://dbpedia.org/ontology/Building",
        "type_mention": "buildings",
        "entity1_uri": "http://dbpedia.org/resource/Weber_Thompson",
        "entity1_mention": "weber thompson",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4988",
        "question": "Who is the father of Edith Vonnegut and is also a writer?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edith_Vonnegut>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
        "sparql_id": "301",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/child",
        "predicate1_mention": "father",
        "predicate2_uri": "http://dbpedia.org/ontology/Writer",
        "predicate2_mention": "writer",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Edith_Vonnegut",
        "entity1_mention": "edith vonnegut",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4989",
        "question": "What is the burial place of Iyoas I ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Iyoas_I> <http://dbpedia.org/property/placeOfBurial> ?uri } ",
        "sparql_id": "2",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/property/placeOfBurial",
        "predicate1_mention": "burial place",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Iyoas_I",
        "entity1_mention": "iyoas i",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4990",
        "question": "Who are the tenants of the stadium which is a venue of WCW Mayhem ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WCW_Mayhem> <http://dbpedia.org/property/venue> ?x . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
        "sparql_id": "303",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/venue",
        "predicate1_mention": "venue",
        "predicate2_uri": "http://dbpedia.org/ontology/tenant",
        "predicate2_mention": "tenants",
        "type_uri": "http://dbpedia.org/ontology/Stadium",
        "type_mention": "stadium",
        "entity1_uri": "http://dbpedia.org/resource/WCW_Mayhem",
        "entity1_mention": "wcw mayhem",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4991",
        "question": "List all the movies whose music has been made up with someone under RCA records?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/RCA_Records> . ?uri <http://dbpedia.org/property/music> ?x  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
        "sparql_id": "306",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/recordLabel",
        "predicate1_mention": "records",
        "predicate2_uri": "http://dbpedia.org/property/music",
        "predicate2_mention": "music",
        "type_uri": "http://dbpedia.org/ontology/Film",
        "type_mention": "movies",
        "entity1_uri": "http://dbpedia.org/resource/RCA_Records",
        "entity1_mention": "rca records",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4993",
        "question": "Who are the members of organizations headquartered at Amstelveen?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Amstelveen> . ?x <http://dbpedia.org/property/membership> ?uri  . ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
        "sparql_id": "305",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/property/headquarters",
        "predicate1_mention": "headquartered",
        "predicate2_uri": "http://dbpedia.org/property/membership",
        "predicate2_mention": "members",
        "type_uri": "http://dbpedia.org/ontology/Organisation",
        "type_mention": "organizations",
        "entity1_uri": "http://dbpedia.org/resource/Amstelveen",
        "entity1_mention": "amstelveen",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4995",
        "question": "What movies have been produced by the production house owned by Larry J. Franco?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Larry_J._Franco> } ",
        "sparql_id": "1",
        "classx": "0",
        "predicate1_uri": "http://dbpedia.org/ontology/producer",
        "predicate1_mention": "produced",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Larry_J._Franco",
        "entity1_mention": "larry j. franco",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4996",
        "question": "Name the show formed by J. Michael Stroczynski and had network as TNT ?",
        "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/J._Michael_Straczynski> . ?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/TNT_(TV_channel)>  . ?uri <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
        "sparql_id": "308",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/developer",
        "predicate1_mention": "formed by",
        "predicate2_uri": "http://dbpedia.org/property/network",
        "predicate2_mention": "network",
        "type_uri": "http://dbpedia.org/ontology/TelevisionShow",
        "type_mention": "show",
        "entity1_uri": "http://dbpedia.org/resource/J._Michael_Straczynski",
        "entity1_mention": "J. Michael Stroczynski",
        "entity2_uri": "http://dbpedia.org/resource/TNT_(TV_channel)",
        "entity2_mention": "TNT"
    },
    {
        "id": "4997",
        "question": "Count all those who previously played for a team which ownes Varsity Stadium ?",
        "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/field> <http://dbpedia.org/resource/Varsity_Stadium> . ?uri <http://dbpedia.org/ontology/formerTeam> ?x  . }",
        "sparql_id": "106",
        "classx": "3",
        "predicate1_uri": "http://dbpedia.org/property/field",
        "predicate1_mention": "played",
        "predicate2_uri": "http://dbpedia.org/ontology/formerTeam",
        "predicate2_mention": "team",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Varsity_Stadium",
        "entity1_mention": "varsity stadium",
        "entity2_uri": "",
        "entity2_mention": ""
    },
    {
        "id": "4998",
        "question": "Is NY Rangers a prospective team for Robin Kovacs?",
        "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Robin_Kovacs> <http://dbpedia.org/ontology/prospectTeam> <http://dbpedia.org/resource/New_York_Rangers> }",
        "sparql_id": "152",
        "classx": "4",
        "predicate1_uri": "http://dbpedia.org/ontology/prospectTeam",
        "predicate1_mention": "prospective",
        "predicate2_uri": "",
        "predicate2_mention": "",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/Robin_Kovacs",
        "entity1_mention": "robin kovacs",
        "entity2_uri": "http://dbpedia.org/resource/New_York_Rangers",
        "entity2_mention": "ny rangers"
    },
    {
        "id": "4999",
        "question": "Which headcoach of Marquette Golden Eagles men's basketball team, 2008-09 was also the coach of Marquette Golden Eagles team ?",
        "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2013\u201314_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/ontology/coach> ?uri. <http://dbpedia.org/resource/2008\u201309_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/property/headcoach> ?uri} ",
        "sparql_id": "16",
        "classx": "1",
        "predicate1_uri": "http://dbpedia.org/ontology/coach",
        "predicate1_mention": "coach",
        "predicate2_uri": "http://dbpedia.org/property/headcoach",
        "predicate2_mention": "headcoach",
        "type_uri": "",
        "type_mention": "",
        "entity1_uri": "http://dbpedia.org/resource/2013\u201314_Marquette_Golden_Eagles_men's_basketball_team",
        "entity1_mention": "Marquette Golden Eagles men's basketball team",
        "entity2_uri": "http://dbpedia.org/resource/2008\u201309_Marquette_Golden_Eagles_men's_basketball_team",
        "entity2_mention": "Marquette Golden Eagles men's basketball team"
    }
]